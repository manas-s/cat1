var articleSystemMileStone = '';
var articleDocumentMileStone = '';
var articleMileStone = '';
var articleObligationMileStone = '';
var flag = true;
var arrUser = [];
var delayedTermDates = "";
var arrGlobalUser = [];
var arrPermsnUser = [];
var arrAdminUser = [];
var vContractID = "";
var vContractTile = "";
var contractItem;
var SettingUserRole = "";
var strSelectedContractType = "";
var SaveDraftInCloud = "";
var SaveFinalInCloud = "";
var AllowSaveDraftInCloud = "";
var thisContractAreaSettings;
var businessAreaPath = "";
var settingRenewable = false;
var lstSelectedLabels = "";
var tmpSelectedLabels = "";
var vCurrencyDisplayStyle = "";
var projMgrs = '';
var listAllObligations = "";
var listObligationsGroup = "";
var listAllObligationCatalogs = "";
var inrefreshState = false;
var droppedfiles = [];
var cTitle = null;
var cFlag = null;
var removedItems = [];
var ManageremovedItems = [];
var Managedroppedfiles = [];
var connamechecking = null;
var defaultGlobalSettings = "";
var vGlobalObjForGeneric = "";
var fileurldetails = "";
var urldetailsforcontact = "";
var ExitDocuemntName = "";
var contractAccessUsers = [];
var multipleChecksDocumentIDd = [];
var myArrayRU = [];
var arrprevRU = [];
var myCounterPartyArray = [];
var CounterPartyArrayprev = [];
var lblcontracttitle = "";
var lblcontracttitledescription = "";
var DocumentCount = 0;
var ContractDocumentDetails = [];
var Collectcontractdocument = false;
var projectManager = "";
var arrRelatedcontractRowkey = [];
var RelatedContractRelationShipTypeparent = "";
var docInAutomationList = "";
var changedocumentstatusbyid = "";
var pendingStarted = false;
//var counterpartydetailstofetch = [];
var legalentitydetailstofetch = [];
//var counterpartycollection = [];
var recipientsArray = [];
var reportRecipientsDuplicate = [];
var arremail = [];
var isTermSetting = false;
var ContractCurrencyType = "";
var PrvRelatedCounterparities = [];
var arrRelatedCounterparities = [];
var curRelatedCounterparities = [];
var arrClausegroup = [];
var arrClauseLangage = [];
var arrfinalclauselanguage = [];
var arrfinalclauselanguagesave = [];
var arrPrvwClause = [];
var arrChangestoSave = [];
var arrforeditandcancel = [];
var contrcttypeselection = [];
var areaforclause12 = null;
var countareaforclause = 1;
var GroupCollectionforclause = [];
var areaaa = null;
var DocumnetTemplateCollection = [];
var Taglanguagecollection = [];
var DatepickerFormat = '';
var AmendmentidtoPass = "";
var MakeFinalized = "No";
var workflowurltoshowDOCUMENT = "";
var workflowurltoshowCONTRACT = "";
var dropexitfilename = [];
var Managedropexitfilename = [];
var vURLDoc = "";
var vRawURLDoc = "";
var thisDocumentLibrarySettings;
var vDefaultAmendment = "";
var DocSignCompState = ["signed", "Completed"];
var vUserListG = '';
//Related Contract
var selecteddocumententity;
var addbuttonclick = false;
var oldRelatedcontract = '';
var SavedRelatedContract = [];
var arroldRelatedcontract = [];
var arrRelatedContracts = [];
var arrObligationCatelog = [];
var vProviderDocSign = '';
var RightSignatureFlag = false;
//Related Contract
var Folderselection = "";
var PrvFolderselection = "";
var parentdocid = "";
var parentdocname = "";
var ContractRoles = [];
var IsPipeline = true;
var articleDocuments = "";
var DocVersion = "";
var Stage = '';
var selectedamnddoc = false;
var selectedamnddocname = [];
var ContractLabels = [];
//manoj
var documentview = "";
var vMetadatavaluetobindcutomFinancial;
var cutomFinancialFields = [];
var thisBusinessAreaName = "";
var thisContractAreaName = "";
var thisBusinessAreaNameC = "";
var thisContractAreaNameC = "";
var thisBusinessAreaNameRowKey = "";
var thisContractAreaNameRowKey = "";
var thisBusinessAreaPath = '';
var FullContractroleUser = [];
var ReadContractroleUser = [];
var ReadWriteContractroleUser = [];
//manoj
//Sridhar
var ContractStatus = "";
var TermTypeDisplayName = {};
//manoj
//Bind Term Type
var TermTypeBinded = false;
//Bind Term Type
//manoj
var RelationshipTypes = [];
var currentPanel = "";
var OlRelatedContracts = [];
var arrRelatedContractsSelected = [];
//manoj
var LabelsCategories = [];
var arrLabelCollection = [];
//manoj
var hashtable = {};
//var isPermissionView = false;
var LeagalEntity;
var strSelCounterPartyField = "";
var listRelatedContracts = [];
//manoj
var cleartimevalue;
var cleartimevalue1;
var cleartimevalue2;
//manoj
//Added 2.4final to 2.4
var UpComingNotes = '';
var UpcomingChecklist = '';
var TermName = "";
//suren
var vWorkflowItem = "";
var vTaskID = "";
var vContractRenewalHistory = [];
var vRenewalConfirmParticipantsXML = "";
var ArrayofAmendmentWorkflows = [];
var ArrayofDocumentWorkflows = [];
var vSliderCounter = 0;
var MethodCount = 0;
// ENH 
var GetallMetadataWithCT = [];  //ENH485  Featured metadata
var GetallFinancialMetadataWithCT = [];
var icontractItem = "";
var StageName = [];   //ENH492 - Workflow Cycle time Report & default naming of stages.
var oGeneralSettings = "";
var ConfirmParticipationCollection = [];
var IsRenewfromTerm = false;
var oldCounterParty = "";
var IsApprovalSheetFeatureExits = false;
var oRelatedApprovalSheets = "";
var holderManagebulk;
var Manageparentfolderidtopass = "";
var ManageFolderAction = "";
var FromManage = true;
var OCRDocEnabled = false;
var RequiredComment = [];
var oApprovalNewDocID = "";
var allUsersList = [];

//manoj
//For Label Tagging
var arrCategories = [];
var arrLabels = [];
var arrManageTag = [];
//For Label Tagging

var Updatedocumenttap = false;
//manoj
var DefaultApprovalSheet = '';
var businessAreaDetails = [];
//Authorize Signatory Enhancment
var setting_AuthorizeSign = "";
var setting_AuthorizeSignRestriction = "";
//Authorize Signatory Enhancment
$(document).ready(function () {
    try {
        BindContractDetails(vContractID);
    } catch (e) {
        $("#loadingPage").fadeOut();
    }
    //Performance Optimization
    var arrId = ["divRelatedProjects", "divPeople", "contextPeople", "divRelatedContracts", "contextRelatedContracts", "dvSentAertsList", "dvUpcomingAertsList"];
    var arrImageId = ["imgRelatedProjects", "imgPeople", "imgRelatedContracts", "imgAlerts"];
    $.each(arrId, function () {
        $("#" + this).slideToggle();
    });

    $.each(arrImageId, function () {
        $("#" + this).attr("title", "Expand");
        $("#" + this).attr("src", "../Content/Images/e-open.png");
    });
    //Performance Optimization
    EnableDisableOCR();
    //manoj
    //For BulkDocument Upload
    ManageBulkDocumentUpload();
    //For BulkDocument Upload
    //manoj
    oApprovalNewDocID = "";
    //BindWorkflowSettings();//Performance Optimization
    // Check Upcoming Task Slider    Added 2.4final to 2.4
    //suren
    GetRenewalChecklistAndNotes(vContractID, "PageLoad");
    icontractdetails(); //ENH485  Featured metadata
    getworkflowrules();  //ENH492 - Workflow Cycle time Report & default naming of stages.
    BindMilestone(vContractID);
    GetInnerFeatures();
    var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
    if (veContractFeatures == null) {
        GetFeaturesInDetailPage();
    }

    var vAccFeatObligation = $.grep(veContractFeatures, function (n, i) {
        return (n.RowKey == "2" && n.Status == "ON");
    });
    //if (vAccFeatObligation.length > 0)//Performance Optimization
    //    BindObligationsNew(vContractID);//Performance Optimization

    var vAccFeatApprovalSheet = $.grep(veContractFeatures, function (n, i) {
        return (n.RowKey == "30" && n.Status == "ON");
    });
    if (vAccFeatApprovalSheet.length > 0)
        IsApprovalSheetFeatureExits = true;
    else {
        IsApprovalSheetFeatureExits = false;
    }

    $('#idDocumentPopup').css("display", "none");
    $("#divBtn").hide();
    $('#catalogAmountsumaryValue').autoNumeric('init');
    $('#catalogAmountsumaryValueEdit').autoNumeric('init');
    //$('#txtContractValuepopup').autoNumeric('init');

    // $("#MilestoneEnable").hide();
    var vTab = getParameterByName("Tab");
    if (vTab == 'Activity') {
        GetContractActivities(vContractID);
        ShowTabDetail('Activity');
    }
    else if (vTab == 'Notes') {
        BindNotes(vContractID);
        ShowTabDetail('Notes');
    }
    else if (vTab == 'TermsClause') {
        TermsAndClauseDocument(vContractID);
        ShowTabDetail('TermsClause');
    }

    vContractID = getParameterByName("ContractID");
    //manoj



    //BindUserRoles();
    //try {

    //    BindContractDetails(vContractID);
    //} catch (e) {
    //    $("#loadingPage").fadeOut();
    //}
    ////BindRelatedContracts(vContractID);

    ////GetContractPendingAction(false);
    ////manoj

    ////TermsAndClauseDocument(vContractID);
    //BindMilestone(vContractID);
    GetContractActivities(vContractID);
    ////BindNotes(vContractID);
    //GetInnerFeatures();
    //BindO365LibrarySettings();
    //BindPeople();
    //BindMilestoneTypes();
    //BindObligationTypes();
    //BindAmendmentTypes(vContractID);
    //BindCurrencies();
    //BindUnitTypes();
    //Sridhar 
    //BindTermTypes();
    //BindContractRelationships();
    $("#dvfileDisplay").dialog({
        autoOpen: false,
        closeText: "",
        width: "60%",
        title: "Cancel Contract Record",
        dialogClass: "popup_width100",
        modal: true
    });
    //$("#browseGeneric").dialog({
    //    autoOpen: false,
    //    closeText: "",
    //    width: "50%",
    //    modal: true,
    //    dialogClass: "popup_width100",
    //    buttons: {
    //        "OK": function () {
    //            var s = false;
    //            var vCoounterparty = "";

    //            var my_data = $(this).data('param_1')
    //            var listdetails = '';
    //            if (multipleChecksDocumentID != null && multipleChecksDocumentID.length > 0) {
    //                listdetails = '';
    //                for (var lsc = 0; lsc < multipleChecksDocumentID.length ; lsc++) {
    //                    if (listdetails == '') {
    //                        listdetails = multipleChecksDocumentID[lsc].trim();
    //                    }
    //                    else {
    //                        listdetails += ";" + multipleChecksDocumentID[lsc].trim();
    //                    }
    //                }
    //                $('#' + my_data).val(listdetails);
    //                listdetails = '';
    //                multipleChecksDocumentID = [];
    //                $('#liSelectedRU').empty();
    //                s = true;
    //                $(this).dialog("close");
    //            }
    //            else {
    //                swal({
    //                    title: '',
    //                    text: "No item has been selected. Do you want to continue?",
    //                    type: 'warning',
    //                    showCancelButton: true,
    //                    confirmButtonText: 'Yes',
    //                    cancelButtonText: 'No',
    //                    html: true
    //                },
    //               function (confirmed) {
    //                   if (confirmed) {
    //                       listdetails = '';
    //                       $('#' + my_data).val('');

    //                       s = false;
    //                       $("#browseGeneric").dialog("close");
    //                   }
    //                   else {
    //                       $("#browseGeneric").dialog("open");
    //                   }
    //               });
    //            }

    //            //if (s) {

    //            //}
    //        },
    //        Cancel: function () {
    //            multipleChecksDocumentID = [];
    //            $('#liSelectedRU').empty();
    //            $(this).dialog("close");
    //        }
    //    }
    //});

    //manoj
    //For Label Tagging
    $("#TagAddPopup").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        height: 500,
        title: "Add Tag(s)",
        modal: true,
        buttons: {
            "Save": function () {
                UpdateLabel();
            },
            Cancel: function () {
                //arrSelctedLabels = arrBindeLabels;
                $(this).dialog("close");
            }
        },
        close: function () {
            //arrSelctedLabels = arrBindeLabels;
            $(this).dialog("close");
        }
    });
    //For Label Tagging
    //manoj

    //DefaultGlobalsettingsDP();
    var ContractDetailsTextarea = new nicEditor({ buttonList: ['bold', 'italic', 'underline', 'strikethrough', 'left', 'center', 'right', 'justify', 'ol', 'ul', 'fontSize', 'fontFamily', 'fontFormat', 'removeformat', 'hr', 'indent', 'outdent', 'link', 'unlink', 'forecolor', 'bgcolor', 'xhtml'] }).panelInstance('txtNotes');
    var ContractApprovalTextarea = new nicEditor({ buttonList: ['bold', 'italic', 'underline', 'strikethrough', 'left', 'center', 'right', 'justify', 'ol', 'ul', 'fontSize', 'fontFamily', 'fontFormat', 'removeformat', 'hr', 'indent', 'outdent', 'link', 'unlink', 'forecolor', 'bgcolor', 'xhtml'] }).panelInstance('txtComment');
    var ContractApprovalRenewTextarea = new nicEditor({ buttonList: ['bold', 'italic', 'underline', 'strikethrough', 'left', 'center', 'right', 'justify', 'ol', 'ul', 'fontSize', 'fontFamily', 'fontFormat', 'removeformat', 'hr', 'indent', 'outdent', 'link', 'unlink', 'forecolor', 'bgcolor', 'xhtml'] }).panelInstance('txtCommentRenew');
    var SendCopyNotes = new nicEditor({ buttonList: ['bold', 'italic', 'underline', 'strikethrough', 'left', 'center', 'right', 'justify', 'ol', 'ul', 'fontSize', 'fontFamily', 'fontFormat', 'removeformat', 'hr', 'indent', 'outdent', 'link', 'unlink', 'forecolor', 'bgcolor', 'xhtml'] }).panelInstance('txtSendCopyNotes');
    var TaskComment = new nicEditor({ buttonList: ['bold', 'italic', 'underline', 'strikethrough', 'left', 'center', 'right', 'justify', 'ol', 'ul', 'fontSize', 'fontFamily', 'fontFormat', 'removeformat', 'hr', 'indent', 'outdent', 'link', 'unlink', 'forecolor', 'bgcolor', 'xhtml'] }).panelInstance('txtTaskComment');
    $('.nicEdit-panelContain').parent().width('99%');
    $('.nicEdit-panelContain').parent().next().width('99%');
    $('.nicEdit-main').width("99%");

    docInAutomationList = "";
    $('.AlertEnabled .Toggle').click(function () {
        //EnableSlider()
        var obj = jQuery(this).parent();
        $(obj).toggleClass('switch_enable').toggleClass('switch_disable');
        if ($(obj).hasClass('switch_enable')) {
            obj.children('input').val('Yes').change();
        }
        else {
            obj.children('input').val('No').change();
        }
    });
});
// Added 2.4final to 2.4
if ($('#SliderCount').html() == "0") {
    $('#clickme').css("display", "none");
}
else {
    $('#clickme').css("display", "");
}

//*Harshitha
$(window).on('load', function () {
    $('.nicEdit-panelContain').parent().width('99%');
    $('.nicEdit-panelContain').parent().next().width('99%');
    $('.nicEdit-main').width("99%");


    // $('.NotesNicedit .nicEdit-main').parent("div").css('max-width', $('.nicEdit-panelContain').parent().width());

    //if ((contractItem.ReadOnlyPermissions.indexOf(localStorage.UserName) > -1) && (!localStorage.UserType.indexOf("Global Contract Owner") >= 0)) {
    //    $('#ulPinDocument li b').css({ cursor: 'default' });
    //    $('#ulPinDocument li b img').css({ cursor: 'default' });
    //}
    //else {
    //    $('#ulPinDocument li b').css({ cursor: 'pointer' });
    //    $('#ulPinDocument li b img').css({ cursor: 'pointer' });
    //}
});

function BindSettings() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/userrolesetting',
        type: 'GET',
        dataType: 'json',
        headers: { 'eContracts-ApiKey': localStorage.APIKey },
        cache: false,
        async: false,
        success: function (data) {
            if (data.length != 0) {
                SettingUserRole = data[0].UserRoleSetting;
            }
        },
        error: function (data) {
        }
    });
}
function AddRolesddl(controlname) {

    var roleoption = "";
    if (SettingUserRole == "")
        BindSettings();
    var rolestype = SettingUserRole;
    $(SettingUserRole).find('Roles').each(function () {
        var role = $(this).find('Role').text();
        if ($("#" + controlname + " option[value='[" + role + "]']").length == 0) {
            roleoption += '<option value="[' + role + ']">[' + role + ']</option>';
        }
    })
    var html = $("#" + controlname).html();
    html = roleoption + html;
    $("#" + controlname).html(html);
}
function BindUserRoles() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/userrolesetting',
        type: 'GET',
        dataType: 'json',
        headers: { 'eContracts-ApiKey': localStorage.APIKey },
        cache: false,
        success: function (data) {
            if (data.length != 0) {
                SettingUserRole = data[0].UserRoleSetting;
                vDefaultAmendment = data[0].DefaultAmendment;
            }
        },
        error: function (data) {
        }
    });
}
function GetInnerFeatures() {
    var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
    var vAccFeat = $.grep(veContractFeatures, function (n, i) {
        return (n.RowKey == "10" && n.Status == "ON");
    });
    if (vAccFeat.length > 0) {
        $(".FL_Catalog").css('display', '');
    }
    //vAccFeat = $.grep(veContractFeatures, function (n, i) {
    //    return (n.RowKey == "2" && n.Status == "ON");
    //});
    //if (vAccFeat.length > 0) {
    //    $(".FL_Obligations").css('display', '');
    //    GetObligationCatalogs();

    //}

    vAccFeat = $.grep(veContractFeatures, function (n, i) {
        return (n.RowKey == "9" && n.Status == "ON");
    });
    if (vAccFeat.length > 0) {
        $(".FL_Share").css('display', '');
        $(".FL_Share").addClass('Contribute');
    } else {
        $(".FL_Share").css('display', 'none');
        $(".FL_Share").removeClass('Contribute');
    }

    vAccFeat = $.grep(veContractFeatures, function (n, i) {
        return (n.RowKey == "17" && n.Status == "ON");
    });
    if (vAccFeat.length > 0) {
        $(".FL_TermsClauses").css('display', '');
    } else {
        $(".FL_TermsClauses").css('display', 'none');
    }
}

$(document).ready(function () {

    var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
    var vAccFeat = $.grep(veContractFeatures, function (n, i) {
        return (n.RowKey == "1");
    });
    if (vAccFeat.length > 0) {
        var vConfig = vAccFeat[0].Configuration;
        vProviderDocSign = $(vConfig).find('Provider').text();
        if (vProviderDocSign == "Right Signature")
            RightSignatureFlag = true;
        else
            RightSignatureFlag = false;
    }

    DatepickerFormat = '';
    if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
    { DatepickerFormat = 'mm/dd/yy'; }
    else { DatepickerFormat = localStorage.AppDateFormat.toLowerCase().slice(0, -2); }
    $(".openmenuValue").contextMenu({ menu: 'dropdownMenuEdit', leftButton: true }, function (action, el, pos) { contextMenuValue(action, el, pos); });
    $(".openmenuPeople").contextMenu({ menu: 'dropdownMenuEdit', leftButton: true }, function (action, el, pos) { contextMenuPeople(action, el, pos); });
    $(".openmenuCatalogMul").contextMenu({ menu: 'dropdownMenuRelatedCatalogsMulAction', leftButton: true }, function (action, el, pos) { contextMenuCatalogMul(action, el.parent("tr"), pos); });
    $(".openmenuObligationCatalogSettings").contextMenu({ menu: 'dropdownMenuObligationCatalogSettings', leftButton: true }, function (action, el, pos) {

        contextMenuObligationCatalogMul(action, el.parent("tr"), pos);
        //action.preventDefault();
    });
    $(".openmenuObligationFinancialsSettings").contextMenu({ menu: 'dropdownMenuObligationCatalogSettings', leftButton: true }, function (action, el, pos) { contextMenuObligationFinancialsMul(action, el.parent("tr"), pos); action.preventDefault(); });
    $(".openmenuObligationNewMul").contextMenu({ menu: 'dropdownMenuObligationNewSettings', leftButton: true }, function (action, el, pos) { contextMenuObligationNewMul(action, el.parent("tr"), pos); });
    $(".openmenuMilestoneNewMul").contextMenu({ menu: 'dropdownMenuMilestoneNewSettings', leftButton: true }, function (action, el, pos) { contextMenuMilestoneNewMul(action, el.parent("tr"), pos); });

    $(".openmenuDocumentSort").contextMenu({ menu: 'dropdownMenuDocumentSort', leftButton: true }, function (action, el, pos) { contextMenuDocumentSort(action, el.parent("a"), pos); });


    allowOnlyNumberInInputBox("txtOccurrenceCount");

    allowOnlyNumberInInputBox("txtReminder1");
    allowOnlyNumberInInputBox("txtReminder2");
    allowOnlyNumberInInputBox("txtReminder3");

    allowOnlyNumberInInputBox("txtReminder1New");
    allowOnlyNumberInInputBox("txtReminder2New");
    allowOnlyNumberInInputBox("txtReminder3New");

    allowOnlyNumberInInputBox("txtSendRenewReminderDay1");
    allowOnlyNumberInInputBox("txtSendRenewReminderDay2");
    allowOnlyNumberInInputBox("txtSendRenewReminderDay3");

    allowOnlyNumberInInputBox("txtReminder1MilestoneNew");
    allowOnlyNumberInInputBox("txtReminder2MilestoneNew");
    allowOnlyNumberInInputBox("txtReminder3MilestoneNew");


    allowOnlyNumberInInputBox("txtReminder1Edit");
    allowOnlyNumberInInputBox("txtReminder2Edit");
    allowOnlyNumberInInputBox("txtReminder3Edit");
    allowOnlyNumberInInputBox("txtCommitmentsMinQtyUnitsEdit");
    allowOnlyNumberInInputBox("txtCommitmentsMaxQtyUnitsEdit");
    allowOnlyNumberInInputBox("txtCommitmentsMinAmountUnitPriceEdit");
    allowOnlyNumberInInputBox("txtCommitmentsMaxAmountUnitPriceEdit");

    allowOnlyNumberInInputBox("txtCommitmentsMinQtyUnits");
    allowOnlyNumberInInputBox("txtCommitmentsMaxQtyUnits");
    allowOnlyNumberInInputBox("txtCommitmentsMinAmountUnitPrice");
    allowOnlyNumberInInputBox("txtCommitmentsMaxAmountUnitPrice");


    allowOnlyNumberInInputBox("txtTransactionID");
    allowOnlyNumberInInputBox("txtTransItems");
    allowOnlyNumberInInputBox("txtTransAmount");


    allowOnlyNumberInInputBox("txtObligationCatalogQtyEdit");
    allowOnlyNumberInInputBox("txtObligationCatalogQtyNewEdit");
    allowOnlyNumberInInputBox("txtObligationCatalogQtyNew");
    allowOnlyNumberInInputBox("txtObligationCatalogQty");

    //manoj
    allowOnlyNumberInInputBox("txtShareExpInContract");
    allowOnlyNumberInInputBox("txtDuration");
    allowOnlyNumberInInputBox("txtShareExpIn");
    //manoj

    allowOnlyNumberInInputBox("txtExpIn");
    allowOnlyNumberInInputBox("txtValidLinkTill");//Copy Contract link Enhancment

    ////ENH:452 Abort Contract  In case we add status instead of Cancel to Abort in My Pipline
    //    $("#dvAbortContract").dialog({
    //    autoOpen: false,
    //    width: "60%",
    //    title: "Abort Contract Record",
    //    dialogClass: "popup_width100",
    //    buttons: {
    //        "OK": function () {
    //            CancelContract();
    //        },
    //        Cancel: function () {
    //            $(this).dialog("close");
    //        }
    //    },
    //    modal: true
    //})

    $("#dvCancelContract").dialog({
        autoOpen: false,
        closeText: "",
        width: "60%",
        title: "Cancel Contract Record",
        dialogClass: "popup_width100",
        buttons: {
            "OK": function () {
                CancelContract();
            },
            Cancel: function () {
                $(this).dialog("close");
            }
        },
        modal: true
    });




    $("#txtContractEndDateAfterAmend").datepicker({
        changeMonth: true,
        changeYear: true,
        dateFormat: DatepickerFormat
    });

    $("#txtContractEndDateCurrent").datepicker({
        changeMonth: true,
        changeYear: true,
        dateFormat: DatepickerFormat
    });
    $("#dtAmendmentEffectiveDate").datepicker({
        changeMonth: true,
        changeYear: true,
        dateFormat: DatepickerFormat
    });

    //manoj
    $("#dtMilestoneCompletedDate").datepicker({
        changeMonth: true,
        changeYear: true, dateFormat: DatepickerFormat
    });
    $("#dtAmendmentFinalizedDate").datepicker({
        changeMonth: true,
        changeYear: true, dateFormat: DatepickerFormat
    });
    //manoj


    $('#lblNextRenewalDate').datepicker({
        changeMonth: true,
        changeYear: true,
        dateFormat: DatepickerFormat,
        minDate: -1,
    }).click(function () { $(this).focus() });

    $('#lblTermEndDate').datepicker({
        changeMonth: true,
        changeYear: true,
        dateFormat: DatepickerFormat,
        minDate: -1,
    }).click(function () { $(this).focus() });

    $("#popupPriceBreakDown").dialog({
        autoOpen: false,
        closeText: "",
        width: "70%",
        title: "Manage Contract Price Breakdown",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "Save": function () { if (modalOnOpenPriceBreakdown()) { } },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });

    $("#RenewalTermNew").dialog({
        autoOpen: false,
        closeText: "",
        width: "70%",
        title: "Renewal Term",
        dialogClass: "popup_width100",

        buttons: {
            "Save": function () { },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });
    $("#browseGeneric").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        modal: true,
        dialogClass: "popup_width100",
        buttons: {
            "OK": function () {
                var s = false;
                var vCoounterparty = "";

                var my_data = $(this).data('param_1')
                var listgenricselection = "";
                if (multipleChecksDocumentIDd != null) {
                    listgenricselection = "";
                    $(multipleChecksDocumentIDd).each(function (i, rule) {
                        listgenricselection += ";" + rule;
                    });
                    if (listgenricselection.charAt(0) == ";") {
                        listgenricselection = listgenricselection.substr(1);
                    }
                    $('#' + my_data).val(listgenricselection);
                    listgenricselection = "";
                    multipleChecksDocumentIDd = [];
                    $('#liSelectedRU').empty();
                    s = true;
                    $(this).dialog("close");
                } else {
                    swal({
                        title: '',
                        text: "No item has been selected, Do you want to continue?",
                        type: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes',
                        cancelButtonText: 'No',
                        html: true
                    },
                function (confirmed) {
                    if (confirmed) {
                        listgenricselection = '';
                        $('#' + my_data).val('');

                        s = false;
                        $("#browseGeneric").dialog("close");
                    }
                    else {
                        $("#browseGeneric").dialog("open");
                    }
                });
                }


            },
            Cancel: function () {
                multipleChecksDocumentIDd = [];
                $('#liSelectedRU').empty();
                $(this).dialog("close");
            }
        }
    });

    //$("#PopulatePendingActionsPopup").dialog({
    //    autoOpen: false,
    //    width: "70%",
    //    title: "Contract Delayed Tasks",
    //    dialogClass: "popup_width100",
    //    modal: true,
    //    buttons: {
    //        "ok": function () { $(this).dialog("close"); },
    //    }
    //});

    //$("#browseGeneric").dialog({
    //    autoOpen: false,
    //    closeText: "",
    //    width: "50%",
    //    modal: true,
    //    dialogClass: "popup_width100",
    //    buttons: {
    //        "OK": function () {
    //            var s = false;
    //            var vCoounterparty = "";

    //            var my_data = $(this).data('param_1')
    //            var listgenricselection = "";
    //            if (multipleChecksDocumentIDd != null) {
    //                listgenricselection = "";
    //                $(multipleChecksDocumentIDd).each(function (i, rule) {
    //                    listgenricselection += ";" + rule;
    //                });
    //                if (listgenricselection.charAt(0) == ";") {
    //                    listgenricselection = listgenricselection.substr(1);
    //                }
    //                $('#' + my_data).val(listgenricselection);
    //                listgenricselection = "";
    //                multipleChecksDocumentIDd = [];
    //                $('#liSelectedRU').empty();
    //                s = true;
    //                $(this).dialog("close");
    //            } else {
    //                swal({
    //                    title: '',
    //                    text: "No item has been selected, Do you want to continue?",
    //                    type: 'warning',
    //                    showCancelButton: true,
    //                    confirmButtonText: 'Yes',
    //                    cancelButtonText: 'No',
    //                    html: true
    //                },
    //            function (confirmed) {
    //                if (confirmed) {
    //                    listgenricselection = '';
    //                    $('#' + my_data).val('');

    //                    s = false;
    //                    $("#browseGeneric").dialog("close");
    //                }
    //                else {
    //                    $("#browseGeneric").dialog("open");
    //                }
    //            });
    //            }


    //        },
    //        Cancel: function () {
    //            multipleChecksDocumentIDd = [];
    //            $('#liSelectedRU').empty();
    //            $(this).dialog("close");
    //        }
    //    }
    //});

    $("#dialogDelay").dialog({
        autoOpen: false,
        closeText: "",
        width: "70%",
        title: "Missing Information",
        dialogClass: "popup_width100",
        modal: true,
        buttons: [
        {
            text: "Update",
            "id": "btnPendingUpdate",
            "class": "Manage draft",
            click: function () {
                //manoj
                var idSelected = $("#dialogDelay .pop_up__Acti").attr("id");
                idSelected = idSelected.replace('li', '');
                switch (idSelected) {
                    case 'Required':
                        {
                            $(this).dialog("close");
                            contextMenuContractSettings('edit', '', '')
                            break;
                        }
                    case 'Documents':
                        {
                            $(this).dialog("close");
                            $("#btnAddContractDocument").trigger("click");
                            $("#tabTemplate").trigger("click");
                            break;
                        }
                    case 'Peoples':
                        {
                            $(this).dialog("close");
                            MangePeople();
                            break;
                        }
                    case 'Milestones':
                        {
                            $(this).dialog("close");
                            AddMilestoneMoreNew();
                            break;
                        }
                }
                //manoj

                //var idSelected = $("#dialogDelay .pop_up__Acti").attr("id");
                //if (idSelected == "ContractSetting") {
                //    if ($("#hdnPermission").val() == 'Manage')
                //        contextMenuTerm("manage");
                //    $(this).dialog("close");
                //}
                //else if (idSelected == "StartApproval") {
                //    $(this).dialog("close");
                //}
                //else if (idSelected == "Editcontract") {
                //    contextMenuContractSettings("edit", "", "");
                //    $(this).dialog("close");
                //}
                //else if (idSelected == "Activities") {
                //    $(this).dialog("close");
                //}
                //else {
                //    $(this).dialog("close");
                //}

            }
        },
        {
            text: "Close",
            "id": "btnPendingClose",
            click: function () {
                $(this).dialog("close");
            }
        }

        ],
        //open: function (event, ui) {
        //    var vContractStatus = ["Ready for Signature", "Awaiting Signatures", "Signed", "Active", "Up for Renewal", "Renewed", "Extended", "On Hold", "Replaced", "Expired", "Cancelled", "Terminated", "Archived", "About to Expire"];

        //    //Sridhar
        //    //Get the Contract Status
        //    ContractStatus = $("#idNewStatus").text().trim();

        //    if ($.inArray(contractItem.Status, vContractStatus) > -1 && ($("#hdnPermission").val() == "Manage" || $("#hdnPermission").val() == "Contribute")) {
        //        $("#ContractSetting").show();
        //        ContractSettingPending();

        //        //Sridhar
        //        if ($("#hdnPermission").val() == "Manage") {
        //            if (ContractStatus == "Expired" || ContractStatus == "Replaced" || ContractStatus == "Cancelled") {
        //                $("#btnPendingUpdate").hide();
        //            }
        //            else {
        //                $("#btnPendingUpdate").show();
        //            }
        //        }
        //        //Sridhar
        //    }
        //    else {
        //        $("#ContractSetting").hide();
        //        StartApprovalPending();
        //    }

        //    if (currentPanel == "Missing") {
        //        JustInfoPending();
        //        currentPanel = "";
        //    } else if (currentPanel == "Contract Fields") {
        //        EditcontractPending();
        //        currentPanel = "";
        //    }

        //}
    });

    $("#browseBA").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        title: "Users",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "OK": function () { $('#BusinessArea').val($('#txtBA').val()); $(this).dialog("close"); },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });

    $("#browse_treeviewFolder").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        height: 500,
        title: "Select Folder",
        modal: true,
        buttons: {
            "OK": function () {
                selectfolder();
            },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });

    $("#browseCounterparty").dialog({
        autoOpen: false,
        closeText: "",
        width: "60%",
        title: "Counterparty",
        resizable: false,
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "OK": function () { AddCounterparty(); },
            Cancel: function () {
                strSelCounterPartyField = "";
                $(this).dialog("close"); $("#txtSearchBox").val("");
                ClearAddCounterparty();
                $('#chkCounterpartyNotInList').prop('checked', false);

                $('#dvCPExistingCounterparty').css("display", "");
                $('#dvCPAddCounterparty').css("display", "none");
                $('#rdCPAddCounterparty').prop('checked', false);
                $('#rdCPExistingCounterparty').prop('checked', true);

                $('.CP_Det').remove();
                $('.CP_Det1').css('display', 'none');
                $("#ddlCounterpartyType").removeClass('validelement');
                $("#txtEmailID").removeClass('validemail');
                BAOwnersselecteditems = [];
                $('#liSelectedBAOwners').empty();
                $('#txtBAOwnerofPath').val('');
                $('#txtBAOwnerof').val('');
                selectedBusinessAreaID11 = [];
            }
        }, close: function () {
            PrvRelatedCounterparities = [];
            arrRelatedCounterparities = [];
            curRelatedCounterparities = [];
            strSelCounterPartyField = "";
            ClearAddCounterparty();
            $('#chkCounterpartyNotInList').prop('checked', false);

            $('#dvCPExistingCounterparty').css("display", "");
            $('#dvCPAddCounterparty').css("display", "none");
            $('#rdCPAddCounterparty').prop('checked', false);
            $('#rdCPExistingCounterparty').prop('checked', true);

            $('.CP_Det').remove();
            $('.CP_Det1').css('display', 'none');
            $("#ddlCounterpartyType").removeClass('validelement');
            $("#txtEmailID").removeClass('validemail');
            BAOwnersselecteditems = [];
            $('#liSelectedBAOwners').empty();
            $('#txtBAOwnerofPath').val('');
            $('#txtBAOwnerof').val('');


            selectedBusinessAreaID11 = [];

        }
    });


    $("#browseOriginatingParty").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        title: "Originating Party",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "OK": function () {
                var s = AddOriginatingParty();
                $(this).dialog("close");
            },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });


    $("#browseAwaitingAuthorisation").dialog({
        autoOpen: false,
        closeText: "",
        title: "",
        width: 'auto',
        height: 'auto',
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "Continue Renewal": function () {
                var s = continueRenewal();
                $(this).dialog("close");
            },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });

    $("#dvRenewalExpire").dialog({
        autoOpen: false,
        closeText: "",
        title: "",
        width: '50%',
        dialogClass: "popup_width100",
        modal: true,
        buttons: [
       {
           text: "Renew",
           "id": "btnRenewTerm",
           click: function () {
               var isRenew = $("#txtExpireRenewSlider").val();
               if (isRenew == "Expire") {
                   Renew("Expired");
                   $(this).dialog("close");
               }
               else if (isRenew == "Authorize") {
                   Authorize();
                   $(this).dialog("close");
               }
               else if (isRenew == "Reject") {
                   StopRenew();
                   $(this).dialog("close");
               }
               else {
                   var isTrue = Renew("Renewed");
                   if (isTrue)
                       $(this).dialog("close");
               }

           }
       },
       {
           text: "Cancel",
           click: function () {
               $("#txtExpireRenewSlider").val('');
               $(this).dialog("close");
           }
       }
        ], close: function () {
            $("#txtNote").val('');
            $("#txtExpireRenewSlider").val('');
            $('input[type="checkbox"][name="checkboxNotifyNewSlide"]').prop('checked', false);
        }
    });
    $("#browseLegalEntity").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        title: "CompanyProfile",
        dialogClass: "popup_width100",
        resizable: false,
        modal: true,
        buttons: {
            "OK": function () { AddLE(); },
            Cancel: function () {
                $(this).dialog("close");
            }
        }, close: function () {

        }
    });


    $("#addEditCounterparty").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        title: "Counterparty",
        dialogClass: "popup_width100",
        modal: true,
        resizable: true,
        buttons: {
            "Save": function () {
                if (SaveCounterparty()) {
                }
            },
            Cancel: function () {
                $('.CP_Det').remove();
                $('.CP_Det1').css('display', 'none');
                $(this).dialog("close");
            }
        }
    });



    $("#browseBAOwners").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        title: "Users",
        height: "auto",
        modal: true,
        draggable: true,
        drag: function (event, ui) {
            var fixPix = $(document).scrollTop();
            iObj = ui.position;
            iObj.top = iObj.top - fixPix;
            $(this).closest(".ui-dialog").css("top", iObj.top + "px");
        },
        buttons: {
            "Save": function () {
                $('#lblBusinessAreaOwners').text("");
                $('#txtOwnerofBusinessArea').text("");
                $('#txtNewCpBusinessArea').text("");

                var selecteditemslength = BAOwnersselecteditems.length;

                if (selecteditemslength > 0) {
                    for (var i = 0; i < selecteditemslength; i++) {
                        //if (i != selecteditemslength - 1) { $('#lblBusinessAreaOwners').append(BAOwnersselecteditems[i] + ";"); }
                        //else { $('#lblBusinessAreaOwners').append(BAOwnersselecteditems[i]); }
                        if (i != selecteditemslength - 1) { $('#lblBusinessAreaOwners').append(BAOwnersselecteditems[i].trim().substring(BAOwnersselecteditems[i].trim().lastIndexOf(">") + 1, BAOwnersselecteditems[i].trim().length).trim() + ";"); }
                        else { $('#lblBusinessAreaOwners').append(BAOwnersselecteditems[i].trim().substring(BAOwnersselecteditems[i].trim().lastIndexOf(">") + 1, BAOwnersselecteditems[i].trim().length).trim()); }
                    }
                    $('#txtBAOwnerof').val($('#lblBusinessAreaOwners').text());
                }
                else {
                    $('#txtBAOwnerof').val("");
                }
                $('#txtNewCpBusinessArea').val($('#txtBAOwnerof').val());
                $('#txtOwnerofBusinessArea').val($('#txtBAOwnerof').val());
                selectedBusinessAreaID11 = [];
                $(selectedBusinessAreaID11Temp).each(function (i, item) {
                    selectedBusinessAreaID11.push(item);
                })

                selectedBusinessAreaID11Temp = [];
                $(this).dialog("close");
            },
            Cancel: function () {
                $(this).dialog("close");
                BAOwnersselecteditems = [];
                $(selectedBusinessAreaID11).each(function (i, item) {
                    BAOwnersselecteditems.push(item[0]);
                })
                selectedBusinessAreaID11Temp = [];
            }
        }, close: function () {
            BAOwnersselecteditems = [];
            $(selectedBusinessAreaID11).each(function (i, item) {
                BAOwnersselecteditems.push(item[0]);
            })
            selectedBusinessAreaID11Temp = [];
        }
    });






    $("#addEditStatusMultiple").dialog({
        autoOpen: false,
        closeText: "",
        width: "40%",
        minHeight: "80%",
        title: "Change Status",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "OK": function () { changestatusmultiple(); },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });

    $("#addEditMilestoneStatusMultiple").dialog({
        autoOpen: false,
        closeText: "",
        width: "40%",
        minHeight: "80%",
        title: "Change Status",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "OK": function () { changemilestonestatusmultiple(); },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });






    //BindCounterpartyType();
    //bindcountry();
    $("#popupCounterparties").dialog({
        autoOpen: false,
        closeText: "",
        width: "65%",
        height: "auto",
        title: "Related Counterparties",
        modal: true,
        buttons: {
            "OK": function () { RelatedCounterpartiesPush(); },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });







    $("#allAlerts").dialog({
        autoOpen: false,
        closeText: "",
        width: "60%",
        title: "Alerts",
        dialogClass: "popup_width100",
        modal: true,
        resizable: true,
        buttons: {
            Close: function () {
                $(this).dialog("close");
            }
        }
    });


    $("#dvNotificationDetail").dialog({
        autoOpen: false,
        closeText: "",
        width: "60%",
        title: "Notification Detail",
        dialogClass: "popup_width100",
        modal: true,
        resizable: true,
        buttons: {
            Close: function () {
                $(this).dialog("close");
            }
        }
    });


    $("#addEditPeople").dialog({
        autoOpen: false,
        closeText: "",
        width: "65%",
        height: "auto",
        resizable: false,
        title: "People",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "OK": function () {
                if (savePeople()) {
                    $(this).dialog("close");
                    RemoveErrors();
                }
            },
            Cancel: function () {
                $(this).dialog("close");
                RemoveErrors();
                $("#tblPeople .chosenmulti").val('').trigger("chosen:updated")
            }
        },
        close: function () {
            RemoveErrors();
            $("#tblPeople .chosenmulti").val('').trigger("chosen:updated")

        }
    });

    $("#addViewPeople").dialog({
        autoOpen: false,
        closeText: "",
        width: "65%",
        height: "auto",
        resizable: false,
        title: "People",
        modal: true,
        buttons: {
            "Close": function () {

                $(this).dialog("close");

            },

        }
    });

    $("#addEditPermission").dialog({
        autoOpen: false,
        closeText: "",
        width: "65%",
        title: "Permissions",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "OK": function () {
                if (savePermission()) {
                    $(this).dialog("close");
                }
            },
            Cancel: function () {
                $(this).dialog("close");
                $("#chkpermission").removeAttr("disabled")
                $("#chkPublicContract").removeAttr("disabled")
            }
        }
    });
    $("#addEditStatus").dialog({
        autoOpen: false,
        closeText: "",
        width: "40%",
        minHeight: "80%",
        resizable: false,
        title: "Change Status",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "OK": function () { if (imgcheckgeneral()) { $(this).dialog("close"); } },
            Cancel: function () {
                $(this).dialog("close");
            }
        },
        open: function (event, ui) {
        }
    });
    $("#addEditContractValue").dialog({
        autoOpen: false,
        closeText: "",
        width: "70%",
        title: "Financials",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
        }
    });
    $('#dialogSummary').dialog({
        autoOpen: false,
        closeText: "",
        width: "70%",
        title: 'Metadata',
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "Close": function () {
                $(this).dialog("close");
            }
        }
    });
    //ENH476- Related Contracts - UI Change
    $('#dialogSummaryForRelatedContract').dialog({
        autoOpen: false,
        closeText: "",
        width: "70%",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "Close": function () {
                $(this).dialog("close");
            }
        }
    });

    $("#completeTask").dialog({
        autoOpen: false,
        width: "50%",
        closeText: "",
        title: "Complete Task",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "Submit": function () {
                CompleteTask();
            },
            Cancel: function () {
                $(this).dialog("close");
                var nicInstance = nicEditors.findEditor('txtTaskComment');
                nicInstance.setContent('');
            }
        },
        close: function () {
            var nicInstance = nicEditors.findEditor('txtTaskComment');
            nicInstance.setContent('');
        }
    });

    $("#contractLogsPopup").dialog({
        autoOpen: false,
        closeText: "",
        width: "60%",
        title: "Contract History",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "Close": function () { $(this).dialog("close"); }
        }
    });

    //manoj
    $("#dvfoldercreation").dialog({
        autoOpen: false,
        closeText: "",
        width: "40%",
        title: "Create Folder",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "Create": function () { createnewfoldermove(); },
            Cancel: function () {
                if ($("#hdnnewfoldercreatedfrom").val() == "jqtree") {
                    removecreatedfolder();
                }
                $("#hdnnewfolderurl").val("");
                $("#txtnewfoldervalue").val("");
                $(this).dialog("close");
            },
        }, close: function (event, ui) {
            if ($("#hdnnewfoldercreatedfrom").val() == "jqtree") {
                removecreatedfolder();
            }
            $("#hdnnewfolderurl").val("");
            $("#txtnewfoldervalue").val("");
            $(this).dialog("close");
        }
    });

    $("#dvManagefoldercreation").dialog({
        autoOpen: false,
        closeText: "",
        width: "40%",
        title: "Create Folder",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "Create": function () {
                Managenewfoldermove();
            },
            Cancel: function () {
                Close_ManageFolder();
                $(this).dialog("close");
            },
        }, close: function (event, ui) {
            Close_ManageFolder();
            $(this).dialog("close");
        }
    });
    //manoj

    $("#contractRenewal").dialog({
        autoOpen: false,
        closeText: "",
        width: "100%",
        minHeight: "100%",
        title: "Contract Renewal",
        dialogClass: "popup_width100",
        modal: true,
        draggable: false,
        buttons: {
            "Save": function () { ManageContractRenewal(); },
            Close: function () {
                $(this).dialog("close");
            }
        },
        close: function (event, ui) {
            if ($("#hdChangeStatusClick").val() == 'Y') {
                $('#addEditStatus').dialog('open');
                $("#hdChangeStatusClick").val("");
            }
        }
    });

    //*Harshitha
    $("#RenewalHistoryView").dialog({
        autoOpen: false,
        closeText: "",
        width: "90%",
        minHeight: "100%",
        title: "Contract Renewal",
        dialogClass: "popup_width90",
        modal: true,
        draggable: false,
        buttons: {

            Close: function () {
                $(this).dialog("close");
            }
        },
        close: function (event, ui) {
        }
    });

    $("#manualRenewal").dialog({
        autoOpen: false,
        closeText: "",
        width: "70%",
        title: "Manual Renewal",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "OK": function () { ManualRenewal(); },
            Close: function () {
                $(this).dialog("close");
            }
        },

    });

    $("#viewMetadataDetail").dialog({
        autoOpen: false,
        closeText: "",
        width: "70%",
        title: "Detail",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "Close": function () {
                $(this).dialog("close");
                $("#MetaRenewalViewHistoryLink").css("display", "none");
            }
        },
        close: function (event, ui) {
            $("#MetaRenewalViewHistoryLink").css("display", "none");

        }
    });
    //Amendment ViewMetatda
    $("#viewAmendmentMetadataDetail").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        title: "Detail",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "Close": function () {
                $(this).dialog("close");
            }
        },
    });
    //View Milestone & Obligation Metadata  
    $("#dvMilObgMetadata").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        title: "Detail",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "Close": function () {
                $(this).dialog("close");
            }
        },
    });

    $("#viewMetadataDetailForOwner").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        title: "Detail",
        modal: true,
        dialogClass: "popup_width100",
        buttons: [
        {
            text: "Mark As Completed",
            "id": "btnMarkComplete",
            click: function () {
                MarkAsCompleted();
                $(this).dialog("close");
            }
        },
        {
            text: "Close",
            click: function () {
                $(this).dialog("close");
            }
        }
        ]
    });


    $("#viewMetadataDetailDocument").dialog({
        autoOpen: false,
        closeText: "",
        width: "70%",
        title: "Detail",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "Close": function () {
                $(this).dialog("close");
            }
        }
    });

    $("#popupContracts").dialog({
        autoOpen: false,
        closeText: "",
        width: "85%",
        height: "auto",
        title: "Related Contract Record(s)",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "OK": function () {
                CreateRelatedContracts();
                $("#ddlRelConFilterContractType option:selected").prop('selected', false).trigger('chosen:updated');
                $("#ddlRelConFilterCounterparty option:selected").prop('selected', false).trigger('chosen:updated');
            },
            Cancel: function () {
                $('input:checkbox[name="RelatedContract"]:checked').each(function () {
                    if (arrRelatedContractsSelected.length > 0) {
                        var rtypeindex = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID.split(";").indexOf(this.id);
                        var rtindex = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID.split(";");
                        var rtitle = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractTitle.split(";");
                        var rstatus = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedStatus.split(";");
                        var rtypetoremove = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedRelationshipType.split(";");
                        var reltypetoremove = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelationshipType.split(";");
                        rtindex[rtypeindex] = "";
                        rtitle[rtypeindex] = "";
                        rstatus[rtypeindex] = "";
                        rtypetoremove[rtypeindex] = "";
                        reltypetoremove[rtypeindex] = "";
                        arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID = rtindex.filter(function (v) { return v !== '' && v !== null }).join(";");
                        arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractTitle = rtitle.filter(function (v) { return v !== '' && v !== null }).join(";");
                        arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedStatus = rstatus.filter(function (v) { return v !== '' && v !== null }).join(";");
                        arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedRelationshipType = rtypetoremove.filter(function (v) { return v !== '' && v !== null }).join(";");
                        arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelationshipType = reltypetoremove.filter(function (v) { return v !== '' && v !== null }).join(";");
                    }
                    $("#" + this.id)[0].checked = false;
                    var remove_Item = this.id;
                    if (arrRelatedcontractRowkey.length > 0 && arrRelatedcontractRowkey.indexOf(this.id) > -1) {
                        arrRelatedcontractRowkey = $.grep(arrRelatedcontractRowkey, function (value) {
                            return value != remove_Item;
                        });
                    }
                });
                $("#liSelectedRelatedContract").empty();
                $("#ddlRelConFilterContractType option:selected").prop('selected', false).trigger('chosen:updated');
                $("#ddlRelConFilterCounterparty option:selected").prop('selected', false).trigger('chosen:updated');
                $(this).dialog("close");
            }
        },
        close: function () {
            $('input:checkbox[name="RelatedContract"]:checked').each(function () {
                if (arrRelatedContractsSelected.length > 0) {
                    var rtypeindex = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID.split(";").indexOf(this.id);
                    var rtindex = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID.split(";");
                    var rtitle = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractTitle.split(";");
                    var rstatus = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedStatus.split(";");
                    var rtypetoremove = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedRelationshipType.split(";");
                    var reltypetoremove = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelationshipType.split(";");
                    rtindex[rtypeindex] = "";
                    rtitle[rtypeindex] = "";
                    rstatus[rtypeindex] = "";
                    rtypetoremove[rtypeindex] = "";
                    reltypetoremove[rtypeindex] = "";
                    arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID = rtindex.filter(function (v) { return v !== '' && v !== null }).join(";");
                    arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractTitle = rtitle.filter(function (v) { return v !== '' && v !== null }).join(";");
                    arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedStatus = rstatus.filter(function (v) { return v !== '' && v !== null }).join(";");
                    arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedRelationshipType = rtypetoremove.filter(function (v) { return v !== '' && v !== null }).join(";");
                    arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelationshipType = reltypetoremove.filter(function (v) { return v !== '' && v !== null }).join(";");
                }
                $("#" + this.id)[0].checked = false;
                var remove_Item = this.id;
                if (arrRelatedcontractRowkey.length > 0 && arrRelatedcontractRowkey.indexOf(this.id) > -1) {
                    arrRelatedcontractRowkey = $.grep(arrRelatedcontractRowkey, function (value) {
                        return value != remove_Item;
                    });
                }
            });
            $("#liSelectedRelatedContract").empty();
            $("#ddlRelConFilterContractType option:selected").prop('selected', false).trigger('chosen:updated');
            $("#ddlRelConFilterCounterparty option:selected").prop('selected', false).trigger('chosen:updated');
            $(this).dialog("close");
        },
        open: function (event, ui) {//Performance Optimization
            if ($("#ddlRelConFilterContractType > option").length <= 0)
                BindRelatedContractsFilters();
            if ($("#ddlRelConFilterCounterparty > option").length <= 0) {
                var IsSystem = false;
                if (oGeneralSettings.CounterpartyRelationshipScope.trim() == "System Level") {
                    IsSystem = true;
                }
                GetCounterparty(IsSystem);
            }//Performance Optimization
        }
    });
    $("#popupContractsEdit").dialog({
        autoOpen: false,
        closeText: "",
        width: "85%",
        title: "Related Contract Record(s)",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "OK": function () { updaterelatedcontract(); $(this).dialog("close"); },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });

    $('#txtSearchBox').keypress(function (e) {
        if (e.keyCode == 13) {
            $(".ui-autocomplete").css('display', 'none');
            ViewContracts();
        }
    });

    $('#txtSearchBoxProduct').keypress(function (e) {
        if (e.keyCode == 13) {
            $(".ui-autocomplete").css('display', 'none');
            SearchProducts();
        }
    });

    $('#txtSearchLabel').keypress(function (e) {
        if (e.keyCode == 13) {
            $(".ui-autocomplete").css('display', 'none');
            SearchLabels();
        }
    });

    $('#txtSearchBoxProductMul').keypress(function (e) {
        if (e.keyCode == 13) {
            $(".ui-autocomplete").css('display', 'none');
            SearchProductsMul();
        }
    });

    $("#popupDefaultProperties").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        title: "Default Properties",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "Save": function () { updatedefaultproperties(); },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });

    $("#divReplaceDocument").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        title: "Replace Document",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "OK": function () { replacedocument(); },
            Cancel: function () {
                ClearReplaceDocFrom();
                $(this).dialog("close");
            }
        },
        open: function (event, ui) {//Performance Optimization
            if (!isExecutedBindDocumentTypeandTemplate)
                BindDocumentTypeandTemplate();
        }//Performance Optimization
    });

    $("#dvVersionHistory").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        title: "Version History",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "Close": function () { $(this).dialog("close"); }
        }
    }); $("#addEditDocument").dialog({
        autoOpen: false,
        closeText: "",
        width: "80%",
        title: "Document",
        dialogClass: "popup_width100",
        height: 600,
        modal: true,
        buttons: [{
            text: "Save",
            "id": "btnDocAdd",
            click: function () { $("#liSelectedRelatedContract").empty(); modalOnOpenDocument(); }
        },
           {
               text: "Cancel",
               "id": "btnDocCancel",
               click: function () {
                   //manoj
                   if (Updatedocumenttap && (documentview == null || documentview == "" || documentview == 'folder')) {
                       Updatedocumenttap = false;
                       if ($("#showAll").text().indexOf("/") >= 0) {
                           showfolderdocuments($("#showAll").find("a:last")[0])
                       } else {
                           BindDocument(vContractID);
                       }
                   }
                   //manoj
                   $("#hdnIsDocumentTag").text('');
                   $("#liSelectedRelatedContract").empty();
                   $(this).dialog("close");
               }
           }
        ],
        close: function (event, ui) {
            //manoj
            if (Updatedocumenttap && (documentview == null || documentview == "" || documentview == 'folder')) {
                Updatedocumenttap = false;
                if ($("#showAll").text().indexOf("/") >= 0) {
                    showfolderdocuments($("#showAll").find("a:last")[0])
                } else {
                    BindDocument(vContractID);
                }
            }
            //manoj
            $("#hdnIsDocumentTag").text('');
           
        },
        open: function (event, ui) {//Performance Optimization
            if (!isExecutedBindDocumentTypeandTemplate)
                BindDocumentTypeandTemplate();
        }//Performance Optimization
    });

    $("#treeviewFolder").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        height: 500,
        title: "Select Folder",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "OK": function () {
                selectfolder();
                treeviewFolder = false;
            },
            Cancel: function () {
                treeviewFolder = false;
                fileurldetails = "";
                $(this).dialog("close");
            }
        },
        close: function (event, ui) {
            treeviewFolder = false;
        }
    });

    $("#treeviewFolderMove").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        height: 500,
        title: "Select Folder",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "OK": function () { selectfoldertomove(); },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });

    $("#EditDocument").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        title: "Document",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "Save": function () { modalOnOpenDocument(); },
            Cancel: function () {
                $(this).dialog("close");
            }
        },
        close: function () {
            $('#dtValidFromEdit').val("");
            $('#dtValidTillEdit').val("");
            $('#txtReminder1Edit').val("");
            $('#txtReminder2Edit').val("");
            $('#txtReminder3Edit').val("");
            $("#ddlReminder1Edit").find('option[value="before"]').prop("selected", true);
            $("#ddlReminder2Edit").find('option[value="before"]').prop("selected", true);
            $("#ddlReminder3Edit").find('option[value="before"]').prop("selected", true);
        },
        open: function (event, ui) {//Performance Optimization
            if (!isExecutedBindDocumentTypeandTemplate)
                BindDocumentTypeandTemplate(editDocType);
        }//Performance Optimization
    });

    $("#templateCnfrmMsg").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        title: "Document Exist",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "Save as New": function () {
                $("#txtDocumentNameCreate").val($("#ddlDocumentTemplate").find('option:selected').text() + "_Copy");
                $(this).dialog("close");
            },
            Cancel: function () {
                $("#ddlDocumentTemplate").val("0");
                $(this).dialog("close");
            }
        }
    });
    $("#browseSigneeUser").dialog({
        autoOpen: false,
        closeText: "",
        width: "75%",
        title: "User",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "OK": function () {
                SelectedSignee();
            },
            Cancel: function () {
                $(this).dialog("close");
            }
        },
        close: function (event, ui) {

        }
    });

    $("#sendForSignature").dialog({
        autoOpen: false,
        closeText: "",
        width: "75%",
        minHeight: "80%",
        title: "Send for Signature",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "Send": function () {
                SendForSignature();
            },
            Cancel: function () {
                $(this).dialog("close");
                ClearSignatureForm();
            }
        },
        close: function (event, ui) {

        },
        open: function (event, ui) {
            if (RightSignatureFlag) {
                $("#RightSignDropDown").show();
                $("#SignDocExptxt").hide();
            }
            else {
                $("#RightSignDropDown").hide();
                $("#SignDocExptxt").show();
            }
        }
    });

    $("#docSignatureDetail").dialog({
        autoOpen: false,
        closeText: "",
        width: "75%",
        minHeight: "80%",
        title: "Signature Details",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            Cancel: function () {
                $(this).dialog("close");
            }
        },
        close: function (event, ui) {

        }
    });
    $("#shareContract").dialog({
        autoOpen: false,
        closeText: "",
        width: "75%",
        title: "Share Contract Record",
        dialogClass: "Popup_WarningMsg",
        modal: true,
        minHeight: "80%",
        buttons: {
            "Share": function () {
                ShareContract();
            },
            Cancel: function () {
                $(this).dialog("close");
                ClearShareForm();
            }
        },
        close: function (event, ui) {
            $(".addmorelinks").show();
        },
        open: function (event, ui) {
            if (!($('.smalltextcontract').length)) {
                $("div[aria-describedby='shareContract'].Popup_WarningMsg div span:first").append("<br /><span style='background-color:yellow;font-size:small;' class='smalltextcontract'>A secured view of this Contract Record will be temporarily shared with external contact(s) & users in eContracts as a link in their email.</span>");
            }
            $("div[aria-describedby='shareContract'].Popup_WarningMsg div span:first").attr('style', 'padding-bottom: 0px !important');
        }

    });

    $("#shareDocument").dialog({
        autoOpen: false,
        closeText: "",
        width: "75%",
        title: "Share Document",
        dialogClass: "Popup_WarningMsg",
        modal: true,
        minHeight: "80%",
        buttons: {
            "Share": function () {
                ShareDocument();
            },
            Cancel: function () {
                $(this).dialog("close");
                ClearShareForm();
            }
        },
        close: function (event, ui) {
            $(".addmorelinks").show();
        },
        open: function (event, ui) {
            if (!($('.smalltext').length)) {
                $("div[aria-describedby='shareDocument'].Popup_WarningMsg div span:first").append("<br /><span style='background-color:yellow;font-size:small;' class='smalltext'>A secured view of this Contract Document will be temporarily shared with external contact(s) & users in eContracts as a link in their email.</span>");
            }
            $("div[aria-describedby='shareDocument'].Popup_WarningMsg div span:first").attr('style', 'padding-bottom: 0px !important');
        }
    });

    $("#sendCopyPopUp").dialog({
        autoOpen: false,
        closeText: "",
        width: "85%",
        title: "Send Contract Copy",
        dialogClass: "popup_width100",
        modal: true,
        minHeight: "80%",
        buttons: {
            "Send": function () {
                SendCopy();
            },
            Cancel: function () {
                $(this).dialog("close");
                ClearSendCopyForm();
            }
        },
        close: function (event, ui) {
            $("#ddlDocumentList").val('').trigger('chosen:updated');
            $(".addmorelinks").show();
        }
    });




    $("#dvWorkflow").dialog({
        autoOpen: false,
        closeText: "",
        width: "70%",
        title: "Workflow",
        dialogClass: "popup_width100",
        modal: true,
        height: "auto",
        buttons: {
            "Start": function () { StartWorkflow(); },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });

    $("#dvWorkflowRenew").dialog({
        autoOpen: false,
        closeText: "",
        width: "70%",
        title: "Manage Approval",
        dialogClass: "popup_width100",
        modal: true,
        height: "auto",
        buttons: {
            "Start": function () { SaveWorkflowRenew(); },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });

    $("#addEditMilestone").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        height: "auto",
        resizable: false,
        title: "Milestone",
        dialogClass: "popup_width100",
        modal: true,
        buttons: {
            "Save": function () { if (modalOnOpenMilestone()) { } },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });






    //Obligation New 


    $("#browseProjects").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        title: "Project",
        modal: true,
        buttons: {
            "OK": function () {
                var s = AddProject();
                $(this).dialog("close");
                $("#txtSearchBoxProjects").val("");
            },
            Cancel: function () {
                arrRelatedCounterparities = [];
                $(this).dialog("close");
                $("#txtSearchBoxProjects").val("");
            }
        }
    });
    $("#browseProjectTasks").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        title: "Project Tasks",
        modal: true,
        buttons: {
            "OK": function () {
                var s = AddProjectTask();
                $(this).dialog("close");
                $("#txtSearchBoxProjectTasks").val("");
            },
            "Clear": function () {
                $('#txtSearchBoxProjectTasks').val('');
                $('input:checkbox[name=ProjectTask]').attr('checked', false);
                $("#ProjectTask").val("");
            },
            Cancel: function () {
                $(this).dialog("close");
                $("#txtSearchBoxProjectTasks").val("");
                $('input:checkbox[name=ProjectTask]').attr('checked', false);
            }
        }
    });

    $("#browseRequest").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        title: "Contract",
        modal: true,
        buttons: {
            "OK": function () {
                var s = AddRequest();
                $(this).dialog("close"); $("#txtSearchBoxRequest").val("");
            },
            Cancel: function () {
                $(this).dialog("close");
                $("#txtSearchBoxRequest").val("");
            }
        }
    });

    $("#addViewclanguaheCommnetpopup").dialog({
        autoOpen: false,
        closeText: "",
        width: "60%",
        height: "200",
        title: " Add New Clause Language",
        dialogClass: "popup_width100",
        height: 600,
        modal: true,
        buttons: {
            //"Save": function () {
            //    addnewclasslanguage();
            //},
            Close: function () {
                usercommnetadded = false;
                $("#ViewCommnetlanguagecollection").empty();
                $("#txtlanguagecommnet").val("");
                $('.ui-button-green-text').parent().removeAttr('disabled');
                $(this).dialog("close");
            }
        },
        close: function (event, ui) {
            usercommnetadded = false;
            $("#ViewCommnetlanguagecollection").empty();
            $("#txtlanguagecommnet").val("");
            $('.ui-button-green-text').parent().removeAttr('disabled');
            $(this).dialog("close");
        }
    });

    $("#addEditApprovalSheetDocument").dialog({
        autoOpen: false,
        closeText: "",
        width: "60%",
        title: "Create Summary/ Approval Sheet",
        dialogClass: "popup_width100",
        height: 400,
        modal: true,
        buttons: {
            "Create": function () {
                uploadApprovalSheettoSummaryDocs();
            },
            Cancel: function () {
                $('.ui-button-green-text').parent().removeAttr('disabled');
                $(this).dialog("close");
            }
        },
        close: function (event, ui) {

            $('.ui-button-green-text').parent().removeAttr('disabled');
            $(this).dialog("close");
        }
    });

    $("#addAdditionalApprovalSheetDocument").dialog({
        autoOpen: false,
        closeText: "",
        width: "60%",
        title: "Select Document(s)",
        dialogClass: "popup_width100",
        height: "auto",
        modal: true,
        buttons: [{
            text: "Save",
            "id": "btnSaveAdditonalDocSummaryAdd",
            click: function () { uploadAdditionalDocstoSummary(); }
        },
          {
              text: "Cancel",
              "id": "btnCancelAdditonalDocSummaryAdd",
              click: function () {
                  //manoj
                  $('.ui-button-green-text').parent().removeAttr('disabled');
                  $(this).dialog("close");
              }
          }
        ],
        close: function (event, ui) {
            $('.ui-button-green-text').parent().removeAttr('disabled');
            $(this).dialog("close");
        }
    });


    allowOnlyNumericInInputBox("txtPriceBreakDownNumberOfUnits");
    allowOnlyNumericInInputBox("txtPriceBreakDownUnitPrice");
    allowOnlyNumberInInputBox("txtRenewableFor");
    allowOnlyNumberInInputBox("txtStandardRenewalTerm");
    allowOnlyNumberInInputBox("txtApprovalTask");



    $('#dtDueDate').datepicker({
        changeMonth: true,
        changeYear: true,
        dateFormat: DatepickerFormat,
        /* fix buggy IE focus functionality */
        fixFocusIE: false,
        onSelect: function (dateText, inst) {
            this.fixFocusIE = true;
        },
    }).click(function () { $(this).focus() });
    $("#dtDueDateInline").datepicker({
        changeMonth: true,
        changeYear: true,
        dateFormat: DatepickerFormat
    });


    $('#dtTransactionDueDate').datepicker({
        changeMonth: true,
        changeYear: true,
        dateFormat: DatepickerFormat,
        /* fix buggy IE focus functionality */
        fixFocusIE: false,
        onSelect: function (dateText, inst) {
            this.fixFocusIE = true;
        },
    }).click(function () { $(this).focus() });
    $("#dtTransactionCompletedDate").datepicker({
        changeMonth: true,
        changeYear: true, dateFormat: DatepickerFormat
    });

    $("#dtAmendmentCompletedDate").datepicker({
        changeMonth: true,
        changeYear: true, dateFormat: DatepickerFormat
    });

    $('#txtNewEndDate').datepicker({
        changeMonth: true,
        changeYear: true,
        minDate: 1,
        dateFormat: DatepickerFormat,
        /* fix buggy IE focus functionality */
        onSelect: function (dateText, inst) {
            $(".ui-datepicker").css('display', 'none');
        },

    }).click(function () { $(this).focus() });

    $('#txtNextRenewalDate').datepicker({
        changeMonth: true,
        changeYear: true,
        minDate: 1,
        /* fix buggy IE focus functionality */
        fixFocusIE: false,
        dateFormat: DatepickerFormat,
        onSelect: function (dateText, inst) {
            $(".ui-datepicker").css('display', 'none');
        },
    }).click(function () { $(this).focus() });
    $('#dtCatalogValidTill').datepicker({
        changeMonth: true,
        changeYear: true,
        dateFormat: DatepickerFormat,
        /* fix buggy IE focus functionality */
        fixFocusIE: false,
        onSelect: function (dateText, inst) {
            this.fixFocusIE = true;
        },
    }).click(function () { $(this).focus() });

    $('#dtCatalogValidTilledit').datepicker({
        changeMonth: true,
        changeYear: true,
        /* fix buggy IE focus functionality */
        fixFocusIE: false,
        dateFormat: DatepickerFormat,
        onSelect: function (dateText, inst) {
            this.fixFocusIE = true;
        },
    }).click(function () { $(this).focus() });


    $(".openEditLabel").click(function () {
        $('#liSelectedLabel').html("");
        $('[id^=row_]').remove();
        $('#txtSearchLabel').val("");
        $('#selCategoryFilter').val("All");
        contactsJsonPayload = [];
        $("#txtSearchLabel").val('');
        arrLabelCollection = [];
        bindLabelCategory('New');
        //SearchLabels('New');
    });
    $(".openAddLabel").click(function () {
        $('#liSelectedLabel').html("");
        $('[id^=row_]').remove();
        $('#txtSearchLabel').val("");
        $('#selCategoryFilter').val("All");
        contactsJsonPayload = [];
        $("#txtSearchLabel").val('');
        arrLabelCollection = [];
        bindLabelCategory('Add');
        //SearchLabels('Add');
    });

    $("#labelEditPopup").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        height: 500,
        title: "Add Label",
        modal: true,
        buttons: {
            "Save": function () { SaveLabel(); },
            Cancel: function () {
                $(this).dialog("close");
                LabelsCategories = [];
            }
        },
        close: function () {
            ContractLabels = [];
            LabelsCategories = [];
        }
    });


    $('#dtTransDate').datepicker({
        changeMonth: true,
        changeYear: true,
        /* fix buggy IE focus functionality */
        fixFocusIE: false,
        dateFormat: DatepickerFormat,
        onSelect: function (dateText, inst) {
            this.fixFocusIE = true;
            $(this).change().focus();
        },
        onClose: function (dateText, inst) {
            this.fixFocusIE = true;
            this.focus();
            //},
            //beforeShow: function (input, inst) {
            //    var result = $.browser.msie ? !this.fixFocusIE : true;
            //    this.fixFocusIE = false;
            //    return result;
        }
    }).click(function () { $(this).focus() });




    $("#dtValidFrom").datepicker({
        changeMonth: true,
        changeYear: true,
        dateFormat: DatepickerFormat
    });
    $("#dtValidTill").datepicker({
        changeMonth: true,
        changeYear: true,
        dateFormat: DatepickerFormat
    });
    $("#dtValidFromEdit").datepicker({
        changeMonth: true,
        changeYear: true,
        dateFormat: DatepickerFormat
    });
    $("#dtValidTillEdit").datepicker({
        changeMonth: true,
        changeYear: true,
        dateFormat: DatepickerFormat
    });

    $("#dvViewProject").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        title: "Project",
        modal: true,
        buttons: {
            Close: function () {
                $(this).dialog("close");
            }
        }
    });

    $("#dvViewProjectTask").dialog({
        autoOpen: false,
        closeText: "",
        width: "50%",
        title: "Project Task",
        modal: true,
        buttons: {
            Close: function () {
                $(this).dialog("close");
            }
        }
    });



    $("#dvAddNotes").dialog({
        autoOpen: false,
        closeText: "",
        width: "60%",
        title: "Add Notes",
        modal: true,
        buttons: {
            "OK": function () { AddNotes(); },
            Cancel: function () {
                $(this).dialog("close");
            }
        }
    });

    $("#dvContractNotAvail").dialog({
        autoOpen: false,
        closeText: "",
        width: "100%",
        height: "1000",
        dialogClass: "popup_width100",
        modal: true,
        resizable: false,
        closeOnEscape: false,
        close: function (event, ui) {
            $("#dvContractNotAvail").dialog("open");
        }
    });

    $("#dvAlertDetails1").dialog({
        autoOpen: false,
        closeText: "",
        width: "45%",
        title: "Alert",
        modal: true,

    });

    $("#showMSWordPopup").dialog({
        autoOpen: false,
        closeText: "",
        width: "40%",
        height: "auto",
        modal: true
    });

    $('#dialogMismatched').dialog({
        autoOpen: false,
        closeText: "",
        width: "70%",
        title: 'Mismatched Document and Contract Record Metadata',
        dialogClass: "popup_width100",
        modal: true,
        buttons: [
        {
            text: "Edit Document",
            "class": 'Contribute',
            click: function () {
                $(this).dialog("close");
                if (currentHref == "") {
                    viewdocinword(currentNav)
                } else {
                    window.open(currentHref, "_blank")
                }
            }
        },
            {
                text: "Edit Contract Record",
                "class": 'Contribute StatusPermission',
                click: function () {
                    $(this).dialog("close");
                    contextMenuContractSettings('edit', '', '')
                }
            },
            {
                text: "Close",
                click: function () {
                    $(this).dialog("close");
                }
            }
        ]
    });

    //Copy Contract link Enhancment
    $("#copylink").dialog({
        autoOpen: false,
        closeText: "",
        width: "75%",
        title: "Copy Link",
        dialogClass: "Popup_WarningMsg",
        modal: true,
        minHeight: "80%",
        buttons: {
            "Copy": function () {               
                CopyLink();
            },
            Cancel: function () {
                $(this).dialog("close");
                ClearCopyLinkForm();
            }
        },
        close: function (event, ui) {

        },
    });
    //Copy Contract link Enhancment
});

$('#btnContractTermCancel').click(function () {
    $("#txtReasonOfCancel").val("");
    GetValuesAndAutoPopulate("ddlSendToCancel", "");
    $("#dvCancelContract").dialog("open");
});

function CancelContract() {
    if (requiredValidator('dvCancelContract', false)) {
        swal({
            title: '',
            text: "Are you sure you want to <span style=\"font-weight:700\">cancel</span> this Contract?",
            type: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes',
            cancelButtonText: 'No',
            html: true
        },
     function (confirmed) {
         if (confirmed) {
             $("#loadingPage").fadeIn();
             var notify = $("#ddlSendToCancel").val();
             var noty = '';
             $(notify).each(function (i, item) {
                 if (noty == '') {
                     noty = item;
                 }
                 else {
                     noty += ";" + item;
                 }
             });
             var vCancelNote = "CancelledReason=" + $("#txtReasonOfCancel").val() + "&UsersToNotify=" + noty;
             $.ajax({
                 url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName("ContractID") + '/changestatus?status=Cancelled',
                 type: 'PUT',
                 dataType: 'json',
                 headers: { 'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging, username: localStorage.UserName },
                 data: vCancelNote,
                 cache: false,
                 success: function (result) {
                     $("#loadingPage").fadeOut();
                     $("#dvCancelContract").dialog("close");
                     $("#dvContractTerm").dialog("close");
                     $("#dvManageContractStatus").dialog("close");
                     contractItem = result;
                     $("#iStandardIcon").empty();
                     $("#hdnsummeryTempDocu").text("No");
                     $("#lisummarydocument").css("display", "none");
                     ReloadContracts();
                     //ContractTopActions();
                 },
                 error: function (data) {
                     $("#loadingPage").fadeOut();
                 }
             });
         }
         return;
     });

    }
}

function liRemoveSelected(obj) {

    var child = obj.parentNode;

    child.parentNode.removeChild(child);
    var lstLbl = lstSelectedLabels.split(";");
    $.each(lstLbl, function (key, value) {
        if (value == obj.parentElement.textContent) {
            lstLbl.splice(lstLbl.indexOf(value), 1);
            $('#row_' + obj.parentElement.textContent).attr("style", "visibility: visible");
            return;
        }
    });
    lstSelectedLabels = lstLbl.join(";");
}

function BindContractDetails(contractid, ObjBind) {
    articleDocumentMileStone = '';
    contrcttypeselection = [];
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts?contractid=' + contractid,
        type: 'GET',
        cache: false,
        contentType: false,
        headers: { 'eContracts-ApiKey': localStorage.APIKey, UserID: localStorage.UserID },
        processData: false,
        success: function (item) {
            //manoj
            var allowtoshow = false;
            if (item.IsDraft != "Yes") {
                allowtoshow = true;
            } else if (localStorage.UserName == item.CreatedBy) {
                allowtoshow = true;
            }
            if (!allowtoshow) {
                $("#dvContractNotAvail").dialog("open");
                $("#loadingPage").fadeOut();
            } else {
                //manoj
                vContractTile = item.ContractTitle;
                contractItem = item;
                //bindAuthoriseUsers(contractItem);//Performance Optimization
                //BindObligationsNew(contractItem.RowKey, contractItem)//Performance Optimization
                if (contractItem != null) {
                    BindContractTermDetail(contractItem);
                    ////ENH 440 Display Alerts for Missing information
                    //var vContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                    //var vMisInfoFeat = $.grep(vContractFeatures, function (n, i) {
                    //    return (n.RowKey == "28" && n.Status == "ON");
                    //});
                    if (oGeneralSettings != "") {
                        if (oGeneralSettings.DisplayMissingInformation == "Yes") {
                            $("#tblDocumentMissing").css("display", "");
                            $("#tblDocuments").css("display", "");
                            $("#tblTermsMissing").css("display", "");
                            $("#tblMilestoneMissing").css("display", "");
                            $("#tblMilestones").css("display", "");
                            $("#tblMetadataMissing").css("display", "");
                            $("#tblRequired").css("display", "");
                            $("#tblPeopleMissing").css("display", "");
                            $("#tblPeoples").css("display", "");
                            $("#tblActivity").css("display", "");
                            $("#tblDescriptionMissing").css("display", "");
                        }
                        else {
                            $("#tblDocumentMissing").css("display", "none");
                            $("#tblDocuments").css("display", "none");
                            $("#tblTermsMissing").css("display", "none");
                            $("#tblMilestoneMissing").css("display", "none");
                            $("#tblMilestones").css("display", "none");
                            $("#tblMetadataMissing").css("display", "none");
                            $("#tblRequired").css("display", "none");
                            $("#tblPeopleMissing").css("display", "none");
                            $("#tblPeoples").css("display", "none");
                            $("#tblActivity").css("display", "none");
                            $("#tblDescriptionMissing").css("display", "none");
                            $(".clpendingaction").css("display", "none");
                        }
                    }
                    ////ENH 440 Display Alerts for Missing information
                    //Sridhar - Load Documents after contracts are loaded
                    var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                    var vDocLibFeat = $.grep(veContractFeatures, function (n, i) {
                        return (n.RowKey == "20" && n.Status == "ON");
                    });

                    if (typeof (ObjBind) != "undefined" && ObjBind != null && ObjBind != "") {
                        refreshdocuemnt();
                    } else {
                        BindDocument(vContractID);
                    }

                    //manoj
                    if (vDocLibFeat.length > 0) {
                        CreateDocumentListPinView(vContractID);
                    }
                    if (contractItem.IsActive == "" || contractItem.IsActive == "Yes") {
                        $("#general-notification").html("");
                        $("#general-notification").css("visibility", "hidden");
                        $("#btnaddnewsubfolder").css('pointer-events', 'auto');
                        $("#btnAddContractDocument").css('pointer-events', 'auto');
                        $("#holder").css('pointer-events', 'auto');
                        $(".restricamnd").css('pointer-events', 'auto');
                        var innervalue = document.getElementById("topAction1").textContent;
                        if (innervalue == "Add Amendment" || innervalue == "Add Document") {
                            $("#topAction1").css('pointer-events', 'auto');
                        }
                    } else {
                        var Displaymsg = "Contract is created succesfully.";
                        if (typeof (contractItem.RelatedRequestID) != "undefined" && contractItem.RelatedRequestID != null && contractItem.RelatedRequestID != "") {
                            Displaymsg += " Request|Folder(s)|Document(s) creation is in progress";
                        } else {
                            Displaymsg += " Folder(s)|Document(s) creation is in progress";
                        }
                        $("#general-notification").html(Displaymsg);
                        $("#general-notification").css("visibility", "visible");
                        $("#btnaddnewsubfolder").css('pointer-events', 'none');
                        $("#btnAddContractDocument").css('pointer-events', 'none');
                        $("#holder").css('pointer-events', 'none');
                        $(".restricamnd").css('pointer-events', 'none');
                        var innervalue = document.getElementById("topAction1").textContent;
                        if (innervalue == "Add Amendment" || innervalue == "Add Document") {
                            $("#topAction1").css('pointer-events', 'none');
                        }
                        clearTimeout(cleartimevalue);
                        cleartimevalue = setTimeout('checkcontractisactive()', 20000);
                    }
                }
                //manoj
                //var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                //var vCoverSheet = $.grep(veContractFeatures, function (n, i) {
                //    return (n.RowKey == "23" && n.Status == "ON");
                //});
                //if (vCoverSheet.length > 0) {
                //    if (typeof (contractItem.SummeryBlobURL) != "undefined" && contractItem.SummeryBlobURL != null && contractItem.SummeryBlobURL != "") {
                //        getcontractsummerytemplate(contractItem.ContractType, contractItem.SummeryBlobURL, true);
                //    } else {
                //        getcontractsummerytemplate(contractItem.ContractType, contractItem.SummeryBlobURL, false);
                //    }
                //} else {
                //    $("#iStandardIcon").empty();
                //    $("#hdnsummeryTempDocu").text("No");
                //    $("#lisummarydocument").css("display", "none");
                //}
                //manoj
                var vContractStatus = ["Ready for Signature", "Awaiting Signatures", "Signed", "Active", "Up for Renewal", "Renewed", "Extended", "On Hold", "Replaced", "Expired", "Cancelled", "Terminated", "Archived", "About to Expire"];
                if ($.inArray(item.Status, vContractStatus) > -1) {
                    $(".AlertEnabled").removeClass("disabled_slider");
                    IsPipeline = false;
                    var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                    vAccFeat = $.grep(veContractFeatures, function (n, i) {
                        return (n.RowKey == "2" && n.Status == "ON");
                    });
                    if (vAccFeat.length > 0) {
                        $(".FL_Obligations").css('display', '');

                    }
                    else {
                        $(".FL_Obligations").css('display', 'none');
                    }
                    $("#MilestoneEnable").show();
                }
                else {
                    IsPipeline = true;
                    //BindGeneralSettings();
                    $(".AlertEnabled").removeClass("disabled_slider");
                }

                var IsFullControlUser = false;
                if (item.FullControlPermissions != "") {
                    var FullControlUsers = item.FullControlPermissions;

                    var FullControlUsersarr = $.map(FullControlUsers.trim().split(';'), function (value) { return value.trim(); })
                    if (FullControlUsersarr.indexOf(localStorage.UserName.trim()) > -1)
                        IsFullControlUser = true;
                    else {
                        if (localStorage.UserType.indexOf("Global Contract Owner") >= 0) {
                            IsFullControlUser = true;
                        } else {
                            IsFullControlUser = false;
                        }
                    }

                }
                else {
                    if (localStorage.UserType.indexOf("Global Contract Owner") >= 0) {
                        IsFullControlUser = true;
                    } else {
                        IsFullControlUser = false;
                    }
                }

                if (item.IsFinalized == 'Yes' && !IsFullControlUser) {
                    $("#txtContractTitle").attr('disabled', 'disabled');
                    $("#ddlDPContractTypes").attr('disabled', 'disabled');
                    $("#ddlDPTransactionType").attr('disabled', 'disabled');
                    $("#ddlDPContractClass").attr('disabled', 'disabled');
                }
                else {
                    $("#txtContractTitle").removeAttr('disabled');
                    $("#ddlDPContractTypes").removeAttr("disabled");
                    $("#ddlDPTransactionType").removeAttr("disabled");
                    $("#ddlDPContractClass").removeAttr("disabled");
                }

                if (item.InRecycleBin == "Yes") {
                    $("#hdnPermission").val('View');
                    $("#liContractstatus").hide()
                    $("#dvRecyclebinMessage").css('display', '');
                    $("#topActionMore").removeClass('openmenuContractSettings');
                    $("#topActionMore").addClass('openmenuContractSettingsRecycleBin');
                }
                else {
                    $("#topActionMore").removeClass('openmenuContractSettingsRecycleBin');
                    $("#topActionMore").addClass('openmenuContractSettings');
                    $("#hdnPermission").val(item.Permission);
                }
                $(".openmenuContractSettings").contextMenu({ menu: 'dropdownMenuContractSettings', leftButton: true }, function (action, el, pos) { contextMenuContractSettings(action, el.parent("tr"), pos); });
                $(".openmenuContractSettingsRecycleBin").contextMenu({ menu: 'dropdownMenuContractSettingsRecycleBin', leftButton: true }, function (action, el, pos) { contextMenuContractSettingsRecycleBin(action, el.parent("tr"), pos); });

                if ((item.ContractManagers + ";" + item.CreatedBy + ";" + item.Approvers + ";" + item.Reviewers + ";" + item.Signees + ";" + item.RenewalConfirmParticipants).indexOf(localStorage.UserName) < 0) {
                    SetBADashboard(item.BusinessAreaPath, item.BusinessArea);
                }
                //BindDocument(contractid);
                //BindContractRoles(contractItem); 
                thisContractAreaNameC = item.ContractArea;
                thisBusinessAreaNameC = item.BusinessArea;
                thisBusinessAreaPath = item.BusinessAreaPath;
                GetBusinessAreaDetails();
                GetUserList();
                //BindBusinessAreaPicker11();
                //*Harshitha contract System milestone
                BindSystemMilestones(contractItem);
                $("#spancloseout").html(item.CloseOut);
                $("#hdnContractID").text(item.RowKey);
                $("#hdnContractValue").text(item.ContractValue);
                $("#hdnContractCurrency").text(item.ContractCurrency);
                $("#hdnContractPricingType").text(item.ContractPricingType);
                $("#hdnTransactionType").text(item.TransactionType);
                $("#hdnPaymentType").text(item.PaymentType);
                $("#hdnBillingFrequency").text(item.BillingFrequency);
                $("#hdnOldEndDate").text(item.EndDate);
                $("#hdnTermEndDate").text(item.TermEndDate);
                $("#hdnBaseContractValue").text(item.BaseContractValue);
                $("#hdnBaseContractCurrency").text(item.BaseContractValueCurrency);
                $("#hdnFinalizedDocumentsUrl").text(item.FinalizedDocumentsUrl);
                $("#hdnDraftDocumentsUrl").text(item.DraftDocumentsUrl);
                $("#hdnContractDocumentsUrl").text(item.ContractDocumentsUrl);
                $("#hdnContractDocumentsUrlFixed").text(item.ContractDocumentsUrl);
                $("#lblContractArea").text(item.ContractArea);
                $("#lblBusinessArea").text(item.BusinessArea);
                $("#lblBusinessAreaPath").text(item.BusinessAreaPath);
                $("#lblContractAreaAdmins").text(item.ContractAreaAdministrators);
                $("#lblApprovalWorkflow").text(item.ApprovalWorkflow);
                $("#lblBusinessAreaOwners").text(item.BusinessAreaOwners);
                $("#lblCounterparty").text(item.Counterparty);
                //Added For Obligation New
                $("#lblCompanyProfile").text(item.CompanyProfile);
                //Added End
                $("#lblContractType").text(item.ContractType);
                if (IsApprovalSheetFeatureExits)//Performance Optimization
                    GetContractTypeDetails(item.ContractType);
                getcontracttypemetadata(item.ContractType);
                //BindRelatedContractsFilters();
                if (item.StartDate != null) {
                    $("#hdnStartDate").text(item.StartDate);
                }
                $("#lblContractTitle").text(item.ContractTitle);
                $("#lblContractTitleHeading").html(item.ContractTitle.replace("  ", "&nbsp;&nbsp;"));
                $("#lblRelatedPopup_ContractTitle").text("Select Relationship for " + item.ContractTitle)
                $(".clsContractTitle").prop('title', "Select Relationship for" + " : " + item.ContractTitle);//Bug id:eO37463
                if (item.Description == "") {
                    $("#lblContractDescription").text("");
                    $("#lblContractDescription").addClass('cntdetails-NA');
                }
                else {
                    $("#lblContractDescription").text(item.Description);
                    $("#lblContractDescription").removeClass('cntdetails-NA');
                }
                $("#summCNumber").text(item.ContractNumber);
                $("#summCBusArea").text(item.BusinessAreaPath);
                var formatcreatedDate = '';
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                { formatcreatedDate = moment(new Date(item.Created)).format('MM/DD/YYYY'); }
                else { formatcreatedDate = moment(new Date(item.Created)).format(localStorage.AppDateFormat); }
                $("#summCreated").text(formatcreatedDate);
                if (vActiveUsers.indexOf(item.CreatedBy.trim()) < 0 && vActiveUsers.length > 0)
                    $("#summCreatedBy").html('<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(item.CreatedBy.trim()) + '\')" class="Link_UserProfile disabled_item_link" title="This user is no longer available.">' + item.CreatedBy.trim() + '</a>');
                else {
                    if (item.CreatedBy.trim() == "Imported")
                        $("#summCreatedBy").html('<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(item.CreatedBy.trim()) + '\')" class="Link_UserProfile disabled_item_link" title="This user is no longer available.">' + item.CreatedBy.trim() + '</a>');
                    else
                        $("#summCreatedBy").html('<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(item.CreatedBy.trim()) + '\')" class="Link_UserProfile">' + item.CreatedBy.trim() + '</a>');
                }

                $("#summContractType").text(item.ContractType);

                if (item.CompanyProfile == null || item.CompanyProfile == "" || item.CompanyProfile == "--Select--") {
                    $("#summCompyLegalEntity").text("Not Available");
                }
                else {
                    $("#summCompyLegalEntity").text(item.CompanyProfile);
                }

                var usersarr = [];
                if (item.Counterparty == null || item.Counterparty == "") {
                    $("#summCounterparty").text("Not Available");
                }
                else {
                    var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                    var vAccFeat = $.grep(veContractFeatures, function (n, i) {
                        return (n.RowKey == "6" && n.Status == "ON");
                    });
                    var vreadonly = "";
                    var vbrowse = "";
                    if (vAccFeat.length > 0) {
                        usersarr = item.Counterparty.split(";");
                        var reslength = usersarr.length;
                        var vUsers = '';
                        for (var i = 0; i < reslength; i++) {
                            if (vUsers == '') {
                                vUsers = '<a href="javascript:void(0);" onclick="RedirectToCounterparty(\'' + escape(usersarr[i].trim()) + '\')">' + usersarr[i].trim() + '</a>';
                            }
                            else {
                                vUsers += '; <a href="javascript:void(0);" onclick="RedirectToCounterparty(\'' + escape(usersarr[i].trim()) + '\')">' + usersarr[i].trim() + '</a>';
                            }
                        }
                        $("#summCounterparty").html(vUsers);
                    } else {
                        $("#summCounterparty").text(item.Counterparty);
                    }
                }

                var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                var vAccFeat = $.grep(veContractFeatures, function (n, i) {
                    return (n.RowKey == "11" && n.Status == "ON");
                });
                if (vAccFeat.length > 0) {
                    try {
                        if (item.ProjectManager == null || item.ProjectManager == "") {
                            $("#spProjectManager").html("Not Available");
                            $("#spProjectManagerView").html("Not Available");
                            $("#liProjectManager").html("Not Available");
                        } else {
                            var vUsers = '';
                            var userDisable = '';
                            var usertitle = '';
                            projMgrs = item.ProjectManager;
                            if (projMgrs.indexOf(';') >= 0) {
                                $.each(item.ProjectManager.split(";"), function (a, itemname) {
                                    userDisable = '';
                                    usertitle = '';
                                    if (vActiveUsers.indexOf(itemname.trim()) < 0 && vActiveUsers.length > 0) {
                                        userDisable = ' disabled_item_link';
                                        usertitle = 'title="This user is no longer available."';
                                    }
                                    if (vUsers == '') {
                                        vUsers = '<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(itemname) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + itemname + '</a>';
                                    } else {
                                        vUsers += '; <a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(itemname) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + itemname + '</a>';
                                    }
                                });
                            } else {
                                if (vActiveUsers.indexOf(item.ProjectManager.trim()) < 0 && vActiveUsers.length > 0) {
                                    userDisable = ' disabled_item_link';
                                    usertitle = 'title="This User no longer available"';
                                }
                                vUsers = '<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(item.ProjectManager) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + item.ProjectManager + '</a>';
                            }

                            $("#spProjectManager").html(vUsers);
                            $("#spProjectManagerView").html(vUsers);
                            $("#liProjectManager").html(vUsers);
                        }

                        //Related Projects
                        if (item.ProjectTask == null || item.ProjectTask == "") {
                            $("#tblRelatedProjects").html('No items found.');

                        } else {
                            BindProjects(item.ProjectTask);
                        }
                    } catch (e) {
                        $("#loadingPage").fadeOut();
                    }
                }
                BindContractPeopleMetadata(item);
                BindContractRolesMetadata();

                if (item.RelatedRequestID == null) {
                    $("#FL_Requestor").css('display', 'none');
                    $("#trRelatedRequest").css('display', 'none');
                } else if (item.RelatedRequestID == "") {
                    $("#FL_Requestor").css('display', 'none');
                    $("#trRelatedRequest").css('display', 'none');
                    $("#spRequestor").html("Not Available");
                    $("#spRequestorr").html("Not Available");
                } else {
                    $("#FL_Requestor").css('display', '');
                    $("#trRelatedRequest").css('display', '');
                    BindRequestDetails(item.RelatedRequestID)
                }
                lstSelectedLabels = item.Labels;
                tmpSelectedLabels = item.Labels;
                BindContractLabels();
                $("#txtBusinessArea").val(item.BusinessArea);
                getcontractareasettings(item.ContractArea);
                connamechecking = item.ContractArea;

                if (item.Renewable == "Yes") {
                    settingRenewable = true;
                } else {
                    settingRenewable = false;
                }

                if (item.Extendable != null && item.Extendable == "Yes") {
                    $("#hdnIsExtendable").text("Yes");
                    $("#hdnIsExtendableContract").text("Yes");
                    $("#chkDPExtendable").prop('checked', true);
                    $("#chkDPExtensionApproval").removeAttr("disabled");
                } else {
                    $("#hdnIsExtendable").text("No");
                }
                if (item.NeedApprovalForRenewal != null && item.NeedApprovalForRenewal == "Yes") {
                    $("#hdnRenewApprovalRequired").text("Yes");
                } else {
                    $("#hdnRenewApprovalRequired").text("No");
                }


                if (item.IsStandard == "Yes") {
                    // $("#iStandardCont").css('display', '');
                    //$("#iNonStandardCont").css('display', 'none');

                    $("#liContractStandard").css('display', 'none');
                    $("#liContractNonStandard").css('display', '');
                } else {
                    // $("#iStandardCont").css('display', 'none');
                    //$("#iNonStandardCont").css('display', '');
                    $("#liContractStandard").css('display', '');
                    $("#liContractNonStandard").css('display', 'none');
                }

                //ApplyPermissionToMenu($("#hdnPermission").val());
                if (contractItem.IsDraft == "Yes") {
                    $(".draft").css('display', 'none');
                }
                //Default properties form values
                strSelectedContractType = item.ContractType;
                $("#ddlDPTransactionType").find('option[value="' + item.TransactionType + '"]').prop("selected", true);
                $("#ddlDPContractClass").find('option[value="' + item.ContractClass + '"]').prop("selected", true);
                if (item.NeedApprovalForRenewal != null && item.NeedApprovalForRenewal == "Yes") {
                    $("#chkDPRenewalApproval").prop('checked', true);
                }
                if (item.NeedApprovalForExtension != null && item.NeedApprovalForExtension == "Yes") {
                    $("#chkDPExtensionApproval").prop('checked', true);
                }
                if (item.IsFinalized == "Yes") {
                    $("#artAmendment").css('display', '');
                    $("#chkDPAmendmentApproval").removeAttr("disabled");
                    //BindAmendments(contractid);//Performance Optimization
                } else {
                    $("#artAmendment").css('display', 'none');
                }
                if (item.TransactionType == "Legal/General Agreement") {
                    $("#artFinancials").css('display', 'none');
                }
                else {
                    $("#artFinancials").css('display', '');
                }

                //if (item.ContractValue != "0") {
                //    $("#lblContractValue").text("Not available");
                //    $("#txtContractValueCurrent").val("Not Available");
                //    $("#lblContractCurrency").text("");
                //    $.ajax({
                //        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/settings',
                //        type: 'GET',
                //        dataType: 'json',
                //        headers: { 'eContracts-ApiKey': localStorage.APIKey },
                //        cache: false,
                //        success: function (data) {
                //            vContractValueSetting = data.IsContractValueInBaseCurrency;
                //            if (vContractValueSetting == "Display Contract Values in Base Currency") {
                //                ContractCurrencyType = 'base';
                //            } else {
                //                ContractCurrencyType = 'actual';
                //            }
                //            if (data.CurrencyDisplayStyle == "UK") {
                //                $('#txtContractValueAfterAmend').autoNumeric('init');
                //                vCurrencyDisplayStyle = "UK";
                //            } else if (data.CurrencyDisplayStyle == "CAN") {
                //                $('#txtContractValueAfterAmend').autoNumeric('init', { aSep: ' ', aDec: '.' });
                //                vCurrencyDisplayStyle = "CAN";
                //            } else if (data.CurrencyDisplayStyle == "EU") {
                //                $('#txtContractValueAfterAmend').autoNumeric('init', { aSep: '.', aDec: ',' });
                //                vCurrencyDisplayStyle = "EU";
                //            }
                //        }
                //    });

                //} else {
                GetContractValueSetting(item);
                // }


                if (item.EndDate != null) {
                    var FEndDate = "";
                    if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                    { FEndDate = moment(new Date(item.EndDate)).utc().format('MM/DD/YYYY'); }
                    else { FEndDate = moment(new Date(item.EndDate)).utc().format(localStorage.AppDateFormat); }
                    $("#txtContractEndDateCurrent").val(FEndDate);
                } else {
                    $("#txtContractEndDateCurrent").val("Not Available");
                }

                if (item.ApprovalWorkflow != "In Progress") {
                    if (item.Permission != "View" && item.Permission != "") {
                        $("#addActivityApproval").css('display', '');
                    }
                }
                ContractTopActions();
                ApplyPermissionToMenu($("#hdnPermission").val());
                BindStatus();
                if (item.InRecycleBin == "Yes") {
                    $("#hdnPermission").val('View');
                    $("#liContractstatus").hide()
                    $("#dvRecyclebinMessage").css('display', '');
                }
                else {
                    $("#hdnPermission").val(item.Permission);
                }
                if (item.InRecycleBin == "Yes" && item.Permission == "Manage") {
                    $("#DeleteContract").show();
                    $("#DeleteContractRecycle").show();
                }
                if (localStorage.UserType.indexOf("Global Contract Owner") >= 0) {
                    $(".GlobalManage").css('display', '');
                } else {
                    $(".GlobalManage").css('display', 'none');
                }
                if (item.IsDraft == "Yes") {
                    $("#dvDraftMessage").css('display', '');
                    $("#addActivityApproval").css('display', 'none');
                    $("#RelatedContractEdit").css('display', 'none');
                    $(".draft").css('display', 'none');
                    //   var Stage = "";
                    //  Stage = getParameterByName("Stage");
                    if (Stage == "") {
                        var loca = "/Contracts/EditContract?ContractID=" + getParameterByName("ContractID") + "&ContractType=" + encodeURIComponent($("#lblContractType").text());
                        $('#lnkDraftToUpdate').attr('href', loca);
                    } else {
                        var loca = "/Contracts/EditContract?ContractID=" + getParameterByName("ContractID") + "&ContractType=" + encodeURIComponent($("#lblContractType").text()) + "&Stage=" + Stage;
                        $('#lnkDraftToUpdate').attr('href', loca);
                    }
                }
                if (item.IsStandard == "Yes") {
                    $("#liContractStandard").css('display', 'none');
                    $("#liContractNonStandard").css('display', '');
                } else {
                    $("#liContractStandard").css('display', '');
                    $("#liContractNonStandard").css('display', 'none');
                }
                if (contractItem.IsDraft == "Yes") {
                    $(".draft").css('display', 'none');
                }
                // Check Upcoming Task Slider    Added 2.4final to 2.4
                //suren      
                //BindWorkflow(); //bug fixing for slider inhancment //Performance Optimization
                //suren
                $("#loadingPage").fadeOut();
            }

        },
        error: function () {
            $("#dvContractNotAvail").dialog("open");
            $("#loadingPage").fadeOut();
        },
        complete: function () {
            BindSystemMilestoneTest(articleSystemMileStone, articleDocumentMileStone, articleMileStone, articleObligationMileStone);
        }

    });
}

function BindContractPeopleMetadata(item) {
    var usersarr = [];
    var userDisable = '';
    var userTitle = '';
    //ENH-472 (In Contract, People & Permission tab displaying all the Global Contract Owners.)
    var userslist = [];
    if (allUsersList != [] && allUsersList.length > 0 && typeof allUsersList != 'undefined') {
        var allGlobalContractOwners = $.grep(allUsersList, function (item, i) {
            return item.UserType.indexOf('Global Contract Owner') > -1;
        });
    }

    if (item.ContractAreaAdministrators == null || item.ContractAreaAdministrators == "") {
        $("#liContractAreaAdminNA").css('display', '');
        $("#spContractAreaAdminView").text("Not Available");
    }
    else {
        usersarr = item.ContractAreaAdministrators.split(";");
        var reslength = usersarr.length;
        var vUsers = '';
        for (var i = 0; i < reslength; i++) {
            usertitle = '';
            userDisable = '';
            if (vActiveUsers.indexOf(usersarr[i].trim()) < 0 && vActiveUsers.length > 0) {
                userDisable = ' disabled_item_link';
                usertitle = 'title="This user is no longer available."';
            }
            if (vUsers == '')
                vUsers = '<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(usersarr[i].trim()) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr[i].trim() + '</a>';
            else
                vUsers += '; <a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(usersarr[i].trim()) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr[i].trim() + '</a>';
            if (vActiveUsers.indexOf(usersarr[i].trim()) < 0 && vActiveUsers.length > 0)
                vUsers += '';
        }
        $("#liContractAreaAdmin").html(vUsers);
        $("#spContractAreaAdminView").html(vUsers);
    }
    if (item.BusinessAreaOwners == null || item.BusinessAreaOwners == "") {
        $("#liBusinessAreaOwnerNA").css('display', '');
        $("#spBusinessAreaOwnerView").text("Not Available");
    }
    else {
        usersarr = item.BusinessAreaOwners.split(";");
        var reslength = usersarr.length;
        var vUsers = '';
        for (var i = 0; i < reslength; i++) {
            userDisable = '';
            usertitle = '';
            if (vActiveUsers.indexOf(usersarr[i].trim()) < 0 && vActiveUsers.length > 0) {
                userDisable = ' disabled_item_link';
                usertitle = 'title="This user is no longer available."';
            }
            if (vUsers == '')
                vUsers = '<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(usersarr[i].trim()) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr[i].trim() + '</a>';
            else
                vUsers += '; <a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(usersarr[i].trim()) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr[i].trim() + '</a>';
            if (vActiveUsers.indexOf(usersarr[i].trim()) < 0 && vActiveUsers.length > 0)
                vUsers += '';
        }
        $("#liBusinessAreaOwner").html(vUsers);
        $("#spBusinessAreaOwnerView").html(vUsers);
    }
    if (item.ContractManagers == null || item.ContractManagers == "") {
        $("#licontractmanagers").text("Not Available");
        $("#spContractOwner").html("Not Available");
        $("#spContractOwnerView").html("Not Available");

    }
    else {
        $("#licontractmanagers").text(item.ContractManagers);
        usersarr = item.ContractManagers.split(";");
        var reslength = usersarr.length;
        var vUsers = '';
        for (var i = 0; i < reslength; i++) {
            userDisable = '';
            usertitle = '';
            if (vActiveUsers.indexOf(usersarr[i].trim()) < 0 && vActiveUsers.length > 0) {
                userDisable = ' disabled_item_link';
                usertitle = 'title="This user is no longer available."';
            }
            if (vUsers == '')
                vUsers = '<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(usersarr[i].trim()) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr[i].trim() + '</a>';
            else
                vUsers += '; <a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(usersarr[i].trim()) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr[i].trim() + '</a>';
            if (vActiveUsers.indexOf(usersarr[i].trim()) < 0 && vActiveUsers.length > 0)
                vUsers += '';
        }
        $("#spContractOwner").html(vUsers);
        $("#spContractOwnerView").html(vUsers);

    }

    if (item.Reviewers == null || item.Reviewers == "") {
        $("#lireviewers").text("Not Available");
        $("#spReviewers").html("Not Available");
        $("#spReviewersView").html("Not Available");

    }
    else {
        $("#lireviewers").text(item.Reviewers);
        usersarr = item.Reviewers.split(";");
        var reslength = usersarr.length;
        var vUsers = '';
        for (var i = 0; i < reslength; i++) {
            userDisable = '';
            usertitle = '';
            if (vActiveUsers.indexOf(usersarr[i].trim()) < 0 && vActiveUsers.length > 0) {
                userDisable = ' disabled_item_link';
                usertitle = 'title="This user is no longer available."';
            }
            if (vUsers == '')
                vUsers = '<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(usersarr[i].trim()) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr[i].trim() + '</a>';
            else
                vUsers += '; <a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(usersarr[i].trim()) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr[i].trim() + '</a>';
        }
        $("#spReviewers").html(vUsers);
        $("#spReviewersView").html(vUsers);
    }

    if (item.Approvers == null || item.Approvers == "") {
        $("#liapprovers").text("Not Available");
        $("#spApprovers").html("Not Available");
        $("#spApproversView").html("Not Available");
    }
    else {
        $("#liapprovers").text(item.Approvers);
        usersarr = item.Approvers.split(";");
        var reslength = usersarr.length;
        var vUsers = '';
        for (var i = 0; i < reslength; i++) {
            userDisable = '';
            usertitle = '';
            if (vActiveUsers.indexOf(usersarr[i].trim()) < 0 && vActiveUsers.length > 0) {
                userDisable = ' disabled_item_link';
                usertitle = 'title="This user is no longer available."';
            }
            if (vUsers == '')
                vUsers = '<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(usersarr[i].trim()) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr[i].trim() + '</a>';
            else
                vUsers += '; <a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(usersarr[i].trim()) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr[i].trim() + '</a>';
            if (vActiveUsers.indexOf(usersarr[i].trim()) < 0 && vActiveUsers.length > 0)
                vUsers += '';
        }
        $("#spApprovers").html(vUsers);
        $("#spApproversView").html(vUsers);
    }


    if (item.ApprovedBy == null || item.ApprovedBy == "") {
        $("#spApprovedBy").html("Not Available");
        $("#spApprovedByView").html("Not Available");
        $("#tdApprovedBy").html("Not Available");
    }
    else {
        usersarr = item.ApprovedBy.split(";");
        var reslength = usersarr.length;
        var vUsers = '';
        for (var i = 0; i < reslength; i++) {
            userDisable = '';
            usertitle = '';
            if (vActiveUsers.indexOf(usersarr[i].trim()) < 0 && vActiveUsers.length > 0) {
                userDisable = ' disabled_item_link';
                usertitle = 'title="This user is no longer available."';
            }
            if (vUsers == '')
                vUsers = '<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(usersarr[i].trim()) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr[i].trim() + '</a>';
            else
                vUsers += '; <a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(usersarr[i].trim()) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr[i].trim() + '</a>';
            if (vActiveUsers.indexOf(usersarr[i].trim()) < 0 && vActiveUsers.length > 0)
                vUsers += '';
        }
        $("#spApprovedBy").html(vUsers);
        $("#spApprovedByView").html(vUsers);
        $("#tdApprovedBy").html(vUsers);
    }


    if (item.ReviewedBy == null || item.ReviewedBy == "") {
        $("#spReviewedBy").html("Not Available");
        $("#spReviewedByView").html("Not Available");
        $("#tdReviewedBy").html("Not Available");
    }
    else {
        usersarr = item.ReviewedBy.split(";");
        var reslength = usersarr.length;
        var vUsers = '';
        for (var i = 0; i < reslength; i++) {
            userDisable = '';
            usertitle = '';
            if (vActiveUsers.indexOf(usersarr[i].trim()) < 0 && vActiveUsers.length > 0) {
                userDisable = ' disabled_item_link';
                usertitle = 'title="This user is no longer available."';
            }
            if (vUsers == '')
                vUsers = '<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(usersarr[i].trim()) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr[i].trim() + '</a>';
            else
                vUsers += '; <a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(usersarr[i].trim()) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr[i].trim() + '</a>';
            if (vActiveUsers.indexOf(usersarr[i].trim()) < 0 && vActiveUsers.length > 0)
                vUsers += '';
        }
        $("#spReviewedBy").html(vUsers);
        $("#spReviewedByView").html(vUsers);
        $("#tdReviewedBy").html(vUsers);
    }



    if (item.Signees == null || item.Signees == "") {
        $("#lisignees").text("Not Available");
        $("#spInternalSignees").html("Not Available");
        $("#spInternalSigneesView").html("Not Available");
    }
    else {
        $("#lisignees").text(item.Signees);
        usersarr = item.Signees.split(";");
        var reslength = usersarr.length;
        var vUsers = '';
        for (var i = 0; i < reslength; i++) {
            userDisable = '';
            usertitle = '';
            if (vActiveUsers.indexOf(usersarr[i].trim()) < 0 && vActiveUsers.length > 0) {
                userDisable = ' disabled_item_link';
                usertitle = 'title="This user is no longer available."';
            }
            if (vUsers == '')
                vUsers = '<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(usersarr[i].trim()) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr[i].trim() + '</a>';
            else
                vUsers += '; <a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(usersarr[i].trim()) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr[i].trim() + '</a>';
            if (vActiveUsers.indexOf(usersarr[i].trim()) < 0 && vActiveUsers.length > 0)
                vUsers += '';
        }
        $("#spInternalSignees").html(vUsers);
        $("#spInternalSigneesView").html(vUsers);
    }



    if (item.SignedBy == null || item.SignedBy == "") {
        $("#liSignedBy").text("Not Available");
        $("#tdSignedBy").html("Not Available");
        $("#liSignedByView").text("Not Available");
    }
    else {
        $("#tdSignedBy").html(item.SignedBy);
        var vExternal = item.SignedBy.split(';');
        var reslength = vExternal.length;
        var vUsers = '';
        for (var i = 0; i < reslength; i++) {
            if (vExternal[i].trim() != '') {
                if (vUsers == '')
                    vUsers = vExternal[i].split('(')[0].trim();
                else
                    vUsers += '; ' + vExternal[i].split('(')[0].trim();
            }
        }
        $("#liSignedBy").text(vUsers);
        $("#liSignedByView").text(vUsers);
    }


    if (item.ExternalSignees == null || item.ExternalSignees == "") {
        $("#lisigneesExternal").html("Not Available");
        $("#lisigneesExternalView").html("Not Available");
    }
    else {
        var vExternal = item.ExternalSignees.split(';');
        var reslength = vExternal.length;
        var vUsers = '';
        for (var i = 0; i < reslength; i++) {
            if (vUsers == '')
                vUsers = vExternal[i].split('(')[0].trim();
            else
                vUsers += '; ' + vExternal[i].split('(')[0].trim();;
        }
        $("#lisigneesExternal").html(vUsers);
        $("#lisigneesExternalView").html(item.ExternalSignees);
        $('#txtExternalSignee').val($('#lisigneesExternalView').text());
    }



    if (item.ExternalSignedBy == null || item.ExternalSignedBy == "") {
        $("#liExternalSignedBy").text("Not Available");
        $("#tdExternalSignedBy").html("Not Available");
        $("#liExternalSignedByView").text("Not Available");
    }
    else {
        $("#liExternalSignedBy").html(item.ExternalSignedBy);
        $("#tdExternalSignedBy").html(item.ExternalSignedBy);
        $("#tdExternalSignedBy").html(item.ExternalSignedBy);
    }

    if (item.SharedWith == null || item.SharedWith == "") {
        $("#lisharedWith").text("Not Available");
        $("#lisharedWithView").text("Not Available");
        $("#tdSharedWith").html("Not Available");
    }
    else {
        $("#tdSharedWith").html(item.SharedWith);
        var vExternal = item.SharedWith.split(';');
        var reslength = vExternal.length;
        var vUsers = '';
        for (var i = 0; i < reslength; i++) {
            if (vExternal[i].trim() != '') {
                if (vUsers == '')
                    vUsers = vExternal[i].split('(')[0].trim();
                else
                    vUsers += '; ' + vExternal[i].split('(')[0].trim();
            }
        }
        $("#lisharedWith").text(vUsers);
        $("#lisharedWithView").text(vUsers);
    }


    if (item.ContractManagers == null || item.ContractManagers == "") {
        $("#licontractmanagers").text("Not Available");
        $("#spContractOwner").html("Not Available");
        $("#spContractOwnerView").html("Not Available");

    }
    else {
        $("#licontractmanagers").text(item.ContractManagers);
        usersarr = item.ContractManagers.split(";");
        var reslength = usersarr.length;
        var vUsers = '';
        for (var i = 0; i < reslength; i++) {
            userDisable = '';
            usertitle = '';
            if (vActiveUsers.indexOf(usersarr[i].trim()) < 0 && vActiveUsers.length > 0) {
                userDisable = ' disabled_item_link';
                usertitle = 'title="This user is no longer available."';
            }
            if (vUsers == '')
                vUsers = '<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(usersarr[i].trim()) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr[i].trim() + '</a>';
            else
                vUsers += '; <a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(usersarr[i].trim()) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr[i].trim() + '</a>';
            if (vActiveUsers.indexOf(usersarr[i].trim()) < 0 && vActiveUsers.length > 0)
                vUsers += '';
        }
        $("#spContractOwner").html(vUsers);
        $("#spContractOwnerView").html(vUsers);

    }
    if (item.Requestor == null || item.Requestor == "") {
        $("#spRequestor").text("Not Available");
        $("#spRequestorView").text("Not Available");
    }
    else {
        $("#spRequestor").html(item.Requestor);
        $("#spRequestorView").html(item.Requestor);
    }

}
function ApplyPermissionToMenu(vPermission) {
    var stage = getParameterByName("Stage");
    if (contractItem.Status == "Expired" || contractItem.Status == "Cancelled" || contractItem.Status == "Replaced" || contractItem.Status == "Archived") {
        $('.Manage').css("display", "none");
        $('.Contribute').css("display", "none");
        if (contractItem.Status == "Archived")
            $('.DeleteRecord').css("display", "");
        //isPermissionView = true;
        if (vPermission == 'Contribute') {
            $('.StatusPermission').css("display", "");
            $('#DeleteContract').css("display", "none");
        }
        else if (vPermission == 'View' || vPermission == '' || vPermission == null) {
            $('.Manage').css("display", "none");
            $('.Contribute').css("display", "none");
            $('#DeleteContract').css("display", "none");
            $('#liContractstatus').css("display", "none");
            //isPermissionView = true;
        }
        else if (vPermission == 'Manage') {
            $('.StatusPermission').css("display", "");

            //if (contractItem.Status == "Archived" && localStorage.UserType.indexOf("Global Contract Owner") > -1)
            //    $('.StatusContributePermission').css("display", "none");
            //else
            //    $('.StatusContributePermission').css("display", "");
        }
        if ($("#btnViewDetails").length > 0) {
            if ($('#btnViewDetails').css('display') != 'none') {
                $('#btnViewDetails').css('display', 'none');
            }
        }
    }
    else {
        if (vPermission == 'Contribute') {
            $('.Manage').css("display", "none");
            $('#DeleteContract').css("display", "none");
        }
        else if (vPermission == 'Manage') {
            $('.Manage').css("display", "");
            //manoj

            //manoj
            if (typeof (contractItem.FinalizedBy) != "undefined" && contractItem.FinalizedBy != null && contractItem.FinalizedBy != "") {
                $("#lidropdownMenuRenewalTerm").css("display", "");
            } else {
                $("#lidropdownMenuRenewalTerm").css("display", "none");
            }
            //manoj
            if (documentview == null || documentview == "" || documentview == 'folder') {
                $('.Contribute').css("display", "");
            } else {
                $('.Contribute:not(#btnaddnewsubfolder)').css("display", "");
            }
            //manoj
        }
        else if (vPermission == 'View' || vPermission == '') {
            $('.Manage').css("display", "none");
            $('.Contribute').css("display", "none");
            $('#DeleteContract').css("display", "none");
            $('#liContractstatus').css("display", "none");
            //isPermissionView = true;
        }
        if ($("#btnViewDetails").length > 0) {
            if (contractItem.ContractTermType != '0' && contractItem.ContractTermType != '' && contractItem.ContractTermType != null) {
                $('#btnViewDetails').css('display', '');
            }
        }
    }
    //if (!(contractItem.Status == "Expired" || contractItem.Status == "On Hold" || contractItem.Status == "Cancelled" || contractItem.Status == "Replaced")) {
    //    $('.DeleteRecord').css("display", "none");
    //}

    if (stage == "pipeline") {
        if (contractItem.Status == "Cancelled" && contractItem.IsFinalized != "Yes") {
            $('.DeleteRecord').css("display", "");
        } else {
            $('.DeleteRecord').css("display", "none");
        }
    }
    else {
        if (contractItem.Status == "Archived") {
            $('.DeleteRecord').css("display", "");
        } else {
            $('.DeleteRecord').css("display", "none");
        }
    }
    if ((contractItem.IsDraft == "Yes" && contractItem.Permission == 'Manage' && contractItem.CreatedBy == localStorage.UserName)) {
        $('.DeleteRecord').css("display", "");
    }
    if (contractItem.IsDraft == "Yes") {
        $('.drafthide').css("display", "none");
        $(".draft").css('display', 'none');
    }


    if (contractItem.ContractDocumentsUrl != null && contractItem.ContractDocumentsUrl != "" && (contractItem.IsDraft != 'Yes' || (contractItem.IsDraft == 'Yes' && contractItem.CreatedBy == localStorage.UserName))) {
        if ((documentview == 'folder' || documentview == "" || documentview == null) && (vPermission == 'Manage' || vPermission == 'Contribute') && (!(contractItem.Status == "Expired" || contractItem.Status == "Cancelled" || contractItem.Status == "Replaced" || contractItem.Status == "Archived"))) {
            $("#btnaddnewsubfolder").css('display', '');
        } else {
            $("#btnaddnewsubfolder").css('display', 'none');
        }
    } else {
        $("#btnaddnewsubfolder").css('display', 'none');
    }


    if (contractItem.FinalizedBy == null || contractItem.FinalizedBy == "") {
        if (contractItem.Status == "Cancelled" && contractItem.Permission == 'Manage') {
            $('.DeleteRecord').css("display", "");
        }
        else {
            $('.DeleteRecord').css("display", "none");
        }
    }
    if (vPermission == 'View' || vPermission == '' || vPermission == null) {
        $('#DeleteContract').css("display", "none");
    }

}


var workflowRoutingOptions = [];
var vWorkflowRules = [];
var workflowAdHoc = "";
$("#ddlRule").change(function (obj) {
    var vFilterRule = $.grep(vWorkflowRules, function (n, i) {
        return (n.RuleName == $("#ddlRule option:selected").text());
    });
    if (vFilterRule.length > 0) {
        $("#tblStage").empty();
        var workflowRules = vFilterRule[0];
        var participantsInXML = workflowRules.ParticipantsInXML;
        var totalFileCount = 0;
        if (workflowRules.RuleName == "Default") {
            if ($("#hdWorkflowType").val() == "Document Review") {
                if (typeof workflowRules.WorkflowTitle != 'undefined' && workflowRules.WorkflowTitle != "") {
                    $("#txtWorkflowTitle").val(workflowRules.WorkflowTitle + ' for ' + $("#hdWorkflowObjectTitle").val());
                } else {
                    $("#txtWorkflowTitle").val('Review for ' + $("#hdWorkflowObjectTitle").val());
                }
            } else {
                if (typeof workflowRules.WorkflowTitle != 'undefined' && workflowRules.WorkflowTitle != "") {
                    $("#txtWorkflowTitle").val(workflowRules.WorkflowTitle + ' for ' + $("#hdWorkflowObjectTitle").val());
                } else {
                    $("#txtWorkflowTitle").val('Approval for ' + $("#hdWorkflowObjectTitle").val());
                }
            }
        }
        else {
            if (typeof workflowRules.WorkflowTitle != 'undefined' && workflowRules.WorkflowTitle != "") {
                $("#txtWorkflowTitle").val(workflowRules.WorkflowTitle + ' for ' + $("#hdWorkflowObjectTitle").val())
            } else {
                $("#txtWorkflowTitle").val('Conditional Approval Workflow for ' + $("#hdWorkflowObjectTitle").val())
            }
        }
        if (participantsInXML != "") {
            $(participantsInXML).find('WorkflowPaticipant').each(function () {
                var StageTitle = $(this).find('StageTitle').text();
                var Participants = $(this).find('Participants').text();
                var Order = $(this).find('Order').text();
                totalFileCount++;
                var htmlFormatFile = '<tr id="trStage' + totalFileCount + '">';
                htmlFormatFile += '<td class="width30 wf_approval start_workflow">';
                htmlFormatFile += '<input id="txtStage' + totalFileCount + '" value="' + StageTitle + '" name="Stage' + totalFileCount + '" title="Stage" placeholder="Stage Name" type="text" class="f_inpt width95 validelement" />';
                htmlFormatFile += '</td>';
                htmlFormatFile += '<td class="width46 start_workflow">';
                htmlFormatFile += '<select id="ddlAssignTo' + totalFileCount + '" name="AssignTo' + totalFileCount + '"  multiple="multiple" data-placeholder="Select" class="width97 a-Workflow-height validmultiselect"></select>';
                htmlFormatFile += '</td>';
                htmlFormatFile += '<td class="width20 padding_top_3px v_align_top start_workflow">';
                htmlFormatFile += '<select id="ddlOrder' + totalFileCount + '" name="Order' + totalFileCount + '"  class="f_inpt width97 height32">';
                if (Order == "Serial")
                    htmlFormatFile += '<option value="Serial" selected="selected">Serial</option><option value="Parallel">Parallel</option></select>';
                else
                    htmlFormatFile += '<option value="Serial">Serial</option><option value="Parallel" selected="selected">Parallel</option></select>';
                htmlFormatFile += '</td>';
                htmlFormatFile += '<td class="width4 padding_top_10px v_align_top start_workflow">';
                if (totalFileCount > 1)
                    htmlFormatFile += '<img id="imgStageDelete' + totalFileCount + '" src="../Content/Images/icon/delete.png" style="width: 20px" onclick="DeleteStage(this)" />';
                else
                    htmlFormatFile += '<img id="imgStageDelete' + totalFileCount + '" src="../Content/Images/icon/delete.png" style="visibility: hidden; width: 20px" onclick="DeleteStage(this)" />';
                htmlFormatFile += '</td>';
                htmlFormatFile += '</tr>';

                $("#tblStage").append(htmlFormatFile);
                var $options = $("#ddlApprovers > option").clone();
                $('#ddlAssignTo' + totalFileCount).append($options);

                $("#ddlAssignTo" + totalFileCount).chosen().change(function () {
                    var vasstoid = $(this).attr('id').replace("ddlAssignTo", "");
                    if ($(this).val() != null) {
                        if ($(this).val().length > 1 && (workflowRoutingOptions.indexOf("Allow over-ride of Admin Configuration") >= 0 ||
                            workflowRoutingOptions.indexOf("Allow replacing participants") >= 0)) {
                            $("#ddlOrder" + vasstoid).prop('disabled', false);
                        } else {
                            $("#ddlOrder" + vasstoid).prop('disabled', true);
                        }
                    }
                    else
                        $("#ddlOrder" + vasstoid).prop('disabled', true);
                });
                GetValuesAndAutoPopulate("ddlAssignTo" + totalFileCount, Participants);
                var vParticipantsArr = Participants.split(";");
                if (vParticipantsArr.length > 1)
                    $("#ddlOrder" + totalFileCount).prop('disabled', false);
                else
                    $("#ddlOrder" + totalFileCount).prop('disabled', true);

                //if (workflowRoutingOptions.indexOf("Allow replacing participants") == -1) {
                //    if (workflowRoutingOptions.indexOf("Allow over-ride of Admin Configuration") == -1) {
                //        $("#txtStage" + totalFileCount).prop('disabled', true);
                //        $("#ddlAssignTo" + totalFileCount).prop('disabled', true).trigger("chosen:updated");
                //        $("#ddlOrder" + totalFileCount).prop('disabled', true);
                //        $("#imgStageDelete" + totalFileCount).css("visibility", "hidden");
                //    }
                //}

                if (workflowRoutingOptions.indexOf("Allow over-ride of Admin Configuration") == -1) {
                    if (workflowRoutingOptions.indexOf("Allow replacing participants") == -1) {
                        $("#ddlAssignTo" + totalFileCount).prop('disabled', true).trigger("chosen:updated");
                        $("#ddlOrder" + totalFileCount).prop('disabled', true);
                    }
                    $("#txtStage" + totalFileCount).prop('disabled', true);
                    $("#imgStageDelete" + totalFileCount).css("visibility", "hidden");
                }
            });
        }
        else {
            //$("#txtWorkflowTitle").val('Approval for ' + $("#lblContractTitle").text());
            if ($("#ddlRule").html() == "") {
                $("#ddlRule").append('<option value="Ad-hoc">Ad-hoc</option>');
                $("#lblddlRule").css("display", "");
                $("#ddlRule").css("display", "none");
                $("#lblddlRule").text("Ad-hoc");
            }
            if (!workflowAdHoc)
                $("#ddlRule").attr('disabled', 'disabled');
            var totalFileCount = 1;
            var htmlFormatFile = '<tr id="trStage' + totalFileCount + '">';
            htmlFormatFile += '<td class="width30 wf_approval start_workflow">';
            htmlFormatFile += '<input id="txtStage' + totalFileCount + '" name="Stage' + totalFileCount + '" title="Stage" placeholder="Stage Name" type="text" class="f_inpt width95_a validelement" value="Stage ' + totalFileCount + '"/>';
            htmlFormatFile += '</td>';
            htmlFormatFile += '<td class="width46 start_workflow">';
            htmlFormatFile += '<select id="ddlAssignTo' + totalFileCount + '" name="AssignTo' + totalFileCount + '"  multiple="multiple" data-placeholder="Select" class="width97 a-Workflow-height validmultiselect"></select>';
            htmlFormatFile += '</td>';
            htmlFormatFile += '<td class="width20 padding_top_3px v_align_top start_workflow">';
            htmlFormatFile += '<select id="ddlOrder' + totalFileCount + '" name="Order' + totalFileCount + '"  class="f_inpt width97 height32" disabled="disabled"><option selected="selected">Serial</option><option>Parallel</option></select>';
            htmlFormatFile += '</td>';
            htmlFormatFile += '<td class="width4 padding_top_10px v_align_top start_workflow">';
            htmlFormatFile += '<img src="../Content/Images/icon/delete.png" style="visibility: hidden; width: 20px" onclick="DeleteStage(this)" />';
            htmlFormatFile += '</td>';
            htmlFormatFile += '</tr>';

            $("#tblStage").append(htmlFormatFile);
            var $options = $("#ddlApprovers > option").clone();
            $('#ddlAssignTo' + totalFileCount).append($options);

            $("#ddlAssignTo" + totalFileCount).chosen().change(function () {
                var vasstoid = $(this).attr('id').replace("ddlAssignTo", "");
                if ($(this).val() != null) {
                    if ($(this).val().length > 1) {
                        $("#ddlOrder" + vasstoid).prop('disabled', false);
                    }
                    else {
                        $("#ddlOrder" + vasstoid).val("Serial");
                        $("#ddlOrder" + vasstoid).prop('disabled', true);
                    }
                }
            });
        }
    } else if ($("#ddlRule option:selected").text() == "Ad-hoc") {
        $("#txtWorkflowTitle").val('Ad-hoc workflow for ' + $("#hdWorkflowObjectTitle").val());
        $("#tblStage").empty();
        var totalFileCount = 1;
        var htmlFormatFile = '<tr id="trStage' + totalFileCount + '">';
        htmlFormatFile += '<td class="width30 wf_approval start_workflow">';
        htmlFormatFile += '<input id="txtStage' + totalFileCount + '" name="Stage' + totalFileCount + '" title="Stage" placeholder="Stage Name" type="text" class="f_inpt width95_a validelement" value="Stage ' + totalFileCount + '"/>';
        htmlFormatFile += '</td>';
        htmlFormatFile += '<td class="width46 start_workflow">';
        htmlFormatFile += '<select id="ddlAssignTo' + totalFileCount + '" name="AssignTo' + totalFileCount + '"  multiple="multiple" data-placeholder="Select" class="width97 a-Workflow-height validmultiselect"></select>';
        htmlFormatFile += '</td>';
        htmlFormatFile += '<td class="width20 padding_top_3px v_align_top start_workflow">';
        htmlFormatFile += '<select id="ddlOrder' + totalFileCount + '" name="Order' + totalFileCount + '"  class="f_inpt width97 height32" disabled="disabled"><option selected="selected">Serial</option><option>Parallel</option></select>';
        htmlFormatFile += '</td>';
        htmlFormatFile += '<td class="width4 padding_top_10px v_align_top start_workflow">';
        htmlFormatFile += '<img src="../Content/Images/icon/delete.png" style="visibility: hidden; width: 20px" onclick="DeleteStage(this)" />';
        htmlFormatFile += '</td>';
        htmlFormatFile += '</tr>';

        $("#tblStage").append(htmlFormatFile);
        var $options = $("#ddlApprovers > option").clone();
        $('#ddlAssignTo' + totalFileCount).append($options);
        $("#ddlAssignTo" + totalFileCount).chosen().change(function () {
            var vasstoid = $(this).attr('id').replace("ddlAssignTo", "");
            if ($(this).val() != null) {
                if ($(this).val().length > 1 && (workflowRoutingOptions.indexOf("Allow over-ride of Admin Configuration") >= 0 ||
                    workflowRoutingOptions.indexOf("Allow replacing participants") >= 0)) {
                    $("#ddlOrder" + vasstoid).prop('disabled', false);
                }
                else {
                    $("#ddlOrder" + vasstoid).val("Serial");
                    $("#ddlOrder" + vasstoid).prop('disabled', true);
                }
            }
            else {
                $("#ddlOrder" + vasstoid).val("Serial");
                $("#ddlOrder" + vasstoid).prop('disabled', true);
            }
        });
    }
});


function RemoveErrors() {
    $(".validelement").each(function (index, element) {
        $(element).removeClass("error");
        $("#errormsg_" + element.id).remove();
    });
    $(".validuser").each(function (index, element) {
        $(element).removeClass("error");
        $("#errormsg_" + element.id).remove();
    });
    $(".validmultiselect").each(function (index, element) {
        $(element).removeClass("error");
        $("#errormsg_" + element.id).remove();
    });
    $(".validdate").each(function (index, element) {
        $(element).removeClass("error");
        $("#errormsg_" + element.id).remove();
    });
    $(".validnumspec").each(function (index, element) {
        $(element).removeClass("error");
        $("#errormsg_" + element.id).remove();
    });
    $(".validNicEdit").each(function (index, element) {
        $(element).removeClass("error");
        $("#errormsg_" + element.id).remove();
    });
    $(".validemail").each(function (index, element) {
        $(element).removeClass("error");
        $("#errormsg_" + element.id).remove();
    });
    $(".specialchar").each(function (index, element) {
        $(element).removeClass("error");
        $("#errormsg_" + element.id).remove();
    });
    $(".validnumber").each(function (index, element) {
        $(element).removeClass("error");
        $("#errormsg_" + element.id).remove();
    });
    $(".error").removeClass("error");
}
function GetContractPendingAction(open, tabname) {
    //if (typeof tabname != "undefined") {
    //    if (tabname == "Missing") {
    //        currentPanel = "Missing";
    //    } else if (tabname == "Contract Fields") {
    //        currentPanel = "Contract Fields";
    //    }
    //}
    if (!pendingStarted) {
        pendingStarted = true;
        if (open == true)
            $("#loadingPage").fadeIn();
        //if ($("#tblRequired").text() == "") {
        //var ContractSettings = "";
        //var StartApproval = "";
        //var EditContract = "";
        //var JustInfo = "";
        //var Activities = "";
        //var OnlyDocuments = "";
        //var OnlyTerms = "";
        //var OnlyMilestonesObli = "";
        //var OnlyMetadata = "";
        //var OnlyPeople = "";
        var DisplayMissingData = [];
        //$("#tblContractSettingMetadata").empty()
        //$("#tblStartApprovalMetadata").empty()
        $("#tblRequired").html('<img src="../Content/Images/icon/loading.gif">');
        $("#tblPeoples").html('<img src="../Content/Images/icon/loading.gif">');
        $("#tblDocuments").html('<img src="../Content/Images/icon/loading.gif">');
        $("#tblMilestones").html('<img src="../Content/Images/icon/loading.gif">');
        $("#tblMilestones").html('<img src="../Content/Images/icon/loading.gif">');
        //$("#tblActivitiesMetadata").empty()
        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + vContractID + '/PendingAction',
            type: 'GET',
            cache: false,
            contentType: false,
            headers: {
                'eContracts-ApiKey': localStorage.APIKey
            },
            processData: false,
            success: function (item) {
                //manoj
                if (item != null) {
                    for (keyvalue in item) {
                        switch (keyvalue) {
                            case "OnlyDocuments":
                                {
                                    if (item[keyvalue] != null && item[keyvalue] != "" && item[keyvalue] != "No item found.") {
                                        //$("#tblDocumentMissing").html(item[keyvalue]);
                                        $("#tblDocumentMissing").html('<a href="javascript:void(0);" data-title="' + $(item[keyvalue]).text() + '" onclick="GetContractPendingAction(true, \'Documents\')"><img src="/Content/Images/missing-exc.png"/></a>');  //Added 2.4final to 2.4
                                        DisplayMissingData.push("tblDocumentMissing");
                                        $("#tblDocuments").html(item[keyvalue]);
                                    } else {
                                        $("#tblDocumentMissing").html('');
                                        $("#tblDocuments").html("<tr><td class='f_head'>No Required Document Template(s) and Document Type(s) are missing.</td></tr>");
                                    }
                                    //$("#tblDocumentMissing").parent().show();
                                    break;
                                }
                            case "OnlyTerms":
                                {
                                    if (item[keyvalue] != null && item[keyvalue] != "" && item[keyvalue] != "No item found.") {
                                        $("#tblTermsMissing").html(item[keyvalue]);
                                        //DisplayMissingData.push("tblTermsMissing");
                                    } else {
                                        // $("#tblTermsMissing").html("<tr><td class='f_head'>No item found.</td></tr>");
                                    }
                                    //$("#tblTermsMissing").parent().show();
                                    break;
                                    //$("#tblDocumentMissing").parent().show();

                                }
                            case "OnlyMilestonesObli":
                                {
                                    if (item[keyvalue] != null && item[keyvalue] != "" && item[keyvalue] != "No item found.") {
                                        //$("#tblMilestoneMissing").html(item[keyvalue]);
                                        $("#tblMilestoneMissing").html('<a href="javascript:void(0);" data-title="' + $(item[keyvalue]).text() + '" onclick="GetContractPendingAction(true, \'Milestones\')"><img src="/Content/Images/missing-exc.png"/></a>');
                                        $("#tblMilestones").html(item[keyvalue]);
                                        DisplayMissingData.push("tblMilestoneMissing");
                                        $("#tblMilestoneMissing").parent().parent().css('display', '');
                                    } else {
                                        $("#tblMilestones").html("<tr><td class='f_head'>No Required Milestone(s) is missing.</td></tr>");
                                        $("#tblMilestoneMissing").html('');
                                        $("#tblMilestoneMissing").parent().parent().hide();
                                    }
                                    break;
                                }
                            case "OnlyMetadata":
                                {
                                    var NoItemsFound = "No item found.";
                                    if (item[keyvalue] != null && item[keyvalue] != "" && item[keyvalue] != "No item found.") {
                                        //$("#tblMetadataMissing").html(item[keyvalue]);
                                        $("#tblMetadataMissing").html('<a href="javascript:void(0);"  onclick="GetContractPendingAction(true, \'Required\')" data-title="' + $(item[keyvalue]).text() + '"><img src="/Content/Images/missing-exc.png"></a>');
                                        $("#tblRequired").html(item[keyvalue]);
                                        DisplayMissingData.push("tblMetadataMissing");
                                    } else {
                                        $("#tblMetadataMissing").html('<a href="javascript:void(0);" data-title="' + NoItemsFound + '"><img src="/Content/Images/missing-exc.png"></a>');
                                        $("#tblRequired").html("<tr><td class='f_head'>No Required Metadata is missing.</td></tr>");
                                    }
                                    break;
                                }
                            case "OnlyPeople":
                                {
                                    var NoItemsFound = "No Required People(s) are missing."
                                    if (item[keyvalue] != null && item[keyvalue] != "" && item[keyvalue] != "No item found.") {
                                        //$("#tblPeopleMissing").html(item[keyvalue]);
                                        $("#tblPeopleMissing").html('<a href="javascript:void(0);" onclick="GetContractPendingAction(true, \'Peoples\')"  data-title="' + $(item[keyvalue]).text() + '"><img src="/Content/Images/missing-exc.png"/></a>');
                                        $("#tblPeoples").html(item[keyvalue]);
                                        DisplayMissingData.push("tblPeopleMissing");
                                    } else {
                                        $("#tblPeoples").html("<tr><td class='f_head'>No Required People(s) are missing.</td></tr>");
                                        $("#tblPeopleMissing").html('<a href="javascript:void(0);" data-title="' + NoItemsFound + '"><img src="/Content/Images/missing-exc.png"/></a>');
                                    }
                                    break;
                                }
                            case "Activities":
                                {
                                    if (item[keyvalue] != null && item[keyvalue] != "" && item[keyvalue] != "<tr><td class='f_head'>No item found.</td></tr>") {
                                        $("#tblActivity").html(item[keyvalue]);
                                    } else {
                                        $("#tblActivity").html("<tr><td class='f_head'>No Pending Tasks.</td></tr>");
                                    }
                                    break;
                                }
                            case "OnlyDescription": //Added 2.4final to 2.4
                                {
                                    if (item[keyvalue] != null && item[keyvalue] != "" && item[keyvalue] != "No item found.") {

                                        //$("#tblDescriptionMissing").html(item[keyvalue]);                                        
                                        $("#tblDescriptionMissing").html('<tr><td><a href="javascript:void(0);" data-title="' + $(item[keyvalue]).text() + '"><img src="/Content/Images/missing-exc.png" style="cursor: default !important;"/></a></td></tr>');
                                        DisplayMissingData.push("tblDescriptionMissing");
                                    } else {
                                        //$("#tblDescriptionMissing").html("<tr><td class='f_head'><label title='Missing Contract Record Description.'>Missing Contract Record Description.</label></td></tr>");
                                        if (contractItem.Description == '') {
                                            $("#tblDescriptionMissing").html("<tr><td class='f_head' style='line-height: 13px !important;'><a href='javascript:void(0);' data-title='Missing Contract Record Description.'><img src='/Content/Images/missing-exc.png' style='cursor: default !important;'/></a></td></tr>");
                                            $("#lblContractDescription").css("display", "none");
                                        }
                                        else
                                            $("#lblContractDescription").css("display", "");


                                    }
                                    break;
                                }
                        }
                    }
                    if (DisplayMissingData.length > 0) {
                        $(DisplayMissingData).each(function (iDisplayMissingData, itemDisplayMissingData) {
                            $("#" + itemDisplayMissingData).parent().show();
                        });
                    } else {
                        $(".clpendingaction").css("display", "none");
                        if (contractItem.Description == '')
                            $("#tblDescriptionMissing").parent().show();
                        else
                            $("#tblDescriptionMissing").parent().hide();
                    }
                    //ENH 440 Display Alerts for Missing information
                    if (DisplayMissingData.length > 0) {
                        if (oGeneralSettings != "") {
                            if (oGeneralSettings.DisplayMissingInformation == "No") {
                                $(".clpendingaction").css("display", "none");
                            }
                        }
                        else {
                            $.ajax({
                                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/settings',
                                type: 'GET',
                                dataType: 'json',
                                headers: {
                                    'eContracts-ApiKey': localStorage.APIKey
                                },
                                cache: false,
                                success: function (data) {
                                    if (data.DisplayMissingInformation == "No") {
                                        $(".clpendingaction").css("display", "none");
                                    }
                                },
                                error: function (data) {
                                    $(".clpendingaction").css("display", "none");
                                }
                            });
                        }
                    }
                    else {
                        $(".clpendingaction").css("display", "none");
                        if (contractItem.Description == '')
                            $("#tblDescriptionMissing").parent().show();
                        else
                            $("#tblDescriptionMissing").parent().hide();
                    }

                    //var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                    //var vMissInfoFeat = $.grep(veContractFeatures, function (n, i) {
                    //    return (n.RowKey == "28" && n.Status == "ON");
                    //});
                    //if (!(vMissInfoFeat.length > 0)) {
                    //    $(".clpendingaction").css("display", "none");
                    //}
                    //ENH 440 Display Alerts for Missing information


                    ////manoj
                    //var vActions = '';
                    //ContractSettings += delayedTermDates;
                    //ContractSettings += item["ContractSettings"];
                    //StartApproval = item["StartApproval"];
                    //EditContract = item["EditContract"];
                    //JustInfo = item["JustInfo"];
                    //Activities = item["Activities"];
                    //OnlyDocuments = item["OnlyDocuments"];
                    //OnlyTerms = item["OnlyTerms"];
                    //OnlyMilestonesObli = item["OnlyMilestonesObli"];
                    //OnlyMetadata = item["OnlyMetadata"];
                    //OnlyPeople = item["OnlyPeople"];



                    //if (ContractSettings != '' && ContractSettings != 'undefined' && typeof ContractSettings != "undefined") {
                    //    $("#tblContractSettingMetadata").append(ContractSettings);
                    //} else {
                    //    $("#tblContractSettingMetadata").append("<tr><td>No pending contract settings.</td></tr>");
                    //}
                    //if (StartApproval != '' && typeof StartApproval != "undefined") {
                    //    $("#tblStartApprovalMetadata").append(StartApproval);
                    //    var DocId = $("#tblStartApprovalMetadata .DocumentRowId");
                    //    $(DocId).each(function (i, docid) {
                    //        var documId = docid.id;
                    //        if (typeof documId != "undefined") {
                    //            documId = documId.replace('DocSignMiss-', '');
                    //            if (typeof documId != "undefined" && documId != "") {
                    //                var article = "";
                    //                $.ajax({
                    //                    url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Documents/SignatureDetail?documentid=' + documId,
                    //                    type: 'GET',
                    //                    dataType: 'json',
                    //                    headers: { 'eContracts-ApiKey': localStorage.APIKey },
                    //                    cache: false,
                    //                    async: false,
                    //                    success: function (data) {
                    //                        var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                    //                        var vAccFeat = $.grep(veContractFeatures, function (n, i) {
                    //                            return (n.RowKey == "1" && n.Status == "ON");
                    //                        });
                    //                        if (vAccFeat.length > 0) {
                    //                            var num = 1;
                    //                            var vConfig = vAccFeat[0].Configuration;
                    //                            var vProvider = $(vConfig).find('Provider').text();
                    //                            if (vProvider == "Right Signature") {
                    //                                $(data).find('recipient').each(function () {
                    //                                    var issender = $(this).find('is-sender').text();
                    //                                    if (issender != 'true') {
                    //                                        var username = $(this).find('name').text();
                    //                                        var mustsign = $(this).find('must-sign').text();
                    //                                        var email = $(this).find('email').text();
                    //                                        var state = $(this).find('state').text();
                    //                                        article += '<tr>' + num + '.';
                    //                                        article += '<b>' + username + ' - ' + email + '</b> ';
                    //                                        article += '<small>(' + state + ')</small>';
                    //                                        article += '</tr>';
                    //                                        num += 1;
                    //                                    }
                    //                                });
                    //                            }
                    //                            else if (vProvider == "Echo Sign") {
                    //                                $(data).find('participants').each(function () {
                    //                                    var mustsign = $(this).find('ParticipantInfo').text();
                    //                                    var email = $(this).find('email:first').text();
                    //                                    var name = $(this).find('name:first').text();
                    //                                    article += '<tr>' + num + '.';
                    //                                    article += '<b>' + email + '</b> ';
                    //                                    article += '<small>(' + name + ')</small>';
                    //                                    article += '</tr>';
                    //                                    num += 1;
                    //                                });
                    //                            }
                    //                            else if (vProvider == "Docu Sign") {
                    //                                $(data).find('Recipients').each(function () {
                    //                                    var email = $(this).find('Email').text();
                    //                                    var name = $(this).find('UserName').text();
                    //                                    article += '<tr>' + num + '.';
                    //                                    article += '<b>' + email + '</b> ';
                    //                                    article += '<small>(' + name + ')</small>';
                    //                                    article += '</tr>';
                    //                                    num += 1;
                    //                                });
                    //                            }
                    //                        }
                    //                        var DocTd = document.getElementById('DocSignMiss-' + documId);
                    //                        if (typeof article != "undefined") {
                    //                            $(DocTd).append(article);
                    //                        }
                    //                        pendingStarted = false;
                    //                    },
                    //                    error: function (data) {
                    //                        var DocTd = document.getElementById('DocSignMiss-' + documId);
                    //                        if (typeof article != "undefined") {
                    //                            $(DocTd).append(article);
                    //                        }
                    //                        pendingStarted = false;
                    //                    }

                    //                });
                    //            }
                    //        }

                    //    });

                    //}
                    //else {
                    //    $("#tblStartApprovalMetadata").append("<tr><td>No pending/missing signee.</td></tr>");
                    //}
                    //if (EditContract != '' && typeof EditContract != "undefined") {
                    //    $("#tblEditcontractMetadata").append(EditContract);
                    //} else {
                    //    $("#tblEditcontractMetadata").append("<tr><td>No pending required fields.</td></tr>");
                    //}
                    //if (JustInfo != '' && typeof JustInfo != "undefined") {
                    //    $("#tblJustInfoMetadata").append(JustInfo);
                    //} else {
                    //    $("#tblJustInfoMetadata").append("<tr><td>No pending actions required.</td></tr>");
                    //}
                    //if (Activities != '' && typeof Activities != "undefined") {
                    //    //$("#tblActivitiesMetadata").append(Activities);
                    //    $("#tblActivity").html(Activities);
                    //} else {
                    //    //$("#tblActivitiesMetadata").append("<tr><td>No pending tasks.</td></tr>");
                    //    $("#tblActivity").html("<tr><td>No pending tasks.</td></tr>");
                    //}

                    //if (OnlyDocuments != '' && typeof OnlyDocuments != "undefined") {
                    //    var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                    //    var vDocLibFeat = $.grep(veContractFeatures, function (n, i) {
                    //        return (n.RowKey == "20" && n.Status == "ON");
                    //    });
                    //    var details = "";
                    //    if (vDocLibFeat.length > 0) {
                    //        $("#tblDocumentMissing").empty();
                    //        $("#tblDocumentMissing").append(OnlyDocuments);
                    //        $("#tblDocumentMissing").parent().show();
                    //    } else {
                    //        $("#tblDocumentMissingNormal").empty();
                    //        $("#tblDocumentMissingNormal").append(OnlyDocuments);
                    //        $("#tblDocumentMissingNormal").parent().show();
                    //    }
                    //} else {
                    //    $("#tblDocumentMissing").empty();
                    //    $("#tblDocumentMissing").parent().hide();

                    //    $("#tblDocumentMissingNormal").empty();
                    //    $("#tblDocumentMissingNormal").parent().hide();
                    //}

                    //if (OnlyTerms != '' && typeof OnlyTerms != "undefined") {
                    //    $("#tblTermsMissing").empty();
                    //    $("#tblTermsMissing").append(OnlyTerms);
                    //    $("#tblTermsMissing").parent().show();
                    //} else {
                    //    $("#tblTermsMissing").empty();
                    //    $("#tblTermsMissing").parent().hide();
                    //}

                    //if (OnlyMilestonesObli != '' && typeof OnlyMilestonesObli != "undefined") {
                    //    $("#tblMilestoneMissing").empty();
                    //    $("#tblMilestoneMissing").append(OnlyMilestonesObli);
                    //    $("#tblMilestoneMissing").parent().show();
                    //} else {
                    //    $("#tblMilestoneMissing").empty();
                    //    $("#tblMilestoneMissing").parent().hide();
                    //}

                    //if (OnlyMetadata != '' && typeof OnlyMetadata != "undefined") {
                    //    $("#tblMetadataMissing").empty();
                    //    $("#tblMetadataMissing").append(OnlyMetadata);
                    //    $("#tblMetadataMissing").parent().show();
                    //} else {
                    //    $("#tblMetadataMissing").empty();
                    //    $("#tblMetadataMissing").parent().hide();
                    //}

                    //if (OnlyPeople != '' && typeof OnlyPeople != "undefined") {
                    //    $("#tblPeopleMissing").empty();
                    //    $("#tblPeopleMissing").append(OnlyPeople);
                    //    $("#tblPeopleMissing").parent().show();
                    //} else {
                    //    $("#tblPeopleMissing").empty();
                    //    $("#tblPeopleMissing").parent().hide();
                    //}

                    if (open == true && tabname != "BindPeoples") {
                        var passdispalyid = "";
                        $(".cltabrequired").removeClass('pop_up__Acti');
                        $('.cltblrequired').css("display", "none");
                        if (typeof (tabname) != "undefined" && tabname != null && tabname != "") {
                            $("#li" + tabname).addClass('pop_up__Acti');
                            $("#tbl" + tabname).css("display", "");
                            passdispalyid = 'tbl' + tabname;
                        } else {
                            $("#liRequired").addClass('pop_up__Acti');
                            $("#tblRequired").css("display", "");
                            passdispalyid = 'tblRequired';
                        }
                        allowtoupdate(passdispalyid);
                        $("#loadingPage").fadeOut();
                        $("#dialogDelay").dialog("open");
                    } else {
                        $("#loadingPage").fadeOut();
                    }
                } else {
                    $("#loadingPage").fadeOut();
                }
            },
            error: function () {
                pendingStarted = false;
                //manoj
                $("#tblRequired").html('<tr><td>No item found.</td></tr>');
                $("#tblPeoples").html('<tr><td>No item found.</td></tr>');
                $("#tblDocuments").html('<tr><td>No item found.</td></tr>');
                $("#tblMilestones").html('<tr><td>No item found.</td></tr>');
                $("#tblActivity").html('<tr><td>No item found.</td></tr>');
                $("#tblDescription").html('<tr><td>No item found.</td></tr>');
                $("#lblContractDescription").css("display", "");
                $(".clpendingaction").css("display", "none");
                //manoj
                //$("#tblContractSettingMetadata").append("<tr><td>No pending contract settings</td></tr>");
                //$("#tblStartApprovalMetadata").append("<tr><td>no pending/missing signee.</td></tr>");
                //$("#tblEditcontractMetadata").append("<tr><td>No pending required fields.</td></tr>");
                //$("#tblJustInfoMetadata").append("<tr><td>No pending actions required.</td></tr>");
                //$("#tblActivitiesMetadata").append("<tr><td>No pending tasks.</td></tr>");
                //$("#tblDescriptionMissing").html("<tr><td>No pending tasks.</td></tr>");
                if (open == true && tabname != "BindPeoples") {
                    var passdispalyid = "";
                    $(".cltabrequired").removeClass('pop_up__Acti');
                    $('.cltblrequired').css("display", "none");
                    if (typeof (tabname) != "undefined" && tabname != null && tabname != "") {
                        $("#li" + tabname).addClass('pop_up__Acti');
                        $("#tbl" + tabname).css("display", "");
                        passdispalyid = 'tbl' + tabname;
                    } else {
                        $("#liRequired").addClass('pop_up__Acti');
                        $("#tblRequired").css("display", "");
                        passdispalyid = 'tblRequired';
                    }
                    allowtoupdate(passdispalyid);
                    $("#loadingPage").fadeOut();
                    $("#dialogDelay").dialog("open");
                } else {
                    $("#loadingPage").fadeOut();
                }
            }
        });
        //}
        //else {
        //    if (open == true) {
        //        var passdispalyid = "";
        //        $(".cltabrequired").removeClass('pop_up__Acti');
        //        $('.cltblrequired').css("display", "none");
        //        if (typeof (tabname) != "undefined" && tabname != null && tabname != "") {
        //            $("#li" + tabname).addClass('pop_up__Acti');
        //            $("#tbl" + tabname).css("display", "");
        //            passdispalyid = 'tbl' + tabname;
        //        } else {
        //            $("#liRequired").addClass('pop_up__Acti');
        //            $("#tblRequired").css("display", "");
        //            passdispalyid = 'tblRequired';
        //        }
        //        allowtoupdate(passdispalyid);
        //        $("#loadingPage").fadeOut();
        //        $("#dialogDelay").dialog("open");
        //    }
        //}
    }
    else {
        if (open == true && tabname != "BindPeoples") {
            var passdispalyid = "";
            $(".cltabrequired").removeClass('pop_up__Acti');
            $('.cltblrequired').css("display", "none");
            if (typeof (tabname) != "undefined" && tabname != null && tabname != "") {
                $("#li" + tabname).addClass('pop_up__Acti');
                $("#tbl" + tabname).css("display", "");
                passdispalyid = 'tbl' + tabname;
            } else {
                $("#liRequired").addClass('pop_up__Acti');
                $("#tblRequired").css("display", "");
                passdispalyid = 'tblRequired';
            }
            allowtoupdate(passdispalyid);
            $("#loadingPage").fadeOut();
            $("#dialogDelay").dialog("open");
        } else {
            $("#loadingPage").fadeOut();
        }
    }
}


function parseVersionsData(data) {
    var entries = {};
    var versionList = $(data).find('table.ms-settingsframe');


    versionList.find('> tbody > tr').each(function (i) {
        if (i > 0 && (i) % 2 == 0) {
            var verRow = $(this); //get version row
            var propsRow = verRow.next(); //get properties row
            var versionLabel = verRow.find('td:first').html().trim();
            if (versionLabel.length > 0) {
                entries[versionLabel] = {
                };
                //extract item version properties
                propsRow.find('tr').each(function (i) {
                    var pName = $(this).find('td:nth-child(1)').text().trim();
                    var pVal = $(this).find('td:nth-child(2)').text().trim();
                    entries[versionLabel][pName] = pVal;
                });
            }
        }

    });
    return entries;
}
function ShowMetadata() {
    $("#docMetadata").addClass('pop_up_Harizondal_meta_active');
    $("#docActivities").removeClass('pop_up_Harizondal_meta_active');
    $('#tblMetadataDetailDocument').css("display", "");
    $('#documentLogs').css("display", "none");
    $('#compact-pagination-documentLogs').css("display", "none");
    $('#idDocumentPopup').css("display", "none");

}

function ShowActivities() {

    $("#docMetadata").removeClass('pop_up_Harizondal_meta_active');
    $("#docActivities").addClass('pop_up_Harizondal_meta_active');
    $('#tblMetadataDetailDocument').css("display", "none");
    $('#documentLogs').css("display", "");
    $('#compact-pagination-documentLogs').css("display", "none");
    $('#idDocumentPopup').css("display", "");
}


function getQueryStringFromValue(url, name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
        results = regex.exec(url);
    return results == null ? url : decodeURIComponent(results[1].replace(/\+/g, " "));
}


//$('#btnAddContractDocument').click(function () {
//    AddContractDocument();
//    addbuttonclick = true;
//});

//function CreateFolder(parentFolderName) {
//    $('#treeviewFolderOption').html('<img src="../Content/Images/icon/loading.gif"> Working on it...');
//    var newurl = "";
//    newurl = vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/documents/folderstructure?documentlibrary=' + parentFolderName
//    $.ajax({
//        url: newurl,
//        type: 'GET',
//        dataType: 'json',
//        'Content-Type': 'application/json',
//        cache: false,
//        headers: { 'eContracts-ApiKey': localStorage.APIKey },
//        success: function (folder) {
//            $('#treeviewFolderOption').empty();
//            for (var xyz = 0; xyz < folder.length; xyz++) {
//                var checking = folder[xyz].Folder;
//                var checking1 = checking.split("/");
//                folder[xyz].Folder = checking1[1];
//            }
//            var inline2 = new kendo.data.HierarchicalDataSource({
//                data: folder,
//                schema: {
//                    model: {
//                        children: "childrenData"
//                    }
//                }
//            });

//            var treeview = $("#treeviewFolderOption").kendoTreeView({
//                template: kendo.template($("#treeviewFolderOption-template").html()),

//                dataSource: inline2,
//                loadOnDemand: false,
//                schema: {
//                    model: {
//                        id: "RowKey",
//                        fields: {
//                            Folder: "Folder",
//                            FolderURL: "FolderURL"
//                        }
//                    }
//                },
//                select: function (e) {
//                    e.preventDefault();
//                    var tree = $('#treeviewFolderOption').data('kendoTreeView');
//                    var dataItem = tree.dataItem(e.node);
//                    $('#txtFolderName').val(dataItem.FolderURL);

//                    var strFolderUrl = dataItem.FolderURL + "/";
//                    var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
//                    var vDocLibFeat = $.grep(veContractFeatures, function (n, i) {
//                        return (n.RowKey == "14" && n.Status == "ON");
//                    });
//                    if (vDocLibFeat.length > 0) {
//                        $('#lblFolderUrl').text('/' + $('#hdContAreaDocLibName').val() + '/' + strFolderUrl.split('/' + $('#hdContAreaDocLibName').val() + '/')[1]);
//                    }
//                    else {
//                        $('#lblFolderUrl').text('/Contract Documents/' + strFolderUrl.split('/Contract Documents/')[1]);
//                    }
//                }
//            }).data("kendoTreeView");

//            treeview.expand(".k-item");
//        },
//        error:
//            function (data) {
//                $('#treeviewFolderOption').html('No items found.');
//            }
//    });
//}


//function swap(theArray, index1, index2) {
//    var temp = theArray[index2];
//    theArray[index2] = theArray[index1];
//    theArray[index1] = temp;
//    return theArray;
//}

//Signature Signee



function getcontractareasettings(contractareaname) {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/businessarea/contractareadetailsbyname?contractareaname=' + encodeURIComponent(contractareaname),
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            thisContractAreaSettings = data;
            //if (!(thisContractAreaSettings.DocumentTypes.indexOf("Primary Agreement") > -1)) {
            //    thisContractAreaSettings.DocumentTypes = thisContractAreaSettings.DocumentTypes + ";Primary Agreement";
            //}
            //BindContractTypes()//Performance Optimization

            var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
            var vDocLibFeat = $.grep(veContractFeatures, function (n, i) {
                return (n.RowKey == "14" && n.Status == "ON");
            });
            if (vDocLibFeat.length > 0) {
                if (data.DocLibName != '' && data.DocLibCreation != "BusinessArea")//Business Area Level Library Creation
                    $('#hdContAreaDocLibName').val(data.DocLibName);
                else if (data.DocLibCreation == "BusinessArea")//Business Area Level Library Creation
                    getbusinessareasettings(contractareaname);
                else
                    $('#hdContAreaDocLibName').val('Contract Documents');
            }
            else {
                $('#hdContAreaDocLibName').val('Contract Documents');
            }
            BindDocumentTypeandTemplate();
        },
        error: function (data) {
            var vv = '';
        }
    });
}

//Business Area Level Library Creation
function getbusinessareasettings(caname) {
    var vBAName = $("#lblBusinessArea").text();
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/businessarea/detailsbyname?businessareaname=' + encodeURIComponent(vBAName)
            + '&contractareaname=' + encodeURIComponent(caname),
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            $('#hdContAreaDocLibName').val(data.DocEntityName);
        },
        error: function (data) {
            var vv = '';
        }
    });
}
//Business Area Level Library Creation

function getContractData(ContractID, tblCtrl, strDocumentTemplate, helptextvalue) {
    $('#spInProgress').css('display', '');
    $("#loadingPage").fadeIn();
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/IContractDetails?contractid=' + ContractID,
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (mainmetadataFields) {
            $('#spInProgress').css('display', 'none');
            var vMetadata = $(mainmetadataFields).find('Metadata');
            //manoj
            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracttypes/metadatas?contracttypename=' + encodeURIComponent($("#lblContractType").text()),
                type: 'GET',
                dataType: 'json',
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey
                },
                cache: false,
                success: function (metadataFieldsvaluetocheck) {
                    var metadataFieldsvalue = metadataFieldsvaluetocheck;
                    //if (getParameterByName("Stage") == "pipeline" && getParameterByName("Duplicate") == "Yes") {
                    //metadataFieldsvalue = $.grep(metadataFieldsvaluetocheck, function (n, i) {
                    //        return (n.Newform == "Show" || n.Newform == "Required");
                    //    });
                    //}
                    //manoj
                    if (strDocumentTemplate != null) {
                        $.ajax({
                            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/documents/template?templatename=' + strDocumentTemplate,
                            type: 'GET',
                            dataType: 'json',
                            'Content-Type': 'application/json',
                            cache: false,
                            headers: {
                                'eContracts-ApiKey': localStorage.APIKey
                            },
                            success: function (metadataFields) {
                                var vTransactionTypeExist = '';
                                var vContractClassExist = '';
                                var datalenght = metadataFields.length;
                                if (datalenght > 0) {
                                    var vUserList = '';
                                    $("#" + tblCtrl).empty();
                                    $("#" + tblCtrl).append("<tr><td width='100%' colspan='2' valign='top'><div class='form_categoryhead'>Auto Populate Fields <span style='font-size: 12px !important;'><img title='Autopopulate fields are mapped to place holders (content controls) in the selected Document Template. The data for these controls is automatically populated and synched with the related Contract Record when the document is created and updated. Note: Document template controls should be mapped to corresponding metadata as part of template creation.' src='../Content/Images/help_training.png'></span></div></td></tr>");
                                    //var vControls = '';
                                    var bindvaluetotemp = false;
                                    var bindfromcontype = false;
                                    for (var i = 0; i < datalenght; i++) {
                                        var item = metadataFields[i];
                                        if ((item.FieldName == "ContractType") || (item.FieldType == "File Upload")) {
                                        }
                                        else if (item.FieldName == "TransactionType")
                                        { vTransactionTypeExist = 'Yes'; }
                                        else if (item.FieldName == "ContractClass")
                                        { vContractClassExist = 'Yes'; }
                                        else {
                                            bindvaluetotemp = false;
                                            bindfromcontype = true;
                                            var vAccFeatmetadataFieldsvalue = $.grep(metadataFieldsvalue, function (nmetadata, imetadata) {
                                                return (nmetadata.FieldName == item.FieldName);
                                            });
                                            if (vAccFeatmetadataFieldsvalue.length > 0) {
                                                bindvaluetotemp = true;
                                            } else if ($(vMetadata).find(item.FieldName).length > 0) {
                                                bindvaluetotemp = true;
                                                bindfromcontype = false;
                                            }
                                            //else {

                                            //}
                                            if (bindvaluetotemp) {
                                                //display the controls which is in contract type and is mapped in template
                                                if (vAccFeatmetadataFieldsvalue[0] != undefined) {
                                                    var item = vAccFeatmetadataFieldsvalue[0];
                                                    //manoj
                                                    //if (bindfromcontype) {
                                                    var bindvaluefromcontype = ($(vMetadata).find(item.FieldName).length > 0) ? true : false;
                                                    //}
                                                    //manoj
                                                    var vControls = '<tr>';
                                                    var vDate = "";
                                                    var onlydate = "";
                                                    var vUser = "";
                                                    var vNumber = "";
                                                    var vPhoneNumber = "";
                                                    var PhoneID = "";
                                                    var PhoneCountry = "";
                                                    var vCurrency = "";
                                                    var vMultiDDL = "";
                                                    var vProject = false;
                                                    var vContractValue = false;
                                                    var vNumberD = "";
                                                    var vNumberP = "";
                                                    var vNumberPD = "";

                                                    vControls += '<td class="f_head"><label style="word-break: break-all;">' + item.FieldDisplayName;

                                                    vControls += "<img class='helpimg' src='../Content/Images/help_training.png' title='" + item.HelpText + "'></label>"
                                                    //if (item.FieldHelp == "true") {
                                                    //vControls += "<img class='helpimg' src='../Content/Images/help_training.png' title='" + item.HelpText + "'></label>"
                                                    //} else {
                                                    //  vControls += '</label>';
                                                    //}
                                                    if (item.FieldType == "User") {
                                                        vControls += '</td><td class="f_list new-Doc-Multi width50">';
                                                    } else {
                                                        vControls += '</td><td class="f_list width50">';
                                                    }

                                                    if (item.FieldType == "Single Line Text") {
                                                        //manoj
                                                        var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                        vControls += (contractvaluetobind != "") ? "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' maxlength='100' value='" + contractvaluetobind + "' class='f_inpt width80' />" : "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' maxlength='100' class='f_inpt width80' />";
                                                        //manoj
                                                        //if ($(vMetadata).find(item.FieldName).text() != "") {
                                                        //    vControls += "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' maxlength='100' value='" + $(vMetadata).find(item.FieldName).text() + "' class='f_inpt width80' />";
                                                        //} else {
                                                        //    vControls += "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' maxlength='100' class='f_inpt width80' />";
                                                        //}
                                                    }
                                                    else if (item.FieldType == "Multi Line Text") {
                                                        //manoj
                                                        var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                        vControls += (contractvaluetobind != "") ? "<textarea id='" + item.FieldName + "' name='" + item.FieldName + "' cols='40' rows='5' class='f_inpt width_91 height70'>" + contractvaluetobind + "</textarea>" : "<textarea id='" + item.FieldName + "' name='" + item.FieldName + "' cols='40' rows='5' class='f_inpt width80 height70'></textarea>";
                                                        //manoj
                                                        //if ($(vMetadata).find(item.FieldName).text() != "") {
                                                        //    vControls += "<textarea id='" + item.FieldName + "' name='" + item.FieldName + "' cols='40' rows='5' class='f_inpt width80 height70'>" + $(vMetadata).find(item.FieldName).text() + "</textarea>";
                                                        //} else {
                                                        //    vControls += "<textarea id='" + item.FieldName + "' name='" + item.FieldName + "' cols='40' rows='5' class='f_inpt width80 height70'></textarea>";
                                                        //}
                                                    }
                                                    else if (item.FieldType == "Hyperlink") {
                                                        //manoj
                                                        //for Hyperlink
                                                        var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                        vControls += (contractvaluetobind != "") ? "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' maxlength='2083' placeholder='http://www.' value='" + contractvaluetobind + "' class='f_inpt width80 validwebsite' />" : "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' placeholder='http://www.' maxlength='2083' class='f_inpt width80 validwebsite'/>";
                                                        vControls += '<a href="javascript:void(0)" class="linkText" title="' + item.FieldDisplayName + '" onclick="navigateurl(\'' + item.FieldName + '\')"> Navigate</a>';
                                                        //manoj
                                                        //if ($(vMetadata).find(item.FieldName).text() != "") {
                                                        //    vControls += "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' maxlength='100' value='" + $(vMetadata).find(item.FieldName).text() + "' class='f_inpt width80' />";
                                                        //} else {
                                                        //    vControls += "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' maxlength='100' class='f_inpt width80' />";
                                                        //}
                                                        //for Hyperlink
                                                        //manoj
                                                    }
                                                    else if (item.FieldType == "Date") {
                                                        //var vv = $(vMetadata).find(item.FieldName).text();
                                                        //manoj
                                                        var vv = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                        //manoj
                                                        onlydate = "";
                                                        if (vv != null) {
                                                            onlydate = vv.substring(0, vv.length - 19);
                                                        }

                                                        if (onlydate != "") {
                                                            if (localStorage.AppDateFormat == null || localStorage.AppDateFormat == "" || localStorage.AppDateFormat == 'undefined') {
                                                                onlydate = moment(new Date(onlydate)).format('MM/DD/YYYY');
                                                            }
                                                            else {
                                                                onlydate = moment(new Date(onlydate)).format(localStorage.AppDateFormat);
                                                            }
                                                        }
                                                        vControls += "<input type='text' readonly id='" + item.FieldName + '_' + i + "' name='" + item.FieldName + "' class='f_inpt width80 form-contro-Date-Document validdate fielddatecontrol " + item.FieldName + "'/>";


                                                        vDate = item.FieldName + '_' + i;

                                                    }
                                                    else if (item.FieldType == "Phone Number") {

                                                        var contractphonenumber = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                        PhoneCountry = "";
                                                        if (contractphonenumber != "") {
                                                            if (item.Required == "true") {
                                                                vControls += "<input type='text' id='" + item.FieldName + '_' + i + "' title='" + item.FieldDisplayName + "' value='" + contractphonenumber.split(',')[2] + "'  class='f_inpt width80 validelement validPhone fieldphonecontrol' />";
                                                            } else {
                                                                vControls += "<input type='text' id='" + item.FieldName + '_' + i + "' title='" + item.FieldDisplayName + "' value='" + contractphonenumber.split(',')[2] + "' class='f_inpt width80 validPhone fieldphonecontrol' />";
                                                            }
                                                            PhoneCountry = contractphonenumber.split(',')[0];
                                                        }
                                                        else {
                                                            if (item.Required == "true") {
                                                                vControls += "<input type='text' id='" + item.FieldName + '_' + i + "' title='" + item.FieldDisplayName + "'  class='f_inpt width80 validelement validPhone fieldphonecontrol' />";
                                                            } else {
                                                                vControls += "<input type='text' id='" + item.FieldName + '_' + i + "' title='" + item.FieldDisplayName + "'  class='f_inpt width80 validPhone fieldphonecontrol' />";
                                                            }
                                                        }

                                                        //vControls += '<label>' + item.Description + '</label>';
                                                        vControls += '</div></li>';
                                                        vPhoneNumber = vControls;
                                                        PhoneID = item.FieldName + '_' + i;

                                                    }
                                                    else if (item.FieldType == "Choice") {
                                                        vControls += "<select id='" + item.FieldName + "' name='" + item.FieldName + "' class='f_inpt width_91'>";
                                                        vControls += "<option value='0'>--Select--</option>";
                                                        if (item.FieldName == "ContractTermType") {
                                                            var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                            for (var key in TermTypeDisplayName) {
                                                                vControls += (contractvaluetobind == key) ? "<option value='" + key + "' selected>" + TermTypeDisplayName[key] + "</option>" : "<option value='" + key + "'>" + TermTypeDisplayName[key] + "</option>";
                                                            }
                                                        }
                                                        else {
                                                            var myArray = [];
                                                            myArray = item.ChoiceValues.split("\n")
                                                            //var myArraylength = myArray.length;
                                                            //manoj
                                                            var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                            $(myArray).each(function (imyArray, itemmyArray) {
                                                                itemmyArray = itemmyArray.replace(/&amp;/g, "&");
                                                                vControls += (contractvaluetobind == itemmyArray) ? "<option value='" + itemmyArray + "' selected>" + itemmyArray + "</option>" : "<option value='" + itemmyArray + "'>" + itemmyArray + "</option>";
                                                            });
                                                        }

                                                        //manoj
                                                        //for (var k = 0; k < myArraylength; k = k + 1) {
                                                        //    myArray[k] = myArray[k].replace(/&amp;/g, "&");
                                                        //    do {
                                                        //        myArray[k] = myArray[k].replace("&amp;", "&");
                                                        //    } while (myArray[k].indexOf("&amp;") > -1)


                                                        //    if ($(vMetadata).find(item.FieldName).text() == myArray[k]) {
                                                        //        vControls += "<option value='" + myArray[k] + "' selected>" + myArray[k] + "</option>";
                                                        //    } else {
                                                        //        vControls += "<option value='" + myArray[k] + "'>" + myArray[k] + "</option>";
                                                        //    }
                                                        //}

                                                        vControls += '</select>';
                                                    }
                                                    else if (item.FieldType == "User") {
                                                        vControls += "<select id='" + item.FieldName + "' name='" + item.FieldName + "' multiple='multiple' class='f_inpt width_91 " + item.FieldName + "' title='" + item.FieldDisplayName + "' data-placeholder='--Select--'>"

                                                        //vControls += "<option value='0'>--Select--</option>";
                                                        if (vUserList == '') {
                                                            vUserList = GetUserList();
                                                        }
                                                        //eO310558
                                                        //$.each(vUserList, function () {
                                                        //    vControls += $(this)[0].outerHTML;
                                                        //});

                                                        vControls += vUserList + '</select>';

                                                        vUser = item.FieldName;
                                                    } else if (item.FieldType == "Taxonomy") {
                                                        //manoj
                                                        var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                        vControls += (contractvaluetobind != "") ? "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' value='" + contractvaluetobind + "' class='f_inpt width80' readonly='readonly' type='text' />" : "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' class='f_inpt width80' readonly='readonly' type='text' />";
                                                        //manoj
                                                        //if ($(vMetadata).find(item.FieldName).text() != "") {
                                                        //    vControls += "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' value='" + $(vMetadata).find(item.FieldName).text() + "' class='f_inpt width80' readonly='readonly' type='text' />";
                                                        //} else {
                                                        //    vControls += "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' class='f_inpt width80' readonly='readonly' type='text' />";
                                                        //}

                                                        vControls += "<span class='right-float'><a href='javascript:void(0)' class='linkText' onclick='ViewBusinessArea()'> Browse</a></span>";

                                                    }
                                                    else if (item.FieldType.indexOf("Browse") > -1) {
                                                        //manoj
                                                        var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                        if (item.Required == "true") {
                                                            vControls += (contractvaluetobind != "") ? "<input id='" + item.FieldName + "' name='" + item.FieldName + "' value='" + contractvaluetobind + "' title='" + item.FieldDisplayName + "' class='f_inpt width80 validelement' readonly='readonly' type='text' />" : "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='f_inpt width80 validelement' readonly='readonly' type='text' />"
                                                        } else {
                                                            vControls += (contractvaluetobind != "") ? "<input id='" + item.FieldName + "' name='" + item.FieldName + "' value='" + contractvaluetobind + "' title='" + item.FieldDisplayName + "' class='f_inpt width80' readonly='readonly' type='text' />" : "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='f_inpt width80' readonly='readonly' type='text' />"
                                                        }
                                                        //manoj
                                                        //if (item.Required == "true") {
                                                        //    vControls += "<input id=" + item.FieldName + " name=" + item.FieldName + " value='" + $(vMetadata).find(item.FieldName).text() + "' title='" + item.FieldDisplayName + "' class='f_inpt width80 validelement' readonly='readonly' type='text' />";
                                                        //} else {
                                                        //    vControls += "<input id=" + item.FieldName + " name=" + item.FieldName + " value='" + $(vMetadata).find(item.FieldName).text() + "' title='" + item.FieldDisplayName + "' class='f_inpt width80' readonly='readonly' type='text' />";
                                                        //}
                                                        if (item.FieldHelp == "true") {
                                                            vControls += '<span class="p-text help"> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
                                                        }
                                                        vControls += "<a href='javascript:void(0)' class='linkText' id='" + item.FieldDisplayName + "' title='" + item.FieldName + "' onclick='ViewGeneric(this)'> Browse</a>";
                                                    }
                                                    else if (item.FieldType == "Lookup") {

                                                        if (item.FieldName == "Counterparty") {
                                                            var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                                                            var vAccFeat = $.grep(veContractFeatures, function (n, i) {
                                                                return (n.RowKey == "6" && n.Status == "ON");
                                                            });
                                                            var vreadonly = "";
                                                            var vbrowse = "";
                                                            if (vAccFeat.length > 0) {
                                                                vreadonly = "readonly='readonly'";
                                                                vbrowse = "<span class='right-float'><a href='javascript:void(0)' class='linkText' onclick='ViewCounterparty(\"" + item.FieldName + "\")'> Browse</a></span>";
                                                            }
                                                            //manoj
                                                            var recounterparty = new RegExp("'", 'g');
                                                            //var str = item.TypeName.replace(recounterparty, '');
                                                            var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                            if (contractvaluetobind == "Counterparty not in the list") {
                                                                $("#chkCounterpartyNotInList").attr("checked", "checked");
                                                                $("#tblCounterparties").attr('disabled', 'disabled');
                                                            }
                                                            vControls += "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' value='" + contractvaluetobind.replace(recounterparty, "&#39") + "' class='f_inpt width80' " + vreadonly + " type='text' />";

                                                            vControls += vbrowse;
                                                        }
                                                        else if (item.FieldName == "Project") {
                                                            vProject = true;
                                                            //manoj
                                                            var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                            vControls += (item.Required == "true") ? "<input id='" + item.FieldName + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "' value='" + contractvaluetobind + "' class='f_inpt width80 valid' readonly='readonly' type='text' />" : "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' value='" + contractvaluetobind + "' class='f_inpt width80' readonly='readonly' type='text' />";
                                                            //manoj
                                                            //if (item.Required == "true") {
                                                            //    vControls += "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' value='" + $(vMetadata).find(item.FieldName).text() + "' class='f_inpt width80 valid' readonly='readonly' type='text' />";
                                                            //} else {
                                                            //    vControls += "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' value='" + $(vMetadata).find(item.FieldName).text() + "' class='f_inpt width80' readonly='readonly' type='text' />";
                                                            //}
                                                            if (item.FieldHelp == "true") {
                                                                vControls += '<span class="p-text help"> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
                                                            }
                                                            vControls += "<a href='javascript:void(0)' class='linkText' onclick='ViewProjects()'> Browse</a>";
                                                            projectManager = $(vMetadata).find("ProjectManager").text()
                                                        }
                                                        else if (item.FieldName == "CompanyProfile") {
                                                            //vControls += "<select id='" + item.FieldName + "' name='" + item.FieldName + "' class='f_inpt width_91'>";
                                                            //vControls += "<option value='0'>--Select--</option>";
                                                            ////manoj
                                                            //var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                            //vControls += getcompanyprofile(contractvaluetobind) + "</select>";
                                                            ////manoj
                                                            ////vControls += getcompanyprofile($(vMetadata).find(item.FieldName).text()) + "</select>";

                                                            var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";


                                                            var reLE = new RegExp("'", 'g');
                                                            var LE = contractvaluetobind.replace(reLE, "&#39");
                                                            if (LE != "undefined" && LE != "" && LE != null) {
                                                                var AryLE = LE.split(';');
                                                                var finalLE = '';
                                                                for (var j = 0; j < AryLE.length; j++) {
                                                                    if (finalLE == "")
                                                                        finalLE = AryLE[j].trim().replace(reLE, "&#39");
                                                                    else
                                                                        finalLE += "; " + AryLE[j].trim().replace(reLE, "&#39");
                                                                }

                                                            }
                                                            if (contractvaluetobind == "")
                                                                finalLE = "";

                                                            if (item.Required == "true") {
                                                                // vControls += "<select id=" + item.FieldName + " name=" + item.FieldName + " onchange='javascript:Removetextvalues()' class='f_inpt width80 validelement'>";
                                                                vControls += "<input id='" + item.FieldName + "' value='" + finalLE + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "' class='f_inpt width80 validelement' readonly='readonly' type='text' />";
                                                            } else {
                                                                // vControls += "<select id=" + item.FieldName + " name=" + item.FieldName + " onchange='javascript:Removetextvalues()' class='f_inpt width80'>";
                                                                vControls += "<input id='" + item.FieldName + "' value='" + finalLE + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "' readonly='readonly' class='f_inpt width80' type='text' />";
                                                            }
                                                            //vControls += "<option value='0'>--Select--</option>";
                                                            vControls += "<span class='right-float'><a href='javascript:void(0)' class='linkText' onclick='ViewLegalEntity()'> Browse</a></span>";

                                                            // vControls += getcompanyprofile($(vMetadata).find(item.FieldName).text()) + "</select>";
                                                        }
                                                        else if (item.FieldName == "ContractPricingType") {
                                                            vControls += "<select id='" + item.FieldName + "' name='" + item.FieldName + "' class='f_inpt width_91'>";
                                                            vControls += "<option value='0'>--Select--</option>";
                                                            //manoj
                                                            var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                            getcontractpricingtype(contractvaluetobind);
                                                            //manoj
                                                            //getcontractpricingtype($(vMetadata).find(item.FieldName).text());
                                                        }
                                                        else if (item.FieldName == "BillingFrequency") {
                                                            vControls += "<select id='" + item.FieldName + "' name='" + item.FieldName + "' class='f_inpt width_91'>";
                                                            vControls += "<option value='0'>--Select--</option>";
                                                            //manoj
                                                            var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                            getbillingfrequency(contractvaluetobind);
                                                            //manoj
                                                            //getbillingfrequency($(vMetadata).find(item.FieldName).text());
                                                        }
                                                        else if (item.FieldName == "Status") {
                                                            vControls += "<select id='" + item.FieldName + "' name='" + item.FieldName + "' class='f_inpt width_91' readonly>";
                                                            vControls += "<option value='0'>--Select--</option>";
                                                            //manoj
                                                            var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                            vControls += getStatus(contractvaluetobind) + "</select>";
                                                            //manoj
                                                            //vControls += getStatus($(vMetadata).find(item.FieldName).text()) + "</select>";
                                                        }
                                                        else if (item.FieldName == "OriginatingParty") {
                                                            //manoj
                                                            var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                            vControls += "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' value='" + contractvaluetobind + "' class='f_inpt width80' readonly='readonly' type='text' />";
                                                            var orgpttype = "";
                                                            if (bindvaluefromcontype) {
                                                                orgpttype = $(vMetadata).find("OriginatingPartyType").text();
                                                            }
                                                            $("#txtOriginatingPartyType").val(orgpttype);
                                                            if (orgpttype == "Counterparty") {
                                                                SelectCounterparties();
                                                            }
                                                            vControls += "<span class='right-float'><a href='javascript:void(0)' class='linkText' onclick='ViewOriginatingParty()'> Browse</a></span>";
                                                        }
                                                        else if (item.FieldName == "ContractCurrency") {

                                                        }
                                                        else if (item.FieldName == "Project") {
                                                        }
                                                        else if (item.FieldName == "PaymentType") {
                                                            vControls += "<select id='" + item.FieldName + "' name='" + item.FieldName + "' class='f_inpt width_91'>";
                                                            vControls += "<option value='0'>--Select--</option>";
                                                            //manoj
                                                            var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                            vControls += getpaymenttype(contractvaluetobind) + "</select>";
                                                            //manoj
                                                            //vControls += getpaymenttype($(vMetadata).find(item.FieldName).text()) + "</select>";
                                                        }
                                                        else if (item.FieldName == "LicenceType") {
                                                            vControls += "<select id='" + item.FieldName + "' name='" + item.FieldName + "' class='f_inpt width_91'>";
                                                            vControls += "<option value='0'>--Select--</option>";
                                                            //manoj
                                                            var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                            vControls += getlicencetype(contractvaluetobind) + "</select>";
                                                            //manoj
                                                            //vControls += getlicencetype($(vMetadata).find(item.FieldName).text()) + "</select>";
                                                        }
                                                        else if (item.FieldName == "RelatedContracts") {
                                                            //manoj
                                                            oldRelatedcontract = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                            //oldRelatedcontract = $(vMetadata).find(item.FieldName).text();
                                                            //manoj
                                                            //oldRelatedcontract = $(vMetadata).find(item.FieldName).text();
                                                            if (oldRelatedcontract != "") {
                                                                SavedRelatedContract = [];
                                                                $.each(oldRelatedcontract.split(";"), function () {
                                                                    if (this != "") {
                                                                        if ($.trim(this) != "") {
                                                                            SavedRelatedContract.push($.trim(this));
                                                                        }
                                                                    }
                                                                });
                                                                oldRelatedcontract = SavedRelatedContract.join("; ");
                                                            }
                                                            if (item.Required == "true") {
                                                                vControls += "<input id='" + item.FieldName + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "' value='" + oldRelatedcontract.replace(/'/g, "&#39;") + "' class='f_inpt width_91 validelement' readonly='readonly' type='text' />";
                                                            } else {
                                                                vControls += "<input id='" + item.FieldName + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "' value='" + oldRelatedcontract.replace(/'/g, "&#39;") + "' class='f_inpt width_91' readonly='readonly' type='text' />";
                                                            }
                                                            if (item.FieldHelp == "true") {
                                                                vControls += '<span class="p-text help"> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
                                                            }
                                                            vControls += "<a href='javascript:void(0)' class='linkText' onclick='ViewRelatedContracts()'> Browse</a>";
                                                        }
                                                        else if (item.FieldName == "RelatedRequests") {
                                                            //manoj
                                                            var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                            vControls += (item.Required == "true") ? "<input id='" + item.FieldName + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "'  value='" + contractvaluetobind + "' class='f_inpt width_91 validelement' readonly='readonly' type='text' />" : "<input id='" + item.FieldName + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "'  value='" + contractvaluetobind + "' class='f_inpt width_91' readonly='readonly' type='text' />";
                                                            //manoj
                                                            //if (item.Required == "true") {
                                                            //    vControls += "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "'  value='" + $(vMetadata).find(item.FieldName).text() + "' class='f_inpt width82 validelement' readonly='readonly' type='text' />";
                                                            //} else {
                                                            //    vControls += "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "'  value='" + $(vMetadata).find(item.FieldName).text() + "' class='f_inpt width82' readonly='readonly' type='text' />";
                                                            //}
                                                            if (item.FieldHelp == "true") {
                                                                vControls += '<span class="p-text help"> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
                                                            }
                                                            vControls += "<a href='javascript:void(0)' class='linkText' onclick='ViewRelatedRequest()'> Browse</a>";
                                                        }
                                                        else {
                                                            //manoj
                                                            var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                            //manoj
                                                            vControls += "<select id='" + item.FieldName + "' name='" + item.FieldName + "' class='f_inpt width_91'>";
                                                            vControls += "<option value='0'>--Select--</option>";
                                                            $.ajax({
                                                                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/customlookupvaluedetails?lookupname=' + item.ChoiceValues,
                                                                type: 'GET',
                                                                dataType: 'json',
                                                                "Content-Type": "application/json",
                                                                headers: {
                                                                    'eContracts-ApiKey': localStorage.APIKey
                                                                },
                                                                cache: false,
                                                                async: false,
                                                                success: function (data) {
                                                                    var datalength1 = data.LookupFields.split(';');
                                                                    datalength1 = datalength1.sort();
                                                                    datalength1 = sortArrOfObjectsByParam(datalength1);
                                                                    //var datalength = datalength1.length;
                                                                    $(datalength1).each(function (idatalength1, itemdatalength1) {
                                                                        vControls += (contractvaluetobind == itemdatalength1) ? "<option value='" + itemdatalength1 + "' selected='selected'>" + itemdatalength1 + "</option>" : "<option value='" + itemdatalength1 + "'>" + itemdatalength1 + "</option>";
                                                                    });
                                                                    //for (var i = 0; i < datalength; i++) {
                                                                    //    var itemname = datalength1[i];
                                                                    //    //manoj
                                                                    //    vControls += (contractvaluetobind == itemname) ? "<option value='" + itemname + "' selected='selected'>" + itemname + "</option>" : "<option value='" + itemname + "'>" + itemname + "</option>";
                                                                    //    //manoj
                                                                    //    //if (itemname == $(vMetadata).find(item.FieldName).text()) {
                                                                    //    //    vControls += "<option value='" + itemname + "' selected='selected'>" + itemname + "</option>";
                                                                    //    //} else {
                                                                    //    //    vControls += "<option value='" + itemname + "'>" + itemname + "</option>";
                                                                    //    //}
                                                                    //}
                                                                    vControls += "</select>";
                                                                },
                                                                error: function (data) {
                                                                    vControls += "</select>";
                                                                }
                                                            });
                                                        }
                                                    } else if (item.FieldType.indexOf("Dropdown") > -1 || item.FieldType.indexOf("Multi Select") > -1) {
                                                        if (item.FieldType.indexOf("Dropdown") > -1) {
                                                            vControls += "<select id='" + item.FieldName + '_' + i + "' multiple='multiple' class='f_inpt width_91 chosenmulti' name=" + item.FieldName + " title='" + item.FieldDisplayName + "' data-placeholder='--Select--'>"
                                                            var vMultiDDL1 = "";
                                                            if (vMultiDDL1 == '') {
                                                                var myArray = [];
                                                                myArray = item.ChoiceValues.split("\n")
                                                                //var myArraylength = myArray.length;
                                                                //manoj
                                                                $(myArray).each(function (imyArray, myArraydatalength1) {
                                                                    vMultiDDL1 += "<option value='" + myArraydatalength1 + "'>" + myArraydatalength1 + "</option>";
                                                                });
                                                                //manoj
                                                                //for (var j = 0; j < myArraylength; j = j + 1) {
                                                                //    vMultiDDL1 += "<option value='" + myArray[j] + "'>" + myArray[j] + "</option>";
                                                                //}
                                                            }
                                                            vControls += vMultiDDL1;
                                                            vControls += '</select>';
                                                            vMultiDDL = item.FieldName + '_' + i;
                                                        }
                                                        else {
                                                            if (item.ChoiceValues == "Counterparty") {
                                                                var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                                                                var vAccFeat = $.grep(veContractFeatures, function (n, i) {
                                                                    return (n.RowKey == "6" && n.Status == "ON");
                                                                });
                                                                var vreadonly = "";
                                                                var vbrowse = "";
                                                                if (vAccFeat.length > 0) {
                                                                    vreadonly = "readonly='readonly'";
                                                                    vbrowse = "<span class='right-float'><a href='javascript:void(0)' class='linkText' onclick='ViewCounterparty(\"" + item.FieldName + "\")'> Browse</a></span>";
                                                                }
                                                                //manoj
                                                                var recounterparty = new RegExp("'", 'g');
                                                                //var str = item.TypeName.replace(recounterparty, '');
                                                                var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                                if (contractvaluetobind == "Counterparty not in the list") {
                                                                    $("#chkCounterpartyNotInList").attr("checked", "checked");
                                                                    $("#tblCounterparties").attr('disabled', 'disabled');
                                                                }
                                                                vControls += "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' value='" + contractvaluetobind.replace(recounterparty, "&#39") + "' class='f_inpt width80' " + vreadonly + " type='text' />";

                                                                vControls += vbrowse;
                                                            }
                                                            else {
                                                                var vMultiDDL1 = "";
                                                                if (vMultiDDL1 == '') {
                                                                    $.ajax({
                                                                        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/customlookupvaluedetails?lookupname=' + item.ChoiceValues,
                                                                        type: 'GET',
                                                                        dataType: 'json',
                                                                        "Content-Type": "application/json",
                                                                        headers: {
                                                                            'eContracts-ApiKey': localStorage.APIKey
                                                                        },
                                                                        cache: false,
                                                                        async: false,
                                                                        success: function (data) {
                                                                            var datalength1 = data.LookupFields.split(';');
                                                                            datalength1 = datalength1.sort();
                                                                            datalength1 = sortArrOfObjectsByParam(datalength1);
                                                                            var datalength = datalength1.length;
                                                                            $(datalength1).each(function (idatalength1, datalength1) {
                                                                                vMultiDDL1 += "<option value='" + datalength1 + "'>" + datalength1 + "</option>";
                                                                            });
                                                                            //for (var l = 0; l < datalength; l++) {
                                                                            //    var itemname = datalength1[l];

                                                                            //}
                                                                        }
                                                                    });
                                                                }
                                                                vControls += "<select id='" + item.FieldName + '_' + i + "' multiple='multiple' class='f_inpt width_91 chosenmulti' name=" + item.FieldName + " title='" + item.FieldDisplayName + "' data-placeholder='--Select--'>"
                                                                vControls += vMultiDDL1;
                                                                vControls += '</select>';
                                                                vMultiDDL = item.FieldName + '_' + i;
                                                            }

                                                        }

                                                    } else if (item.FieldType == "Currency" || item.FieldType == "Value / Financials") {
                                                        //manoj
                                                        var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                        //manoj
                                                        if (item.FieldName == "ContractValue") {
                                                            vContractValue = true;
                                                        }

                                                        //manoj
                                                        vControls += (contractvaluetobind != "") ? "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "' value='" + contractvaluetobind + "' class='f_inpt width80' />" : "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "' class='f_inpt width80' />";
                                                        //manoj
                                                        //if ($(vMetadata).find(item.FieldName).text() == "") {
                                                        //    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='f_inpt width80' />";
                                                        //} else {
                                                        //    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' value='" + $(vMetadata).find(item.FieldName).text() + "' class='f_inpt width80' />";
                                                        //}
                                                        vCurrency = item.FieldName;
                                                    } else if (item.FieldType == "Number") {
                                                        //manoj
                                                        var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                        vControls += (contractvaluetobind != "") ? "<input type='text' id='" + item.FieldName + "_" + i + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "' value='" + contractvaluetobind + "' class='f_inpt width80' />" : "<input type='text' id='" + item.FieldName + "_" + i + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "' class='f_inpt width80' />";
                                                        //manoj
                                                        //if ($(vMetadata).find(item.FieldName).text() == "") {
                                                        //    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='f_inpt width80' />";
                                                        //} else {
                                                        //    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' value='" + $(vMetadata).find(item.FieldName).text() + "' class='f_inpt width80' />";
                                                        //}

                                                        vNumber = item.FieldName + '_' + i;
                                                    }
                                                    else if (item.FieldType == "Number-D") {
                                                        var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                        vControls += (contractvaluetobind != "") ? "<input type='text' id='" + item.FieldName + "_" + i + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "' value='" + contractvaluetobind + "' class='f_inpt width80' />" : "<input type='text' id='" + item.FieldName + "_" + i + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "' class='f_inpt width80' />";
                                                        vNumberD = item.FieldName + '_' + i;
                                                    }
                                                        //Percent
                                                    else if (item.FieldType == "Number-P") {
                                                        var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                        vControls += (contractvaluetobind != "") ? "<input type='text' id='" + item.FieldName + "_" + i + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "' value='" + contractvaluetobind + "' class='f_inpt width80' />" : "<input type='text' id='" + item.FieldName + "_" + i + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "' class='f_inpt width80' />";
                                                        vControls += '<label class="margin-top-8" >' + '%' + '</label>';
                                                        vNumberP = item.FieldName + '_' + i;
                                                    }
                                                        // Percent Decimal
                                                    else if (item.FieldType == "Number-PD") {
                                                        var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                        vControls += (contractvaluetobind != "") ? "<input type='text' id='" + item.FieldName + "_" + i + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "' value='" + contractvaluetobind + "' class='f_inpt width80' />" : "<input type='text' id='" + item.FieldName + "_" + i + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "' class='f_inpt width80' />";
                                                        vControls += '<label class="margin-top-8" >' + '%' + '</label>';
                                                        vNumberPD = item.FieldName + '_' + i;
                                                    }
                                                    else if (item.FieldType == "Yes/No") {
                                                        //manoj
                                                        var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                        //manoj
                                                        if (contractvaluetobind == "Yes") {
                                                            vControls += "	<input type='radio' name='" + item.FieldName + "' id='Yes" + item.FieldName + "'  checked value='Yes' onchange='changeYesNoField(this);'>Yes ";
                                                            vControls += "	<input type='radio' name='" + item.FieldName + "' id='No" + item.FieldName + "' value='No' onchange='changeYesNoField(this);'>No";
                                                        }
                                                        else if (contractvaluetobind == "No") {
                                                            vControls += "	<input type='radio' name='" + item.FieldName + "' id='Yes" + item.FieldName + "' value='Yes' onchange='changeYesNoField(this);'> Yes ";
                                                            vControls += "	<input type='radio' name='" + item.FieldName + "' id='No" + item.FieldName + "' checked value='No' onchange='changeYesNoField(this);'> No";
                                                        }
                                                        else {
                                                            vControls += "	<input type='radio' name='" + item.FieldName + "' id='Yes" + item.FieldName + "' value='Yes' onchange='changeYesNoField(this);'>Yes ";
                                                            vControls += "	<input type='radio' name='" + item.FieldName + "' id='No" + item.FieldName + "' checked value='No' onchange='changeYesNoField(this);'>No";
                                                        }

                                                        //vControls += "	<input type='radio' name=" + item.FieldName + " id='Yes" + item.FieldName + "' value='Yes' onchange='changeYesNoField(this);'>Yes ";
                                                        //vControls += "	<input type='radio' name=" + item.FieldName + " id='No" + item.FieldName + "' checked value='No' onchange='changeYesNoField(this);'>No";

                                                        vControls += "	<input type='hidden' id='hdnYes" + item.FieldName + "' value=" + item.CommentYes + " />";
                                                        vControls += "	<input type='hidden' id='hdnNo" + item.FieldName + "' value=" + item.CommentNo + " />";
                                                        vControls += "	<input type='hidden' id='hdnRequired" + item.FieldName + "' value=" + item.CommentRequired + " />";
                                                        vControls += "	<input type='hidden' id='hdnHelpText" + item.FieldName + "' value=" + item.HelpText + " />";
                                                        //vControls += '<label class="col12 p-text text-left help">' + item.Description + '</label>';

                                                        if (item.CommentNo == "true" && item.CommentYes != "true") {
                                                            vControls += '</td></tr>';

                                                            if (item.CommentRequired == "true") {
                                                                vControls += '<tr><td class="f_head"><label style="word-break: break-all;">Add a Comment <span class="text-red">*</span></label>';
                                                            }
                                                            else {
                                                                vControls += '<tr><td class="f_head"><label style="word-break: break-all;">Add a Comment </label>';
                                                            }
                                                            vControls += "<img class='helpimg' src='../Content/Images/help_training.png' title='" + item.HelpText + "'></label></td>"
                                                            vControls += '<td class="f_list width50">';
                                                            if (item.CommentRequired == "true") {
                                                                if (contractvaluetobind == "No") {
                                                                    var valueField = "CustomCMD" + item.FieldName;
                                                                    vControls += "<textarea id='CustomCMD" + item.FieldName + "' name='CustomCMD" + item.FieldName + "' maxlength='500' title='" + item.FieldName + "' cols='40' rows='5' class='f_inpt width80 height70' validelement' value='" + $(vMetadata).find(valueField).text() + "'>" + $(vMetadata).find(valueField).text() + "</textarea>";
                                                                }
                                                                else {
                                                                    vControls += "<textarea id='CustomCMD" + item.FieldName + "' name='CustomCMD" + item.FieldName + "' maxlength='500' title='" + item.FieldName + "' cols='40' rows='5' class='f_inpt width80 height70' validelement'></textarea>";
                                                                }

                                                            } else {
                                                                if (contractvaluetobind == "No") {
                                                                    var valueField = "CustomCMD" + item.FieldName;
                                                                    vControls += "<textarea id='CustomCMD" + item.FieldName + "' name='CustomCMD" + item.FieldName + "' maxlength='500' title='" + item.FieldName + "' cols='40' rows='5' class='f_inpt width80 height70' value='" + $(vMetadata).find(valueField).text() + "'>" + $(vMetadata).find(valueField).text() + "</textarea>";
                                                                }
                                                                else {
                                                                    vControls += "<textarea id='CustomCMD" + item.FieldName + "' name='CustomCMD" + item.FieldName + "' maxlength='500' title='" + item.FieldName + "' cols='40' rows='5' class='f_inpt width80 height70'></textarea>";

                                                                }

                                                            }

                                                            //vControls += '</div></div>';
                                                        }
                                                        else if (item.CommentNo != "true" && item.CommentYes == "true") {

                                                            vControls += '</td></tr>';

                                                            if (item.CommentRequired == "true") {
                                                                vControls += '<tr><td class="f_head"><label style="word-break: break-all;">Add a Comment <span class="text-red">*</span></label>';
                                                            }
                                                            else {
                                                                vControls += '<tr><td class="f_head"><label style="word-break: break-all;">Add a Comment </label>';
                                                            }
                                                            vControls += "<img class='helpimg' src='../Content/Images/help_training.png' title='" + item.HelpText + "'></label></td>"
                                                            vControls += '<td class="f_list width50">';
                                                            if (item.CommentRequired == "true") {
                                                                if (contractvaluetobind == "Yes") {
                                                                    var valueField = "CustomCMD" + item.FieldName;
                                                                    vControls += "<textarea id='CustomCMD" + item.FieldName + "' name='CustomCMD" + item.FieldName + "' maxlength='500' title='" + item.FieldName + "' cols='40' rows='5' class='f_inpt width80 height70 validelement' value='" + $(vMetadata).find(valueField).text() + "'>" + $(vMetadata).find(valueField).text() + "</textarea>";
                                                                }
                                                                else {
                                                                    vControls += "<textarea id='CustomCMD" + item.FieldName + "' name='CustomCMD" + item.FieldName + "' maxlength='500' title='" + item.FieldName + "' cols='40' rows='5' class='f_inpt width80 height70 validelement'></textarea>";
                                                                }

                                                            } else {
                                                                if (contractvaluetobind == "Yes") {
                                                                    var valueField = "CustomCMD" + item.FieldName;
                                                                    vControls += "<textarea id='CustomCMD" + item.FieldName + "' name='CustomCMD" + item.FieldName + "' maxlength='500' title='" + item.FieldName + "' cols='40' rows='5' class='f_inpt width80 height70' value='" + $(vMetadata).find(valueField).text() + "'>" + $(vMetadata).find(valueField).text() + "</textarea>";
                                                                }
                                                                else {
                                                                    vControls += "<textarea id='CustomCMD" + item.FieldName + "' name='CustomCMD" + item.FieldName + "' maxlength='500' title='" + item.FieldName + "' cols='40' rows='5' class='f_inpt width80 height70'></textarea>";
                                                                }

                                                            }
                                                        }
                                                        else if (item.CommentNo == "true" && item.CommentYes == "true") {

                                                            vControls += '</td></tr>';
                                                            var valueField = "CustomCMD" + item.FieldName;
                                                            if (item.CommentRequired == "true") {
                                                                vControls += '<tr><td class="f_head"><label style="word-break: break-all;">Add a Comment <span class="text-red">*</span></label>';
                                                            }
                                                            else {
                                                                vControls += '<tr><td class="f_head"><label style="word-break: break-all;">Add a Comment </label>';
                                                            }
                                                            vControls += "<img class='helpimg' src='../Content/Images/help_training.png' title='" + item.HelpText + "'></label></td>"
                                                            vControls += '<td class="f_list width50">';
                                                            if (item.CommentRequired == "true") {
                                                                vControls += "<textarea id='CustomCMD" + item.FieldName + "' name='CustomCMD" + item.FieldName + "' maxlength='500' title='" + item.FieldName + "' cols='40' rows='5' class='f_inpt width80 height70' validelement' value='" + $(vMetadata).find(valueField).text() + "'>" + $(vMetadata).find(valueField).text() + "</textarea>";
                                                            } else {
                                                                vControls += "<textarea id='CustomCMD" + item.FieldName + "' name='CustomCMD" + item.FieldName + "' maxlength='500' title='" + item.FieldName + "' cols='40' rows='5' class='f_inpt width80 height70' value='" + $(vMetadata).find(valueField).text() + "'>" + $(vMetadata).find(valueField).text() + "</textarea>";
                                                            }
                                                        }

                                                    } else if (item.FieldType == "Email") {
                                                        //manoj
                                                        var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                        vControls += (contractvaluetobind != "") ? "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "' value='" + contractvaluetobind + "' class='f_inpt width80' />" : "<input type='text' id='" + item.FieldName + "' name='" + item.FieldName + "' title='" + item.FieldDisplayName + "' class='f_inpt width80' />";
                                                        //manoj
                                                        //if ($(vMetadata).find(item.FieldName).text() == "") {
                                                        //    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='f_inpt width80' />";
                                                        //} else {
                                                        //    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' value='" + $(vMetadata).find(item.FieldName).text() + "' class='f_inpt width80' />";
                                                        //}
                                                    }

                                                    vControls += '</td></tr>';
                                                    $("#" + tblCtrl).append(vControls);
                                                    if (vDate != "") {
                                                        if (localStorage.AppDateFormat == null || localStorage.AppDateFormat == "" || localStorage.AppDateFormat == 'undefined') {
                                                            if (onlydate != "") {
                                                                $("#" + vDate + "").datepicker({
                                                                    changeMonth: true,
                                                                    changeYear: true
                                                                });
                                                                $("#" + vDate + "").datepicker().datepicker('setDate', onlydate);
                                                            }
                                                            else {
                                                                $("#" + vDate + "").datepicker({
                                                                    changeMonth: true,
                                                                    changeYear: true
                                                                });
                                                            }
                                                        }
                                                        else {
                                                            var dateformate = localStorage.AppDateFormat.toLowerCase().slice(0, -2);
                                                            if (onlydate != "") {
                                                                $("#" + vDate + "").datepicker({
                                                                    changeMonth: true,
                                                                    changeYear: true,
                                                                    dateFormat: dateformate
                                                                });

                                                                $("#" + vDate + "").datepicker().datepicker('setDate', onlydate);
                                                            }
                                                            else {
                                                                $("#" + vDate + "").datepicker({
                                                                    changeMonth: true,
                                                                    changeYear: true,
                                                                    dateFormat: dateformate
                                                                });
                                                            }

                                                        }


                                                        vDate = "";
                                                    }

                                                    if (vNumber != "") {
                                                        allowOnlyNumberInInputBox(vNumber);
                                                        vNumber = "";
                                                    }

                                                    if (vNumberD != "") {
                                                        allowOnlyDecimalNumberInInputBox(vNumberD);
                                                        vNumberD = "";
                                                    }
                                                    if (vNumberP != "") {
                                                        allowOnlyNumberInInputBox(vNumberP);
                                                        vNumberP = "";
                                                    }
                                                    if (vNumberPD != "") {
                                                        allowOnlyDecimalNumberInInputBox(vNumberPD);
                                                        vNumberPD = "";
                                                    }

                                                    if (vPhoneNumber != "") {
                                                        bindPhoneNumberEdit(PhoneID, PhoneCountry);
                                                        vPhoneNumber = "";
                                                        PhoneID = "";
                                                        PhoneCountry = "";
                                                    }

                                                    if (vUser != "") {
                                                        $("." + vUser + "#" + vUser + "").chosen().trigger("chosen:updated");
                                                        $('.chosenmulti').on('chosen:showing_dropdown', function (evt, params) {
                                                            $('.result-selected').css('display', 'none');
                                                        });
                                                        //manoj
                                                        var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                        if (contractvaluetobind != "") {
                                                            GetValuesAndAutoPopulate(vUser, contractvaluetobind);
                                                        }
                                                        //manoj

                                                        vUser = "";
                                                    }

                                                    if (vCurrency != "") { //Bug id: eO37885 
                                                        if (vCurrencyDisplayStyle == "UK") {
                                                            $('#tblContentControls input[id=' + vCurrency + ']').autoNumeric();
                                                        } else if (vCurrencyDisplayStyle == "CAN") {
                                                            $('#tblContentControls input[id=' + vCurrency + ']').autoNumeric({
                                                                aSep: ' ', aDec: '.'
                                                            });
                                                        } else if (vCurrencyDisplayStyle == "EU") {
                                                            $('#tblContentControls input[id=' + vCurrency + ']').autoNumeric({
                                                                aSep: '.', aDec: ','
                                                            });
                                                        } else if (vCurrencyDisplayStyle == "IND") {
                                                            $('#tblContentControls input[id=' + vCurrency + ']').autoNumeric({
                                                                dGroup: '2',
                                                            });
                                                        }
                                                        vCurrency == "";
                                                    }

                                                    if (vMultiDDL != "") {

                                                        $("#" + vMultiDDL + "").chosen().trigger("chosen:updated");
                                                        $('.chosenmulti').on('chosen:showing_dropdown', function (evt, params) {
                                                            $('.result-selected').css('display', 'none');
                                                        });
                                                        //manoj
                                                        var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                        if (contractvaluetobind != "") {
                                                            GetValuesAndAutoPopulate(vMultiDDL, contractvaluetobind);
                                                        }
                                                        //if ($(vMetadata).find(item.FieldName).text() != "") {
                                                        //    GetValuesAndAutoPopulate(vMultiDDL, $(vMetadata).find(item.FieldName).text());
                                                        //}
                                                        vMultiDDL = "";
                                                    }

                                                    //If contract value is added, add contract currecncy to create form
                                                    if (vContractValue) {
                                                        var vControls = "";
                                                        $.ajax({
                                                            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/currencies',
                                                            type: 'GET',
                                                            dataType: 'json',
                                                            headers: {
                                                                'eContracts-ApiKey': localStorage.APIKey
                                                            },
                                                            cache: false,
                                                            async: false,
                                                            success: function (data) {
                                                                vControls = '<tr><td class="f_head"><label>Contract Currency</label>';
                                                                vControls += '</td><td class="f_list width50">';
                                                                vControls += "<select id='ContractCurrency' name='ContractCurrency' title='Contract Currency' class='f_inpt width_91'>";
                                                                vControls += "<option value='0'>--Select--</option>";
                                                                var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find("ContractCurrency").text() : "";
                                                                $(data).each(function (i, item) {
                                                                    //manoj
                                                                    vControls += (item.Abbreviation == contractvaluetobind) ? "<option value='" + item.Abbreviation + "' selected='selected'>" + item.Abbreviation + "</option>" : "<option value='" + item.Abbreviation + "'>" + item.Abbreviation + "</option>";
                                                                    //manoj
                                                                    //if (item.Abbreviation == contractvaluetobind) {
                                                                    //    vControls += "<option value=" + encodeURI(item.Abbreviation) + " selected='selected'>" + item.Abbreviation + "</option>";
                                                                    //}
                                                                    //else {
                                                                    //    vControls += "<option value=" + encodeURI(item.Abbreviation) + ">" + item.Abbreviation + "</option>";
                                                                    //}
                                                                });
                                                                vControls += '</select></td></tr>';
                                                            }
                                                        });

                                                        $("#" + tblCtrl).append(vControls);
                                                        vContractValue = false;
                                                    }

                                                    if (vProject) {
                                                        //manoj
                                                        var contractvaluetobindvalue = (bindvaluefromcontype) ? $(vMetadata).find(item.FieldName).text() : "";
                                                        var contractvaluetobind = (bindvaluefromcontype) ? $(vMetadata).find("ProjectTask").text() : "";
                                                        vControls = (contractvaluetobindvalue != "" || item.Required == "true") ? '<tr><td><label id="lblprojecttasktocheck">Project Tasks<span class="text-red">*</span></label></td>' : '<tr><td><label id="lblprojecttasktocheck">Project Tasks</label></td>'
                                                        vControls += (contractvaluetobindvalue != "" || item.Required == "true") ? "<td><input id='ProjectTask' name='ProjectTask' value='" + contractvaluetobind + "' title='Project Task' class='f_inpt width_91 validelement' readonly='readonly' type='text' />" : "<td><input id='ProjectTask' name='ProjectTask' value='" + contractvaluetobind + "' title='Project Task' class='f_inpt width_91' readonly='readonly' type='text' />";
                                                        vControls += "<a href='javascript:void(0)' class='linkText' onclick='ViewProjectTasks()'> Browse</a>";
                                                        vControls += '</td></tr>';
                                                        $("#" + tblCtrl).append(vControls);
                                                        vProject = false;
                                                    }
                                                } else {
                                                    var vControls = "<tr><td class='f_head'><label style='word-break: break-all;'>" + item.FieldDisplayName + "<img class='helpimg' src='../Content/Images/help_training.png' title='" + item.HelpText + "'></label></td><td class='f_list width50'>Not available</td></tr>";
                                                    $("#" + tblCtrl).append(vControls);
                                                }
                                            }
                                        }
                                    }
                                    //counterpartydetailstofetch = [];
                                    //counterpartycollection == [];
                                } else {
                                    //$("#" + helptextvalue).css('display', 'none');
                                    $("#" + tblCtrl).empty();
                                    //counterpartydetailstofetch = [];
                                    //counterpartycollection == [];
                                    swal("", "No content controls are mapped in the template.");
                                }
                                if (vTransactionTypeExist == 'Yes') {
                                    $("#trTransactionType").css("display", "");
                                }
                                if (vContractClassExist == 'Yes') {
                                    $("#trContractClass").css("display", "");
                                }

                                //$("#" + helptextvalue).css('display', '');
                                $("#loadingPage").fadeOut();


                            },
                            error:
                            function (contractfields) {
                                //$("#" + helptextvalue).css('display', 'none');
                                $("#" + tblCtrl).empty();
                                $('#spInProgress').css('display', 'none');
                                $("#loadingPage").fadeOut();
                            }
                        });
                    } else {
                        //$("#" + helptextvalue).css('display', 'none');
                        $("#" + tblCtrl).empty();
                        $('#spInProgress').css('display', 'none');
                        $("#loadingPage").fadeOut();
                    }
                    //manoj
                },
            });
        },
        error:
        function (contractfields) {
            //$("#" + helptextvalue).css('display', 'none');
            $("#" + tblCtrl).empty();
            $('#spInProgress').css('display', 'none');
            $("#loadingPage").fadeOut();
        }
    });
}
// Milestone Related Methods





//*Harshitha
function sortDescending(a, b) {
    var date1 = $(a).find("span.DateToSort").text();
    date1 = date1.replace('(', '');
    date1 = date1.replace(')', '');
    date1 = date1.replace(':', '');
    date1 = date1.replace(/ /g, '');
    date1 = date1.split('/');

    if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
        date1 = new Date(date1[2], date1[1] - 1, date1[0]);
    }
    else {
        date1 = new Date(date1[2], date1[0] - 1, date1[1]);
    }
    var date2 = $(b).find("span.DateToSort").text();
    date2 = date2.replace('(', '');
    date2 = date2.replace(')', '');
    date2 = date2.replace(':', '');
    date2 = date2.replace(/ /g, '');
    date2 = date2.split('/');

    if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
        date2 = new Date(date2[2], date2[1] - 1, date2[0]);
    }
    else {
        date2 = new Date(date2[2], date2[0] - 1, date2[1]);
    }
    return date1 > date2 ? 1 : -1;
}





function Sortreminder(SortList, Condition, Value) {
    var result = $.grep(SortList, function (e) {
        return e.Condition == Condition;
    });
    if (result == 0) {
        SortList.push({
            'Condition': Condition, 'Value': Value
        });
    }
    else {
        result[0].Value = result[0].Value + ',' + Value;
        var splitResult = result[0].Value.split(',');
        splitResult.sort(function (a, b) {
            if (isNaN(a) || isNaN(b)) {
                return a > b ? 1 : -1;
            }
            return a - b;
        });
        var JoinResult = splitResult.join();
        result[0].Value = JoinResult;
    }


}
//*Harshitha
function ReminderConditionCheck(beforeDaysSort, afterDaysSort, Contract) {
    var $rem = [Contract.RenewReminder1, Contract.RenewReminder2, Contract.RenewReminder3];
    var $remCond = [Contract.RenewReminder1Condition, Contract.RenewReminder2Condition, Contract.RenewReminder3Condition];
    $.each($remCond, function (i, item) {
        if ($rem[i] != 0 && $rem[i] != "" && $rem[i] != null) {
            var splitCond = item.split('-');
            if (splitCond[0] == 'before') {
                if (splitCond[1] != 'undefined')
                    Sortreminder(beforeDaysSort, splitCond[1], $rem[i]);
            }
            else if (splitCond[0] == 'after') {
                if (splitCond[1] != 'undefined')
                    Sortreminder(afterDaysSort, splitCond[1], $rem[i]);
            }
        }
    });
}


//*Harshitha
function DefaultGlobalsettingsDP() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/GlobalSettings?accountid=' + localStorage.AccountID,
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        contentType: 'application/json',
        cache: false,
        success: function (status) {
            //*Harshitha 
            localStorage.setItem("RestrictHighSecurityTagging", status.RestrictHighSecurityTagging);
            defaultGlobalSettings = status;
            if (status == null) {
                $("#Upcoming").css("display", "none");
                $("#Delayed").css("display", "none");
            } else {
                $("#hdRenewalRemindersGlobal").val(status.RenewalReminders);
                if (status.CreateCounterpartyDocument == "Yes") {
                    $("#Upcoming").css("display", "");
                    $("#Delayed").css("display", "");
                }
                else {
                    $("#Upcoming").css("display", "none");
                    $("#Delayed").css("display", "none");
                }
            }
        },
        error: function (status) {
            localStorage.setItem("RestrictHighSecurityTagging", "No");
        }
    });
}



function milestonecompleted(obj) {
    if (obj.value == "Yes") {
        $('#trMilestoneCompletedDate').css('display', '');
    } else {
        $('#trMilestoneCompletedDate').css('display', 'none');
        $("#dtMilestoneCompletedDate").val('');
    }
}

$('#chkContractValidity').change(function () {
    if ($(this).is(":checked")) {
        $("#imgconValidity").css('display', '');
        $("#tblContractValidity").css('display', '');
        $("#imgconValidity").attr("title", "Collapse");
        $("#imgconValidity").attr("src", "/Content/Images/e-close.png");
    } else {
        $("#imgconValidity").css('display', 'none');
        if ($("#imgconValidity").attr("title") == "Collapse") {
            $("#tblContractValidity").css('display', 'none');
        }
    }
});

$('#chkContractValue').change(function () {
    if ($(this).is(":checked")) {
        $("#imgconValue").css('display', '');
        $("#tblContractValue").css('display', '');
        $("#imgconValue").attr("title", "Collapse");
        $("#imgconValue").attr("src", "/Content/Images/e-close.png");
    } else {
        $("#imgconValue").css('display', 'none');
        if ($("#imgconValue").attr("title") == "Collapse") {
            $("#tblContractValue").css('display', 'none');
        }
    }
});

$('#chkSOW').change(function () {
    if ($(this).is(":checked")) {
        $("#imgconSOW").css('display', '');
        $("#tblSOW").css('display', '');
        $("#imgconSOW").attr("title", "Collapse");
        $("#imgconSOW").attr("src", "/Content/Images/e-close.png");
    } else {
        $("#imgconSOW").css('display', 'none');
        if ($("#imgconSOW").attr("title") == "Collapse") {
            $("#tblSOW").css('display', 'none');
        }
    }
});







// Correspondence Related Methods


//function addCorrespondence() {
//    $("#btnNewCorrespondence").click();
//}

//manoj
//For Check Contract Title Exist
function checkcontracttitle(contracttitle) {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/contracttitleexist?contracttitle=' + encodeURIComponent(contracttitle),
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (contractdetails) {
            if (typeof contractdetails != 'undefined' && contractdetails.length > 0) {//NoContent HttpStatusCode Update
                if (contractdetails[0].RowKey != getParameterByName("ContractID")) {
                    swal("", "Contract Record exists with the title <span style=\"font-weight:700\">" + $("#txtContractTitle").val() + "</span>");
                    $("#loadingPage").fadeOut();
                } else {
                    SaveContractTitle();
                }
            } else {
                SaveContractTitle();
            }
        },
        error: function () {
            SaveContractTitle();
        }
    });
}

function SaveContractTitle() {
    var applyDescription = false;
    var contractID = getParameterByName("ContractID");
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/title?contractid=' + contractID,
        type: 'PUT',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
        },
        cache: false,
        data: {
            RowKey: contractID,
            ContractTitle: $("#txtContractTitle").val(),
            Description: $("#txtContractDescription").val(),
            ModifiedBy: localStorage.UserName
        },
        success: function (data) {
            //$("#iStandardIcon").css('display', '');
            $("#aTitleEdit").css('display', '');
            if ($('#LabelsAdd').is(":hidden") && $("#hdnPermission").val() != 'View')
                $("#LabelEdit").css('display', '');

            if ($('#iStandardIcon').css('display') == 'none' && $("#hdnPermission").val() != 'View' && typeof ($("#iStandardIcon").html()) != "undefined" && $("#iStandardIcon").html() != null && $("#iStandardIcon").html() != "") {
                $("#iStandardIcon").css('display', '');
            }
            $("#aTitleCancel").css('display', 'none');
            $("#aTitleSave").css('display', 'none');
            $("#lblContractTitle").css('display', '');
            $("#lblContractDescription").css('display', '');
            $("#txtContractDescription").css('display', 'none');
            $("#txtContractTitle").css('display', 'none');

            $("#lblContractTitle").text($("#txtContractTitle").val());
            $("#lblContractDescription").text($("#txtContractDescription").val());


            contractItem.Description = $("#txtContractDescription").val();
            contractItem.ContractTitle = $("#txtContractTitle").val();
            //$("#lblContractTitle").attr('contentEditable', false);
            //$("#lblContractDescription").attr('contentEditable', false);
            if (contractItem.Description == "") {
                //$("#lblContractDescription").text("Description not available");
                //$("#lblContractDescription").addClass('cntdetails-NA');
                //$("#lblContractDescription").css("display", "none");
                $("#tblDescriptionMissing").parent().show();
                applyDescription = false;
            }
            else {
                $("#lblContractDescription").text(contractItem.Description);
                $("#lblContractDescription").removeClass('cntdetails-NA');
                $("#lblContractDescription").css("display", ""); //Bug id:eO37557
                $("#tblDescriptionMissing").parent().hide();
                applyDescription = true;
            }

            $("#lblContractTitle").css({
                "border": "",
                "background-color": "",
                "min-height": "0px",
            }).focus();
            $("#lblContractDescription").css({
                "border": "",
                "background-color": "",
                "margin-top": "0px",
                "min-height": "0px"
            });
            if (applyDescription) {
                $("#lblContractDescription").css("display", "");
            } else {
                $("#lblContractDescription").css("display", "none");
            }
            $("#loadingPage").fadeOut();
        },
        error: function () {
            $("#loadingPage").fadeOut();
        }
    });
}


function MakeTitleEditable() {
    $("#iStandardIcon").css('display', 'none');
    $("#aTitleEdit").css('display', 'none');
    $("#LabelEdit").css('display', 'none');
    $("#tblDescriptionMissing").parent().hide();
    $("#aTitleCancel").css('display', '');
    $("#aTitleSave").css('display', '');
    lblcontracttitle = $("#lblContractTitle").text();
    lblcontracttitledescription = $("#lblContractDescription").text();

    $("#lblContractTitle").css('display', 'none');
    $("#lblContractDescription").css('display', 'none');
    $("#txtContractTitle").val(lblcontracttitle);
    //$("#txtContractTitle").trigger("input");    
    if (lblcontracttitledescription.trim() == "Description not available")
        $("#txtContractDescription").val("");
    else
        $("#txtContractDescription").val(lblcontracttitledescription);

    //$("#txtContractDescription").trigger("input");
    $("#txtContractTitle").css('display', '');
    $("#txtContractDescription").css('display', '');


    //$("#lblContractTitle").attr('contentEditable', true);
    //$("#lblContractDescription").attr('contentEditable', true);

    //var excempt = [37, 38, 39, 40, 46, 8, 36, 35];
    //$("[contenteditable='true']").each(function (index, elem) {
    //    var $elem = $(elem);
    //    //var length = $elem.data('maxlength');
    //    var remaining = $elem.data('maxlength') - $elem.html().length;
    //    if (!isNaN(length)) {
    //        $elem.on('input', function (evt) {
    //            if (excempt.indexOf(evt.which) === -1 && remaining <= 0) {
    //                //$elem.text($elem.text().substring(0, length));
    //                //evt.preventDefault();
    //                return false;
    //            }
    //        });

    //    }
    //});
    //$("#lblContractTitle").css({
    //    "border-color": "#a2a2a2",
    //    "border-width": "1px",
    //    "border-style": "solid",
    //    "background-color": "#ffffff",
    //    //  "max-width": "600px"
    //    "min-height": "27px",
    //}).focus();
    //$("#lblContractDescription").css({
    //    "border-color": "#a2a2a2",
    //    "border-width": "1px",
    //    "border-style": "solid",
    //    "background-color": "#ffffff",
    //    "margin-top": "5px",
    //    "min-height": "50px",
    //    //   "max-width": "600px"
    //});
    //if ($("#lblContractDescription").hasClass("cntdetails-NA")) {
    //    $("#lblContractDescription").text('');
    //}
}

function MakeTitleSave() {
    $("#loadingPage").fadeIn();
    $("#txtContractTitle").val($("#txtContractTitle").val().trim());
    $("#txtContractDescription").val($("#txtContractDescription").val().trim());
    if (!isContainsTwoAlphabets($("#txtContractTitle").val())) {
        swal("", "Contract Record title should have a minimum of 2 alphabets.");
        $("#loadingPage").fadeOut();
    } else {
        checkcontracttitle($("#txtContractTitle").val().trim());
    }
}

function MakeTitleCancel() {
    var applyDescription = false;
    if ($('#iStandardIcon').css('display') == 'none' && $("#hdnPermission").val() != 'View' && typeof ($("#iStandardIcon").html()) != "undefined" && $("#iStandardIcon").html() != null && $("#iStandardIcon").html() != "") {
        $("#iStandardIcon").css('display', '');
    }
    $("#aTitleEdit").css('display', '');
    if ($('#LabelsAdd').is(":hidden") && $("#hdnPermission").val() != 'View')
        $("#LabelEdit").css('display', '');
    $("#aTitleCancel").css('display', 'none');
    $("#aTitleSave").css('display', 'none');

    $("#lblContractTitle").text(contractItem.ContractTitle);
    if (contractItem.Description == "") {
        $("#lblContractDescription").text("");
        $("#lblContractDescription").addClass('cntdetails-NA');
        $("#tblDescriptionMissing").parent().show();
        applyDescription = false;
    }
    else {
        $("#lblContractDescription").text(contractItem.Description);
        $("#lblContractDescription").removeClass('cntdetails-NA');
        $("#tblDescriptionMissing").parent().hide();
        applyDescription = true;
    }

    $("#lblContractTitle").css('display', '');
    $("#lblContractDescription").css('display', '');
    $("#txtContractTitle").css('display', 'none');
    $("#txtContractDescription").css('display', 'none');

    //$("#lblContractTitle").attr('contentEditable', false);
    // $("#lblContractDescription").attr('contentEditable', false);
    lblcontracttitle = "";
    lblcontracttitledescription = "";
    $("#lblContractTitle").css({
        "border": "",
        "background-color": "",
        "min-height": "0px"
    }).focus();
    $("#lblContractDescription").css({
        "border": "",
        "background-color": "",
        "margin-top": "0px",
        "min-height": "0px"
    });
    if (applyDescription) {
        $("#lblContractDescription").css("display", "");
    } else {
        $("#lblContractDescription").css("display", "none");
    }
}


function GetRenewalHistoryView(contractid) {
    $("#lblrenewalViewerror").css("display", "none");
    $("#RenewalHistoryView").dialog('open');
    GetRenewalHistory();
}


function GetRenewalHistory(contractid) {
    if (contractid == null || contractid == "") {
        contractid = vContractID;
    }
    $("#renewalViewHistoryNew").html('<img src="../Content/Images/icon/loading.gif">');
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + contractid + '/contractrenewalhistory',
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            $("#renewalHistory").empty();
            $("#renewalViewHistory").empty();
            $("#tblRenewalHistory").empty();
            //Sridhar
            $("#renewalViewHistoryNew").empty();
            var str = "";
            var strHist = "";
            var commentArr = [];
            $("#ulActivityComment").empty();
            var allTerms = [];
            var endedTerms = $.grep(data, function (itemR, i) {
                return itemR.TermStatus == "Ended"
            })

            var currentTerm = $.grep(data, function (itemR, i) {
                return itemR.TermStatus == "Current"
            })
            var expiredTerms = $.grep(data, function (itemR, i) {
                return itemR.TermStatus == "Expired" && itemR.RenewableTermName != "Initial Term"
            })

            var notStartedTerms = $.grep(data, function (itemR, i) {
                return itemR.TermStatus == "Not Started"
            })

            allTerms = allTerms.concat(endedTerms, currentTerm, expiredTerms, notStartedTerms);
            $(allTerms).each(function (i, item) {
                str += '<tr>';
                if (item.RenewableTermName != null && item.RenewableTermName != "") {
                    str += '<td style="width: 10%;">' + item.RenewableTermName + '</td>';
                }
                else {
                    str += '<td>-</td>';
                }
                if (item.RenewedDate != null) {
                    var fRenewedDate = "";
                    if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                    { fRenewedDate = moment(new Date(item.RenewedDate)).format('MM/DD/YYYY'); }
                    else {
                        fRenewedDate = moment(new Date(item.RenewedDate)).format(localStorage.AppDateFormat);
                    }
                    str += '<td>' + fRenewedDate + '</td>';
                } else {
                    str += '<td>-</td>';
                }
                if (item.TermEndDate != null) {
                    var fTermEndDate = "";
                    if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                    { fTermEndDate = moment(new Date(item.TermEndDate)).format('MM/DD/YYYY'); }
                    else {
                        fTermEndDate = moment(new Date(item.TermEndDate)).format(localStorage.AppDateFormat);
                    }
                    str += '<td>' + fTermEndDate + '</td>';
                } else {
                    str += '<td>-</td>';
                }

                if (item.TermStatus != null && item.TermStatus != "") {
                    str += '<td>' + item.TermStatus + '</td>';
                }
                else {
                    str += '<td>-</td>';
                }


                if (item.RenewedOn != null && item.RenewedOn != "") {
                    var fRenewedOn = "";
                    if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                    { fRenewedOn = moment(new Date(item.RenewedOn)).format('MM/DD/YYYY'); }
                    else {
                        fRenewedOn = moment(new Date(item.RenewedOn)).format(localStorage.AppDateFormat);
                    }
                    str += '<td>' + fRenewedOn + '</td>';
                }
                else {
                    str += '<td>-</td>';
                }

                if (item.RenewedBy != null && item.RenewedBy != "") {
                    str += '<td>' + item.RenewedBy + '</td>';
                }
                else {
                    str += '<td>-</td>';
                }

                if (item.RenewalChecklist != null && item.RenewalChecklist != "") {
                    str += '<td title="' + item.RenewalChecklist + '" style="line-height: 20px;"><span style="overflow: hidden;text-overflow: ellipsis;width: 175px;white-space: nowrap;float: left;">' + item.RenewalChecklist + '</span></td>';
                }
                else {
                    str += '<td>-</td>';
                }

                if (item.RenewalNotes != null && item.RenewalNotes != "") {
                    str += '<td title="' + item.RenewalNotes + '" style="line-height: 20px;"><span style="overflow: hidden;text-overflow: ellipsis;width: 175px;white-space: nowrap;float: left;">' + item.RenewalNotes + '</span></td>';
                }
                else {
                    str += '<td>-</td>';
                }

                str += '</tr>';

                if (item.RenewalCommentsXML == "" || item.RenewalCommentsXML == null) {
                }
                else {
                    var commentsxML = decodeURIComponent(item.RenewalCommentsXML);
                    $(commentsxML).find("RenewalComment").each(function () {
                        var dateText = $(this).find("Created").text()

                        var item = {
                            activity: $(this).find('Activity').text(),
                            comment: $(this).find('Comments').text(),
                            sendto: $(this).find('SendTo').text(),
                            created: new Date(dateText)
                            /* other properties*/
                        }
                        /* push object to array*/
                        commentArr.push(item);

                    });
                }

            });

            /* sort data*/
            if (commentArr.length > 0) {
                commentArr.sort(function (a, b) {
                    return a.created < b.created;
                });
                var htmlComment = '';
                $.each(commentArr, function (index, item) {
                    if (index < 3) {
                        htmlComment += '<li><b class="color_lightgrey"><span class="color_dark" style="float: left;width: 9%;">Activity: </span><span style="float: left;width: 88%;">' + item.activity + '</span></b><br><br><b class="color_dark float_left" style="float: left;width: 9%;">Comment: </b><div class="taskcomment"><span style="float: left;width: 88%;"> ' + item.comment + '</span></div></li>';
                    }
                    else {
                        htmlComment += '<li class="moreComments" style="display:none;"><b class="color_lightgrey"><span class="color_dark" style="float: left;width: 9%;">Activity: </span><span style="float: left;width: 88%;">' + item.activity + '</span></b><br><br><b class="color_dark float_left" style="float: left;width: 9%;">Comment: </b><div class="taskcomment"><span style="float: left;width: 88%;"> ' + item.comment + '</span></div></li>';

                    }
                });
                if (commentArr.length > 3) {
                    htmlComment += '<li style="border: none;"><a href="javascript:void(0);" onclick="showAllActivities(this)" style="color: #44a6d8;">Show Older</a></li>';
                }

                $("#ulActivityComment").append(htmlComment);
            }
            else {
                $("#ulActivityComment").empty();
                $("#ulActivityComment").append('<li style="border: none;"><b class="color_lightgrey"><span class="color_dark" style="margin-right: 20px;">No Activities found</span></b></li>');
            }
            //$("#renewalHistory").append(str);
            //*Harshitha
            $("#renewalViewHistoryNew").append(str);
            //$("#tblRenewalHistory").append(strHist);
            if (str != "") {
                $("#CurrentTermName").val('Initial Term');
                CurrentTermDetails = "";
            }
            else {
                $("#AddInitialTerm").css("display", "");
                $("#AddRenewalTerm").css("display", "none");
                var len = data.length;
                $(data).each(function (i, item) {
                    str += '<tr>';
                    if (len - 1 == i) {
                        $("#CurrentTermName").val(item.RenewableTermName);
                        CurrentTermDetails = item;
                    }
                    str += '<td>' + item.RenewableTermName + '</td>';

                    if (item.RenewedDate != null) {
                        var fRenewedDate = "";
                        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                        { fRenewedDate = moment(new Date(item.RenewedDate)).format('MM/DD/YYYY'); }
                        else {
                            fRenewedDate = moment(new Date(item.RenewedDate)).format(localStorage.AppDateFormat);
                        }
                        if (len - 1 == i)
                            str += '<td  style="width: 20%;" id="CurrentRenewalTermStart">' + fRenewedDate + '</td>';
                        else
                            str += '<td style="width: 20%;">' + fRenewedDate + '</td>';
                    } else {
                        str += '<td style="width: 20%;"></td>';
                    }
                    if (item.TermEndDate != null) {
                        var fTermEndDate = "";
                        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                        { fTermEndDate = moment(new Date(item.TermEndDate)).format('MM/DD/YYYY'); }
                        else {
                            fTermEndDate = moment(new Date(item.TermEndDate)).format(localStorage.AppDateFormat);
                        }
                        if (len - 1 == i)
                            str += '<td style="width: 20%;" id="CurrentRenewalTermEnd">' + fRenewedDate + '</td>';
                        else
                            str += '<td style="width: 20%;">' + fTermEndDate + '</td>';
                    } else {
                        str += '<td style="width: 20%;"></td>';
                    }
                    str += '<td style="width: 20%;">' + item.Status + '</td>';
                    str += '<td style="width: 20%;"> <a href="javascript:void(0)" class="linkPickerClear" onclick="GetRenewalEachDetails(' + item.RenewableTermName + ')">View Details</a>';
                    str += '</tr>';
                });
                if (str != '')
                    $("#renewalViewHistoryTerm").append(str);
                else
                    $("#renewalViewHistoryTerm").append('No History found.');

            }
            //$("#loadingPage").fadeOut();
        },
        error:
            function (data) {
                //$("#loadingPage").fadeOut();
                $("#renewalViewHistoryTerm").empty();
                $("#renewalViewHistoryTerm").append('No History found.');
            }
    });
}


function EditInitialTerm() {

    var StartInitial = $.datepicker.formatDate('mm/dd/yy', $("#CurrentRenewalTermStart").datepicker('getDate'));
    $("#CurrentRenewalTermStartlb").text(StartInitial);
}
function SaveInitialTerm() {
}
function CancelInitialTerm() {
}
function ViewTerm(term) {
}
function AddInitialTerm() {
    $("#ddlRenewalNotfInternalNew").val('');
    $("#txtRenewalNotesNew").val('');
    $('input[type="radio"][name="checkboxNotify"][value="EndDate"]').prop('checked', false);
    $("#rdRenewTermEndDate").val('');
    $('input[type="radio"][name="rdRenewTermEndDate"][value="Term"]').prop('checked', true);
    $("#ContractTermRenewNew").val(contrcatItem.ContractTerm);
    $("#ContractTermRenewChoicesNew").val('days');
    EnableContractTermRenewEndChoice();
    $("#txtRenewStartDate").val('');
    $("#txtRenewEndDate").val('');
    $("#RenewalTermNew").dialog("option", "title", "Initial Term");
    $("#RenewalTermNew").dialog("open");

}


function GetRenewalEachDetails(RenewalTerm) {
    $("#loadingPage").fadeIn();
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + vContractID + '/contractrenewalhistory',
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            $("#renewalHistory").empty();
            $("#renewalViewHistory").empty();
            $("#tblRenewalHistory").empty();
            var str = "";
            var strHist = "";
            $(data).each(function (i, item) {
                str += '<tr>';
                if (item.RenewalType != null && item.RenewalType != "") {
                    str += '<td>' + item.RenewalType + '</td>';
                }
                else {
                    str += '<td>User Initiated</td>';
                }
                if (item.RenewedDate != null) {
                    var fRenewedDate = "";
                    if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                    { fRenewedDate = moment(new Date(item.RenewedDate)).format('MM/DD/YYYY'); }
                    else {
                        fRenewedDate = moment(new Date(item.RenewedDate)).format(localStorage.AppDateFormat);
                    }
                    str += '<td>' + fRenewedDate + '</td>';
                } else {
                    str += '<td></td>';
                }
                str += '<td>' + item.RenewedBy + '</td>';
                if (item.TermEndDate != null) {
                    var fTermEndDate = "";
                    if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                    { fTermEndDate = moment(new Date(item.TermEndDate)).format('MM/DD/YYYY'); }
                    else {
                        fTermEndDate = moment(new Date(item.TermEndDate)).format(localStorage.AppDateFormat);
                    }
                    str += '<td>' + fTermEndDate + '</td>';
                } else {
                    str += '<td></td>';
                }
                str += '<td>' + item.RenewalChecklist + '</td>';
                str += '<td>' + item.RenewalNotes + '</td>';
                str += '</tr>';


                strHist += '<li>' + item.RenewalType;
                if (item.RenewedDate != null) {
                    var fRenewedDate = "";
                    if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                    { fRenewedDate = moment(new Date(item.RenewedDate)).format('MM/DD/YYYY'); }
                    else {
                        fRenewedDate = moment(new Date(item.RenewedDate)).format(localStorage.AppDateFormat);
                    }
                    strHist += ' <span class="sub-text">' + fRenewedDate + " | ";
                } else {
                    strHist += ' Not Available' + " | ";
                }
                strHist += item.RenewalNotes + '</span></li>';

            });
            $("#renewalHistory").append(str);
            //*Harshitha
            $("#renewalViewHistory").append(str);
            $("#tblRenewalHistory").append(strHist);
            if (str != "") {

                $("#lblrenewalViewerror").css("display", "none");
                $("#lblrenewalerror").css("display", "none");
            } else {
                $("#lblrenewalViewerror").css("display", "");
                $("#lblrenewalerror").css("display", "");
                $("#tblRenewalHistory").append('No items found.');
            }
            $("#loadingPage").fadeOut();
        },
        error:
            function (data) {
                $("#loadingPage").fadeOut();
                $("#lblrenewalViewerror").css("display", "");
                $("#lblrenewalerror").css("display", "");
                $("#tblRenewalHistory").append('No items found.');
            }
    });
}
function GetContractTypeDetails(contracttypename) {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracttypes?contracttypename=' + encodeURIComponent(contracttypename),
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (data) {
            if (IsApprovalSheetFeatureExits) {
                if (data.IsApprovalSheetConfigured == "Yes") {
                    IsApprovalSheetFeatureExits = true;
                    oRelatedApprovalSheets = data.RelatedApprovalSheetNames;
                    DefaultApprovalSheet = data.DefaultApprovalSheetName;
                    if (oRelatedApprovalSheets != "" && typeof (oRelatedApprovalSheets) != "undefined") {
                        BindContractApprovalSheets();
                    }
                }
                else {
                    IsApprovalSheetFeatureExits = false;
                    oRelatedApprovalSheets = "";
                }
            }
            //if (data.Renewable == "Yes") {
            //    settingRenewable = true;
            //} else {
            //    settingRenewable = false;
            //}
        }, error: function (data) {
            settingRenewable = false
        }
    });
}

function GetContractValueSetting(contRecord) {
    var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
    var vDocLibFeat = $.grep(veContractFeatures, function (n, i) {
        return (n.RowKey == "19" && n.Status == "ON");
    });
    $('#tblcontractvaluepopup tr.customfinancialfields').remove();
    $("#divfinancialsection").removeClass('col12');
    $("#divfinancialsection").removeClass('col4');
    if (vDocLibFeat.length == 0) {
        $("#divfinancialsection").addClass('col4');
        $("#divfinancialsection").html('<h3 class="f24"><span id="lblContractValue"></span><span id="lblContractCurrency" style="margin-left: 3px !important;"></span></h3><p class="sub-text">Contract Value</p>');
    } else {
        $("#divfinancialsection").addClass('col12');
        $("#divfinancialsection").html('<img src="../Content/Images/icon/loading.gif"> Please wait...');
    }
    var vContractValueSetting = '';
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/settings',
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (data) {
            //Authorize Signatory Enhancment
            setting_AuthorizeSign = data.AuthorizedSignatory;
            setting_AuthorizeSignRestriction = data.AuthSignatoryRestriction;
            //Authorize Signatory Enhancment
            SettingUserRole = data.UserRoleSetting;//Performance Optimization
            vDefaultAmendment = data.DefaultAmendment;//Performance Optimization
            oGeneralSettings = data;
            //ENH 440 Display Alerts for Missing information  
            if (data.DisplayMissingInformation == "Yes") {
                $("#tblDocumentMissing").css("display", "");
                $("#tblDocuments").css("display", "");
                $("#tblTermsMissing").css("display", "");
                $("#tblMilestoneMissing").css("display", "");
                $("#tblMilestones").css("display", "");
                $("#tblMetadataMissing").css("display", "");
                $("#tblRequired").css("display", "");
                $("#tblPeopleMissing").css("display", "");
                $("#tblPeoples").css("display", "");
                $("#tblActivity").css("display", "");
                $("#tblDescriptionMissing").css("display", "");
            }
            else {
                $("#tblDocumentMissing").css("display", "none");
                $("#tblDocuments").css("display", "none");
                $("#tblTermsMissing").css("display", "none");
                $("#tblMilestoneMissing").css("display", "none");
                $("#tblMilestones").css("display", "none");
                $("#tblMetadataMissing").css("display", "none");
                $("#tblRequired").css("display", "none");
                $("#tblPeopleMissing").css("display", "none");
                $("#tblPeoples").css("display", "none");
                $("#tblActivity").css("display", "none");
                $("#tblDescriptionMissing").css("display", "none");
                $(".clpendingaction").css("display", "none");
            }
            //ENH 440 Display Alerts for Missing information

            BindDataContractDropdownSettings(oGeneralSettings);
            //old section
            if (vDocLibFeat.length == 0) {
                vContractValueSetting = data.IsContractValueInBaseCurrency;
                if (vContractValueSetting == "Display Contract Values in Base Currency") {
                    if (data.CurrencyDisplayStyle == "UK") {
                        $('#lblContractValue').autoNumeric('init', {
                            vMax: '99999999999999999999.99'
                        });
                        $('#lblContractValue').autoNumeric('set', parseFloat(contRecord.BaseContractValue))

                        $('#txtContractValueCurrent').autoNumeric('init');
                        $('#txtContractValueCurrent').autoNumeric('set', parseFloat(contRecord.BaseContractValue))
                    } else if (data.CurrencyDisplayStyle == "CAN") {
                        $('#lblContractValue').autoNumeric('init', {
                            aSep: ' ', aDec: '.', vMax: '99999999999999999999.99'
                        });
                        $('#lblContractValue').autoNumeric('set', parseFloat(contRecord.BaseContractValue))

                        $('#txtContractValueCurrent').autoNumeric('init', {
                            aSep: ' ', aDec: '.'
                        });
                        $('#txtContractValueCurrent').autoNumeric('set', parseFloat(contRecord.BaseContractValue))
                    } else if (data.CurrencyDisplayStyle == "EU") {
                        $('#lblContractValue').autoNumeric('init', {
                            aSep: '.', aDec: ',', vMax: '99999999999999999999.99'
                        });
                        $('#lblContractValue').autoNumeric('set', parseFloat(contRecord.BaseContractValue))

                        $('#txtContractValueCurrent').autoNumeric('init', {
                            aSep: '.', aDec: ','
                        });
                        $('#txtContractValueCurrent').autoNumeric('set', parseFloat(contRecord.BaseContractValue))
                    }
                    if (contRecord.BaseContractValueCurrency != null) {
                        if (contRecord.BaseContractValueCurrency == "0") {
                            contRecord.BaseContractValueCurrency = "";
                        }
                        if (contRecord.BaseContractValueCurrency == "0") {
                            contRecord.BaseContractValueCurrency = "";
                        }
                        $("#lblContractCurrency").text(contRecord.BaseContractValueCurrency);
                        $("#lblContractCurrencyCurrent").text(contRecord.BaseContractValueCurrency);
                        ContractCurrencyType = 'base';
                    }
                }
                else {
                    ContractCurrencyType = 'actual';
                    if (data.CurrencyDisplayStyle == "UK") {
                        $('#lblContractValue').autoNumeric('init', {
                            vMax: '99999999999999999999.99'
                        });
                        $('#lblContractValue').autoNumeric('set', parseFloat(contRecord.ContractValue))

                        $('#txtContractValueCurrent').autoNumeric('init');
                        $('#txtContractValueCurrent').autoNumeric('set', contRecord.ContractValue)
                    } else if (data.CurrencyDisplayStyle == "CAN") {
                        $('#lblContractValue').autoNumeric('init', {
                            aSep: ' ', aDec: '.', vMax: '99999999999999999999.99'
                        });
                        $('#lblContractValue').autoNumeric('set', parseFloat(contRecord.ContractValue))

                        $('#txtContractValueCurrent').autoNumeric('init', {
                            aSep: ' ', aDec: '.'
                        });
                        $('#txtContractValueCurrent').autoNumeric('set', parseFloat(contRecord.ContractValue))
                    } else if (data.CurrencyDisplayStyle == "EU") {
                        $('#lblContractValue').autoNumeric('init', {
                            aSep: '.', aDec: ',', vMax: '99999999999999999999.99'
                        });
                        $('#lblContractValue').autoNumeric('set', parseFloat(contRecord.ContractValue))

                        $('#txtContractValueCurrent').autoNumeric('init', {
                            aSep: '.', aDec: ','
                        });
                        $('#txtContractValueCurrent').autoNumeric('set', parseFloat(contRecord.ContractValue))
                    }
                    if (contRecord.ContractCurrency != null) {
                        if (contRecord.ContractCurrency == "0") {
                            contRecord.ContractCurrency = "";
                        }
                        $("#lblContractCurrency").text(contRecord.ContractCurrency);
                        $("#lblContractCurrencyCurrent").text(contRecord.ContractCurrency);
                    }
                }
                if (data.CurrencyDisplayStyle == "UK") {
                    vCurrencyDisplayStyle = "UK";
                } else if (data.CurrencyDisplayStyle == "CAN") {
                    vCurrencyDisplayStyle = "CAN";
                } else if (data.CurrencyDisplayStyle == "EU") {
                    vCurrencyDisplayStyle = "EU";
                } else if (data.CurrencyDisplayStyle == "IND") {
                    vCurrencyDisplayStyle = "IND";
                }
            } else {
                //old section

                //New Section
                //manoj
                cutomFinancialFields = [];
                var financialtable = "";
                var financialtableedit = "";
                $.ajax({
                    url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracttypes/metadatas?contracttypename=' + encodeURIComponent(contRecord.ContractType),
                    type: 'GET',
                    dataType: 'json',
                    headers: {
                        'eContracts-ApiKey': localStorage.APIKey
                    },
                    cache: false,
                    //async: false,//Performance Optimization
                    success: function (metadataFields) {
                        if (metadataFields != null && metadataFields.length > 0) {
                            cutomFinancialFields = $.grep(metadataFields, function (n, i) {
                                return (n.CustomFieldsGroupName == "FinancialCustomFields");
                            });
                            if (cutomFinancialFields.length > 0) {
                                financialtable = "<table style='width: 420px;'><thead><tr><th></th><th>Base Currency</th><th>Actual Currency</th></tr></thead><tbody>";
                                $(cutomFinancialFields).each(function (i, itemfield) {
                                    financialtable += "<tr><td>" + itemfield.FieldDisplayName + "</td><td><span id='lblBase" + itemfield.FieldName + "'></span><span class='basecurrencyformat' id='lblBase" + itemfield.FieldName + "Currency'></span></td><td><span id='lblActual" + itemfield.FieldName + "'></span><span class='actualcurrencyformat' id='lblActual" + itemfield.FieldName + "Currency'></span></td></tr>";
                                    financialtableedit += "<tr class='customfinancialfields'><td class='f_head'>" + itemfield.FieldDisplayName;
                                    financialtableedit += (itemfield.Newform == "Required" || itemfield.Finalizingfrom == "Required" || itemfield.Closeoutform == "Required") ? "<small class='required'>*</small></td><td class='labelright f_list'><input id='txt" + itemfield.FieldName + "popup' name=" + itemfield.FieldName + " title=" + itemfield.FieldDisplayName + " maxlength='15' type='text' class='f_inpt width90 validelement validcontractvalue customfinancialupdate' /></td></tr>" : "</td><td class='labelright f_list'><input id='txt" + itemfield.FieldName + "popup' name=" + itemfield.FieldName + " title=" + itemfield.FieldDisplayName + " maxlength='15' type='text' class='f_inpt width90 validcontractvalue customfinancialupdate' /></td></tr>"
                                    financialtableedit += "<tr class='customfinancialfields'><td class='f_head' style='height:35px;'>" + itemfield.FieldDisplayName + " In Base Currency</td><td class='labelright'><label id='lbl" + itemfield.FieldName + "InBaseCurency' style='font-size:15px;' /></td></tr>"
                                });
                                financialtable += "</tbody></table>";
                            }
                        }
                        //Performance Optimization
                        //manoj
                        $.ajax({
                            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/IContractDetails?contractid=' + getParameterByName("ContractID"),
                            type: 'GET',
                            dataType: 'json',
                            headers: {
                                'eContracts-ApiKey': localStorage.APIKey
                            },
                            cache: false,
                            success: function (mainmetadataFields) {
                                vMetadatavaluetobindcutomFinancial = $(mainmetadataFields).find('Metadata');
                                //manoj
                                $("#divfinancialsection").html('<h3 class="f24"><span id="lblContractValue"></span><span id="lblContractCurrency" style="margin-left: 3px !important;" ></span></h3><p class="sub-text">Contract Value</p><div id="dvcontractfinacialgroup" style=" text-align: center; margin-left:150px"></div>');
                                $("#dvcontractfinacialgroup").html(financialtable);
                                if (typeof (financialtableedit) != "undefined" && financialtableedit != null && financialtableedit != "") {
                                    $(financialtableedit).insertBefore("#trcustomcontractvaluepopup");
                                }
                                financialtable = "";
                                financialtableedit = "";
                                vContractValueSetting = data.IsContractValueInBaseCurrency;
                                if (vContractValueSetting == "Display Contract Values in Base Currency") {
                                    if (data.CurrencyDisplayStyle == "UK") {
                                        $('#lblContractValue').autoNumeric('init', {
                                            vMax: '99999999999999999999.99'
                                        });
                                        $('#lblContractValue').autoNumeric('set', parseFloat(contRecord.BaseContractValue))

                                        $('#txtContractValueCurrent').autoNumeric('init');
                                        $('#txtContractValueCurrent').autoNumeric('set', parseFloat(contRecord.BaseContractValue))
                                        if ($("#ContractValue_formatted").length > 0) {
                                            $('#ContractValue_formatted').autoNumeric('init', {
                                                vMax: '99999999999999999999.99'
                                            });
                                            $("#ContractValue_formatted").autoNumeric('set', parseFloat(contRecord.ContractValue));
                                        }
                                        if ($("#BaseContractValue_formatted").length > 0) {
                                            $('#BaseContractValue_formatted').autoNumeric('init', {
                                                vMax: '99999999999999999999.99'
                                            });
                                            $("#BaseContractValue_formatted").autoNumeric('set', parseFloat(contRecord.BaseContractValue));
                                        }


                                    } else if (data.CurrencyDisplayStyle == "CAN") {
                                        $('#lblContractValue').autoNumeric('init', {
                                            aSep: ' ', aDec: '.', vMax: '99999999999999999999.99'
                                        });
                                        $('#lblContractValue').autoNumeric('set', parseFloat(contRecord.BaseContractValue))

                                        $('#txtContractValueCurrent').autoNumeric('init', {
                                            aSep: ' ', aDec: '.'
                                        });
                                        $('#txtContractValueCurrent').autoNumeric('set', parseFloat(contRecord.BaseContractValue))
                                        if ($("#ContractValue_formatted").length > 0) {
                                            $('#ContractValue_formatted').autoNumeric('init', {
                                                aSep: ' ', aDec: '.', vMax: '99999999999999999999.99'
                                            });
                                            $("#ContractValue_formatted").autoNumeric('set', parseFloat(contRecord.ContractValue));
                                        }
                                        if ($("#BaseContractValue_formatted").length > 0) {
                                            $('#BaseContractValue_formatted').autoNumeric('init', {
                                                aSep: ' ', aDec: '.', vMax: '99999999999999999999.99'
                                            });
                                            $("#BaseContractValue_formatted").autoNumeric('set', parseFloat(contRecord.BaseContractValue));
                                        }
                                    } else if (data.CurrencyDisplayStyle == "EU") {
                                        $('#lblContractValue').autoNumeric('init', {
                                            aSep: '.', aDec: ',', vMax: '99999999999999999999.99'
                                        });
                                        $('#lblContractValue').autoNumeric('set', parseFloat(contRecord.BaseContractValue))

                                        $('#txtContractValueCurrent').autoNumeric('init', {
                                            aSep: '.', aDec: ','
                                        });
                                        $('#txtContractValueCurrent').autoNumeric('set', parseFloat(contRecord.BaseContractValue))
                                        if ($("#ContractValue_formatted").length > 0) {
                                            $('#ContractValue_formatted').autoNumeric('init', {
                                                aSep: '.', aDec: ',', vMax: '99999999999999999999.99'
                                            });
                                            $("#ContractValue_formatted").autoNumeric('set', parseFloat(contRecord.ContractValue));
                                        }
                                        if ($("#BaseContractValue_formatted").length > 0) {
                                            $('#BaseContractValue_formatted').autoNumeric('init', {
                                                aSep: '.', aDec: ',', vMax: '99999999999999999999.99'
                                            });
                                            $("#BaseContractValue_formatted").autoNumeric('set', parseFloat(contRecord.BaseContractValue));
                                        }
                                    }
                                    //if (contRecord.BaseContractValueCurrency != null) {
                                    //    $("#lblContractCurrencyCurrent").text(contRecord.BaseContractValueCurrency);
                                    //    ContractCurrencyType = 'base';
                                    //}
                                    if (contRecord.BaseContractValueCurrency != null) {
                                        if (contRecord.BaseContractValueCurrency == "0") {
                                            contRecord.BaseContractValueCurrency = "";
                                        }
                                        $("#lblContractCurrency").text(contRecord.BaseContractValueCurrency);
                                        $("#lblContractCurrencyCurrent").text(contRecord.BaseContractValueCurrency);
                                        ContractCurrencyType = 'base';
                                    }
                                }
                                else {
                                    ContractCurrencyType = 'actual';
                                    if (data.CurrencyDisplayStyle == "UK") {
                                        $('#lblContractValue').autoNumeric('init', {
                                            vMax: '99999999999999999999.99'
                                        });
                                        $('#lblContractValue').autoNumeric('set', parseFloat(contRecord.ContractValue))

                                        $('#txtContractValueCurrent').autoNumeric('init');
                                        $('#txtContractValueCurrent').autoNumeric('set', parseFloat(contRecord.ContractValue))
                                        if ($("#ContractValue_formatted").length > 0) {
                                            $('#ContractValue_formatted').autoNumeric('init', {
                                                vMax: '99999999999999999999.99'
                                            });
                                            $("#ContractValue_formatted").autoNumeric('set', parseFloat(contRecord.ContractValue));
                                        }
                                        if ($("#BaseContractValue_formatted").length > 0) {
                                            $('#BaseContractValue_formatted').autoNumeric('init', {
                                                vMax: '99999999999999999999.99'
                                            });
                                            $("#BaseContractValue_formatted").autoNumeric('set', parseFloat(contRecord.BaseContractValue));
                                        }


                                    } else if (data.CurrencyDisplayStyle == "CAN") {
                                        $('#lblContractValue').autoNumeric('init', {
                                            aSep: ' ', aDec: '.', vMax: '99999999999999999999.99'
                                        });
                                        $('#lblContractValue').autoNumeric('set', parseFloat(contRecord.ContractValue))

                                        $('#txtContractValueCurrent').autoNumeric('init', {
                                            aSep: ' ', aDec: '.'
                                        });
                                        $('#txtContractValueCurrent').autoNumeric('set', parseFloat(contRecord.ContractValue))
                                        if ($("#ContractValue_formatted").length > 0) {
                                            $('#ContractValue_formatted').autoNumeric('init', {
                                                aSep: ' ', aDec: '.', vMax: '99999999999999999999.99'
                                            });
                                            $("#ContractValue_formatted").autoNumeric('set', parseFloat(contRecord.ContractValue));
                                        }
                                        if ($("#BaseContractValue_formatted").length > 0) {
                                            $('#BaseContractValue_formatted').autoNumeric('init', {
                                                aSep: ' ', aDec: '.', vMax: '99999999999999999999.99'
                                            });
                                            $("#BaseContractValue_formatted").autoNumeric('set', parseFloat(contRecord.BaseContractValue));
                                        }
                                    } else if (data.CurrencyDisplayStyle == "EU") {
                                        $('#lblContractValue').autoNumeric('init', {
                                            aSep: '.', aDec: ',', vMax: '99999999999999999999.99'
                                        });
                                        $('#lblContractValue').autoNumeric('set', parseFloat(contRecord.ContractValue))

                                        $('#txtContractValueCurrent').autoNumeric('init', {
                                            aSep: '.', aDec: ','
                                        });
                                        $('#txtContractValueCurrent').autoNumeric('set', parseFloat(contRecord.ContractValue))
                                        if ($("#ContractValue_formatted").length > 0) {
                                            $('#ContractValue_formatted').autoNumeric('init', {
                                                aSep: '.', aDec: ',', vMax: '99999999999999999999.99'
                                            });
                                            $("#ContractValue_formatted").autoNumeric('set', parseFloat(contRecord.ContractValue));
                                        }
                                        if ($("#BaseContractValue_formatted").length > 0) {
                                            $('#BaseContractValue_formatted').autoNumeric('init', {
                                                aSep: '.', aDec: ',', vMax: '99999999999999999999.99'
                                            });
                                            $("#BaseContractValue_formatted").autoNumeric('set', parseFloat(contRecord.BaseContractValue));
                                        }
                                    }
                                    //if (contRecord.ContractCurrency != null) {
                                    //    $("#lblContractCurrencyCurrent").text(contRecord.ContractCurrency);
                                    //}
                                    if (contRecord.ContractCurrency != null) {
                                        if (contRecord.ContractCurrency == "0") {
                                            contRecord.ContractCurrency = "";
                                        }
                                        $("#lblContractCurrency").text(contRecord.ContractCurrency);
                                        $("#lblContractCurrencyCurrent").text(contRecord.ContractCurrency);
                                    }
                                }
                                if (data.CurrencyDisplayStyle == "UK") {
                                    vCurrencyDisplayStyle = "UK";
                                } else if (data.CurrencyDisplayStyle == "CAN") {
                                    vCurrencyDisplayStyle = "CAN";
                                } else if (data.CurrencyDisplayStyle == "EU") {
                                    vCurrencyDisplayStyle = "EU";
                                } else if (data.CurrencyDisplayStyle == "IND") {
                                    vCurrencyDisplayStyle = "IND";
                                }

                                //manoj

                                //For  Base and Actual Currency
                                $(cutomFinancialFields).each(function (i, itemfield) {

                                    $('#txt' + itemfield.FieldName + 'popup').keypress(function (e) {
                                        if (e.keyCode == 13)
                                            return false;
                                    });

                                    if (vCurrencyDisplayStyle == "UK") {
                                        $('#lblBase' + itemfield.FieldName).autoNumeric('init', {
                                            vMax: '99999999999999999999.99'
                                        });
                                        $('#lblBase' + itemfield.FieldName).autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() : "0"));
                                        $('#lblBase' + itemfield.FieldName).append(" " + contRecord.BaseContractValueCurrency);
                                        $('#lblActual' + itemfield.FieldName).autoNumeric('init', {
                                            vMax: '99999999999999999999.99'
                                        });
                                        $('#lblActual' + itemfield.FieldName).autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() : "0"));
                                        if (contRecord.ContractCurrency == "0") {
                                            contRecord.ContractCurrency = "";
                                        }
                                        $('#lblActual' + itemfield.FieldName).append(" " + contRecord.ContractCurrency);
                                        //popupbind
                                        if (itemfield.FieldName != "ContractValue") {
                                            $('#lbl' + itemfield.FieldName + 'InBaseCurency').autoNumeric('init', {
                                                vMax: '99999999999999999999.99'
                                            });
                                            $('#lbl' + itemfield.FieldName + 'InBaseCurency').autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() : "0"));
                                            $('#lbl' + itemfield.FieldName + 'InBaseCurency').append(" " + $("#hdnBaseContractCurrency").text());
                                            $('#txt' + itemfield.FieldName + 'popup').autoNumeric('init');
                                            $('#txt' + itemfield.FieldName + 'popup').autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() : "0"));
                                        }
                                        //popupbind
                                    } else if (vCurrencyDisplayStyle == "CAN") {
                                        $('#lblBase' + itemfield.FieldName).autoNumeric('init', {
                                            aSep: ' ', aDec: '.', vMax: '99999999999999999999.99'
                                        });
                                        $('#lblBase' + itemfield.FieldName).autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() : "0"));
                                        $('#lblBase' + itemfield.FieldName).append(" " + contRecord.BaseContractValueCurrency);
                                        $('#lblActual' + itemfield.FieldName).autoNumeric('init', {
                                            aSep: ' ', aDec: '.', vMax: '99999999999999999999.99'
                                        });
                                        $('#lblActual' + itemfield.FieldName).autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() : "0"));
                                        if (contRecord.ContractCurrency == "0") {
                                            contRecord.ContractCurrency = "";
                                        }
                                        $('#lblActual' + itemfield.FieldName).append(" " + contRecord.ContractCurrency);
                                        //popupbind
                                        if (itemfield.FieldName != "ContractValue") {
                                            $('#lbl' + itemfield.FieldName + 'InBaseCurency').autoNumeric('init', {
                                                aSep: ' ', aDec: '.', vMax: '99999999999999999999.99'
                                            });
                                            $('#lbl' + itemfield.FieldName + 'InBaseCurency').autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() : "0"));
                                            $('#lbl' + itemfield.FieldName + 'InBaseCurency').append(" " + $("#hdnBaseContractCurrency").text());
                                            $('#txt' + itemfield.FieldName + 'popup').autoNumeric('init', {
                                                aSep: ' ', aDec: '.'
                                            });
                                            $('#txt' + itemfield.FieldName + 'popup').autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() : "0"));
                                        }
                                        //popupbind
                                    } else if (vCurrencyDisplayStyle == "EU") {
                                        $('#lblBase' + itemfield.FieldName).autoNumeric('init', {
                                            aSep: '.', aDec: ',', vMax: '99999999999999999999.99'
                                        });
                                        $('#lblBase' + itemfield.FieldName).autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() : "0"));
                                        $('#lblBase' + itemfield.FieldName).append(" " + contRecord.BaseContractValueCurrency);
                                        $('#lblActual' + itemfield.FieldName).autoNumeric('init', {
                                            aSep: '.', aDec: ',', vMax: '99999999999999999999.99'
                                        });
                                        $('#lblActual' + itemfield.FieldName).autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() : "0"));
                                        if (contRecord.ContractCurrency == "0") {
                                            contRecord.ContractCurrency = "";
                                        }
                                        $('#lblActual' + itemfield.FieldName).append(" " + contRecord.ContractCurrency);
                                        //popupbind
                                        if (itemfield.FieldName != "ContractValue") {
                                            $('#lbl' + itemfield.FieldName + 'InBaseCurency').autoNumeric('init', {
                                                aSep: '.', aDec: ',', vMax: '99999999999999999999.99'
                                            });
                                            $('#lbl' + itemfield.FieldName + 'InBaseCurency').autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() : "0"));
                                            $('#lbl' + itemfield.FieldName + 'InBaseCurency').append(" " + $("#hdnBaseContractCurrency").text());
                                            $('#txt' + itemfield.FieldName + 'popup').autoNumeric('init', {
                                                aSep: '.', aDec: ','
                                            });
                                            $('#txt' + itemfield.FieldName + 'popup').autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() : "0"));
                                        }
                                        //popupbind
                                    }
                                    else if (vCurrencyDisplayStyle == "IND") {
                                        $('#lblBase' + itemfield.FieldName).autoNumeric('init', {
                                            dGroup: '2', vMax: '99999999999999999999.99'
                                        });
                                        $('#lblBase' + itemfield.FieldName).autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() : "0"));
                                        $('#lblBase' + itemfield.FieldName).append(" " + contRecord.BaseContractValueCurrency);
                                        $('#lblActual' + itemfield.FieldName).autoNumeric('init', {
                                            dGroup: '2', vMax: '99999999999999999999.99'
                                        });
                                        $('#lblActual' + itemfield.FieldName).autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() : "0"));
                                        if (contRecord.ContractCurrency == "0") {
                                            contRecord.ContractCurrency = "";
                                        }
                                        $('#lblActual' + itemfield.FieldName).append(" " + contRecord.ContractCurrency);
                                        //popupbind
                                        if (itemfield.FieldName != "ContractValue") {
                                            $('#lbl' + itemfield.FieldName + 'InBaseCurency').autoNumeric('init', {
                                                dGroup: '2', vMax: '99999999999999999999.99'
                                            });
                                            $('#lbl' + itemfield.FieldName + 'InBaseCurency').autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() : "0"));
                                            $('#lbl' + itemfield.FieldName + 'InBaseCurency').append(" " + $("#hdnBaseContractCurrency").text());
                                            $('#txt' + itemfield.FieldName + 'popup').autoNumeric('init', {
                                                dGroup: '2'
                                            });
                                            $('#txt' + itemfield.FieldName + 'popup').autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() : "0"));
                                        }
                                        //popupbind
                                    }

                                    if ($('#' + itemfield.FieldName + '_formatted').length > 0) {
                                        if ($.isNumeric($('#' + itemfield.FieldName + '_formatted').html())) {
                                            if (vCurrencyDisplayStyle == "UK") {
                                                $('#' + itemfield.FieldName + '_formatted').autoNumeric();
                                            } else if (vCurrencyDisplayStyle == "CAN") {
                                                $('#' + itemfield.FieldName + '_formatted').autoNumeric({
                                                    aSep: ' ', aDec: '.'
                                                });
                                            } else if (vCurrencyDisplayStyle == "EU") {
                                                $('#' + itemfield.FieldName + '_formatted').autoNumeric({
                                                    aSep: '.', aDec: ','
                                                });
                                            } else if (vCurrencyDisplayStyle == "IND") {
                                                $('#' + itemfield.FieldName + '_formatted').autoNumeric({
                                                    dGroup: '2',
                                                });
                                            } else {
                                                $('#' + itemfield.FieldName + '_formatted').autoNumeric('init');
                                            }
                                        }
                                    }

                                });
                                //var innertextvalue = null;
                                if (contRecord.ContractCurrency != null) {
                                    //$(".actualcurrencyformat").text(contRecord.ContractCurrency);
                                    //$(".basecurrencyformat").text(contRecord.BaseContractValueCurrency);
                                }
                                //For Base and Actual Currency
                                //FinancialFields = [];
                                //manoj
                            },
                        });
                        //Performance Optimization
                    },
                    error: function (data) {
                    }
                });
            }
            //New Section
        }
    });
}

function ContractTopActions() {
    $(".m-status-btn").empty();
    var constatus = contractItem.Status;//"New";//
    BindContractTermDetail(contractItem);
    $("#spanstatus").html(constatus);
    var arrstatus = ["Ready for Signature", "Awaiting Signatures", "Signed", "Active", "Up for Renewal", "Renewed", "Extended", "On Hold", "Replaced", "Expired", "Cancelled", "Terminated", "Archived", "About to Expire"];
    if (arrstatus.indexOf(constatus) > -1) {
        Stage = '';
        $("#btnContractTermExpire").show();
    }
    else {
        Stage = 'pipeline';
    }
    if (contractItem.IsDraft == "Yes") {
        constatus = "Draft";
        $("#addActivityApproval").css('display', 'none');
        $("#RelatedContractEdit").css('display', 'none');
        $("#bNavContracts").removeClass('act-contrac');
        $("#bNavContracts").removeClass('actNav');
        $("#bNavContracts").addClass('contrac_1');
        $(".draft").css('display', 'none');
    }
    switch (constatus) {
        case "New":
            $("#idNewStatus").html('<b title="New" class="status_green_another" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/new.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            checkContractStatus();
            break;
        case "Awaiting Review":
            $("#idNewStatus").html('<b title="Awaiting Review" class="status_yellow" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/renew.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            checkContractStatus();
            break;
        case "Reviewed":
            $("#idNewStatus").html('<b title="Reviewed" class="status_blue" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/renew.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            checkContractStatus();
            break;
        case "Awaiting Approval":
            $("#idNewStatus").html('<b title="Awaiting Approval" class="status_yellow" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/renew.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            checkContractStatus();
            break;
        case "Approved":
            $("#idNewStatus").html('<b title="Approved" class="status_blue" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/tick.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            checkContractStatus();
            break;
        case "In Negotiation":
            $("#idNewStatus").html('<b title="In Negotiation" class="status_yellow" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/renew.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            checkContractStatus();
            break;
        case "Negotiation Complete":
            $("#idNewStatus").html('<b title="Negotiation Complete" class="status_blue" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/tick.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            checkContractStatus();
            break;
            //case "Aborted":
            //    $("#idNewStatus").html('<b title="Aborted" class="status_Gray" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/close.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            //    break;
        case "Ready for Signature":
            $("#idNewStatus").html('<b title="Ready for Signature" class="status_green" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/active.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            checkContractStatus();
            break;
        case "Awaiting Signatures":
            $("#idNewStatus").html('<b title="Awaiting Signature" class="status_yellow" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/renew.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            checkContractStatus();
            break;
        case "Signed":
            $("#idNewStatus").html('<b title="Signed" class="status_blue" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/tick.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            checkContractStatus();
            break;
        case "Active":
            $("#idNewStatus").html('<b title="Active" class="status_green" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/active.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            $('#tblStatusMisMatch').empty();
            $('#tblStatusMisMatch').css('display', 'none');
            break;
        case "Up for Renewal":
            $("#idNewStatus").html('<b title="Up for Renewal" class="status_red" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/exp.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            if (contractItem.EffectiveDate != null && contractItem.AutoRenew != 'No' && contractItem.ContractTermType == "Renewable" && contractItem.TermEndDate != null) {
                var effectDate = moment(new Date(contractItem.EffectiveDate));
                var termEndDate = moment(new Date(contractItem.TermEndDate));
                var currentDate = moment();

                if (effectDate <= currentDate && termEndDate > currentDate) {
                    $('#tblStatusMisMatch').css('display', '');
                    $('#tblStatusMisMatch').html('<tr class="wmessage"> <td> <a href="javascript:void(0);" data-title = "Contract has been Renewed, Update Contract Record Status" ><img src="/Content/Images/missing-exc.png" style="cursor: default !important;"></a></td </tr>');
                } else {
                    $('#tblStatusMisMatch').empty();
                    $('#tblStatusMisMatch').css('display', 'none');
                }
            }
            break;
        case "About to Expire":
            $("#idNewStatus").html('<b title="About to Expire" class="status_red" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/exp.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            if (contractItem.AutoRenew == 'No' && contractItem.ContractTermType == "Renewable" && contractItem.TermEndDate != null) {

                var termEndDate = moment(new Date(contractItem.TermEndDate));
                var currentDate = moment();

                if (termEndDate < currentDate) {
                    $('#tblStatusMisMatch').css('display', '');
                    $('#tblStatusMisMatch').html('<tr class="wmessage"> <td> <a href="javascript:void(0);" data-title="End date has passed, Update Contract Record Status" ><img src="/Content/Images/missing-exc.png" style="cursor: default !important;"></a></td </tr>');
                } else {
                    $('#tblStatusMisMatch').empty();
                    $('#tblStatusMisMatch').css('display', 'none');
                }
            }
            break;
        case "On Hold":
            $("#idNewStatus").html('<b title="On Hold" class="status_red" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/exp.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            break;
        case "Replaced":
            $("#idNewStatus").html('<b title="Replaced" class="status_Gray" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/replace.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" style="display: none;" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            break;
        case "Expired":
            $("#idNewStatus").html('<b title="Expired" class="status_Gray" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/expried.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" style="display: none;" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            $('#tblStatusMisMatch').empty();
            $('#tblStatusMisMatch').css('display', 'none');
            break;
        case "Cancelled":
            $("#idNewStatus").html('<b title="Cancelled" class="status_Gray" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/close.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" style="display: none;" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            break;
        case "Archived":
            $("#idNewStatus").html('<b title="Archived" class="status_blue" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/status/archive.png" style="padding-right:5px;">' + constatus + '<img id="btnEditStatus" style="display: none;" title="Change Status" class="Contribute" src="/Content/Images/w-edit.png"></b>');
            break;
        case "Draft":
            $("#idNewStatus").html('<b title="In Draft" class="status_Gray" style="padding: 5px 10px; color:#fff"><img src="../Content/Images/icon/Draft_icon.png" /> ' + constatus + '</b>');
            break;
    }
    var vContractStatus = ["Ready for Signature", "Awaiting Signatures", "Signed", "Active", "Up for Renewal", "Renewed", "Extended", "On Hold", "Replaced", "Expired", "Cancelled", "Terminated", "Archived", "About to Expire"];

    if (constatus == "Draft") {
        if (getParameterByName("Stage") != "" && getParameterByName("Stage") == "pipeline") {
            $("#aNavPipeline").addClass('actNav');
            $("#bNavPipeline").removeClass('pipeline_1');
            $("#bNavPipeline").addClass('act-pipeline');
            $("#aNavContracts").removeClass('actNav');
            $("#bNavContracts").addClass('contrac_1');
            $("#bNavContracts").removeClass('act-contrac');
            if (constatus == "Cancelled") {
                $('.DeleteRecord').css("display", "");
            }
        }
        else {
            $("#aNavPipeline").removeClass('actNav');
            $("#bNavPipeline").addClass('pipeline_1');
            $("#bNavPipeline").removeClass('act-pipeline');
            $("#aNavContracts").addClass('actNav');
            $("#bNavContracts").removeClass('contrac_1');
            $("#bNavContracts").addClass('act-contrac');
        }
    }
        //else if (MakeFinalized != "Yes") {
    else {
        if (($.inArray(constatus, vContractStatus) < 0 || constatus == "Cancelled") && ((contractItem.FinalizedBy == null || contractItem.FinalizedBy == ""))) {
            $("#aNavPipeline").addClass('actNav');
            $("#bNavPipeline").removeClass('pipeline_1');
            $("#bNavPipeline").addClass('act-pipeline');
            $("#aNavContracts").removeClass('actNav');
            $("#bNavContracts").addClass('contrac_1');
            $("#bNavContracts").removeClass('act-contrac');
            if (constatus == "Cancelled") {
                $('.DeleteRecord').css("display", "");
            }
        } else {
            $("#aNavPipeline").removeClass('actNav');
            $("#bNavPipeline").addClass('pipeline_1');
            $("#bNavPipeline").removeClass('act-pipeline');
            $("#aNavContracts").addClass('actNav');
            $("#bNavContracts").removeClass('contrac_1');
            $("#bNavContracts").addClass('act-contrac');
        }
    }

    if (constatus != "0" && constatus != "" && constatus != "undefined") {
        if ($("#hdnPermission").val() != "View" && $("#hdnPermission").val() != "" && $("#hdnPermission").val() != null) {
            $("#topAction1").css("display", "");
            $("#topAction2").css("display", "");
            if (constatus == "New") {
                $("#topAction1").html('Add Document');
                $("#topAction2").html('Add Milestone');
                $("#topAction1").attr('onclick', 'AddContractDocument();');
                $("#topAction2").attr('onclick', 'AddMilestoneMoreNew();');
            }
            else if (constatus == "Drafting") {
                $("#topAction1").html('Add Document');
                $("#topAction2").html('Start Approval');
                $("#topAction1").attr('onclick', 'AddContractDocument();');
                $("#topAction2").attr('onclick', 'contextMenuContractSettings("approve","","");');
            }
            else if (constatus == "Awaiting Review") {
                $("#topAction1").html('Add Document');
                $("#topAction2").html('Edit Metadata');
                $("#topAction1").attr('onclick', 'AddContractDocument();');
                $("#topAction2").attr('onclick', 'contextMenuContractSettings("edit","","");');
            }
            else if (constatus == "Reviewed") {
                $("#topAction1").html('Start Approval');
                $("#topAction1").attr('onclick', 'contextMenuContractSettings("approve","","");');
                var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                var vAccFeat = $.grep(veContractFeatures, function (n, i) {
                    return (n.RowKey == "9" && n.Status == "ON");
                });
                if (vAccFeat.length > 0) {
                    $("#topAction2").html('Share Contract Record');
                    $("#topAction2").attr('onclick', 'contextMenuContractSettings("share","","");');
                }
                else {
                    $("#topAction2").css("display", "none");
                }
            }
            else if (constatus == "Awaiting Approval") {
                var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                var vAccFeat = $.grep(veContractFeatures, function (n, i) {
                    return (n.RowKey == "9" && n.Status == "ON");
                });
                if (vAccFeat.length > 0) {
                    $("#topAction1").html('Share Contract Record');
                    $("#topAction1").attr('onclick', 'contextMenuContractSettings("share","","");');
                }
                else {
                    $("#topAction1").css("display", "none");
                }
                if ($("#hdnPermission").val() == "Manage") {
                    $("#topAction2").html('Add Related Contract Record(s)');
                    $("#topAction2").attr('onclick', 'AddRelatedContracts();');
                }
                else {
                    $("#topAction2").css("display", "none");
                }
            }
            else if (constatus == "Approved") {
                $("#topAction1").html('Add Document');
                $("#topAction1").attr('onclick', 'AddContractDocument();');
                var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                var vAccFeat = $.grep(veContractFeatures, function (n, i) {
                    return (n.RowKey == "9" && n.Status == "ON");
                });
                if (vAccFeat.length > 0) {
                    $("#topAction2").html('Share Contract Record');
                    $("#topAction2").attr('onclick', 'contextMenuContractSettings("share","","");');
                } else {
                    $("#topAction2").css("display", "none");
                }
            }
            else if (constatus == "In Negotiation") {
                var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                var vAccFeat = $.grep(veContractFeatures, function (n, i) {
                    return (n.RowKey == "9" && n.Status == "ON");
                });
                if (vAccFeat.length > 0) {
                    $("#topAction1").html('Share Contract Record');
                    $("#topAction1").attr('onclick', 'contextMenuContractSettings("share","","");');
                }
                else {
                    $("#topAction1").css("display", "none");
                }
                if ($("#hdnPermission").val() == "Manage") {
                    if (contractItem.IsStandard == "Yes") {
                        $("#topAction2").css("display", "none");
                        //$("#topAction2").html('Mark as Non-Standard');
                        //$("#topAction2").attr('onclick', 'contextMenuContractSettings("nonstandard","","");');
                    }
                    else {
                        $("#topAction2").css("display", "none");
                        //$("#topAction2").html('Mark as Standard');
                        //$("#topAction2").attr('onclick', 'contextMenuContractSettings("standard","","");');
                    }
                }
                else {
                    $("#topAction2").css("display", "none");
                }
            }
            else if (constatus == "Negotiation Complete") {
                $("#topAction1").html('Start Approval');
                $("#topAction1").attr('onclick', 'contextMenuContractSettings("approve","","");');
                if ($("#hdnPermission").val() == "Manage") {
                    if (contractItem.IsStandard == "Yes") {
                        $("#topAction2").css("display", "none");
                        //$("#topAction2").html('Mark as Non-Standard');
                        //$("#topAction2").attr('onclick', 'contextMenuContractSettings("nonstandard","","");');
                    }
                    else {
                        $("#topAction2").css("display", "none");
                        //$("#topAction2").html('Mark as Standard');
                        //$("#topAction2").attr('onclick', 'contextMenuContractSettings("standard","","");');
                    }
                }
                else {
                    $("#topAction2").css("display", "none");
                }
            }
            else if (constatus == "Awaiting Signatures" || constatus == "Ready for Signature") {
                if ($("#hdnPermission").val() == "Manage") {
                    $("#topAction1").html('Add Related Contract Record(s)');
                    $("#topAction2").html('Manage Permission');
                    $("#topAction1").attr('onclick', 'AddRelatedContracts();');
                    $("#topAction2").attr('onclick', 'contextMenuContractSettings("permission","","");');
                }
                else {
                    if ($("#topAction1").html() == "") {
                        $("#topAction1").css("display", "none");
                    }
                    $("#topAction2").css("display", "none");
                }
            }
            else if (constatus == "Signed") {
                if ($("#hdnPermission").val() == "Manage") {
                    $("#topAction1").html('Manage Permission');
                    $("#topAction1").attr('onclick', 'contextMenuContractSettings("permission","","");');
                    $("#topAction2").html('Term Settings');
                    $("#topAction2").attr('onclick', 'contextMenuTerm("manage","","");');
                }
                else {
                    $("#topAction1").css("display", "none");
                    $("#topAction2").css("display", "none");
                }
            }
            else if (constatus == "Active") {
                $("#topAction1").html('Add Amendment');
                $("#topAction1").attr('onclick', 'AddAmendmentMore();');
                if ($("#hdnPermission").val() == "Manage") {
                    $("#topAction2").html('Manage Permission');
                    $("#topAction2").attr('onclick', 'contextMenuContractSettings("permission","","");');
                }
                else {
                    $("#topAction2").css("display", "none");
                }
            }
            else if (constatus == "Up for Renewal") {
                $("#topAction1").html('Add Amendment');
                $("#topAction1").attr('onclick', 'AddAmendmentMore();');
                if ($("#hdnPermission").val() == "Manage") {
                    $("#topAction2").html('Term Settings');
                    $("#topAction2").attr('onclick', 'contextMenuTerm("manage","","");');
                }
                else {
                    $("#topAction2").css("display", "none");
                }
            }
            else if (constatus == "Renewed") {
                $("#topAction1").html('Add Amendment');
                $("#topAction1").attr('onclick', 'AddAmendmentMore();');
                if ($("#hdnPermission").val() == "Manage") {
                    $("#topAction2").html('Manage Permission');
                    $("#topAction2").attr('onclick', 'contextMenuContractSettings("permission","","");');
                }
                else {
                    $("#topAction2").css("display", "none");
                }
            }
            else if (constatus == "Extended") {
                $("#topAction1").html('Add Amendment');
                $("#topAction1").attr('onclick', 'AddAmendmentMore();');
                if ($("#hdnPermission").val() == "Manage") {
                    $("#topAction2").html('Manage Permission');
                    $("#topAction2").attr('onclick', 'contextMenuContractSettings("permission","","");');
                }
                else {
                    $("#topAction2").css("display", "none");
                }
            }
            else if (constatus == "About to Expire") {
                $("#topAction1").html('Start Approval');
                $("#topAction2").html('Add Amendment');
                $("#topAction1").attr('onclick', 'contextMenuContractSettings("approve","","");');
                $("#topAction2").attr('onclick', 'AddAmendmentMore();');
            }
            else if (constatus == "Archived") {
                $("#topAction1").html('View History');
                $("#topAction1").attr('onclick', 'contextMenuContractSettings("history","","");');
                if ($("#hdnPermission").val() == "Manage") {
                    $("#topAction2").html('Delete Contract');
                    $("#topAction2").attr('onclick', 'contextMenuContractSettings("delete","","");');
                }
                else {
                    $("#topAction2").css("display", "none");
                }
                //manoj
                $('.Manage').css("display", "none");
                $('.Contribute').css("display", "none");
                //manoj
            }
            else {
                if ($("#hdnPermission").val() == "Manage") {
                    $("#topAction2").css("display", "none");
                    if (contractItem.Status != "Expired" && contractItem.Status != "Cancelled" && contractItem.Status != "Replaced") //Bug NO -- eO310331  //Suren
                    {
                        $("#topAction1").html('Duplicate Contract');
                        //$("#topAction2").html('Archive Contract');
                        $("#topAction1").attr('onclick', 'contextMenuContractSettings("duplicate","","");');
                    }
                    else {
                        $("#topAction1").css("display", "none");
                    }
                    //$("#topAction2").attr('onclick', 'contextMenuContractSettings("archive","","");');
                }
                else {
                    $("#topAction1").css("display", "none");
                    $("#topAction2").css("display", "none");
                }
            }
        }
        else {
            $("#topAction1").css("display", "none");
            $("#topAction2").css("display", "none");
        }
    }
    else {
        $("#spanstatus").html('Not Assigned');
    }

    $(".m-status-btn").html($(".constatus").clone());

    $('#btnEditStatus').click(function () {
        BindStatusbyCLM('Yes');


    });
    if (contractItem.IsDraft == "Yes" || constatus == "Archived") {
        $(".managesettings").css("display", "none");
        $(".review").css("display", "none");
        $(".signature").css("display", "none");
        $(".draft").css('display', 'none');
        $("#addActivityApproval").css('display', 'none');
        $("#RelatedContractEdit").css('display', 'none');
        $(".FL_Share").css("display", "none");
        $(".approve").css("display", "none");
        $(".mail").css("display", "none");
        $(".liContractStandard").css("display", "none");
        $(".liContractNonStandard").css("display", "none");
        $(".status").css("display", "none");
        $(".contractrenewal").css("display", "none");
        $(".permission").css("display", "none");
        $(".defaultproperties").css("display", "none");
        $(".template").css("display", "none");
        $(".duplicate").css("display", "none");
        $(".final").css("display", "none");
        $(".separator").css("display", "none");
        $("#topAction1").css("display", "none");
        $("#topAction2").css("display", "none");
    }
}

var ArrayofContractApprovalWorkflow = []; //eO310729
function GetContractActivities(contractid, loadaction) {
    $("#dvContractWorkflows").empty();
    workflowurltoshowDOCUMENT = "";
    workflowurltoshowCONTRACT = "";
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracts/' + contractid + '/activity',
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (data) {
            ArrayofAmendmentWorkflows = [];
            ArrayofDocumentWorkflows = [];
            ArrayofContractApprovalWorkflow = [];
            $("#dvContractWorkflows").empty();
            var datalenght = data.length;
            $("#lblActivityCount").text(data.length);
            for (var i = 0; i < datalenght; i++) {
                var item = data[i];
                var RowKey = item.RowKey;
                var WorkflowTitle = item.WorkflowTitle;
                var Participants = item.Participants;
                var Status = item.Status;
                var ActivityType = item.ActivityType;
                var CreatedBy = item.CreatedBy;

                var imgCorn = '<img src="../Content/Images/act-approval.png">';
                var imgCent = '<img src="../Content/Images/act-contract-box.png" class="img-responsive">';
                var vWorkflowURL = '<a class="link-head" href="javascript:void(0);">' + WorkflowTitle + '</a>';
                var vWorkflowIconURL = '';
                if (ActivityType == "Contract Approval") {
                    imgCorn = '<img src="../Content/Images/act-approval.png">';
                    imgCent = '<img src="../Content/Images/act-contract-box.png" class="img-responsive">';
                    vWorkflowURL = '<a class="link-head" href="/Activity/TaskDetails?TaskID=&WorkflowID=' + RowKey + '" target="_blank" style="display:inline !important;">' + WorkflowTitle + '</a>';
                    vWorkflowIconURL = '<a class="add-btn close1" href="/Activity/TaskDetails?TaskID=&WorkflowID=' + RowKey + '" target="_blank"><img src="../Content/Images/view-all.png" style="padding-left:5px !important;"></a>';
                    if (Status == "In Progress" || Status == "Stopped") {
                        workflowurltoshowCONTRACT = '/Activity/TaskDetails?TaskID=&WorkflowID=' + RowKey;
                        ArrayofContractApprovalWorkflow.push(item);
                    }
                }
                else if (ActivityType == "Renewal Approval") {
                    imgCorn = '<img src="../Content/Images/act-approval.png">';
                    imgCent = '<img src="../Content/Images/act-contract-box.png" class="img-responsive">';
                    vWorkflowURL = '<a class="link-head" href="/Activity/TaskDetails?TaskID=&WorkflowID=' + RowKey + '" target="_blank" style="display:inline !important;">' + WorkflowTitle + '</a>';
                    vWorkflowIconURL = '<a class="add-btn close1" href="/Activity/TaskDetails?TaskID=&WorkflowID=' + RowKey + '" target="_blank"><img src="../Content/Images/view-all.png" style="padding-left:5px !important;"></a>';
                }
                else if (ActivityType == "Amendment Approval") {
                    var person = {
                        id: RowKey, AmendmentID: item.AmendmentId
                    };
                    if (Status == "In Progress")
                        ArrayofAmendmentWorkflows.push(person);
                    imgCorn = '<img src="../Content/Images/act-approval.png">';
                    imgCent = '<img src="../Content/Images/act-contract-box.png" class="img-responsive">';
                    vWorkflowURL = '<a class="link-head" href="/Activity/TaskDetails?TaskID=&WorkflowID=' + RowKey + '" target="_blank" style="display:inline !important;">' + WorkflowTitle + '</a>';
                    vWorkflowIconURL = '<a class="add-btn close1" href="/Activity/TaskDetails?TaskID=&WorkflowID=' + RowKey + '" target="_blank"><img src="../Content/Images/view-all.png" style="padding-left:5px !important;"></a>';
                }
                else if (ActivityType == "Document Review") {
                    var person = {
                        id: RowKey, DocumentID: item.DocumentId
                    };
                    if (Status == "In Progress")
                        ArrayofDocumentWorkflows.push(person);
                    imgCorn = '<img src="../Content/Images/act-reviewl.png">';
                    imgCent = '<img src="../Content/Images/act-doc.png" class="img-responsive">';
                    vWorkflowURL = '<a class="link-head" href="/Activity/TaskDetails?TaskID=&WorkflowID=' + RowKey + '" target="_blank" style="display:inline !important;">' + WorkflowTitle + '</a>';
                    vWorkflowIconURL = '<a class="add-btn close1" href="/Activity/TaskDetails?TaskID=&WorkflowID=' + RowKey + '" target="_blank"><img src="../Content/Images/view-all.png" style="padding-left:5px !important;"></a>';
                    if (Status == "In Progress" || Status == "Stopped") {
                        workflowurltoshowDOCUMENT = '/Activity/TaskDetails?TaskID=&WorkflowID=' + RowKey;
                    }
                }
                else if (ActivityType == "Contract Share") {
                    imgCorn = '<img src="../Content/Images/act-share-as-link.png">';
                    imgCent = '<img src="../Content/Images/act-contract-box.png" class="img-responsive">';
                    vWorkflowURL = '<a class="link-head" href="javascript:void(0);" onclick="ShowWorkflowDetail(\'' + ActivityType + '\',\'' + RowKey + '\')" style="display:inline !important;">' + WorkflowTitle.replace("External Review", "External Share") + '</a>';
                    vWorkflowIconURL = '<p id="ShareID" style="display:none;">' + RowKey + '</p><p id="ShareType" style="display:none;">Contract</p>';
                    if (Status == "In Progress" && $("#hdnPermission").val() != 'View')
                        vWorkflowIconURL += ' <img src="../Content/Images/context_Menu.png" alt="Open Menu" title="Open Menu" class="openmenuShare Contribute"/>';
                }
                else if (ActivityType == "Document Share") {
                    imgCorn = '<img src="../Content/Images/act-share-as-link.png">';
                    imgCent = '<img src="../Content/Images/act-doc.png" class="img-responsive">';
                    vWorkflowURL = '<a class="link-head" href="javascript:void(0);" onclick="ShowWorkflowDetail(\'' + ActivityType + '\',\'' + RowKey + '\')" style="display:inline !important;">' + WorkflowTitle.replace("External Review", "External Share") + '</a>';
                    vWorkflowIconURL = '<p id="ShareID" style="display:none;">' + RowKey + '</p><p id="ShareType" style="display:none;">Document</p>';
                    if (Status == "In Progress" && $("#hdnPermission").val() != 'View')
                        vWorkflowIconURL += ' <img src="../Content/Images/context_Menu.png" alt="Open Menu" title="Open Menu" class="openmenuShare Contribute"/>';
                }
                else if (ActivityType == "Document Sign") {
                    imgCorn = '<img src="../Content/Images/act-signature.png">';
                    imgCent = '<img src="../Content/Images/act-doc.png" class="img-responsive">';
                    vWorkflowURL = '<a class="link-head" href="javascript:void(0);" onclick="ShowDocSignatureDetail(\'' + RowKey + '\')" style="display:inline !important;">' + WorkflowTitle + '</a>';
                    var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                    var vAccFeat = $.grep(veContractFeatures, function (n, i) {
                        return (n.RowKey == "1" && n.Status == "ON");
                    });
                    if (vAccFeat.length > 0 && Status == "In Progress" && CreatedBy == localStorage.UserName) {
                        var vConfig = vAccFeat[0].Configuration;
                        var vProvider = $(vConfig).find('Provider').text();
                        if (vProvider == "Right Signature")
                            vWorkflowURL += '';
                        else if (vProvider == "Echo Sign")
                            vWorkflowURL += ' <a href="javascript:void(0);" onclick="StopDocumentSignature(\'' + RowKey + '\')" title="Cancel Signature Process"><img src="../Content/Images/cancel_icon.png"></a>';
                        else if (vProvider == "Docu Sign")
                            vWorkflowURL += ' <a href="javascript:void(0);" onclick="StopDocumentSignature(\'' + RowKey + '\')" title="Cancel Signature Process"><img src="../Content/Images/cancel_icon.png"></a>';
                    }

                }

                var article = '<div class="col12 info-box-activity "><div class="row-group">';
                article += '<div class="col10 no-pad ">';
                article += '<div class="row-group">';
                article += '<div class="col1 no-pad activity-type-box m2">';
                article += imgCorn;
                article += '</div>';
                article += '<div class="col1 no-pad pad-top text-left activity-file-box m2">';
                article += imgCent;
                article += '</div>';
                article += '<div class="col10 activity-title-box m8">';

                article += vWorkflowURL;
                article += vWorkflowIconURL;

                article += '<div class="col12 no-pad pad-top">';
                if (ActivityType == "Document Share") {
                    if (item.ReadyToShare == "Yes" && item.CreatedBy == localStorage.UserName && item.Status != 'Stopped') {
                        article += '<p class="sub-text-head">Participants : <span class="sub-text">' + Participants + '</span></p>';
                        article += '<p class="sub-text-head">New version of this document is available.<a href="javascript:void(0);" onclick="ReplaceDocumentShareNew(\'' + RowKey + '\')" style="color:#44a6d;text-decoration: underline;font-weight: bold;">Share</a> new version link with users.</p>';
                    }
                    else {
                        article += '<p class="sub-text-head">Participants : <span class="sub-text">' + Participants + '</span></p>';
                    }
                }
                else {
                    article += '<p class="sub-text-head">Participants : <span class="sub-text">' + Participants + '</span></p>';
                }
                article += '</div>';
                article += '</div>';
                article += '</div>';
                article += '</div>';
                article += '<div class="col2 no-pad text-right pad-top ">';
                article += '<a class="close1" href="javascript:void(0);" onclick="ShowWorkflowDetail(\'' + ActivityType + '\',\'' + RowKey + '\')"><img id="Img_' + RowKey + '" src="../Content/Images/e-open.png" title="Expand"></a>';
                article += '<div class="col12 text-right act-doc-status">';

                if (Status == "Complete" || Status == "Completed") {
                    article += '<a class="label label-grn"><span class="m-off"> Completed </span> <span class="m-on"><img src="../Content/Images/wit-completed-icon.png"></span></a>';
                }
                else if (Status == "In Progress") {
                    article += '<a class="label label-org"><span class="m-off">' + Status + '</span> <span class="m-on"><img src="../Content/Images/wit-in-progress-icon.png"></span></a>';
                }
                else if (Status == "Cancelled" || Status == "Declined") {
                    article += '<a class="label label-red"><span class="m-off">' + Status + '</span> <span class="m-on"><img src="../Content/Images/wit-cancel-icon.png"></span></a>';
                }
                else if (Status == "Stopped") {
                    article += '<a class="label label-red"><span class="m-off">' + Status + '</span> <span class="m-on"><img src="../Content/Images/wit-stopl-icon.png"></span></a>';
                }
                else {
                    article += '<a class="label label-org"><span class="m-off">' + Status + '</span></a>';
                }
                article += '</div>';
                article += '</div>';
                article += '<div class="col12 m12 activity-title-box m8">';
                article += '<div id="Det_' + RowKey + '" class="row-group activity-details-body" style="display:none">';

                article += '</div>';
                article += '</div>';
                article += '</div></div>';
                $("#dvContractWorkflows").append(article);
            }
            //manoj
            if (typeof (loadaction) != "undefined" && loadaction != null && loadaction != "") {
                $("#loadingPage").fadeOut();
            }
            //manoj
            $(".openmenuShare").contextMenu({
                menu: 'dropdownMenuShare', leftButton: true
            }, function (action, el, pos) {
                contextMenuShare(action, el.parent("div"), pos);
            });
            if (contractItem.Status == "Cancelled" || contractItem.Status == "Expired" || contractItem.Status == "Archived") {
                $(".Contribute").css('display', 'none');
                $('.status').css('display', '');
                $("#dvContractWorkflows a.link-head").css({
                    "pointer-events": "none", "cursor": "default"
                });
                $(".add-btn").css('display', 'none');
                ApplyPermissionToMenu($("#hdnPermission").val());
            }
            $('.disablelink').removeClass('disablelink');

        },
        error: function (data) {
            //manoj
            if (typeof (loadaction) != "undefined" && loadaction != null && loadaction != "") {
                $("#loadingPage").fadeOut();
            }
            //manoj
            $("#lblActivityCount").text("0");
            $('.disablelink').removeClass('disablelink');
        }
    });
}

function contextMenuShare(action, el, pos) {

    switch (action) {
        case "stop":
            {
                swal({
                    title: '',
                    text: " Are you sure you want to <span style='font-weight:700'>stop</span> External Share? The shared link will be disabled.",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes',
                    cancelButtonText: 'No',
                    html: true
                },
       function (confirmed) {
           if (confirmed) {
               $("#loadingPage").fadeIn();
               var vcollarabationid = $(el).find("#ShareID").text();
               var vcollarabationtype = $(el).find("#ShareType").text();
               if (vcollarabationtype == 'Contract')
                   StopShareContract(vcollarabationid);
               else if (vcollarabationtype == 'Document')
                   StopShareDocument(vcollarabationid);

           }
           return;
       });

                break;
            }

    }
}

function StopShareContract(collarabationid) {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracts/Share?collarabationid=' + collarabationid,
        type: 'PUT',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
        },
        success: function (data) {
            if (data != null && data != "" && typeof (data) != "undefined") {
                contractItem.Status = data;
                ContractTopActions();
                //manoj
                if (documentview == null || documentview == "" || documentview == 'folder') {
                    if ($('#showAll').text() != null && $('#showAll').text() != "" && typeof ($('#showAll').text()) != "undefined") {
                        var selectedfoldervalue = $('#showAll').find("a");
                        var textvalueselected = $(selectedfoldervalue)[$(selectedfoldervalue).length - 1].textContent;
                        var idvalueselected = $(selectedfoldervalue)[$(selectedfoldervalue).length - 1].id;
                        var parentdocumentdetails = {
                            id: idvalueselected, text: textvalueselected
                        };
                        showfolderdocuments(parentdocumentdetails);
                    }
                    else {
                        BindDocument(vContractID);
                    }
                } else {
                    DisplayDocument(documentview);
                }
                $("#hdnFolderDocumentView").text('');
                $("#hdnShowAllTextValue").html('');
                PrvFolderselection = '';
                //Bind primary and pined document based on new feature
                if ($("#hdnnewdocumentfeature").text() == "Yes") {
                    CreateDocumentListPinView(vContractID);
                }
                //manoj
            }
            GetContractActivities(vContractID);
            $("#loadingPage").fadeOut();
        },
        error:
            function (data) {
                $("#loadingPage").fadeOut();

            }
    });
}


function ShowWorkflowDetail(acttype, wid) {
    if (contractItem.Status != 'Cancelled' && contractItem.Status != 'Expired') {
        //var detObj = $("#Det_" + wid);
        $("#Det_" + wid).slideToggle();
        var imgObj = $("#Img_" + wid);
        if (imgObj.attr("title") == "Collapse") {
            imgObj.attr("title", "Expand");
            imgObj.attr("src", "../Content/Images/e-open.png");
            $("#Det_" + wid).html("");
        } else {
            imgObj.attr("title", "Collapse");
            imgObj.attr("src", "../Content/Images/e-close.png");
            switch (acttype) {
                case "Contract Approval":
                case "Document Review":
                case "Amendment Approval":
                    GetWorkflowComments(wid);
                    break;
                case "Document Share":
                    GetDocumentShareComment(wid);
                    break;
                case "Document Sign":
                    GetDocumentSignatureComment(wid);
                    break;
                case "Contract Share":
                    GetContractShareComment(wid);
                    break;
            }
        }
    }
    //if (detObj.children().length == 0) {
    //    if (acttype == "Contract Approval" || acttype == "Document Review")
    //        GetWorkflowComments(wid);
    //    else if (acttype == "Contract Share")
    //        GetContractShareComment(wid);
    //    else if (acttype == "Document Share")
    //        GetDocumentShareComment(wid);
    //    else if (acttype == "Document Sign")
    //        GetDocumentSignatureComment(wid);
    //}
}

function GetWorkflowComments(wid) {
    $("#Det_" + wid).html('<img src="../Content/Images/icon/loading.gif">');
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Workflow/comments?workflowid=' + wid,
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            var datalenght = data.length;
            var article = '';
            for (var i = 0; i < datalenght; i++) {
                var item = data[i];
                if (typeof (item.ModifiedDate) != "undefined" && item.ModifiedDate != null && item.ModifiedDate != "")
                    var vTime = moment(new Date(item.ModifiedDate)).format('MMMM Do YYYY, h:mm A');
                else if (typeof (item.Created) != "undefined" && item.Created != null && item.Created != "")
                    var vTime = moment(new Date(item.Created)).format('MMMM Do YYYY, h:mm A');
                else
                    var vTime = moment(new Date(item.Timestamp)).format('MMMM Do YYYY, h:mm A');
                article += '<div class="activity-details-start row-group">';
                article += '<div class="col8 no-pad">';
                article += item.Title;
                if (item.Description != "")
                    article += '<br/>' + item.Description;
                article += '</div>';
                article += '<div class="col4 no-pad text-right">';
                article += vTime;
                article += '</div>';
                article += '</div>';
            }
            $("#Det_" + wid).html(article);
        },
        error:
            function (data) {

            }
    });
}

function GetContractShareComment(wid) {
    $("#Det_" + wid).html('<img src="../Content/Images/icon/loading.gif">');
    $.ajax({
        url: '/Contracts/GetContractCollaborationComment?accountid=' + localStorage.AccountID + '&collaborationid=' + wid,
        type: 'GET',
        dataType: 'json',
        cache: false,
        // async: false,
        success: function (data) {
            var jsObject = JSON.parse(data);
            var datalenght = jsObject.length;
            var article = '';
            for (var i = 0; i < datalenght; i++) {
                var item = jsObject[i];
                if (typeof (item.PostDate) != "undefined" && item.PostDate != null && item.PostDate != "")
                    var vTime = moment(new Date(item.PostDate)).format('MMMM Do YYYY, h:mm A');
                else
                    var vTime = moment(new Date(item.TimeStamp)).format('MMMM Do YYYY, h:mm A');
                article += '<div class="activity-details-start row-group">';
                article += '<div class="col8 no-pad">';
                article += "<b>" + item.PostBy + "</b>";
                if (item.Comment.indexOf("Comment:") > -1) {
                    var splitcommment = item.Comment.split("Comment:");
                    if (splitcommment[0] != "") {
                        article += '<br/>' + splitcommment[0].trim();
                    } else {
                        article += '<br/>' + item.Comment.trim();
                    }
                    if (splitcommment[1] != "") {
                        article += '\n<br/><b>Comment :</b>' + splitcommment[1].trim();
                    } else {
                        article += '\n<br/><b>Comment :</b>' + item.Comment.trim();
                    }
                } else {
                    article += '<br/>' + item.Comment;
                }
                article += '</div>';
                article += '<div class="col4 no-pad text-right">';
                article += vTime;
                article += '</div>';
                article += '</div>';
            }
            $("#Det_" + wid).html(article);

        },
        error:
            function (data) {
                $("#Det_" + wid).html('<div>No items found.</div>');

            }
    });
    $.ajax({
        url: '/Contracts/GetContractCollaborationLink?accountid=' + localStorage.AccountID + '&collaborationid=' + wid + '&UserName=' + localStorage.UserName + '&ContractID=' + vContractID,
        type: 'GET',
        dataType: 'json',
        cache: false,
        // async: false,
        success: function (data) {
            if (data != "") {
                window.open(data, "_blank")
            }

        },
        error:
            function (data) {


            }
    });
}

function contextMenuContractSettings(action, el, pos) {
    switch (action) {
        case "edit":
            {
                //  var Stage = "";
                //  Stage = getParameterByName("Stage");
                //  if (Stage == 'pipeline') {
                var LocationURLtoPass = '';
                if ($("#spanstatus").text() != "") {
                    var arrstatus = ["Ready for Signature", "Awaiting Signatures", "Signed", "Active", "Up for Renewal", "Renewed", "Extended", "On Hold", "Replaced", "Expired", "Cancelled", "Terminated", "Archived", "About to Expire"];
                    if (arrstatus.indexOf($("#spanstatus").text().trim()) > -1) {
                        Stage = '';
                    }
                    else {
                        Stage = 'pipeline';
                    }
                }

                if (Stage == "" && pos == "Closeout") {
                    LocationURLtoPass = "/Contracts/EditContract?ContractID=" + getParameterByName("ContractID") + "&ContractType=" + encodeURIComponent($("#lblContractType").text()) + "&Closeout=Yes";
                } else if (Stage == "") {
                    LocationURLtoPass = "/Contracts/EditContract?ContractID=" + getParameterByName("ContractID") + "&ContractType=" + encodeURIComponent($("#lblContractType").text());
                } else if (el == "finalize" && pos == "Yes") {
                    LocationURLtoPass = "/Contracts/EditContract?ContractID=" + getParameterByName("ContractID") + "&ContractType=" + encodeURIComponent($("#lblContractType").text()) + "&Stage=" + Stage + "&Finalize=true&DocFianlize=" + pos;
                } else if (el == "finalize") {
                    LocationURLtoPass = "/Contracts/EditContract?ContractID=" + getParameterByName("ContractID") + "&ContractType=" + encodeURIComponent($("#lblContractType").text()) + "&Stage=" + Stage + "&Finalize=true";
                } else {
                    LocationURLtoPass = "/Contracts/EditContract?ContractID=" + getParameterByName("ContractID") + "&ContractType=" + encodeURIComponent($("#lblContractType").text()) + "&Stage=" + Stage;
                }
                //manoj
                if (getParameterByName("TaskID") != "" && $("#hdnPermission").val() != "Manage") {
                    LocationURLtoPass += "&TaskAllow=No";
                }
                //manoj
                location = LocationURLtoPass;
                break;
            }
        case "standard":
            {
                swal({
                    title: '',
                    text: "Are you sure you want to mark this as standard Contract Record?",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes',
                    cancelButtonText: 'No',
                    html: true
                },
       function (confirmed) {
           if (confirmed) {
               $("#loadingPage").fadeIn();
               var contractID = getParameterByName("ContractID");
               $.ajax({
                   url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts?contractid=' + contractID + '&isstandard=Yes&username=' + localStorage.UserName,
                   type: 'PUT',
                   dataType: 'json',
                   headers: {
                       'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                   },
                   cache: false,
                   success: function (data) {
                       if ($("#topAction2").html() == 'Mark as Standard') {
                           $("#topAction2").css("display", "none");
                           // $("#topAction2").html('Mark as Non-Standard');
                           //$("#topAction2").attr('onclick', 'contextMenuContractSettings("nonstandard","","");');
                       }

                       //$("#iStandardCont").css('display', '');
                       //$("#iNonStandardCont").css('display', 'none');
                       $("#liContractStandard").css('display', 'none');
                       $("#liContractNonStandard").css('display', '');
                       $("#loadingPage").fadeOut();
                   },
                   error: function () {
                       $("#loadingPage").fadeOut();
                   }
               });
           }
           return;
       });


                break;
            }
        case "nonstandard":
            {
                swal({
                    title: '',
                    text: "Are you sure you want to mark this as <span style='font-weight:700'>Non-Standard</span> Contract?",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes',
                    cancelButtonText: 'No',
                    html: true
                },
     function (confirmed) {
         if (confirmed) {
             $("#loadingPage").fadeIn();
             var contractID = getParameterByName("ContractID");
             $.ajax({
                 url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts?contractid=' + contractID + '&isstandard=No&username=' + localStorage.UserName,
                 type: 'PUT',
                 dataType: 'json',
                 headers: {
                     'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                 },
                 cache: false,
                 success: function (data) {
                     if ($("#topAction2").html() == 'Mark as Non-Standard') {
                         $("#topAction2").css("display", "none");
                         //$("#topAction2").html('Mark as Standard');
                         //$("#topAction2").attr('onclick', 'contextMenuContractSettings("standard","","");');
                     }

                     //$("#iStandardCont").css('display', 'none');
                     //$("#iNonStandardCont").css('display', '');
                     $("#liContractStandard").css('display', '');
                     $("#liContractNonStandard").css('display', 'none');
                     $("#loadingPage").fadeOut();
                 },
                 error: function () {
                     $("#loadingPage").fadeOut();
                 }
             });
         }
         return;
     });

                break;
            }
        case "view":
            {
                $("#Summary").addClass('pop_up_Harizondal_meta_active');
                $("#Details").removeClass('pop_up_Harizondal_meta_active');
                if ($('#tblDetailsMetadata tr').length == 0) {
                    BindMetaData(contractItem, false);
                }
                else {
                    $('#tblSummary').css("display", "");
                    $('#tblDetailsMetadata').css("display", "none");
                    $('#dialogSummary').dialog('open');
                }
                break;
            }
        case "history":
            {

                if ($('#contractLogs').text() == "No items found.") {
                    $('#contractLogsPopup').dialog('open');
                }
                else if ($('#contractLogs tr').length == 0) {
                    CreateContractActivityList();

                    if (getParameterByName('Stage') == "pipeline" && contractItem.IsFinalized != "Yes") {
                        $("#ddlHistoryFilter option[value='Amendment']").hide();
                    }
                }
                else {
                    $('#contractLogsPopup').dialog('open');
                }
                break;
            }
        case "duplicate":
            {
                swal({
                    title: '',
                    text: "Are you sure you want to create <span style=\"font-weight:700\">duplicate</span> Contract Record?",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes',
                    cancelButtonText: 'No',
                    html: true
                },
           function (confirmed) {
               if (confirmed) {
                   //manoj
                   var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                   var vAccFeat = $.grep(veContractFeatures, function (n, i) {
                       return (n.RowKey == "16" && n.Status == "ON");
                   });
                   if (vAccFeat.length > 0) {
                       location = "/Contracts/EditContract?ContractID=" + getParameterByName("ContractID") + "&ContractType=" + encodeURIComponent($("#lblContractType").text()) + "&Duplicate=Yes&Stage=pipeline";
                   } else {
                       location = "/Contracts/EditContract?ContractID=" + getParameterByName("ContractID") + "&ContractType=" + encodeURIComponent($("#lblContractType").text()) + "&Duplicate=Yes&Stage=active";
                   }
                   //manoj
                   //if (getParameterByName('Stage') == 'pipeline') {

                   //} else {

                   //    location = "/Contracts/EditContract?ContractID=" + getParameterByName("ContractID") + "&ContractType=" + encodeURIComponent($("#lblContractType").text()) + "&Duplicate=Yes&Stage=pipeline";
                   //}
               }
               return;
           });

                break;
            }

        case "approve":
            {

                oApprovalNewDocID = "";
                if ($("#lblApprovalWorkflow").text() == "In Progress" || ArrayofContractApprovalWorkflow.filter(function (e, index){ return e.Status === "In Progress"}).length > 0) { //eO310729
                    $("#alertText1").html("Approval workflow is in progress for this contract");
                    if (workflowurltoshowCONTRACT != null && workflowurltoshowCONTRACT != '') {
                        $("#textingdetails").html('<a target="_blank" title="View Workflow Details" href=' + workflowurltoshowCONTRACT + '><font color="#44A6D8">View Workflow Details</font></a>');
                        $("#dvAlertDetails1").dialog("open");
                    } else {
                        GetWorkflowByObjectAndStatus('Contracts', vContractID, 'In Progress');
                    }
                }
                else {
                    $("#loadingPage").fadeIn();
                    $(".validelement").each(function (index, element) {
                        $(element).removeClass("error");
                        $("#errormsg_" + element.id).remove();
                    });
                    $(".error").removeClass("error");
                    var contractTitle = $("#lblContractTitle").text();
                    var contractID = getParameterByName("ContractID");
                    var businessArea = $("#lblBusinessArea").text();
                    var contractArea = $("#lblContractArea").text();
                    $("#tblStage").empty();
                    $("#ddlRule").empty();

                    $('#chkAutoUpdateStatus').attr('checked', false);
                    //manoj
                    $('#chkSendSummaryDoc').attr('checked', false);
                    //manoj
                    if (contractItem.IsFinalized == 'Yes') {
                        $("#liAutoUpdateStatus").css('display', 'none');
                    } else {
                        $("#liAutoUpdateStatus").css('display', '');
                        $('#chkAutoUpdateStatus').prop('checked', true);
                    }
                    $("#txtWorkflowTitle").val('Approval for ' + contractTitle);
                    //manoj
                    $("#txtWorkflowTitle").prop('readonly', false);
                    //manoj
                    $("#lblAutoUpdateStatus").html('Auto update Contract Record status based on this Workflow.');
                    $("#txtDuration").val("");
                    var nicInstance = '';
                    nicInstance = nicEditors.findEditor('txtComment');
                    if (typeof (nicInstance) == "undefined") {
                        var ContractApprovalTextarea = new nicEditor({ buttonList: ['bold', 'italic', 'underline', 'strikethrough', 'left', 'center', 'right', 'justify', 'ol', 'ul', 'fontSize', 'fontFamily', 'fontFormat', 'removeformat', 'hr', 'indent', 'outdent', 'link', 'unlink', 'forecolor', 'bgcolor', 'xhtml'] }).panelInstance('txtComment');
                        nicInstance = nicEditors.findEditor('txtComment');
                    }
                    nicInstance.setContent('');
                    $("#hdWorkflowType").val("Contract Approval");
                    $("#hdWorkflowContractArea").val(contractArea);
                    $("#hdWorkflowBusinessArea").val(businessArea);
                    $("#hdWorkflowObjectID").val(contractID);
                    $("#hdWorkflowObjectTitle").val(contractTitle);
                    GetValuesAndAutoPopulate("ddlWorkflowCC", "");

                    var vWorkflowSettings = [];
                    $.ajax({
                        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Workflow/evaluate?workflowType=Contract Approval&contractArea=' + encodeURIComponent(contractArea) + '&businessArea=' + encodeURIComponent(businessArea) + '&contractid=' + contractID,
                        type: 'GET',
                        cache: false,
                        contentType: false,
                        headers: {
                            'eContracts-ApiKey': localStorage.APIKey
                        },
                        processData: false,
                        success: function (item) {
                            vWorkflowSettings = item.WorkflowSettings;
                            var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                            var vAccFeat = $.grep(veContractFeatures, function (n, i) {
                                return (n.RowKey == "8" && n.Status == "ON");
                            });
                            if (vAccFeat.length > 0) {
                                vWorkflowRules = item.WorkflowRules;
                            }

                            if (item.WorkflowSettings != null) {
                                workflowRoutingOptions = vWorkflowSettings.WorkflowRoutingOptions.split(";");
                                workflowRoutingOptions = $.map(workflowRoutingOptions, $.trim);
                                if (workflowRoutingOptions.indexOf("Allow adding additional Stages") == -1) {
                                    if (workflowRoutingOptions.indexOf("Allow over-ride of Admin Configuration") == -1) {
                                        $("#spAddStage").css("display", "none");
                                    }
                                }
                                $("#txtDuration").val(vWorkflowSettings.TaskDuration);
                                if ($("#txtDuration").val() != "") {
                                    $("#txtDuration").trigger("onchange");
                                } else {
                                    $("#lblDurationDate").empty();
                                }
                                //if (vWorkflowSettings.TaskDuration != "undefined" && vWorkflowSettings.TaskDuration != null && vWorkflowSettings.TaskDuration != "")
                                //    $("#lblDurationDate").html(moment(new Date()).add("days", vWorkflowSettings.TaskDuration).format('MM/DD/YYYY'));
                                workflowAdHoc = item.WorkflowSettings.WorkflowAdHoc;
                            }
                            if (vWorkflowRules.length > 0) {
                                //$("#ddlRule").append('<option value="Ad-hoc">Ad-hoc</option>');
                                $(vWorkflowRules).each(function (i, rule) {
                                    $("#ddlRule").append('<option value="' + rule.RuleName + '">' + rule.RuleName + '</option>');
                                });
                                if (workflowAdHoc == "on") {
                                    $("#ddlRule").append('<option value="Ad-hoc">Ad-hoc</option>');
                                }
                                var workflowRules = vWorkflowRules[0];
                                $("#ddlRule").find('option[value="' + workflowRules.RuleName + '"]').prop("selected", true);
                                if (vWorkflowRules.length == 1 && workflowAdHoc == "") {
                                    $("#lblddlRule").css("display", "");
                                    $("#ddlRule").css("display", "none");
                                    $("#lblddlRule").text(workflowRules.RuleName);
                                    $("#ddlRule").attr('disabled', 'disabled');
                                }
                                else {
                                    $("#lblddlRule").text("");
                                    $("#lblddlRule").css("display", "none");
                                    $("#ddlRule").css("display", "");
                                    $("#ddlRule").removeAttr("disabled");
                                }
                                if (workflowRules.RuleName == "Default") {
                                    if (typeof workflowRules.WorkflowTitle != 'undefined' && workflowRules.WorkflowTitle != "") {
                                        $("#txtWorkflowTitle").val(workflowRules.WorkflowTitle + ' for ' + contractTitle);
                                    } else {
                                        $("#txtWorkflowTitle").val('Approval for ' + contractTitle);
                                    }
                                }
                                else {
                                    if (typeof workflowRules.WorkflowTitle != 'undefined' && workflowRules.WorkflowTitle != "") {
                                        $("#txtWorkflowTitle").val(workflowRules.WorkflowTitle + ' for ' + contractTitle);
                                    } else {
                                        $("#txtWorkflowTitle").val('Approval for ' + contractTitle);
                                    }

                                }
                                var participantsInXML = workflowRules.ParticipantsInXML;
                                var totalFileCount = 0;
                                if (participantsInXML != '') {
                                    $(participantsInXML).find('WorkflowPaticipant').each(function () {
                                        var StageTitle = $(this).find('StageTitle').text();
                                        var Participants = $(this).find('Participants').text();
                                        var Order = $(this).find('Order').text();
                                        totalFileCount++;
                                        var htmlFormatFile = '<tr id="trStage' + totalFileCount + '">';
                                        htmlFormatFile += '<td class="width30 wf_approval start_workflow">';
                                        htmlFormatFile += '<input id="txtStage' + totalFileCount + '" value="' + StageTitle + '" name="Stage' + totalFileCount + '" title="Stage" placeholder="Stage Name" type="text" class="f_inpt width95_a validelement" />';
                                        htmlFormatFile += '</td>';
                                        htmlFormatFile += '<td class="width46 start_workflow">';
                                        htmlFormatFile += '<select id="ddlAssignTo' + totalFileCount + '" name="AssignTo' + totalFileCount + '"  multiple="multiple" data-placeholder="Select" class="width97 a-Workflow-height validmultiselect"></select>';
                                        htmlFormatFile += '</td>';
                                        htmlFormatFile += '<td class="width20 padding_top_3px v_align_top start_workflow">';
                                        htmlFormatFile += '<select id="ddlOrder' + totalFileCount + '" name="Order' + totalFileCount + '"  class="f_inpt width97 height32">';
                                        if (Order == "Serial")
                                            htmlFormatFile += '<option value="Serial" selected="selected">Serial</option><option value="Parallel">Parallel</option></select>';
                                        else
                                            htmlFormatFile += '<option value="Serial">Serial</option><option value="Parallel" selected="selected">Parallel</option></select>';
                                        htmlFormatFile += '</td>';
                                        htmlFormatFile += '<td class="width4 padding_top_10px v_align_top start_workflow">';
                                        if (totalFileCount > 1)
                                            htmlFormatFile += '<img id="imgStageDelete' + totalFileCount + '" src="../Content/Images/icon/delete.png" style="width: 20px" onclick="DeleteStage(this)" />';
                                        else
                                            htmlFormatFile += '<img id="imgStageDelete' + totalFileCount + '" src="../Content/Images/icon/delete.png" style="visibility: hidden; width: 20px" onclick="DeleteStage(this)" />';
                                        htmlFormatFile += '</td>';
                                        htmlFormatFile += '</tr>';

                                        $("#tblStage").append(htmlFormatFile);
                                        var $options = $("#ddlApprovers > option").clone();
                                        $('#ddlAssignTo' + totalFileCount).append($options);

                                        $("#ddlAssignTo" + totalFileCount).chosen().change(function () {
                                            var vasstoid = $(this).attr('id').replace("ddlAssignTo", "");
                                            if ($(this).val() != null) {
                                                if ($(this).val().length > 1 && (workflowRoutingOptions.indexOf("Allow over-ride of Admin Configuration") >= 0 ||
                                                    workflowRoutingOptions.indexOf("Allow replacing participants") >= 0)) {
                                                    $("#ddlOrder" + vasstoid).prop('disabled', false);
                                                }
                                                else {
                                                    $("#ddlOrder" + vasstoid).val("Serial");
                                                    $("#ddlOrder" + vasstoid).prop('disabled', true);
                                                }
                                            }
                                            else {
                                                $("#ddlOrder" + vasstoid).val("Serial");
                                                $("#ddlOrder" + vasstoid).prop('disabled', true);
                                            }
                                        });
                                        GetValuesAndAutoPopulate("ddlAssignTo" + totalFileCount, Participants);
                                        var vParticipantsArr = Participants.split(";");
                                        if (vParticipantsArr.length > 1)
                                            $("#ddlOrder" + totalFileCount).prop('disabled', false);
                                        else
                                            $("#ddlOrder" + totalFileCount).prop('disabled', true);
                                        if (item.WorkflowSettings != null) {
                                            if (workflowRoutingOptions.indexOf("Allow over-ride of Admin Configuration") == -1) {
                                                if (workflowRoutingOptions.indexOf("Allow replacing participants") == -1) {
                                                    $("#ddlAssignTo" + totalFileCount).prop('disabled', true).trigger("chosen:updated");
                                                    $("#ddlOrder" + totalFileCount).prop('disabled', true);
                                                }
                                                $("#txtStage" + totalFileCount).prop('disabled', true);
                                                $("#imgStageDelete" + totalFileCount).css("visibility", "hidden");
                                            }
                                        }
                                    });
                                }
                                else {
                                    if ($("#ddlRule").html() == "") {
                                        $("#ddlRule").append('<option value="Ad-hoc">Ad-hoc</option>');
                                        $("#lblddlRule").css("display", "");
                                        $("#ddlRule").css("display", "none");
                                        $("#lblddlRule").text("Ad-hoc");
                                    }
                                    if (!workflowAdHoc)
                                        $("#ddlRule").attr('disabled', 'disabled');
                                    var totalFileCount = 1;
                                    var htmlFormatFile = '<tr id="trStage' + totalFileCount + '">';
                                    htmlFormatFile += '<td class="width30 wf_approval start_workflow">';
                                    htmlFormatFile += '<input id="txtStage' + totalFileCount + '" name="Stage' + totalFileCount + '" title="Stage" placeholder="Stage Name" type="text" class="f_inpt width95_a validelement" value="Stage ' + totalFileCount + '"/>';
                                    htmlFormatFile += '</td>';
                                    htmlFormatFile += '<td class="width46 start_workflow">';
                                    htmlFormatFile += '<select id="ddlAssignTo' + totalFileCount + '" name="AssignTo' + totalFileCount + '"  multiple="multiple" data-placeholder="Select" class="width97 a-Workflow-height validmultiselect"></select>';
                                    htmlFormatFile += '</td>';
                                    htmlFormatFile += '<td class="width20 padding_top_3px v_align_top start_workflow">';
                                    htmlFormatFile += '<select id="ddlOrder' + totalFileCount + '" name="Order' + totalFileCount + '"  class="f_inpt width97 height32" disabled="disabled"><option selected="selected">Serial</option><option>Parallel</option></select>';
                                    htmlFormatFile += '</td>';
                                    htmlFormatFile += '<td class="width4 padding_top_10px v_align_top start_workflow">';
                                    htmlFormatFile += '<img src="../Content/Images/icon/delete.png" style="visibility: hidden; width: 20px" onclick="DeleteStage(this)" />';
                                    htmlFormatFile += '</td>';
                                    htmlFormatFile += '</tr>';

                                    $("#tblStage").append(htmlFormatFile);
                                    var $options = $("#ddlApprovers > option").clone();
                                    $('#ddlAssignTo' + totalFileCount).append($options);

                                    $("#ddlAssignTo" + totalFileCount).chosen().change(function () {
                                        var vasstoid = $(this).attr('id').replace("ddlAssignTo", "");
                                        if ($(this).val() != null) {
                                            if ($(this).val().length > 1) {
                                                $("#ddlOrder" + vasstoid).prop('disabled', false);
                                            }
                                            else {
                                                $("#ddlOrder" + vasstoid).val("Serial");
                                                $("#ddlOrder" + vasstoid).prop('disabled', true);
                                            }
                                        }
                                    });
                                }
                            }
                            else {
                                if ($("#ddlRule").html() == "") {
                                    $("#ddlRule").append('<option value="Ad-hoc">Ad-hoc</option>');
                                    $("#lblddlRule").css("display", "");
                                    $("#ddlRule").css("display", "none");
                                    $("#lblddlRule").text("Ad-hoc");
                                }
                                if (!workflowAdHoc)
                                    $("#ddlRule").attr('disabled', 'disabled');
                                var totalFileCount = 1;
                                var htmlFormatFile = '<tr id="trStage' + totalFileCount + '">';
                                htmlFormatFile += '<td class="width30 wf_approval start_workflow">';
                                htmlFormatFile += '<input id="txtStage' + totalFileCount + '" name="Stage' + totalFileCount + '" title="Stage" placeholder="Stage Name" type="text" class="f_inpt width95_a validelement" value="Stage ' + totalFileCount + '"/>';
                                htmlFormatFile += '</td>';
                                htmlFormatFile += '<td class="width46 start_workflow">';
                                htmlFormatFile += '<select id="ddlAssignTo' + totalFileCount + '" name="AssignTo' + totalFileCount + '"  multiple="multiple" data-placeholder="Select" class="width97 a-Workflow-height validmultiselect"></select>';
                                htmlFormatFile += '</td>';
                                htmlFormatFile += '<td class="width20 padding_top_3px v_align_top start_workflow">';
                                htmlFormatFile += '<select id="ddlOrder' + totalFileCount + '" name="Order' + totalFileCount + '"  class="f_inpt width97 height32" disabled="disabled"><option selected="selected">Serial</option><option>Parallel</option></select>';
                                htmlFormatFile += '</td>';
                                htmlFormatFile += '<td class="width4 padding_top_10px v_align_top start_workflow">';
                                htmlFormatFile += '<img src="../Content/Images/icon/delete.png" style="visibility: hidden; width: 20px" onclick="DeleteStage(this)" />';
                                htmlFormatFile += '</td>';
                                htmlFormatFile += '</tr>';

                                $("#tblStage").append(htmlFormatFile);
                                var $options = $("#ddlApprovers > option").clone();
                                $('#ddlAssignTo' + totalFileCount).append($options);

                                $("#ddlAssignTo" + totalFileCount).chosen().change(function () {
                                    var vasstoid = $(this).attr('id').replace("ddlAssignTo", "");
                                    if ($(this).val() != null) {
                                        if ($(this).val().length > 1) {
                                            $("#ddlOrder" + vasstoid).prop('disabled', false);
                                        }
                                        else {
                                            $("#ddlOrder" + vasstoid).val("Serial");
                                            $("#ddlOrder" + vasstoid).prop('disabled', true);
                                        }
                                    }
                                });
                            }


                            //ENH492 - Workflow Cycle time Report & default naming of stages.
                            $("#txtStage" + totalFileCount).autocomplete({
                                source: StageName,
                                minLength: 1,
                                focus: function (event, ui) {
                                    return false;
                                },
                                select: function (evn, uidetails) {
                                    $("#txtStage" + totalFileCount).val(uidetails.item.label);

                                }
                            });
                            if (IsApprovalSheetFeatureExits) {
                                setApprovalDocumentUrl();
                                if (oRelatedApprovalSheets != "") {
                                    $("#ddlApprovalsSheets").empty();
                                    contractAccessUsers = contractAccessUsers.filter(function (e) {
                                        return e
                                    });
                                    var oArrRelatedApprovalSheets = oRelatedApprovalSheets.split(';');
                                    oArrRelatedApprovalSheets = oArrRelatedApprovalSheets.sort();
                                    oArrRelatedApprovalSheets = stringArrayUnique(oArrRelatedApprovalSheets).sort();
                                    $(oArrRelatedApprovalSheets).each(function (i, value) {
                                        $("#ddlApprovalsSheets").append('<option value="' + escape(value) + '">' + value + '</option>');
                                    });
                                    if (DefaultApprovalSheet != '') {
                                        var escapedDefaultApprovalSheet = escape(DefaultApprovalSheet);
                                        $("#ddlApprovalsSheets").val(escapedDefaultApprovalSheet).trigger('chosen:updated')
                                    }
                                    $("input[name='IsApprovalSheetTaskDetails'][value='Yes']").prop('checked', true);
                                    $("input[name='IsApprovalSheet'][value='No']").prop('checked', true);
                                    $("#lblApprovalSheetTempdocuments").empty();
                                    $("#btnApprovalSheetCreate").css('display', '');
                                    $("#lblApprovalSheetTempdocuments").css('display', 'none');
                                    IsApprovalSheetYesClick();
                                    IsApprovalSheetTempNoClick();
                                    $(".FL_ApprovalSheetContract").css('display', '');
                                    $("#ddlApprovalsSheets").addClass("validelement");
                                }
                                else {
                                    $("input[name='IsApprovalSheetTaskDetails'][value='Yes']").prop('checked', true);
                                    $("input[name='IsApprovalSheet'][value='No']").prop('checked', true);
                                    $("#lblApprovalSheetTempdocuments").empty();
                                    $("#btnApprovalSheetCreate").css('display', '');
                                    $("#lblApprovalSheetTempdocuments").css('display', 'none');
                                    IsApprovalSheetYesClick();
                                    IsApprovalSheetTempNoClick();
                                    $(".FL_ApprovalSheetContract").css('display', 'none');
                                    $("#ddlApprovalsSheets").removeClass("validelement");
                                }
                            }
                            else {
                                $(".FL_ApprovalSheetContract").css('display', 'none');
                                $("#ddlApprovalsSheets").removeClass("validelement");
                            }


                            $("#loadingPage").fadeOut();
                            $("#dvWorkflow").dialog("option", "title", "Contract Record Approval Workflow");
                            $("#dvWorkflow").dialog("open");
                            $("#dvWorkflow").height("auto");
                        },
                        error: function () {
                            $("#ddlRule").append('<option value="Ad-hoc">Ad-hoc</option>');
                            $("#lblddlRule").css("display", "");
                            $("#ddlRule").css("display", "none");
                            $("#lblddlRule").text("Ad-hoc");
                            if (!workflowAdHoc)
                                $("#ddlRule").attr('disabled', 'disabled');
                            var totalFileCount = 1;
                            var htmlFormatFile = '<tr id="trStage' + totalFileCount + '">';
                            htmlFormatFile += '<td class="width30 wf_approval start_workflow">';
                            htmlFormatFile += '<input id="txtStage' + totalFileCount + '" name="Stage' + totalFileCount + '" title="Stage" placeholder="Stage Name" type="text" class="f_inpt width95_a validelement" value="Stage ' + totalFileCount + '"/>';
                            htmlFormatFile += '</td>';
                            htmlFormatFile += '<td class="width46 start_workflow">';
                            htmlFormatFile += '<select id="ddlAssignTo' + totalFileCount + '" name="AssignTo' + totalFileCount + '"  multiple="multiple" data-placeholder="Select" class="width97 a-Workflow-height validmultiselect"></select>';
                            htmlFormatFile += '</td>';
                            htmlFormatFile += '<td class="width20 padding_top_3px v_align_top start_workflow">';
                            htmlFormatFile += '<select id="ddlOrder' + totalFileCount + '" name="Order' + totalFileCount + '"  class="f_inpt width97 height32" disabled="disabled"><option selected="selected">Serial</option><option>Parallel</option></select>';
                            htmlFormatFile += '</td>';
                            htmlFormatFile += '<td class="width4 padding_top_10px v_align_top start_workflow">';
                            htmlFormatFile += '<img src="../Content/Images/icon/delete.png" style="visibility: hidden; width: 20px" onclick="DeleteStage(this)" />';
                            htmlFormatFile += '</td>';
                            htmlFormatFile += '</tr>';

                            $("#tblStage").append(htmlFormatFile);
                            var $options = $("#ddlApprovers > option").clone();
                            $('#ddlAssignTo' + totalFileCount).append($options);
                            $("#ddlAssignTo" + totalFileCount).chosen().change(function () {
                                var vasstoid = $(this).attr('id').replace("ddlAssignTo", "");
                                if ($(this).val().length > 1) {
                                    $("#ddlOrder" + vasstoid).prop('disabled', false);
                                }
                                else {
                                    $("#ddlOrder" + vasstoid).val("Serial");
                                    $("#ddlOrder" + vasstoid).prop('disabled', true);
                                }
                            });
                            //ENH492 - Workflow Cycle time Report & default naming of stages.
                            $("#txtStage" + totalFileCount).autocomplete({
                                source: StageName,
                                minLength: 1,
                                focus: function (event, ui) {
                                    return false;
                                },
                                select: function (evn, uidetails) {
                                    $("#txtStage" + totalFileCount).val(uidetails.item.label);

                                }
                            });


                            $("#loadingPage").fadeOut();
                            $("#dvWorkflow").dialog("option", "title", "Contract Record Approval Workflow");
                            $("#dvWorkflow").dialog("open");
                            $("#dvWorkflow").height("auto");
                        }
                    });
                }
                break;
            }
        case "review":
            {
                var contractTitle = $("#lblContractTitle").text();
                var contractID = getParameterByName("ContractID");
                $("#txtTodoTitle").val('Review for ' + contractTitle);
                $("#ddlTodoType option").filter(function (index) { return $(this).text() === "Contract Review"; }).prop('selected', true);
                $("#txtBrowseElement").val(contractTitle);
                $("#txtBrowseElementID").val(contractID);
                $("#trBrowse").css("display", "");
                $("#browse").css("display", "none");
                $("#tdBrowseElement").html("Contract Title");
                $('#ddlTodoType').attr('disabled', 'disabled');
                GetValuesAndAutoPopulate("ddlApprovers", "");
                $("#txtDueDate").val("");
                var nicInstance = nicEditors.findEditor('txtNotes');
                nicInstance.setContent('');
                $("#chkNotifyMe").prop('checked', false);
                fnChangeAssignedToText();
                $("#dvTodo").dialog("open");
                break;
            }
        case "delete":
            {
                var allowdelete = false;
                var vContractStatus = ["Ready for Signature", "Awaiting Signatures", "Signed", "Active", "Up for Renewal", "Renewed", "Extended", "On Hold", "Replaced", "Expired", "Cancelled", "Terminated", "Archived", "About to Expire"];
                if ($.inArray(contractItem.Status, vContractStatus) !== -1) {
                    if ($("#spancloseout").text() == "Yes" || (contractItem.FinalizedBy == null || contractItem.FinalizedBy == "")) {
                        allowdelete = true;
                    } else {
                        if (contractItem.IsDraft == "Yes") {
                            allowdelete = true;
                        } else {
                            allowdelete = false;
                        }
                    }
                } else {
                    allowdelete = true;
                }
                if (allowdelete) {
                    swal({
                        title: '',
                        text: "Are you sure you want to <span style=\"font-weight:700\">delete</span> Contract Record?",
                        type: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes',
                        cancelButtonText: 'No',
                        html: true
                    },
         function (confirmed) {
             if (confirmed) {
                 var contractID = getParameterByName("ContractID");
                 $("#loadingPage").fadeIn();
                 $.ajax({
                     url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts?contractid=' + contractID,
                     type: 'DELETE',
                     dataType: 'json',
                     headers: {
                         'eContracts-ApiKey': localStorage.APIKey, 'UserName': localStorage.UserName
                     },
                     cache: false,
                     success: function (data) {
                         $("#loadingPage").fadeOut();
                         swal("", data);
                         if ($.inArray(contractItem.Status, vContractStatus) !== -1 && (contractItem.FinalizedBy != null && contractItem.FinalizedBy != ""))
                             location = "/Contracts";
                         else
                             location = "/Pipeline";
                     }
                 });
             }

         });
                } else {
                    swal({
                        title: '',
                        text: "Only Closeout Contract Record can be deleted. Do you want to edit for Closeout now?",
                        type: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes',
                        cancelButtonText: 'No',
                        html: true
                    },
        function (confirmed) {
            if (confirmed) {
                contextMenuContractSettings("edit", "", "Closeout")
            }
            return;
        });
                }

                break;
            }
        case "sendacopy":
            {
                ClearSendCopyForm();
                $("#tdSendCopy").html("<b class='PreserveSpace'>" + vContractTile + "</b>");
                $('#sendCopyPopUp').dialog('open');
                break;
            }
        case "share":
            {
                ClearShareContractForm();
                $.ajax({
                    url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Workflow/settings',
                    type: 'GET',
                    dataType: 'json',
                    "Content-Type": "application/json",
                    headers: {
                        'eContracts-ApiKey': localStorage.APIKey
                    },
                    cache: false,
                    success: function (settings) {
                        $("#txtShareExpInContract").val(settings.TaskDuration);
                        if ($("#txtShareExpInContract").val() != "") {
                            $("#txtShareExpInContract").trigger("onchange");
                        } else {
                            $("#lblValidLinkDateContract").empty();
                        }
                        //$("#lblValidLinkDateContract").html(moment(new Date()).add("days", settings.TaskDuration).format('MM/DD/YYYY'));
                    },
                    error: function () {

                    }
                });
                var LinkURL = $(el).find("a").attr('href');
                var contractID = $("#hdnContractID").val();
                var contractTitle = $("#lblContractTitle").text();
                $("#tdShareContract").html("<b>" + contractTitle + "</b>");
                //****Start*****************************************//
                getNameAndEmail();
                GetValuesAndAutoPopulate("ddlContractShareInternal", "");
                //getShareNameandEmailIdInternal(vContractID, "ddlContractShareInternal");
                //****End*****************************************//
                $("#shareContract").dialog("open");
                break;
            }
        case "status":
            {
                BindStatusbyCLM('Yes');

                break;

            }
        case "value":
            {
                ManageContractValue();

                break;
            }
        case "people":
            {

                MangePeople();
                break;
            }
        case "permission":
            {
                $('#newPopup').empty();
                GetValueAndPopulateManagerNew(contractItem, null);
                var statusss = $('#chkpermission').is(':checked');
                arrUser = GetArrayUserList();
                $("#txtAddUser").empty();
                arrUser = arrUser.filter(function (x) {
                    return arrPermsnUser.indexOf(x) < 0
                })
                var datalenght = arrUser.length;
                for (var i = 0; i < datalenght; i++) {
                    var sUserName = arrUser[i];
                    var article = '<option value="' + sUserName + '">' + sUserName + '</option>';
                    $("#txtAddUser").append(article);
                }
                $("#txtAddUser").chosen();
                $('#txtAddUser').trigger('chosen:updated');

                if (contractItem.CustomPermission == 'Yes') {
                    $("#chkpermission").prop('checked', true);

                    $("#ddlFullControl").prop('disabled', false).trigger("chosen:updated");
                    $("#ddlReadWrite").prop('disabled', false).trigger("chosen:updated");
                    $("#ddlReadOnly").prop('disabled', false).trigger("chddlPermissionosen:updated");

                    $("#divBottom").show();
                    $("#chkPublicContract").attr("disabled", "disabled");
                    $("#chkPublicContract").prop('checked', false);

                }
                else {

                    $("#ddlFullControl").prop('disabled', true).trigger("chosen:updated");
                    $("#ddlReadWrite").prop('disabled', true).trigger("chosen:updated");
                    $("#ddlReadOnly").prop('disabled', true).trigger("chosen:updated");
                    $("#chkpermission").prop('checked', false);
                    var vLastRow = $("#newPopup li").length;
                    var totalPermissionCount = "1";
                    if (typeof vLastRow == "undefined") {
                        totalPermissionCount = "1";
                    }
                    else {
                        totalPermissionCount = parseInt(vLastRow);
                    }
                    for (i = 1; i <= totalPermissionCount; i++) {
                        $("#PermissionOption" + i).prop('disabled', true);
                        $("#" + i).hide();
                    }
                    $("#divBottom").hide();
                }

                if (contractItem.IsPublic == 'Yes')
                    $("#chkPublicContract").prop('checked', true);
                else
                    $("#chkPublicContract").prop('checked', false);

                $('#addEditPermission').dialog('open');
                break;
            }
        case "alerts":
            {
                ManageAlerts();

                break;
            }
        case "defaultproperties":
            {
                if ($("#ddlDPContractTypes > option").length <= 1)//Performance Optimization
                    BindContractTypes();
                $("#ddlDPContractTypes").removeClass("error");
                $("#ddlDPTransactionType").removeClass("error");
                $("#ddlDPContractClass").removeClass("error");
                $("#ddlDPContractTypes option").filter(function (index) { return $(this).text() === contractItem.ContractType; }).prop('selected', true);
                $("#ddlDPTransactionType option").filter(function (index) { return $(this).text() === contractItem.TransactionType; }).prop('selected', true);
                $("#ddlDPContractClass option").filter(function (index) { return $(this).text() === contractItem.ContractClass; }).prop('selected', true);
                if (contractItem.Renewable == "Yes") {
                    $("#chkDPRenewable").prop('checked', true);
                    $("#chkDPRenewalApproval").removeAttr("disabled");
                }
                if (contractItem.Extendable != null && contractItem.Extendable == "Yes") {
                    $("#chkDPExtendable").prop('checked', true);
                    $("#chkDPExtensionApproval").removeAttr("disabled");
                }
                if (contractItem.NeedApprovalForRenewal != null && contractItem.NeedApprovalForRenewal == "Yes") {
                    $("#chkDPRenewalApproval").prop('checked', true);
                }
                if (contractItem.NeedApprovalForExtension != null && contractItem.NeedApprovalForExtension == "Yes") {
                    $("#chkDPExtensionApproval").prop('checked', true);
                }
                if (contractItem.Amendable != null && contractItem.Amendable == "Yes") {
                    $("#chkDPAmendmentApproval").removeAttr("disabled");
                }
                if (contractItem.NeedApprovalForAmendment != null && contractItem.NeedApprovalForAmendment == "Yes") {
                    $("#chkDPAmendmentApproval").prop('checked', true);
                }

                $("#popupDefaultProperties").dialog("option", "title", "Default Properties");
                $("#popupDefaultProperties").dialog("open");
                break;
            }
            //manoj
        case "missinginfo":
            {
                GetContractPendingAction(true);
                break;
            }
            //manoj
        case "contractrenewal":
            {
                contextMenuTerm("manage");
                break;
            }
        case "archive":
            {
                swal({
                    title: '',
                    text: "Are you sure you want to <span style=\"font-weight:700\">archive</span> this Contract Record?",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes',
                    cancelButtonText: 'No',
                    html: true
                },
     function (confirmed) {
         if (confirmed) {
             var vCancelNote = '';
             $.ajax({
                 url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName("ContractID") + '/changestatus?status=Archived',
                 type: 'PUT',
                 dataType: 'json',
                 headers: {
                     'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging, username: localStorage.UserName
                 },
                 data: vCancelNote,
                 cache: false,
                 success: function (result) {
                     contractItem.Status = "archive";
                     ContractTopActions();
                 }
             });
         }
         return;
     });

                break;
            }
            //Copy Contract link Enhancment
        case "copylink":
            {
                ClearCopyLinkForm();
                GetUniqueCopyLinkID();
               
                break;
            }
            //Copy Contract link Enhancment
    }
}

function contextMenuContractSettingsRecycleBin(action, el, pos) {
    switch (action) {
        case "view":
            {
                $("#Summary").addClass('pop_up_Harizondal_meta_active');
                $("#Details").removeClass('pop_up_Harizondal_meta_active');
                if ($('#tblDetailsMetadata tr').length == 0) {
                    BindMetaData(contractItem, false);
                }
                else {
                    $('#tblSummary').css("display", "");
                    $('#tblDetailsMetadata').css("display", "none");
                    $('#dialogSummary').dialog('open');
                }
                break;
            }
        case "history":
            {
                if ($('#contractLogs').text() == "No items found.") {
                    $('#contractLogsPopup').dialog('open');
                }
                else if ($('#contractLogs tr').length == 0) {
                    CreateContractActivityList();
                }
                else {
                    $('#contractLogsPopup').dialog('open');
                }
                break;
            }
        case "delete":
            {
                swal({
                    title: '',
                    text: "Are you sure you want to <span style=\"font-weight:700\">delete</span> Contract Record?",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes',
                    cancelButtonText: 'No',
                    html: true
                },
     function (confirmed) {
         if (confirmed) {
             var contractID = getParameterByName("ContractID");
             $.ajax({
                 url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/DeleteFromRecycleBin?contractid=' + contractID,
                 type: 'DELETE',
                 dataType: 'json',
                 headers: {
                     'eContracts-ApiKey': localStorage.APIKey, username: localStorage.UserName
                 },
                 cache: false,
                 success: function (data) {
                     swal("", data);
                     var vContractStatus = ["Ready for Signature", "Awaiting Signatures", "Signed", "Active", "Up for Renewal", "Renewed", "Extended", "On Hold", "Replaced", "Expired", "Cancelled", "Terminated", "Archived", "About to Expire"];
                     if ($.inArray(contractItem.Status, vContractStatus) !== -1)
                         location = "/Contracts";
                     else
                         location = "/Pipeline";

                 }
             });
         }
         return;
     });

                break;
            }

    }
}

function ManageContractValue() {
    GetContractValueFormData();
    $("#addEditContractValue").dialog("open");
}

function GetContractValueFormData() {
    var strBaseContractValueCurr = "";
    if ($("#hdnBaseContractCurrency").text() == "0") {
        $("#hdnBaseContractCurrency").text("");
    }
    if ($("#hdnContractCurrency").text() == "0") {
        $("#hdnContractCurrency").text("");
    }

    strBaseContractValueCurr = $("#hdnBaseContractValue").text() + " " + $("#hdnBaseContractCurrency").text();
    //if (strBaseContractValueCurr.trim() == "0") {
    //    strBaseContractValueCurr = "Not Available";
    //    $("#lblContractValueInBaseCurency").text(strBaseContractValueCurr);
    //} else {
    if (vCurrencyDisplayStyle == "UK") {
        $('#lblContractValueInBaseCurency').autoNumeric('init', {
            vMax: '99999999999999999999.99'
        });
        $('#lblContractValueInBaseCurency').autoNumeric('set', parseFloat($("#hdnBaseContractValue").text()));
        $('#lblContractValueInBaseCurency').append(" " + $("#hdnBaseContractCurrency").text());
    } else if (vCurrencyDisplayStyle == "CAN") {
        $('#lblContractValueInBaseCurency').autoNumeric('init', {
            aSep: ' ', aDec: '.', vMax: '99999999999999999999.99'
        });
        $('#lblContractValueInBaseCurency').autoNumeric('set', parseFloat($("#hdnBaseContractValue").text()));
        $('#lblContractValueInBaseCurency').append(" " + $("#hdnBaseContractCurrency").text());
    } else if (vCurrencyDisplayStyle == "EU") {
        $('#lblContractValueInBaseCurency').autoNumeric('init', {
            aSep: '.', aDec: ',', vMax: '99999999999999999999.99'
        });
        $('#lblContractValueInBaseCurency').autoNumeric('set', parseFloat($("#hdnBaseContractValue").text()));
        $('#lblContractValueInBaseCurency').append(" " + $("#hdnBaseContractCurrency").text());
    } else if (vCurrencyDisplayStyle == "IND") {
        $('#lblContractValueInBaseCurency').autoNumeric('init', {
            dGroup: '2', vMax: '99999999999999999999.99'
        });
        $('#lblContractValueInBaseCurency').autoNumeric('set', parseFloat($("#hdnBaseContractValue").text()));
        $('#lblContractValueInBaseCurency').append(" " + $("#hdnBaseContractCurrency").text());
    }

    // }

    $("#lblCurrencyDisplayStyle").text(vCurrencyDisplayStyle);
    $("#ddlTransactionType").find('option[value="' + $("#hdnTransactionType").text() + '"]').prop("selected", true);
    //if ($("#hdnContractValue").text() == "0") {
    //    $("#hdnContractValue").text("");
    //    $("#txtContractValuepopup").attr("placeholder", "Not Available");

    //    if (vCurrencyDisplayStyle == "UK") {
    //        $('#txtContractValuepopup').autoNumeric('init');
    //    } else if (vCurrencyDisplayStyle == "CAN") {
    //        $('#txtContractValuepopup').autoNumeric('init', { aSep: ' ', aDec: '.' });
    //    } else if (vCurrencyDisplayStyle == "EU") {
    //        $('#txtContractValuepopup').autoNumeric('init', { aSep: '.', aDec: ',' });
    //    } else if (vCurrencyDisplayStyle == "IND") {
    //        $('#txtContractValuepopup').autoNumeric('init', { dGroup: '2' });
    //    }
    //}
    //else {
    $("#txtContractValuepopup").removeAttr("placeholder");
    //    $("#tblcontractvaluepopup tr td.labelright.f_list.financials").each(function (index, value) {

    //        var id = value.children[0].id;
    //        var value1 = value.children[0].value; //$(value).find('td:first-child').text();
    //        $("#" + id).val(value1);
    //    });

    //    $("#tblcontractvaluepopup tr td.labelright.f_list.financials").each(function (index, value) {

    //        var id = value.children[0].id;
    //        var value1 = value.children[0].value; //$(value).find('td:first-child').text();
    //        $("#" + id).val(value1);
    //    });


    FinancialMetadata();

    if (vCurrencyDisplayStyle == "UK") {
        $('#txtContractValuepopup').autoNumeric('init');
        $('#txtContractValuepopup').autoNumeric('set', parseFloat($("#hdnContractValue").text()))
    } else if (vCurrencyDisplayStyle == "CAN") {
        $('#txtContractValuepopup').autoNumeric('init', {
            aSep: ' ', aDec: '.'
        });
        $('#txtContractValuepopup').autoNumeric('set', parseFloat($("#hdnContractValue").text()))
    } else if (vCurrencyDisplayStyle == "EU") {
        $('#txtContractValuepopup').autoNumeric('init', {
            aSep: '.', aDec: ','
        });
        $('#txtContractValuepopup').autoNumeric('set', parseFloat($("#hdnContractValue").text()))
    } else if (vCurrencyDisplayStyle == "IND") {
        $('#txtContractValuepopup').autoNumeric('init', {
            dGroup: '2'
        });
        $('#txtContractValuepopup').autoNumeric('set', parseFloat($("#hdnContractValue").text()))
    }

    // }
    $("#ddlContractCurrencypopup").val($("#hdnContractCurrency").text());


    //manoj
    var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
    var vDocLibFeat = $.grep(veContractFeatures, function (n, i) {
        return (n.RowKey == "19" && n.Status == "ON");
    });
    if (vDocLibFeat.length > 0) {
        $(cutomFinancialFields).each(function (i, itemfield) {
            $('#txt' + itemfield.FieldName + 'popup').keypress(function (e) {
                if (e.keyCode == 13)
                    return false;
            });

            if (vCurrencyDisplayStyle == "UK") {
                //popupbind
                if (itemfield.FieldName != "ContractValue") {
                    $('#lbl' + itemfield.FieldName + 'InBaseCurency').autoNumeric('init', {
                        vMax: '99999999999999999999.99'
                    });
                    $('#lbl' + itemfield.FieldName + 'InBaseCurency').autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() : "0"));
                    $('#lbl' + itemfield.FieldName + 'InBaseCurency').append(" " + $("#hdnBaseContractCurrency").text());
                    $('#txt' + itemfield.FieldName + 'popup').autoNumeric('init');
                    $('#txt' + itemfield.FieldName + 'popup').autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() : "0"));
                }
                //popupbind
            } else if (vCurrencyDisplayStyle == "CAN") {
                //popupbind
                if (itemfield.FieldName != "ContractValue") {
                    $('#lbl' + itemfield.FieldName + 'InBaseCurency').autoNumeric('init', {
                        aSep: ' ', aDec: '.', vMax: '99999999999999999999.99'
                    });
                    $('#lbl' + itemfield.FieldName + 'InBaseCurency').autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() : "0"));
                    $('#lbl' + itemfield.FieldName + 'InBaseCurency').append(" " + $("#hdnBaseContractCurrency").text());
                    $('#txt' + itemfield.FieldName + 'popup').autoNumeric('init', {
                        aSep: ' ', aDec: '.'
                    });
                    $('#txt' + itemfield.FieldName + 'popup').autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() : "0"));
                }
                //popupbind
            } else if (vCurrencyDisplayStyle == "EU") {
                //popupbind
                if (itemfield.FieldName != "ContractValue") {
                    $('#lbl' + itemfield.FieldName + 'InBaseCurency').autoNumeric('init', {
                        aSep: '.', aDec: ',', vMax: '99999999999999999999.99'
                    });
                    $('#lbl' + itemfield.FieldName + 'InBaseCurency').autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() : "0"));
                    $('#lbl' + itemfield.FieldName + 'InBaseCurency').append(" " + $("#hdnBaseContractCurrency").text());
                    $('#txt' + itemfield.FieldName + 'popup').autoNumeric('init', {
                        aSep: '.', aDec: ','
                    });
                    $('#txt' + itemfield.FieldName + 'popup').autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() : "0"));
                }
                //popupbind
            }
            else if (vCurrencyDisplayStyle == "IND") {
                //popupbind
                if (itemfield.FieldName != "ContractValue") {
                    $('#lbl' + itemfield.FieldName + 'InBaseCurency').autoNumeric('init', {
                        dGroup: '2', vMax: '99999999999999999999.99'
                    });
                    $('#lbl' + itemfield.FieldName + 'InBaseCurency').autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find('CustomBase' + itemfield.FieldName).text() : "0"));
                    $('#lbl' + itemfield.FieldName + 'InBaseCurency').append(" " + $("#hdnBaseContractCurrency").text());
                    $('#txt' + itemfield.FieldName + 'popup').autoNumeric('init', {
                        dGroup: '2'
                    });
                    $('#txt' + itemfield.FieldName + 'popup').autoNumeric('set', parseFloat(($(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() != "") ? $(vMetadatavaluetobindcutomFinancial).find(itemfield.FieldName).text() : "0"));
                }
                //popupbind
            }

        });
    }
    //manoj
}

$("#btnCancelContractValues").click(function () {
    $(".removeChoices").each(function (i, item) {
        var value = $(".removeChoices").val();
        $("#" + item.id + " option[value='dropdownval']").remove();
    });
    $(".removeMultichoice").each(function (i, item) {
        $("#" + item.id + "").val('').trigger("chosen:updated");
    });
    $(".removeText").each(function (i, item) {
        $("#" + item.id + "").val('');
    });
    $(".clsMultilineText").each(function (i, item) {
        $("#" + item.id + "").val('');
    });
    $("#addEditContractValue").dialog("close");

});

function BindCurrencies() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/currencies',
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (data) {
            var datalenght = data.length;
            for (var i = 0; i < datalenght; i++) {
                var item = data[i];

                $("#ddlProductCurrency").append("<option value='" + item.Abbreviation + "'>" + item.Abbreviation + "</option>");
                $("#ddlTransactionCurrency").append("<option value='" + item.Abbreviation + "'>" + item.Abbreviation + "</option>");
                $("#ddlContractCurrencypopup").append("<option value='" + item.Abbreviation + "'>" + item.Abbreviation + "</option>");
                $("#ddlCatalogCurrency").append("<option value='" + item.Abbreviation + "'>" + item.Abbreviation + "</option>");
                $("#ddlPriceBreakDownCurrencypopup").append("<option value='" + item.Abbreviation + "'>" + item.Abbreviation + "</option>");
                $("#ddlCatalogCurrencyedit").append("<option value='" + item.Abbreviation + "'>" + item.Abbreviation + "</option>");
                if (item.BaseCurrency == "Yes")
                    $("#hdnBaseCurrency").val(item.Abbreviation);
            }
        }
    });
}

$('#btnAddRelatedContracts').click(function () {
    AddRelatedContracts();
});
var relatedContractsTag = [];
var arrRelatedContractsCounterparty = [];//Performance Optimization
function AddRelatedContracts() {
    relatedContractsTag = [];
    $("#ddlRelConFilterContractType option:selected").prop('selected', false).trigger('chosen:updated');
    $("#ddlRelConFilterCounterparty option:selected").prop('selected', false).trigger('chosen:updated');
    addbuttonclick = false;
    $("#loadingPage").fadeIn();
    $('#loadContract').html('<img src="../Content/Images/icon/loading.gif"> Working on it...');
    $('#tblPopupContracts').empty();
    $("#txtSearchBoxContract").val("");
    var vURL = vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/getrelatedcontracts?stage=&searchkeyword=&customquery=&sortbyfield=ContractTitle&orderby=ASC';
    if ($('#tblPopupContracts tr').length <= 0) {
        $("#txtSearchBoxContract").val("");
        $.ajax({
            url: vURL,
            type: 'GET',
            dataType: 'json',
            "Content-Type": "application/json",
            headers: {
                'eContracts-ApiKey': localStorage.APIKey, BusinessAreaLocation: $("#lblBusinessAreaPath").text(), UserID: localStorage.UserID
            },
            cache: false,
            success: function (data) {
                //Performance Optimization
                var vCounterparty = '';
                $.grep(data, function (n, i) {
                    vCounterparty += ';' + n.Counterparty;
                });
                arrRelatedContractsCounterparty = $.map(vCounterparty.split(";"), $.trim);
                arrRelatedContractsCounterparty = $.grep(arrRelatedContractsCounterparty, function (n) {
                    return n;
                });
                //Performance Optimization
                $('#tblPopupContracts').empty();
                $('#loadContract').empty();
                $("#hdnRelatedContracts").append(";" + getParameterByName("ContractID"))
                //Sridhar - Added pagination
                //manoj
                var SelectedRelContractID = $("#hdnRelatedContracts").text().split(';').filter(function (e) {
                    return e
                });

                if (SelectedRelContractID.length > 0) {
                    data = $.grep(data, function (nRelCon, iRelCon) {
                        return (SelectedRelContractID.indexOf(nRelCon.RowKey) == -1);
                    });
                }
                //$("#hdnRelatedContracts").text()
                // listRelatedContracts
                //manoj
                listRelatedContracts = data;
                CreateRelatedContractsList(0);
                collectrelatedcontractrowkey("");
                var vCount = data.length;
                if (vCount != 0) {
                    $("#tblPopupContracts tr td").attr('style', 'vertical-align: top');
                    $('#compact-paginationRelatedContracts').css('display', '');
                    $('#compact-paginationRelatedContracts').pagination({
                        items: vCount,
                        itemsOnPage: 10,
                        type: 'tbody',
                        typeID: 'tblPopupContracts',
                        row: 'tr',
                        cssStyle: 'compact-theme',
                        listname: 'RelatedContracts'
                    });
                } else {
                    $('#compact-paginationRelatedContracts').css('display', 'none');
                    $('#loadContract').html('<p style="margin-left: 20px;">No items found.</p>')
                }
                $("#txtSearchBoxContract").autocomplete({
                    source: relatedContractsTag,
                    minLength: 2,
                    focus: function (event, ui) {
                        return false;
                    },
                    select: function (evn, uidetails) {
                        $("#txtSearchBoxContract").val(uidetails.item.label);
                        ViewContracts();
                    }
                });
                $(".validelement").each(function (index, element) {
                    $(element).removeClass("error");
                    $("#errormsg_" + element.id).remove();
                });
                $("#popupContracts").dialog("option", "title", "Related Contract Record(s)");
                $("#popupContracts").dialog("open");
                $("#loadingPage").fadeOut();
            },
            error: function (data) {
                var arr = data.responseText.split(':');
                var str1 = arr[1];
                var str2 = "No contract found";

                if (str1.indexOf(str2) != -1) {
                    $('#loadContract').html('<p style="margin-left: 20px;">No items found.</p>')
                    $("#popupContracts").dialog("option", "title", "Related Contract Record(s)");
                    $("#popupContracts").dialog("open");
                    $("#loadingPage").fadeOut();
                }



                $('#loadMA').empty();
                $('#loadContract').empty();
                $('#loadMA').html('<p style="margin-left: 20px;">No items found.</p>');
                $('#tblPopupContracts').html('No items found.');
                $("#popupContracts").dialog("option", "title", "Related Contract Record(s)");
                $("#popupContracts").dialog("open");
                $("#loadingPage").fadeOut();
            }
        });
    } else {
        $('#loadMA').empty();
        $("#popupContracts").dialog("option", "title", "Related Contract Record(s)");
        $("#popupContracts").dialog("open");
        $("#loadingPage").fadeOut();
    }

    vContractID = getParameterByName("ContractID");
    BindRelatedContractsPopup(vContractID);
}

function CreateRelatedContracts() {
    var vRelatedContractID = "";
    var vRelatedContractTitle = "";
    var vChildRelation = "";
    var vParentRelationShip = "";
    var vRelatedStatus = "";

    //$('input:checkbox[name="RelatedContract"]:checked').each(function () {
    //    if (vRelatedContractID == "") {
    //        vRelatedContractID = this.id;
    //        vRelatedContractTitle = this.value;
    //        vChildRelation = $(this).parent().parent().children(".ddl").find('option:selected').text();
    //        vParentRelationShip = $("#ddlRelationshipTypeParent").find('option:selected').text();
    //    }
    //    else {
    //        vRelatedContractID += "; " + this.id;
    //        vRelatedContractTitle += "; " + this.value;
    //        vChildRelation += "; " + $(this).parent().parent().children(".ddl").find('option:selected').text();
    //        vParentRelationShip += "; " + $("#ddlRelationshipTypeParent").find('option:selected').text();
    //    }
    //});

    if (arrRelatedContractsSelected.length > 0) {
        vRelatedContractID = arrRelatedContractsSelected[0].RelatedContractID;
        vRelatedStatus = arrRelatedContractsSelected[0].RelatedStatus;
        vRelatedContractTitle = arrRelatedContractsSelected[0].RelatedContractTitle;
        vChildRelation = arrRelatedContractsSelected[0].RelatedRelationshipType;
        vParentRelationShip = arrRelatedContractsSelected[0].RelationshipType;
    }

    if (vRelatedContractID != "") {
        if (requiredValidator('popupContracts', false)) {
            if (addbuttonclick) {
                arrRelatedContracts.push({
                    ContractID: "",
                    ContractTitle: "",
                    RelatedContractID: vRelatedContractID,
                    RelatedContractTitle: vRelatedContractTitle,
                    RelatedStatus: vRelatedStatus,
                    RelationshipType: vParentRelationShip,
                    RelatedRelationshipType: vChildRelation,
                    CreatedBy: localStorage.UserName,
                    ModifiedBy: localStorage.UserName
                });

                $("#popupContracts").dialog("close");
                if ($('#RelatedContracts').val() != "") {
                    var oldrelatedcontrct = $('#RelatedContracts').val();
                    if (oldrelatedcontrct.trim() != "") {
                        $('#RelatedContracts').val(oldrelatedcontrct + ";" + vRelatedContractTitle);
                    }
                }
                else {
                    $('#RelatedContracts').val(vRelatedContractTitle);
                }
            } else {
                $("#loadingPage").fadeIn();
                $.ajax({
                    url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName('ContractID') + '/relatedcontracts',
                    type: 'POST',
                    dataType: 'json',
                    headers: {
                        'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                    },
                    data: {
                        ContractID: getParameterByName('ContractID'),
                        ContractTitle: $("#lblContractTitle").text(),
                        RelatedContractID: vRelatedContractID,
                        RelatedContractTitle: vRelatedContractTitle,
                        RelatedStatus: vRelatedStatus,
                        RelationshipType: vParentRelationShip,
                        RelatedRelationshipType: vChildRelation,
                        CreatedBy: localStorage.UserName,
                        ModifiedBy: localStorage.UserName,
                    },
                    cache: false,
                    success: function (person) {
                        arrRelatedContractsSelected = [];
                        arrRelatedcontractRowkey = [];
                        $("#popupContracts").dialog("close");
                        $("#loadingPage").fadeOut();
                        $('#liSelectedRelatedContract').empty();
                        BindRelatedContracts();
                    },
                    error: function (request) {
                        $("#loadingPage").fadeOut();
                    }
                });
            }
            return true;
        }
    } else {
        swal("", "No contract has been selected.");
        $("#popupContracts").dialog("close");
        return true;
    }
}

function CreateRelatedContracttemplate() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName('ContractID') + '/relatedcontracts',
        type: 'POST',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
        },
        data: {
            ContractID: getParameterByName('ContractID'),
            ContractTitle: $("#lblContractTitle").text(),
            RelatedContractID: arrRelatedContracts[arrRelatedContracts.length - 1].RelatedContractID,
            RelatedContractTitle: arrRelatedContracts[arrRelatedContracts.length - 1].RelatedContractTitle,
            RelatedStatus: arrRelatedContracts[arrRelatedContracts.length - 1].RelatedStatus,
            RelationshipType: arrRelatedContracts[arrRelatedContracts.length - 1].RelationshipType,
            RelatedRelationshipType: arrRelatedContracts[arrRelatedContracts.length - 1].RelatedRelationshipType,
            CreatedBy: localStorage.UserName,
            ModifiedBy: localStorage.UserName,
        },
        cache: false,
        success: function (person) {
            BindRelatedContracts();
            arrRelatedContracts = [];
        },
        error: function (request) {
            arrRelatedContracts = [];
        }
    });
}

function ContractSettingPending() {
    $("#ContractSetting").addClass('pop_up__Acti');
    $("#StartApproval").removeClass('pop_up__Acti');
    $("#Editcontract").removeClass('pop_up__Acti');
    $("#Activities").removeClass('pop_up__Acti');
    $("#JustInfo").removeClass('pop_up__Acti');
    $('#tblContractSettingMetadata').css("display", "");
    $('#tblStartApprovalMetadata').css("display", "none");
    $('#tblEditcontractMetadata').css("display", "none");
    $('#tblActivitiesMetadata').css("display", "none");
    $('#tblJustInfoMetadata').css("display", "none");
    if ($("#hdnPermission").val() !== 'View' && $("#hdnPermission").val() !== '' && $("#hdnPermission").val() !== null && getParameterByName("Stage") != "pipeline") {
        //Sridhar
        if ($("#hdnPermission").val() == "Manage") {
            if (ContractStatus == "Expired" || ContractStatus == "Replaced" || ContractStatus == "Cancelled") {
                $("#btnPendingUpdate").hide();
            }
            else {
                $("#btnPendingUpdate").show();
            }
        }
        //Sridhar
    }
    else
        $("#btnPendingUpdate").hide();
}

function StartApprovalPending() {
    $("#ContractSetting").removeClass('pop_up__Acti');
    $("#StartApproval").addClass('pop_up__Acti');
    $("#Editcontract").removeClass('pop_up__Acti');
    $("#Activities").removeClass('pop_up__Acti');
    $("#JustInfo").removeClass('pop_up__Acti');
    $('#tblContractSettingMetadata').css("display", "none");
    $('#tblStartApprovalMetadata').css("display", "");
    $('#tblEditcontractMetadata').css("display", "none");
    $('#tblActivitiesMetadata').css("display", "none");
    $('#tblJustInfoMetadata').css("display", "none");
    $("#btnPendingUpdate").hide();
}

function EditcontractPending() {
    $("#ContractSetting").removeClass('pop_up__Acti');
    $("#StartApproval").removeClass('pop_up__Acti');
    $("#Editcontract").addClass('pop_up__Acti');
    $("#Activities").removeClass('pop_up__Acti');
    $("#JustInfo").removeClass('pop_up__Acti');
    $('#tblContractSettingMetadata').css("display", "none");
    $('#tblStartApprovalMetadata').css("display", "none");
    $('#tblEditcontractMetadata').css("display", "");
    $('#tblActivitiesMetadata').css("display", "none");
    $('#tblJustInfoMetadata').css("display", "none");
    if ($("#hdnPermission").val() !== 'View' && $("#hdnPermission").val() !== '' && $("#hdnPermission").val() !== null)
        $("#btnPendingUpdate").show();
    else
        $("#btnPendingUpdate").hide();
}

function JustInfoPending() {
    $("#ContractSetting").removeClass('pop_up__Acti');
    $("#StartApproval").removeClass('pop_up__Acti');
    $("#Editcontract").removeClass('pop_up__Acti');
    $("#Activities").removeClass('pop_up__Acti');
    $("#JustInfo").addClass('pop_up__Acti');
    $('#tblContractSettingMetadata').css("display", "none");
    $('#tblStartApprovalMetadata').css("display", "none");
    $('#tblEditcontractMetadata').css("display", "none");
    $('#tblActivitiesMetadata').css("display", "none");
    $('#tblJustInfoMetadata').css("display", "");
    $("#btnPendingUpdate").hide();
}


function MetadataSummary() {

    $("#Summary").addClass('pop_up_Harizondal_meta_active');
    $("#Details").removeClass('pop_up_Harizondal_meta_active');
    $("#Details").removeClass('pop_up__Acti');
    $("#Summary").addClass('pop_up__Acti');
    $('#tblSummary').css("display", "");
    $('#tblDetailsMetadata').css("display", "none");
    $('#tblSummary').css("display", "");
    $('#tblDetailsMetadata').css("display", "none");

}

function MetadataDetails() {

    $("#Details").addClass('pop_up_Harizondal_meta_active');
    $("#Summary").removeClass('pop_up_Harizondal_meta_active');
    $('#tblSummary').css("display", "none");
    $('#tblDetailsMetadata').css("display", "");
}

function BindMetaData(contractRecord, isRefresh) {
    //if (!(TermTypeBinded)) {
    //    if (!(isRefresh)) {
    //        $("#loadingPage").fadeIn();
    //    }
    //BindTermTypes(true);
    // }else{
    if (!(isRefresh)) {
        $("#loadingPage").fadeIn();
    }
    if (contractRecord == null) {
        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts?contractid=' + getParameterByName("ContractID"),
            type: 'GET',
            cache: false,
            contentType: false,
            headers: {
                'eContracts-ApiKey': localStorage.APIKey, UserID: localStorage.UserID
            },
            processData: false,
            success: function (data) {
                contractRecord = data;
                BindMetadataDetail(contractRecord, isRefresh);
            }
        });
    }
    else {
        BindMetadataDetail(contractRecord, isRefresh);
    }
    //}
}

function BindMetadataDetail(contractRecord, isRefresh) {
    $("#tdSumContractTitle").html(contractRecord.ContractTitle);
    $("#tdSumContractNumber").html((contractRecord.ContractNumber != null && contractRecord.ContractNumber != "") ? contractRecord.ContractNumber : '-');
    $("#tdSumContractType").html(contractRecord.ContractType);
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/IContractDetails?contractid=' + getParameterByName("ContractID"),
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (mainmetadataFields) {
            var vMetadata = $(mainmetadataFields).find('Metadata');
            var vMetadataHTML = vMetadata[0].innerHTML;
            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracttypes/metadatas?contracttypename=' + encodeURIComponent(contractRecord.ContractType),
                type: 'GET',
                dataType: 'json',
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey
                },
                cache: false,
                success: function (metadataFields) {
                    $("#tblSummaryMetadata").empty();
                    var datalenght = metadataFields.length;
                    for (var i = 0; i < datalenght; i++) {
                        var item = metadataFields[i];
                        var fieldtext = $(vMetadata).find(item.FieldName).text();

                        //Vinod
                        if (item.FieldType == "File Upload") {
                            continue;
                        }

                        if ((item.FieldName != "ContractTitle") && (item.FieldName != "ContractNumber") && (item.FieldName != "ContractType") && (name != "STATUSCHANGEDALERT")) {
                            var vCurrency = "";
                            var vControls = '<tr>';
                            //if (item.FieldName == "ContractValue" || item.FieldType == "Currency") {
                            //    vControls += '<td class="f_head width40">' + item.FieldDisplayName + '(actual)</td>';
                            //} else {
                            if (item.FieldDisplayName.trim().toLowerCase().indexOf("related contract (s)") >= 0)
                                vControls += '<td class="f_head width60">Related Contract Record(s)</td>';
                            else
                                vControls += '<td class="f_head width90">' + item.FieldDisplayName + '</td>';

                            // }
                            var valuetobindinfield = "";
                            if (item.FieldType == "Date") {
                                var vv = $(vMetadata).find(item.FieldName).text();
                                var onlydate = "";
                                if (vv != null) {
                                    onlydate = vv.substring(0, vv.length - 19);
                                    if (onlydate != "") {
                                        if (localStorage.AppDateFormat == null || localStorage.AppDateFormat == "" || localStorage.AppDateFormat == 'undefined') {
                                            onlydate = moment(new Date(onlydate)).format('MM/DD/YYYY');
                                        }
                                        else {
                                            onlydate = moment(new Date(onlydate)).format(localStorage.AppDateFormat);
                                        }
                                    }
                                    vControls += '<td class="labelleft width60" style="word-break: break-all;">' + onlydate + '</td>';
                                }
                            } else if (item.FieldName == "ContractValue" || item.FieldType == "Currency" || item.FieldType == "Value / Financials") {
                                vCurrency = item.FieldName;
                                //var strBaseContractValueCurr = "";
                                //strBaseContractValueCurr = $("#hdnContractCurrency").text();
                                //if (strBaseContractValueCurr.trim() == "") {
                                //    strBaseContractValueCurr = "Not Available";
                                //}
                                //else {
                                //    //if (fieldtext == "Not Available") {
                                //    //    strBaseContractValueCurr = "";
                                //    //}
                                //}
                                valuetobindinfield = ($(vMetadata).find(item.FieldName).text() != null && $(vMetadata).find(item.FieldName).text() != "") ? $(vMetadata).find(item.FieldName).text() : "0.00";
                                vControls += '<td class="labelleft width60" style="word-break: break-all;"><label id="' + item.FieldName + '">' + valuetobindinfield + '</label> ' + $("#hdnContractCurrency").text() + '</td>';
                                valuetobindinfield = "";
                                //vCurrency = item.FieldName;

                            }
                            else if (item.FieldType == "Phone Number") {
                                if (typeof ($(vMetadata).find(item.FieldName).text()) != "undefined" && $(vMetadata).find(item.FieldName).text() != null && $(vMetadata).find(item.FieldName).text() != "") {
                                    if (typeof ($(vMetadata).find(item.FieldName).text().split(',')[2]) != "undefined" && $(vMetadata).find(item.FieldName).text().split(',')[2] != null && $(vMetadata).find(item.FieldName).text().split(',')[2] != "") {
                                        vControls += '<td class="labelleft width60" style="word-break: break-all;"> +' + $(vMetadata).find(item.FieldName).text().split(',')[2].trim() + '</td>';
                                    }
                                    else {
                                        vControls += '<td class="labelleft width60" style="word-break: break-all;">-</td>';
                                    }
                                }
                                else {
                                    vControls += '<td class="labelleft width60" style="word-break: break-all;">-</td>';
                                }
                            }
                            else if (item.FieldType == "Number-P" || item.FieldType == "Number-PD") {
                                if (typeof ($(vMetadata).find(item.FieldName).text()) != "undefined" && $(vMetadata).find(item.FieldName).text() != null && $(vMetadata).find(item.FieldName).text() != "") {
                                    vControls += '<td class="labelleft width60" style="word-break: break-all;">' + $(vMetadata).find(item.FieldName).text() + '%</td>';
                                }
                                else {
                                    vControls += '<td class="labelleft width60" style="word-break: break-all;">-</td>';
                                }
                            }
                            else {
                                if (item.FieldName == "ContractTermType") {
                                    valuetobindinfield = ($(vMetadata).find(item.FieldName).text() != null && $(vMetadata).find(item.FieldName).text() != "" && $(vMetadata).find(item.FieldName).text() != "undefined" && $(vMetadata).find(item.FieldName).text() != "0") ? TermTypeDisplayName[$(vMetadata).find(item.FieldName).text()] : "-";
                                    vControls += '<td class="labelleft width60" style="word-break: break-all;">' + valuetobindinfield + '</td>';
                                    valuetobindinfield = "";
                                }
                                else if (item.FieldType == "Yes/No") {
                                    valuetobindinfield = ($(vMetadata).find(item.FieldName).text() != null && $(vMetadata).find(item.FieldName).text() != "") ? $(vMetadata).find(item.FieldName).text() : "-";
                                    vControls += '<td class="labelleft width60" style="word-break: break-all;">' + valuetobindinfield;
                                    //if (typeof ($(vMetadata).find('CustomCMD' + item.FieldName).text()) != 'undefined') {
                                    //    if ($(vMetadata).find('CustomCMD' + item.FieldName).text() != '' && $(vMetadata).find('CustomCMD' + item.FieldName).text() != null) {
                                    //        vControls += '<br />' + $(vMetadata).find('CustomCMD' + item.FieldName).text();
                                    //    }
                                    //    else {
                                    //        vControls += '<br />-';
                                    //    }
                                    //}

                                    if (typeof ($(vMetadata).find('CustomCMD' + item.FieldName).text()) != 'undefined') {
                                        if ($(vMetadata).find(item.FieldName).text() == "Yes") {
                                            if (item.CommentYes == "true") {
                                                if (typeof ($(vMetadata).find('CustomCMD' + item.FieldName).text()) != "undefined") {
                                                    if ($(vMetadata).find('CustomCMD' + item.FieldName).text() != "" && $(vMetadata).find('CustomCMD' + item.FieldName).text() != null) {
                                                        vControls += '<br />' + $(vMetadata).find('CustomCMD' + item.FieldName).text();
                                                    }
                                                    else {
                                                        vControls += '<br />-';
                                                    }
                                                }
                                            }
                                            else {
                                                //str += '<br />-';
                                            }
                                        }
                                        else {
                                            if (item.CommentNo == "true") {
                                                if (typeof ($(vMetadata).find('CustomCMD' + item.FieldName).text()) != "undefined") {
                                                    if ($(vMetadata).find('CustomCMD' + item.FieldName).text() != "" && $(vMetadata).find('CustomCMD' + item.FieldName).text() != null) {
                                                        vControls += '<br />' + $(vMetadata).find('CustomCMD' + item.FieldName).text();
                                                    }
                                                    else {
                                                        vControls += '<br />-';
                                                    }
                                                }
                                            }
                                            else {
                                                //str += '<br />-';
                                            }
                                        }
                                    }
                                    vControls += '</td>';
                                    valuetobindinfield = "";
                                }
                                else {
                                    valuetobindinfield = ($(vMetadata).find(item.FieldName).text() != null && $(vMetadata).find(item.FieldName).text() != "") ? $(vMetadata).find(item.FieldName).text() : "-";
                                    vControls += '<td class="labelleft width60" style="word-break: break-all;">' + valuetobindinfield + '</td>';
                                    valuetobindinfield = "";
                                }
                            }

                            vControls += '</tr>';
                            valuetobindinfield = ($(vMetadata).find(item.FieldName).text() != null && $(vMetadata).find(item.FieldName).text() != "") ? $(vMetadata).find(item.FieldName).text() : "-";
                            vMetadataHTML = vMetadataHTML.replace("<" + item.FieldName + ">" + valuetobindinfield + "</" + item.FieldName + ">", "");
                            valuetobindinfield = '';
                            $("#tblSummaryMetadata").append(vControls);
                            if (vCurrency != "") {
                                if ($.isNumeric($('#' + vCurrency).html())) {
                                    if (vCurrencyDisplayStyle == "UK") {
                                        $('#' + vCurrency).autoNumeric();
                                    } else if (vCurrencyDisplayStyle == "CAN") {
                                        $('#' + vCurrency).autoNumeric({
                                            aSep: ' ', aDec: '.'
                                        });
                                    } else if (vCurrencyDisplayStyle == "EU") {
                                        $('#' + vCurrency).autoNumeric({
                                            aSep: '.', aDec: ','
                                        });
                                    } else if (vCurrencyDisplayStyle == "IND") {
                                        $('#' + vCurrency).autoNumeric({
                                            dGroup: '2',
                                        });
                                    }
                                }

                                //var vControlsvalue = '<tr><td class="f_head width40">' + item.FieldDisplayName + '(Base)</td>';
                                //var strBaseContractValueCurr = $("#hdnBaseContractValue").text() + " " + $("#hdnBaseContractCurrency").text();
                                //if (strBaseContractValueCurr.trim() == "0") {
                                //    strBaseContractValueCurr = "Not Available";
                                //    vControlsvalue += '<td class="labelleft width60" style="word-break: break-all;" id=basecurrency>Not Available</td></tr>'
                                //}
                                //else if (true) {
                                //    vControlsvalue += '<td class="labelleft width60" style="word-break: break-all;" ><label id="basecurrencyvalue">' + $("#hdnBaseContractValue").text() + '</label> ' + $("#hdnBaseContractCurrency").text() + '</td></tr>';
                                //}
                                //$("#tblSummaryMetadata").append(vControlsvalue);
                                //vControlsvalue = "";
                                //if (vCurrencyDisplayStyle == "UK") {
                                //    $('#basecurrencyvalue').autoNumeric();
                                //} else if (vCurrencyDisplayStyle == "CAN") {
                                //    $('#basecurrencyvalue').autoNumeric({ aSep: ' ', aDec: '.' });
                                //} else if (vCurrencyDisplayStyle == "EU") {
                                //    $('#basecurrencyvalue').autoNumeric({ aSep: '.', aDec: ',' });
                                //} else if (vCurrencyDisplayStyle == "IND") {
                                //    $('#basecurrencyvalue').autoNumeric({ dGroup: '2', });
                                //}
                                vCurrency == "";
                            }
                        }
                    }

                    var vContractFields = null;

                    $.ajax({
                        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contractfields',
                        type: 'GET',
                        dataType: 'json',
                        "Content-Type": "application/json",
                        headers: {
                            'eContracts-ApiKey': localStorage.APIKey
                        },
                        cache: false,
                        async: false,
                        success: function (contractfields) {
                            vContractFields = contractfields;
                            $("#tblDetailsMetadata").empty();
                            var datalenght = $(vMetadataHTML).length;
                            for (var i = 0; i < datalenght; i++) {
                                var item = $(vMetadataHTML)[i];
                                var name = item.nodeName;
                                var vCurrency = "";
                                if ((name == "APPROVEDBY") || (name == "CONTRACTNUMBER") || (name == "CONTRACTMANAGERS") || (name == "CONTRACTTERMTYPE")
                                   || (name == "CONTRACTVALUE") || (name == "COUNTERPARTY") || (name == "CUSTOMPERMISSION")
                                   || (name == "DESCRIPTION") || (name == "STARTDATE") || (name == "ENDDATE") || (name == "EXTERNALSIGNEES") || (name == "ORIGINATINGPARTY")
                                   || (name == "PROJECT") || (name == "RELATEDCONTRACT") || (name == "TERMENDDATE") || (name == "REVIEWEDBY") || (name == "RENEWALDATE")
                                   || (name == "COMPANYPROFILE") || (name == "SIGNEES") || (name == "RELATEDCONTRACTS") || (name == "RELATEDREQUESTS")) {
                                    // if transation type is general agreement do not show contract value in metadata
                                    if ($("#hdnTransactionType").text() == "Legal/General Agreement" && name == "CONTRACTVALUE") {
                                    } else {
                                        var vField = $.grep(vContractFields, function (person) {
                                            return person.FieldName.toUpperCase() == name
                                        });
                                        var value = item.textContent;
                                        if (vField.length > 0) {
                                            var vControls = '<tr>';
                                            if (vField[0].FieldDisplayName == "Contract Managers") {
                                                vControls += '<td class="f_head width40">Contract Owner(s)</td>';
                                            }
                                            else if (vField[0].FieldDisplayName.trim().toLowerCase().indexOf("related contract (s)") >= 0) {
                                                vControls += '<td class="f_head width60">Related Contract Record(s)</td>';
                                            }
                                            else {
                                                vControls += '<td class="f_head width90">' + vField[0].FieldDisplayName + '</td>';
                                            }
                                            //else if (vField[0].FieldName == "ContractValue" || item.FieldType == "Currency") {
                                            //    vControls += '<td class="f_head width40">Contract Value(Actual)</td>';
                                            // }

                                            if (value == '' || value == '0') {
                                                if (vField[0].FieldName == "ContractValue" || item.FieldType == "Currency") {

                                                    var valuetoapply = (typeof value != "undefined" && value != null && value != "") ? value : "0.00"
                                                    vControls += '<td class="labelleft width60" style="word-break: break-all;"><label id="td' + vField[0].FieldName + '">' + valuetoapply + '</label> ' + $("#hdnContractCurrency").text() + '</td>';

                                                    vCurrency = 'td' + vField[0].FieldName;
                                                } else {
                                                    vControls += '<td class="labelleft width60" style="word-break: break-all;">-</td>';
                                                }
                                            }
                                            else {
                                                if (vField[0].FieldType == "Date") {
                                                    var onlydate = "";
                                                    onlydate = value.substring(0, value.length - 19);
                                                    if (onlydate != "") {
                                                        if (localStorage.AppDateFormat == null || localStorage.AppDateFormat == "" || localStorage.AppDateFormat == 'undefined') {
                                                            onlydate = moment(new Date(onlydate)).format('MM/DD/YYYY');
                                                        }
                                                        else {
                                                            onlydate = moment(new Date(onlydate)).format(localStorage.AppDateFormat);
                                                        }
                                                    }
                                                    vControls += '<td class="labelleft width60" style="word-break: break-all;">' + onlydate + '</td>';
                                                }
                                                else {
                                                    if (vField[0].FieldName == "ContractValue" || item.FieldType == "Currency") {
                                                        //var strBaseContractValueCurr = "";
                                                        //strBaseContractValueCurr = $("#hdnContractCurrency").text();
                                                        //if (strBaseContractValueCurr == "") {
                                                        //    strBaseContractValueCurr = "Not Available";
                                                        //} else {
                                                        //    if (strBaseContractValueCurr.trim() == "") {
                                                        //        strBaseContractValueCurr = "Not Available";
                                                        //    }
                                                        //}
                                                        vControls += '<td class="labelleft width60" style="word-break: break-all;"><label id="td' + vField[0].FieldName + '">' + value + '</label> ' + $("#hdnContractCurrency").text() + '</td>';
                                                        vCurrency = 'td' + vField[0].FieldName;
                                                    } else {
                                                        if (vField[0].FieldName == "ContractTermType") {
                                                            vControls += '<td class="labelleft width60" style="word-break: break-all;">' + TermTypeDisplayName[value] + '</td>';
                                                        }
                                                        else {
                                                            vControls += '<td class="labelleft width60" style="word-break: break-all;">' + value + '</td>';
                                                        }

                                                    }
                                                }
                                            }
                                            vControls += '</tr>';

                                            $("#tblDetailsMetadata").append(vControls);
                                            if (vCurrency != "") {
                                                if ($.isNumeric($('#' + vCurrency).html())) {
                                                    if (vCurrencyDisplayStyle == "UK") {
                                                        $('#' + vCurrency).autoNumeric({
                                                            vMax: '99999999999999999999.99'
                                                        });
                                                    } else if (vCurrencyDisplayStyle == "CAN") {
                                                        $('#' + vCurrency).autoNumeric({
                                                            aSep: ' ', aDec: '.', vMax: '99999999999999999999.99'
                                                        });
                                                    } else if (vCurrencyDisplayStyle == "EU") {
                                                        $('#' + vCurrency).autoNumeric({
                                                            aSep: '.', aDec: ',', vMax: '99999999999999999999.99'
                                                        });
                                                    } else if (vCurrencyDisplayStyle == "IND") {
                                                        $('#' + vCurrency).autoNumeric({
                                                            dGroup: '2', vMax: '99999999999999999999.99'
                                                        });
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            if (!(isRefresh)) {
                                $("#loadingPage").fadeOut();
                                $('#dialogSummary').dialog('open');
                            }
                        },
                        error: function () {
                            if (!(isRefresh)) {
                                $("#loadingPage").fadeOut();
                            }
                        }
                    });
                },
                error: function () {
                    if (!(isRefresh)) {
                        $("#loadingPage").fadeOut();
                    }
                }
            });
        }
    });
}

function RedirectToCounterparty(counterpartyname) {
    counterpartyname = unescape(counterpartyname);
    oldCounterParty = counterpartyname;
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty?counterpartyname=' + encodeURIComponent(counterpartyname),
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (item) {
            location = '/Counterparty/CounterpartyDetail?CounterpartyID=' + encodeURI(item.RowKey);
        },
        error: function () {
            if (localStorage.UserType.indexOf("Global Contract Owner") >= 0 || localStorage.UserType.indexOf("Global Administrator") >= 0) {
                swal({
                    title: '',
                    text: "This Counterparty information is not available in eContracts Counteparty database. Do you want to add now?",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes',
                    cancelButtonText: 'No',
                    html: true
                },
     function (confirmed) {
         if (confirmed) {
             CounterpartyPopup(counterpartyname);
         }
         return;
     });
            } else {
                swal("", "This Counterparty information is not available in eContracts Counteparty database.");
            }
        }

    });
}



function updatevalue() {
    $("#loadingPage").fadeIn();
    var contractvalue = $("#txtContractValuepopup").autoNumeric('get')
    //if (contractvalue == 0) {
    //    swal("", "Enter valid contract value.");
    //    $("#loadingPage").fadeOut();
    //} else {
    if (requiredValidator("addEditContractValue")) {
        var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
        var vDocLibFeat = $.grep(veContractFeatures, function (n, i) {
            return (n.RowKey == "19" && n.Status == "ON");
        });
        $('.ui-button-green-text').parent().attr('disabled', 'disabled');
        if (vDocLibFeat.length > 0) {
            updatecustomfinacialvalue();
        } else {
            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName("ContractID") + '/value?contractvalue=' + contractvalue + '&username=' + localStorage.UserName,
                type: 'PUT',
                dataType: 'json',
                async: false,
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                },
                data: {
                    "TransactionType": contractItem.TransactionType,
                    "ContractCurrency": $("#ddlContractCurrencypopup option:selected").val(),
                    "ModifiedBy": localStorage.UserName
                },
                cache: false,
                success: function (result) {
                    $("#hdnBaseContractValue").text(result.BaseContractValue);
                    $("#hdnBaseContractCurrency").text(result.BaseContractValueCurrency);
                    $("#loadingPage").fadeOut();
                    $("#addEditContractValue").dialog("close");
                    $('.ui-button-green-text').parent().removeAttr('disabled');
                    $("#loadingPage").fadeOut();
                },
                error: function (person) {
                    $("#loadingPage").fadeOut();
                }
            });
            $("#hdnContractValue").text(contractvalue);

            $("#hdnContractCurrency").text($("#ddlContractCurrencypopup option:selected").val());
            var sTransType = contractItem.TransactionType;
            if (sTransType == "0")
                sTransType = "";
            $("#liTType").text(sTransType);
            return true;
        }
    } else {
        $("#loadingPage").fadeOut();
        $('.ui-button-green-text').parent().removeAttr('disabled');
        return false;
    }
}

//manoj
function updatecustomfinacialvalue() {
    var contractvalue = $("#txtContractValuepopup").autoNumeric('get')
    var ContractUpdate = "TransactionType=" + contractItem.TransactionType;
    var dataAppend = "";
    $("#tblcontractvaluepopup tr td.labelright.f_list.financials").each(function (index, item) {
        var name = item.children[0].name;
        var value = item.children[0].value;
        dataAppend = "&" + name + "=" + value;
        ContractUpdate += dataAppend;
        dataAppend = "";
    });
    $('#tblcontractvaluepopup tr td.labelright.f_list.chosenmulti').each(function (index, item) {
        var id = item.children[0].id;
        var cm = '';
        var choicevalues = $("#" + id).val();
        dataAppend += "&" + id + "=";
        $(choicevalues).each(function (i, item) {
            if (cm == '') {
                cm = item;
            }
            else {
                cm += "; " + item;
            }
        });
        dataAppend += cm;
        ContractUpdate += dataAppend;
        dataAppend = "";
    });
    $('#tblcontractvaluepopup tr td.labelright.f_list.fielddatecontrol').each(function (index) {
        //if ($(this).css('display') != 'none') {
        if ($(this).attr('class').toLowerCase().indexOf("hasdatepicker") >= 0) {
            var name = this.children[0].name;
            var value = $.datepicker.formatDate('mm/dd/yy', $(this.children[0]).datepicker('getDate'));
            dataAppend = "&" + name + "=" + value;
        }
        else {
            var name = this.children[0].name
            var value = $.datepicker.formatDate('mm/dd/yy', $(this.children[0]).datepicker('getDate'));
            dataAppend = "&" + name + "customfinancialDatefields=" + value;
        }
        //}
        ContractUpdate += dataAppend;
        dataAppend = "";
    });
    ContractUpdate += "&ContractCurrency=" + $("#ddlContractCurrencypopup option:selected").val();
    ContractUpdate += "&ModifiedBy=" + localStorage.UserName;
    $(".customfinancialupdate").each(function (indexfinancial, elementfinancial) {
        ContractUpdate += "&" + elementfinancial.name + "customfieldwyM1fCHT=" + $("#" + elementfinancial.id).autoNumeric('get');
    });

    var formData = new FormData();
    formData.append("AccountID", localStorage.AccountID);
    formData.append("SearializeControls", ContractUpdate)

    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/customfinancialvalue?contractid=' + getParameterByName("ContractID") + '&contractvalue=' + contractvalue + '&username=' + localStorage.UserName,
        type: 'PUT',
        dataType: 'json',
        async: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
        },
        data: formData,
        cache: false,
        contentType: false,
        processData: false,
        success: function (result) {
            $("#hdnBaseContractValue").text(result.BaseContractValue);
            $("#hdnBaseContractCurrency").text(result.BaseContractValueCurrency);
            $("#addEditContractValue").dialog("close");
            $('.ui-button-green-text').parent().removeAttr('disabled');
            GetContractValueSetting(result);
            $("#loadingPage").fadeOut();
        },
        error: function (person) {
            $("#loadingPage").fadeOut();
        }
    });
    $("#hdnContractValue").text(contractvalue);
    $("#lblContractValue").css('display', 'inline');
    $("#lblContractCurrency").css('display', 'inline');
    if ($("#lblContractValue").text() == "Not available") {
        $("#lblContractValue").text("0");
    }
    if (ContractCurrencyType == 'base') {
        if (vCurrencyDisplayStyle == "UK") {
            $('#lblContractValue').autoNumeric('init', {
                vMax: '99999999999999999999.99'
            });
            $('#lblContractValue').autoNumeric('set', parseFloat($("#hdnBaseContractValue").text()))
        } else if (vCurrencyDisplayStyle == "CAN") {
            $('#lblContractValue').autoNumeric('init', {
                aSep: ' ', aDec: '.', vMax: '99999999999999999999.99'
            });
            $('#lblContractValue').autoNumeric('set', parseFloat($("#hdnBaseContractValue").text()))
        } else if (vCurrencyDisplayStyle == "EU") {
            $('#lblContractValue').autoNumeric('init', {
                aSep: '.', aDec: ',', vMax: '99999999999999999999.99'
            });
            $('#lblContractValue').autoNumeric('set', parseFloat($("#hdnBaseContractValue").text()))
        } else if (vCurrencyDisplayStyle == "IND") {
            $('#lblContractValue').autoNumeric('init', {
                dGroup: '2', vMax: '99999999999999999999.99'
            });
            $('#lblContractValue').autoNumeric('set', parseFloat($("#hdnBaseContractValue").text()))
        }
        if ($("#hdnBaseContractCurrency").text() == "0") {
            $("#hdnBaseContractCurrency").text("");
        }
        $("#lblContractCurrency").text($("#hdnBaseContractCurrency").text());
    } else if (ContractCurrencyType == 'actual') {
        if (vCurrencyDisplayStyle == "UK") {
            $('#lblContractValue').autoNumeric('init');
            $('#lblContractValue').autoNumeric('set', parseFloat($("#hdnContractValue").text()))
        } else if (vCurrencyDisplayStyle == "CAN") {
            $('#lblContractValue').autoNumeric('init', {
                aSep: ' ', aDec: '.', vMax: '99999999999999999999.99'
            });
            $('#lblContractValue').autoNumeric('set', parseFloat($("#hdnContractValue").text()))
        } else if (vCurrencyDisplayStyle == "EU") {
            $('#lblContractValue').autoNumeric('init', {
                aSep: '.', aDec: ',', vMax: '99999999999999999999.99'
            });
            $('#lblContractValue').autoNumeric('set', parseFloat($("#hdnContractValue").text()))
        } else if (vCurrencyDisplayStyle == "IND") {
            $('#lblContractValue').autoNumeric('init', {
                dGroup: '2', vMax: '99999999999999999999.99'
            });
            $('#lblContractValue').autoNumeric('set', parseFloat($("#hdnContractValue").text()))
        }
        if ($("#ddlContractCurrencypopup option:selected").val() == "0") {
            $("#lblContractCurrency").text("");
        }
        else {
            $("#lblContractCurrency").text($("#ddlContractCurrencypopup option:selected").val());
        }

    }
    if ($("#ddlContractCurrencypopup option:selected").val() == "0") {
        $("#hdnContractCurrency").text("");
    }
    else {
        $("#hdnContractCurrency").text($("#ddlContractCurrencypopup option:selected").val());
    }

    var sTransType = contractItem.TransactionType;
    if (sTransType == "0")
        sTransType = "";
    $("#liTType").text(sTransType);
    icontractdetails();

}
//manoj

$('#btnEditValue').click(function () {
    BindPriceBreakdownTransaction();
    GetContractValueFormData();
    $(".validelement").each(function (index, element) {
        $(element).removeClass("error");
        $("#errormsg_" + element.id).remove();
    });
    $("#addEditContractValue").dialog("option", "title", "Financials");
    $("#addEditContractValue").dialog("open");

});

$("input[name='FinalizedStatus']:radio").change(function () {
    if ($(this).val() == 'Cancelled') {
        $('#dvContCancelNote').css("display", "");
        $("#txtReasonOfCancelContract").addClass('validelement');
    }
    else {
        $('#dvContCancelNote').css("display", "none");
        if ($("#txtReasonOfCancelContract").hasClass("validelement"))
            $("#txtReasonOfCancelContract").removeClass('validelement');
    }
});

function statusclick(e) {
    $('input[name="rdstatus"][value="' + decodeURI(e.value) + '"]').prop('checked', true);
    if (decodeURI(e.value) == "Renewed") {
        $('#dvCancelCtrl').css("display", "none");
        $('#dvExtendCtrl').css("display", "none");
        OpenRenewalForm();
        $("#addEditStatus").dialog("close");
        $("#hdChangeStatusClick").val("Y");
    }
    else if (decodeURI(e.value) == "Extended") {
        $('#dvExtendCtrl').css("display", "");
        $('#dvCancelCtrl').css("display", "none");
        $('#dvRenewCtrl').css("display", "none");
    }
    else if (decodeURI(e.value) == "Cancelled") {
        $('#dvCancelCtrl').css("display", "");
        $('#dvRenewCtrl').css("display", "none");
        $('#dvExtendCtrl').css("display", "none");
    }
    else {
        $('#dvCancelCtrl').css("display", "none");
        $('#dvRenewCtrl').css("display", "none");
        $('#dvExtendCtrl').css("display", "none");

    }

}

function imgcheckgeneral() {
    var selectedValue = decodeURI($("input:radio[name=rdstatus]:checked").val());
    if (selectedValue == "Cancelled") {
        if ($("#txtCancelledReason")[0].value == "") {
            swal("", "Enter reason for cancellation.");
            return false;
        } else {
            ChangeContractStatus();
            return true;
        }
    } else if (selectedValue == "Renewed") {
        if ($("#dtRenewalDate")[0].value == "") {
            swal("", "Select renewal date.");
            return false;
        } else {
            ChangeContractStatus();
            return true;
        }
    } else if (selectedValue == "Extended") {
        if ($("#dtExtendedDate")[0].value == "") {
            swal("", "Select extended date.");
            return false;
        } else {
            ChangeContractStatus();
            return true;
        }
    } else if (selectedValue == "undefined" || selectedValue == "0" || selectedValue == "") {
        swal("", "Select Status");
        return false;
    }
    else {
        ChangeContractStatus();
        return true;
    }
}
//ENH 474 - Do not allow users to change expired contract record status to Active, if they do not extend contract end date
function ChangeContractStatus() {
    if (requiredValidator("dvManageContractStatus", false)) {
        var stat = decodeURI($("input:radio[name=FinalizedStatus]:checked").val());
        var prevStat = contractItem.Status;
        var StateOk = ["Active", "Up for Renewal", "Renewed", "Extended", "Expired", "About to Expire"];
        if (stat == prevStat) {
            $("#loadingPage").fadeOut();
            $("#dvManageContractStatus").dialog("close");
        }
        else {
            var vContractStatus = ["Ready for Signature", "Awaiting Signatures", "Signed", "Active", "Up for Renewal", "Renewed", "Extended", "On Hold", "Replaced", "Expired", "Cancelled", "Terminated", "Archived", "About to Expire"];
            if (contractItem.StartDate != null && ($.inArray(contractItem.Status, vContractStatus) !== -1)) {
                if (contractItem.Status !== "Expired") {
                    var StartDate = new Date(contractItem.StartDate);
                    var StartDateMonthDateFormate = (StartDate.getUTCMonth() + 1) + '/' + StartDate.getUTCDate() + '/' + StartDate.getUTCFullYear();

                    var TodaysDate = new Date();
                    var month = TodaysDate.getUTCMonth() + 1;
                    var day = TodaysDate.getUTCDate();

                    var TodaysDateMonthDateFormate = month + '/' + day + '/' + TodaysDate.getUTCFullYear();

                    if (Date.parse(StartDateMonthDateFormate) > Date.parse(TodaysDateMonthDateFormate) && ($.inArray(stat, StateOk) !== -1)) {

                        swal({
                            title: '',
                            text: "Start Date is '<span style=\"font-weight:700\">" + StartDateMonthDateFormate + "</span>' ,Do you want to change the status?",
                            type: 'warning',
                            showCancelButton: true,
                            confirmButtonText: 'Yes',
                            cancelButtonText: 'No',
                            html: true
                        },
              function (confirmed) {
                  if (confirmed) {
                      ChangeContractStatusMethod();
                  }
                  return;
              });

                    }
                    else {
                        ChangeContractStatusMethod();
                    }
                }
                else {
                    if (contractItem.ContractTermType == "Fixed Term" || contractItem.ContractTermType == "Renewable") {
                        var EndDate = new Date(contractItem.EndDate);
                        var EndDateMonthDateFormate = (EndDate.getUTCMonth() + 1) + '/' + EndDate.getUTCDate() + '/' + EndDate.getUTCFullYear();
                        var TodaysDate = new Date();
                        var month = TodaysDate.getUTCMonth() + 1;
                        var day = TodaysDate.getUTCDate();
                        var TodaysDateMonthDateFormate = month + '/' + day + '/' + TodaysDate.getUTCFullYear();
                        if (Date.parse(EndDateMonthDateFormate) < Date.parse(TodaysDateMonthDateFormate)) {
                            swal({
                                title: '',
                                text: "This contract is expired, still if you want to change the status, extend the contract end date",
                                type: 'warning',
                                showCancelButton: true,
                                confirmButtonText: 'Yes',
                                cancelButtonText: 'No',
                                html: true
                            },
              function (confirmed) {
                  if (confirmed) {
                      OpenManageContractTerm(contractItem);
                  }
                  return;
              });
                        }
                        else {
                            ChangeContractStatusMethod();
                        }
                    }
                    else {
                        ChangeContractStatusMethod();
                    }
                }
            }
            else {
                ChangeContractStatusMethod();
            }
        }

    }
}

function ChangeContractStatusMethod() {
    $("#loadingPage").fadeIn();
    var stat = '';
    if (contractItem.IsFinalized == 'Yes')
        stat = decodeURI($("input:radio[name=FinalizedStatus]:checked").val());
    else
        stat = decodeURI($("input:radio[name=PipelineStatus]:checked").val());

    var vStatusNote = '';
    if (stat == "Cancelled" && contractItem.Status != "Cancelled") {
        $("#loadingPage").fadeOut();
        $("#txtReasonOfCancel").val("");
        GetValuesAndAutoPopulate("ddlSendToCancel", "");
        $("#dvCancelContract").dialog("open");
        //vStatusNote = "CancelledReason=" + $("#txtReasonOfCancelContract").val();
    }
    else if (stat == contractItem.Status) {
        $("#loadingPage").fadeOut();
        $("#dvManageContractStatus").dialog("close");
    }
    else {
        contractItem.Status = stat;
        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName("ContractID") + '/changestatus?status=' + stat,
            type: 'PUT',
            dataType: 'json',
            headers: {
                'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging, username: localStorage.UserName
            },
            data: vStatusNote,
            cache: false,
            success: function (result) {
                if ($("#spanstatus").text() != "") {
                    if ($("#spanstatus").text().trim() == "Archived") {
                        $("#spancloseout").html("");
                        $("#trCloseOutContract").html('<td class="labelleft padding_left_5px"><div class="mark_Con-Final"><a href="javascript:void(0);" onclick="MarkContractAsCloseout();"><span class="f_button_green">Mark Contract Record for Closeout</span></a></div></td>')
                        $("#rtarchived").css('display', 'none');
                    }
                }
                contractItem = result;
                if (contractItem.Status == "Expired" || contractItem.Status == "Archived") {
                    $("#iStandardIcon").empty();
                    $("#hdnsummeryTempDocu").text("No");
                    $("#lisummarydocument").css("display", "none");
                }
                ReloadContracts();
                $("#loadingPage").fadeOut();
                $("#dvManageContractStatus").dialog("close");
            },
            error: function (person) {
                $("#loadingPage").fadeOut();
            },
        });
    }
}

function MarkContractAsFinal() {
    $("#loadingPage").fadeIn();
    var requiredavalible = false;
    var vdocs = $("#chkMarkDocAsFinal").is(':checked') ? 'Yes' : 'No';
    var vMetadatavaluetofinalize;
    var metadataFields = [];
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/IContractDetails?contractid=' + getParameterByName("ContractID"),
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        async: false,
        success: function (mainmetadataFields) {
            vMetadatavaluetofinalize = $(mainmetadataFields).find('Metadata');
        },
    });

    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracttypes/metadatas?contracttypename=' + strSelectedContractType.trim(),
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        async: false,
        success: function (metadataFieldsvalue) {
            if (getParameterByName("Stage") == "pipeline") {
                metadataFields = $.grep(metadataFieldsvalue, function (n, i) {
                    return (n.Finalizingfrom == "Required");
                });
            }
        },
    });

    $(metadataFields).each(function (i, item) {
        if ($(vMetadatavaluetofinalize).find(item.FieldName).text() == null || $(vMetadatavaluetofinalize).find(item.FieldName).text() == "") {
            requiredavalible = true;
        }
    });
    if (!requiredavalible) {
        swal({
            title: '',
            text: "Are you sure you want to <span style=\"font-weight:700\">mark</span> this contract as <span style=\"font-weight:700\">Finalize/Ready for Signature</span>?",
            type: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes',
            cancelButtonText: 'No',
            html: true
        },
     function (confirmed) {
         if (confirmed) {
             $.ajax({
                 url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts?contractid=' + getParameterByName("ContractID") + '&finalized=Yes&username=' + localStorage.UserName + '&docs=' + vdocs,
                 type: 'PUT',
                 dataType: 'json',
                 headers: {
                     'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                 },
                 cache: false,
                 success: function (data) {
                     $("#tdPipelind").empty();
                     $("#tdFinalized").empty();
                     BindStatusbyCLM('No');

                     swal("", "This Contract Record has been removed from the Pipeline and moved to the Contracts tab.");

                     contractItem = data;
                     MakeFinalized = "Yes";
                     ContractTopActions();

                     //manoj
                     pendingStarted = false;
                     GetContractPendingAction(true, "BindPeoples");
                     //manoj
                     //Sridhar
                     EnableAllMilestones(getParameterByName("ContractID"));
                     //Sridhar
                     $('#tdFinalizeContract1').css("display", "none");
                     $('#tdFinalizeContract2').css("display", "none");
                     $('#tdFinalizeContract3').css("display", "");
                     $('#tdFinalizeContract3').html('<img src="/Content/Images/right.png" />Marked Finalized/Ready for Signature by ' + contractItem.FinalizedBy);
                     $('input:radio[name="FinalizedStatus"][value="' + contractItem.Status + '"]').prop('checked', true);
                     $('input:radio[name="FinalizedStatus"]').prop('disabled', false);
                     $('input:radio[name="PipelineStatus"]').attr('checked', false);
                     $('input:radio[name="PipelineStatus"]').prop('disabled', true);
                     $('.AutoChange').prop('disabled', true);

                     var imgObj = $("#imgFinalizedStatus");
                     imgObj.attr("title", "Collapse");
                     imgObj.attr("src", "../Content/Images/e-close.png");
                     $('#trFinalizedStatus').css('display', '');
                     //manoj
                     if (contractItem.Status == "Archived") {
                         if ($("#hdnPermission").val() == "Manage") {
                             $("#trCloseOutContract").css('display', '')
                         } else {
                             $("#trCloseOutContract").css('display', 'none');
                         }
                         $("#rtarchived").css('display', '');
                     } else {
                         $("#trCloseOutContract").css('display', '');
                         $("#rtarchived").css('display', 'none');
                     }
                     //manoj
                     imgObj = $("#imgPipelineStatus");
                     imgObj.attr("title", "Expand");
                     imgObj.attr("src", "../Content/Images/e-open.png");
                     $('#trPipelineStatus').css('display', 'none');

                     //Sridhar - Display Amendments tab
                     $("#artAmendment").css("display", "block");
                     $("#ulAmendment").html("No items found.");
                     ReloadContracts();
                     //$("#loadingPage").fadeOut();
                 },
                 error: function (person) {
                     $("#loadingPage").fadeOut();
                 }
             });
         } else {
             $("#loadingPage").fadeOut();
             $("#dvManageContractStatus").dialog("close");
         }
     });

    } else {
        swal({
            title: '',
            text: "Some metadata fields required for Contract Record <span style=\"font-weight:700\">Finalization/Ready for Signature</span> is/are not filled . Do you want to fill the metadata fields now?",
            type: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes',
            cancelButtonText: 'No',
            html: true
        },
        function (confirmed) {
            if (confirmed) {
                contextMenuContractSettings("edit", "finalize", vdocs)
            } else {
                $("#loadingPage").fadeOut();
                $("#dvManageContractStatus").dialog("close");
            }
        });
    }
}

function getNameAndEmail() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty/' + getParameterByName("ContractID") + '/contacts',
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            if (data != null) {
                var datalenght = data.length;
                var allInternal = ''
                var totalFileCount = 0;
                var iex = 0;
                for (var i = 0; i < datalenght; i++) {
                    var item = data[i];

                    totalFileCount++;
                    if (item.InternalOrExternal == "External") {
                        if (iex == 0) {
                            iex = 1;
                            $('#txtShareContract1').val(item.ContactName);
                            $('#txtShareContractEmail1').val(item.EmailID);
                        }
                        else {
                            var htmlFormatFile = '<tr id="trShareContract' + totalFileCount + '">';
                            htmlFormatFile += '<td>';
                            htmlFormatFile += '<input id="txtShareContract' + totalFileCount + '" maxlength="42" value="' + item.ContactName + '" name="ShareContractName' + totalFileCount + '" placeholder="Name" title="Name" type="text" class="f_inpt width90" value="' + item.ContactName + '" />';
                            htmlFormatFile += '</td>';
                            htmlFormatFile += '<td>';
                            htmlFormatFile += '<input id="txtShareContractEmail' + totalFileCount + '" maxlength="50" value="' + item.EmailID + '" name="ShareContractEmail' + totalFileCount + '" placeholder="Email ID" title="Email ID" type="text" class="f_inpt width90 validelement validemail" value="' + item.EmailID + '" />';
                            htmlFormatFile += '</td>';
                            htmlFormatFile += '<td style="width:20px">';
                            htmlFormatFile += '<a href="javascript:void(0)" onclick="DeleteShareContract(this)"><img src="../Content/Images/icon/delete.png" /></a>';
                            htmlFormatFile += '</td>';
                            htmlFormatFile += '</tr>';
                            $("#tblShareContract").append(htmlFormatFile);
                        }
                    }
                    else {
                        allInternal += item.ContactName + ";";
                    }
                }
                GetTextAndAutoPopulateNotHidden("ddlContractShareInternal", allInternal);
            }

        },
        error: function () {
        }

    });
}

function AddShareContract() {
    var count = $("#tblShareContract tr").length;
    var vLastRow = $("#tblShareContract tr:last").attr('id');
    var totalFileCount = 2;
    if (typeof vLastRow == "undefined") {
        totalFileCount = 2;
    }
    else {
        totalFileCount = parseInt(vLastRow.replace("trShareContract", ""));

        totalFileCount = parseInt(totalFileCount) + 1;
    }


    if (count < 10) {

        var htmlFormatFile = '<tr id="trShareContract' + totalFileCount + '">';
        htmlFormatFile += '<td>';
        htmlFormatFile += '<input id="txtShareContract' + totalFileCount + '" maxlength="42" name="ShareContractName' + totalFileCount + '" placeholder="Name" title="Name" type="text" class="f_inpt width90 validelement" />';
        htmlFormatFile += '</td>';
        htmlFormatFile += '<td>';
        htmlFormatFile += '<input id="txtShareContractEmail' + totalFileCount + '" maxlength="50" name="ShareContractEmail' + totalFileCount + '" placeholder="Email ID" title="Email ID" type="text" class="f_inpt width90 validelement validemail" />';
        htmlFormatFile += '</td>';
        htmlFormatFile += '<td style="width:20px">';
        htmlFormatFile += '<a href="javascript:void(0)" onclick="DeleteShareContract(this)"><img src="../Content/Images/icon/delete.png" /></a>';
        htmlFormatFile += '</td>';
        htmlFormatFile += '</tr>';

        $("#tblShareContract").append(htmlFormatFile);


    }
    if (count == 9) {
        $(".addmorelinks").hide();
    }
}


function DeleteShareContract(n) {
    n.parentNode.parentNode.parentNode.removeChild(n.parentNode.parentNode);
    $(".addmorelinks").show();
}

function ShareContract() {
    var vValid = requiredValidator('shareContract', false);
    if (vValid) {

        var emailvalue = "";
        arremail = [];
        $('#shareContract .validemail').each(function (i, item) {
            if (emailvalue == '') {
                emailvalue = item.value;
                if (emailvalue != "")
                    arremail.push(emailvalue.toLowerCase());
                emailvalue = '';
            }

        });

        recipientsArray = arremail.sort();
        reportRecipientsDuplicate = [];
        for (var j = 0; j < recipientsArray.length - 1; j++) {
            if (recipientsArray[j + 1] == recipientsArray[j]) {
                reportRecipientsDuplicate.push(recipientsArray[j]);
                if (reportRecipientsDuplicate.length > 0) {
                    vValid = false;
                }

            }
        }
        var notify = $("#ddlContractShareInternal").chosen().find("option:selected");
        var notyEmail = "";
        var duplicateEmail = false;
        $(notify).each(function (i, item) {
            var email = $(item).attr("data-emailvalue");
            if (email != null && email.trim() != "") {
                var name = item.text;
                notyEmail += name + "~" + email.trim() + ";";
                for (var j = 0; j < recipientsArray.length; j++) {
                    if (recipientsArray[j].trim() == email.trim()) {
                        duplicateEmail = true;
                    }
                }
            }
        });
        if (!duplicateEmail) {
            if (vValid) {
                $("#loadingPage").fadeIn();
                var vAutoStatusChange = $("#chkAutoUpdateStatusShare").is(':checked') ? 'Yes' : 'No';
                var contractForm = $("#frmShareContract *").serialize();
                contractForm += "&SendBy=" + localStorage.UserName;
                contractForm += "&Notes=" + encodeURI($("#txtShareNotesContract").val());
                contractForm += "&ExpIn=" + $("#txtShareExpInContract").val();
                contractForm += "&ContractTitle=" + encodeURIComponent($("#lblContractTitle").text());
                contractForm += "&AllowComment=" + 'Yes';
                contractForm += "&AutoUpdateStatus=" + vAutoStatusChange;


                contractForm += "&InternalUsers=" + notyEmail;
                if ($("#chkDiscloseCon").is(':checked')) {
                    contractForm += "&Disclose=Yes";
                } else {
                    contractForm += "&Disclose=No";
                }
                var vContractID = getParameterByName('ContractID');
                //$("#inprocessShareContract").css('visibility', 'visible');
                $.ajax({
                    url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracts/Share?contractid=' + vContractID,
                    type: 'POST',
                    dataType: 'json',
                    headers: {
                        'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                    },
                    data: contractForm,
                    cache: false,
                    success: function (person) {
                        $("#shareContract").dialog("close");
                        if (vAutoStatusChange == "Yes") {
                            contractItem.Status = "In Negotiation";
                            ContractTopActions();
                            //manoj
                            if (documentview == null || documentview == "" || documentview == 'folder') {
                                if ($('#showAll').text() != null && $('#showAll').text() != "" && typeof ($('#showAll').text()) != "undefined") {
                                    var selectedfoldervalue = $('#showAll').find("a");
                                    var textvalueselected = $(selectedfoldervalue)[$(selectedfoldervalue).length - 1].textContent;
                                    var idvalueselected = $(selectedfoldervalue)[$(selectedfoldervalue).length - 1].id;
                                    var parentdocumentdetails = {
                                        id: idvalueselected, text: textvalueselected
                                    };
                                    showfolderdocuments(parentdocumentdetails);
                                }
                                else {
                                    BindDocument(vContractID);
                                }
                            } else {
                                DisplayDocument(documentview);
                            }
                            $("#hdnFolderDocumentView").text('');
                            $("#hdnShowAllTextValue").html('');
                            PrvFolderselection = '';
                            //Bind primary and pined document based on new feature
                            if ($("#hdnnewdocumentfeature").text() == "Yes") {
                                CreateDocumentListPinView(vContractID);
                            }
                            //manoj
                        }
                        $("#loadingPage").fadeOut();
                        ClearShareContractForm();
                        GetContractActivities(vContractID);
                    },
                    error: function (person) {
                        $("#loadingPage").fadeOut();
                        swal("", "Email ID should not duplicate.");
                    },
                    complete: function () {
                        //$("#inprocessShareContract").css('visibility', 'hidden');
                    }
                });
            }
            else {

                $('#shareContract .validemail').each(function (i, item) {
                    for (i = 0; i <= reportRecipientsDuplicate.length; i++) {
                        if (item.value.toLowerCase() == reportRecipientsDuplicate[i]) {
                            var id = item.id;
                            $('#' + id).addClass('error')
                        }
                    }

                });
            }
        }
        else {
            swal("", "eContract Internal user Email and External user Email should not same.")
        }
    }
}

function ClearShareContractForm() {
    $("#txtShareNotesContract").val('');
    $("#txtShareToContract").val('');
    $("#txtShareExpInContract").val('');
    $('#chkAutoUpdateStatusShare').attr('checked', false);
    GetValuesAndAutoPopulate("ddlContractShareInternal", "");
    if (contractItem.IsFinalized == 'Yes') {
        $("#trAutoUpdateStatusShare").css('display', 'none');
    } else {
        $("#trAutoUpdateStatusShare").css('display', '');
    }

    $('#tblShareContract').empty();
    $('#chkDiscloseCon').attr('checked', false);
    var vSignee = '<tr>';
    vSignee += '<td>';
    vSignee += '<input id="txtShareContract1" name="ShareContractName1" maxlength="42" title="Name" placeholder="Name" type="text" class="f_inpt width90 validelement" />';
    vSignee += '</td>';
    vSignee += '<td>';
    vSignee += '<input id="txtShareContractEmail1" name="ShareContractEmail1" maxlength="50" title="Email ID" placeholder="Email ID" type="text" class="f_inpt width90 validelement validemail" />';
    vSignee += '</td>';
    vSignee += '<td style="width:20px">&nbsp;</td>';
    vSignee += '</tr>';
    $('#tblShareContract').html(vSignee);
}
function MangePeopleView() {

    $("#addViewPeople").dialog("option", "title", "People");
    $("#addViewPeople").dialog("open");
    $("#addViewPeople").height("auto");
    $('#txtExternalSignee').val($('#lisigneesExternalView').text());

}


function MangePeople() {
    $('input[name="ContractPrivacy"][value="' + $("#lblContractPrivacy").text() + '"]').prop('checked', true);
    if ($("#licontractmanagers").text() != "") {
        GetValuesAndAutoPopulate("ddlContractManagers", $("#licontractmanagers").text());
    }

    if ($("#lireviewers").text() != "") {
        GetValuesAndAutoPopulate("ddlReviewers", $("#lireviewers").text());
    }

    if ($("#liapprovers").text() != "") {
        GetValuesAndAutoPopulate("ddlApproversNew", $("#liapprovers").text());
    }

    if ($("#lisignees").text() != "") {
        GetValuesAndAutoPopulate("ddlSignees", $("#lisignees").text());
    }
    $('.contractroles').each(function () {
        var id = $(this).attr("data-name");
        GetValuesAndAutoPopulate(id, $(this).text());
    })
    $("#txtExternalSignee").val($("#lisigneesExternal").text());

    $('#txtExternalSignee').val($('#lisigneesExternalView').text());

    $("#addEditPeople").dialog("option", "title", "People");
    $("#addEditPeople").dialog("open");
    $("#addEditPeople").height("auto");
}

function savePeople() {
    $('.ui-button-green-text').parent().attr('disabled', 'disabled');
    var isformvalid = false;
    if (requiredValidator('formaddNewPeople')) {
        $("#loadingPage").fadeIn();
        var contractmanagers = $("#ddlContractManagers").val();
        var cm = '';

        $(contractmanagers).each(function (i, item) {
            if (cm == '') {
                cm = item;
            }
            else {
                cm += "; " + item;
            }
        });

        var reviewers = $("#ddlReviewers").val();
        var rev = '';
        $(reviewers).each(function (i, item) {
            if (rev == '') {
                rev = item;
            }
            else {
                rev += "; " + item;
            }
        });

        var approvers = $("#ddlApproversNew").val();
        var app = '';
        $(approvers).each(function (i, item) {
            if (app == '') {
                app = item;
            }
            else {
                app += "; " + item;
            }
        });

        var signees = $("#ddlSignees").val();
        var sign = '';
        $(signees).each(function (i, item) {
            if (sign == '') {
                sign = item;
            }
            else {
                sign += "; " + item;
            }
        });
        var signees = $("#ddlSignees").val();




        var extsign = $("#txtExternalSignee").val();
        var formData = new FormData();
        formData.append("ContractManagers", cm);
        formData.append("Reviewers", rev);
        formData.append("Approvers", app);
        formData.append("Signees", sign);
        formData.append("ExternalSignees", extsign);

        formData.append("ModifiedBy", localStorage.UserName);
        formData.append("CustomPermission", contractItem.CustomPermission);
        var read = [];
        var writeRead = [];
        var full = [];
        var UniqueUsers = [];
        $(".ContractRoleType").each(function () {
            var valddl = $(this).val();
            var IDddl = this.id;
            var Permi = $(this).attr('data-permission');
            var vallt = '';
            $(valddl).each(function (i, item) {
                if (vallt == '') {
                    vallt = item;
                }
                else {
                    vallt += "; " + item;
                }

                if (Permi == "Read Only") {
                    read.push(item);
                    if ($.inArray(item, ReadContractroleUser) > -1) {
                        ReadContractroleUser = jQuery.grep(ReadContractroleUser, function (value) {
                            return value != item;
                        });
                    }
                }
                else if (Permi == "Read/Write") {
                    writeRead.push(item);
                    if ($.inArray(item, ReadWriteContractroleUser) > -1) {
                        ReadWriteContractroleUser = jQuery.grep(ReadWriteContractroleUser, function (value) {
                            return value != item;
                        });
                    }
                }
                else if (Permi == "Full Control") {
                    full.push(item);
                    if ($.inArray(item, FullContractroleUser) > -1) {
                        FullContractroleUser = jQuery.grep(FullContractroleUser, function (value) {
                            return value != item;
                        });
                    }
                }
            });
            formData.append(IDddl, vallt);
        });
        var arrFull = $.map(contractItem.FullControlPermissions.split(";"), $.trim);
        var arrReadWrite = $.map(contractItem.ReadWritePermissions.split(";"), $.trim);
        var arrRead = $.map(contractItem.ReadOnlyPermissions.split(";"), $.trim);

        //Sridhar
        //New users
        if (contractmanagers != "" && contractmanagers != null && typeof (contractmanagers) != "undefined")
            var newOwners = contractmanagers.filter(function (obj) {
                return arrFull.indexOf(obj) == -1;
            });
        if (approvers != "" && approvers != null && typeof (approvers) != "undefined")
            var newApprovers = approvers.filter(function (obj) {
                return arrReadWrite.indexOf(obj) == -1;
            });
        if (reviewers != "" && reviewers != null && typeof (reviewers) != "undefined")
            var newReviewers = reviewers.filter(function (obj) {
                return arrReadWrite.indexOf(obj) == -1;
            });
        if (signees != "" && signees != null && typeof (signees) != "undefined")
            var newSignees = signees.filter(function (obj) {
                return arrReadWrite.indexOf(obj) == -1;
            });

        $(FullContractroleUser).each(function () {
            var username = this.toString().trim();
            arrFull = jQuery.grep(arrFull, function (value) {
                return value != username;
            });
        });
        $(ReadWriteContractroleUser).each(function () {
            var username = this.toString().trim();
            arrReadWrite = jQuery.grep(arrReadWrite, function (value) {
                return value != username;
            });
        });
        $(ReadContractroleUser).each(function () {
            var username = this.toString().trim();
            arrRead = jQuery.grep(arrRead, function (value) {
                return value != username;
            });
        });


        contractItem.FullControlPermissions = arrFull.join('; ') + (newOwners != "" && newOwners != null ? "; " + newOwners.join('; ') : "");
        contractItem.ReadWritePermissions = arrReadWrite.join('; ') + (newApprovers != "" && newApprovers != null ? "; " + newApprovers.join('; ') : "")
        + (newReviewers != "" && newReviewers != null ? "; " + newReviewers.join('; ') : "")
        + (newSignees != "" && newSignees != null ? "; " + newSignees.join('; ') : "");
        contractItem.ReadOnlyPermissions = arrRead.join('; ');
        $(full).each(function () {
            var username = this.toString();
            if ($.inArray(username, $.map(contractItem.FullControlPermissions.split(";"), $.trim)) == -1) {
                contractItem.FullControlPermissions = contractItem.FullControlPermissions != "" ? contractItem.FullControlPermissions + "; " + username : username;
            }
            if ($.inArray(username, writeRead) > -1) {
                writeRead = jQuery.grep(writeRead, function (value) {
                    return value != username;
                });
            }
            if ($.inArray(username, read) > -1) {
                read = jQuery.grep(read, function (value) {
                    return value != username;
                });
            }
            if ($.inArray(username, UniqueUsers) == -1)
                UniqueUsers.push(username);
        });
        $(writeRead).each(function () {
            var username = this.toString();
            if ($.inArray(username, $.map(contractItem.ReadWritePermissions.split(";"), $.trim)) == -1) {
                contractItem.ReadWritePermissions = contractItem.ReadWritePermissions != "" ? contractItem.ReadWritePermissions + "; " + username : username;
            }

            if ($.inArray(username, read) > -1) {
                read = jQuery.grep(read, function (value) {
                    return value != username;
                });
            }
            if ($.inArray(username, UniqueUsers) == -1)
                UniqueUsers.push(username);
        });
        $(read).each(function () {
            var username = this.toString();
            if ($.inArray(username, $.map(contractItem.ReadOnlyPermissions.split(";"), $.trim)) == -1) {
                contractItem.ReadOnlyPermissions = contractItem.ReadOnlyPermissions ? contractItem.ReadOnlyPermissions + "; " + username : username;
            }
            if ($.inArray(username, UniqueUsers) == -1)
                UniqueUsers.push(username);

        });
        var uniUser = '';
        $(UniqueUsers).each(function (i, item) {
            if (uniUser == '') {
                uniUser = item;
            }
            else {
                uniUser += "; " + item;
            }
        });
        formData.append("ContractRoleUsers", uniUser);
        formData.append("ReadOnlyPermissions", contractItem.ReadOnlyPermissions);
        formData.append("ReadWritePermissions", contractItem.ReadWritePermissions);
        formData.append("FullControlPermissions", contractItem.FullControlPermissions);
        $.ajax({
            // url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName("ContractID") + '/people',
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName("ContractID") + '/ipeopleupdate',
            type: 'PUT',
            headers: {
                'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
            },
            data: formData,
            cache: false,
            contentType: false,
            processData: false,
            success: function (item) {
                BindContractPeopleMetadata(item);
                BindContractRolesMetadata();
                contractItem = item;

                $('.ui-button-green-text').parent().removeAttr('disabled');
                $("#loadingPage").fadeOut();
                $("#addEditPeople").dialog("close");

                //Binding Missing Information
                pendingStarted = false;
                $("#tblContractSettingMetadata").empty();
                GetContractPendingAction(true, "BindPeoples");
            },
            error: function () {
                $("#loadingPage").fadeOut();
            }
        });
    }
    else {
        $('.ui-button-green-text').parent().removeAttr('disabled');
        $("#loadingPage").fadeOut();
    }
    return isformvalid;

}

function chkpermissionvalue() {
    if ($("#chkpermission").is(':checked')) {
        $('#newPopup').empty();
        arrPermsnUser = [];
        GetValueAndPopulateManagerNew(contractItem, null);
        $("#txtAddUser").empty();
        //GetUsers();
        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/users',
            type: 'GET',
            dataType: 'json',
            'Content-Type': 'application/json',
            cache: false,
            headers: {
                'eContracts-ApiKey': localStorage.APIKey
            },
            success: function (data) {
                var arrUsers = [];
                var v = $(data).length;
                var datalenght = data.length;
                for (var i = 0; i < datalenght; i++) {
                    var item = data[i];
                    var sRowKey = item.RowKey;
                    var sUserName = item.UserName;
                    var sUserType = item.UserType;
                    var sEmail = item.EmailID;
                    if (sUserType.indexOf("Global Contract Owner") >= 0) {
                        // arrGlobalUser.push(sUserName);
                    } else {
                        arrUsers.push(sUserName);
                    }
                }
                arrUsers = arrUsers.filter(function (x) {
                    return arrPermsnUser.indexOf(x) < 0
                })
                var datalenght = arrUsers.length;
                for (var i = 0; i < datalenght; i++) {
                    var sUserName = arrUsers[i];
                    var article = '<option value="' + sUserName + '">' + sUserName + '</option>';
                    $("#txtAddUser").append(article);

                }
                $("#txtAddUser").chosen();
                $('#txtAddUser').trigger('chosen:updated');
            },
            error:
               function (data) {
               }
        });

        $("#chkPublicContract").attr("disabled", "disabled");
        $("#chkPublicContract").prop('checked', false);
        $("#divBottom").show();

    } else {
        $("#loadingPage").fadeIn();
        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/defaultpermission?contractid=' + vContractID,
            type: 'GET',
            dataType: 'json',
            headers: {
                'eContracts-ApiKey': localStorage.APIKey, UserID: localStorage.UserID
            },
            cache: false,
            success: function (item) {
                $('#newPopup').empty();
                GetValueAndPopulateManagerNew(contractItem, item);

                var vLastRow = $("#newPopup li").length;
                var totalPermissionCount = "1";
                if (typeof vLastRow == "undefined") {
                    totalPermissionCount = "1";
                }
                else {
                    totalPermissionCount = parseInt(vLastRow);
                }
                for (i = 1; i <= totalPermissionCount; i++) {
                    $("#PermissionOption" + i).prop('disabled', true);
                    $("#" + i).hide();
                }
                $("#divBottom").hide();

                $("#chkPublicContract").removeAttr("disabled");
                if (item.IsPublic == "Yes")
                    $("#chkPublicContract").prop('checked', true);
                else
                    $("#chkPublicContract").prop('checked', false);

                $("#loadingPage").fadeOut();
            },
            error: function (request) {
                $("#ddlFullControl").prop('disabled', true).trigger("chosen:updated");
                $("#ddlReadWrite").prop('disabled', true).trigger("chosen:updated");
                $("#ddlReadOnly").prop('disabled', true).trigger("chosen:updated");
                $("#loadingPage").fadeOut();
            }

        });
    }

}

function savePermission() {
    $('.ui-button-green-text').parent().attr('disabled', 'disabled');
    var isformvalid = false;
    $("#loadingPage").fadeIn();
    var ReadOnlyUsers = "";
    var ReadWriteUser = "";
    var FullControlUsers = "";
    var status = "";
    var newArray = [];

    ///new pop up///

    //manoj;
    var vLastRow = $("#newPopup li");
    //manoj
    //var vLastRow = $("#newPopup li").length;
    //var totalPermissionCount = "1";
    //if (typeof vLastRow == "undefined") {
    // totalPermissionCount = "1";
    //}
    //else {
    // totalPermissionCount = parseInt(vLastRow.length);
    // }

    //manoj
    $(vLastRow).each(function (idel, itemval) {
        if (typeof itemval.id != "undefined") {
            var i = parseInt(itemval.id.replace("PermissionList", ""));
            var drptext = $("#PermissionOption" + i).find('option:selected').text();
            var strRole = $("#UserRole" + i).html();
            var item = $("#PermissionUser" + i).html();
            if (item != null && item != "") {
                if (item != null && item != "") {
                    newArray.push(item);
                }
                if (drptext == "Full Control") {
                    if (FullControlUsers == "") {
                        FullControlUsers = item;
                    }
                    else {
                        FullControlUsers += "; " + item;
                    }
                }
                else if (drptext == "Read/Write") {
                    if (ReadWriteUser == "") {
                        ReadWriteUser = item;
                    }
                    else {
                        ReadWriteUser += "; " + item;
                    }
                }
                else if (drptext == "Read Only") {

                    if (ReadOnlyUsers == "") {
                        ReadOnlyUsers = item;
                    }
                    else {
                        ReadOnlyUsers += "; " + item;
                    }
                }

                else if ((strRole.indexOf("Approver") >= 0 || strRole.indexOf("Reviewer") >= 0 || strRole.indexOf("Contract Owner") >= 0 || strRole.indexOf("Requestor") >= 0) && (strRole != "undefined")) {
                    var strUserPermission = $("#UserPermission" + i)[0].textContent.trim();
                    if (strUserPermission == "Full Control") {
                        if (FullControlUsers == "") {
                            FullControlUsers = item;
                        }
                        else {
                            FullControlUsers += "; " + item;
                        }
                    }
                    else if (strUserPermission == "Read/Write") {
                        if (ReadWriteUser == "") {
                            ReadWriteUser = item;
                        }
                        else {
                            ReadWriteUser += "; " + item;
                        }
                    }
                    else if (strUserPermission == "Read Only") {
                        if (ReadOnlyUsers == "") {
                            ReadOnlyUsers = item;
                        }
                        else {
                            ReadOnlyUsers += "; " + item;
                        }
                    }
                }
            }
        }
    });
    //manoj

    //for (i = 1; i <= totalPermissionCount; i++) {

    //}
    status = $("#chkpermission").is(':checked') ? 'Yes' : 'No';
    var vIsPublic = $("#chkPublicContract").is(':checked') ? 'Yes' : 'No';


    var array2 = (contractItem.ContractManagers + ";" + contractItem.Approvers + ";" + contractItem.Reviewers + ";" + contractItem.Signees).split(';');

    var arrDiff = [];
    $.grep(array2, function (el) {

        if ($.inArray(el.trim(), newArray) == -1 && $.inArray(el.trim(), arrDiff) == -1 && el.trim() != '') arrDiff.push(el.trim());

    });
    if (arrDiff.length == 0) {
        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName("ContractID") + '/permission',
            type: 'PUT',
            dataType: 'json',
            headers: {
                'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
            },
            data: {
                ReadOnlyPermissions: ReadOnlyUsers,
                ReadWritePermissions: ReadWriteUser,
                FullControlPermissions: FullControlUsers,
                CustomPermission: status,
                IsPublic: vIsPublic,
                ModifiedBy: localStorage.UserName
            },
            cache: false,
            success: function (person) {
                BindUpdatedContractDetails(vContractID);
                $('.ui-button-green-text').parent().removeAttr('disabled');

                $("#addEditPermission").dialog("close");

                $("#loadingPage").fadeOut();
            }
        });
    } else {

        swal("", arrDiff + " need access to this contract.");
        $("#loadingPage").fadeOut();
    }

    return isformvalid;
}

$('#txtContractValuepopup').keypress(function (e) {
    if (e.keyCode == 13)
        return false;
});

$('#txtSearchBoxContract').keypress(function (e) {
    if (e.keyCode == 13) {
        $(".ui-autocomplete").css('display', 'none');
        ViewContracts();
    }
});

function ManageContractRenewal() {
    var vRenewalChecklist = "";
    var executecontrol = true;
    if ($("input:radio[name=rdsettings]:checked").val() == "Auto Renewal" && $("input:radio[name=rdWorkflow]:checked").val() == "Yes" && !requiredValidator("addNewContractRenewal")) {
        executecontrol = false;
    }
    else if (!dategreaterthanequaltoday("lblNextRenewalDate")) {

        swal("", "Next Renewal Date should be greater than today.");
        executecontrol = false;
    }
    else if (!dategreaterthanequaltoday("lblTermEndDate")) {

        swal("", "Term End Date should be greater than today.");
        executecontrol = false;
    }

    else {
        if ($("input:radio[name=rdsettings]:checked").val() == "Auto Renewal" && $("input:radio[name=rdWorkflow]:checked").val() == "Yes" && $("#txtApprovalTask").val() == "") {

            swal("", "Select create approval task and enter days.");
            executecontrol = false;
        }
        if ($("input:radio[name=rdsettings]:checked").val() == "Auto Renewal") {
            var data = $("#txtStandardRenewalTerm").val()
            var len = data.length;
            var c;
            for (var i = 0; i < len; i++) {
                c = data.charAt(i).charCodeAt(0);
                if (c < 48 || c > 57) {

                    swal("", "Enter number in standard renewal term.");
                    executecontrol = false;
                    break;
                }
            }

            if (len == 0) {

                swal("", "Enter number in standard renewal term.");
                executecontrol = false;
            }

            if ($("input:radio[name=rdRenewTime]:checked").val() == "RenewableFor") {
                var data1 = $("#txtRenewableFor").val()
                var len1 = data1.length;
                var c1;
                for (var i = 0; i < len1; i++) {
                    c1 = data1.charAt(i).charCodeAt(0);
                    if (c1 < 48 || c1 > 57) {

                        swal("", "Enter number in renewable for terms.");
                        executecontrol = false;
                        break;
                    }
                }
            }

            if (len1 == 0) {

                swal("", "Enter number in renewable for terms.");
                executecontrol = false;
            }
        }
    }

    if (executecontrol) {
        $('.ui-button-green-text').parent().attr('disabled', 'disabled');
        var ap = '';
        var IsEverGreen = "No";
        var vRenewableTerm = '';
        if ($("input:radio[name=rdRenewTime]:checked").val() == "Evergreen") {
            IsEverGreen = "Yes";
        }
        else {
            vRenewableTerm = $("#txtRenewableFor").val();
        }
        var vStandardRenewalTerm = '';
        if ($("input:radio[name=rdsettings]:checked").val() == "Auto Renewal") {
            vStandardRenewalTerm = $("#txtStandardRenewalTerm").val() + ";" + $("#ddlStandardRenewalTerm").find('option:selected').val();
            if ($("input:radio[name=rdWorkflow]:checked").val() == "Yes") {

            }
        }
        var vNextRenewalDate = "";
        var vEndDate = "";

        if ($("#lblNextRenewalDate").val() != "") {
            vNextRenewalDate = $.datepicker.formatDate('mm/dd/yy', $("#lblNextRenewalDate").datepicker('getDate'));
        }
        if ($("#lblTermEndDate").val() != "") {
            vEndDate = $.datepicker.formatDate('mm/dd/yy', $("#lblTermEndDate").datepicker('getDate'));
        }
        var remainingRenewal = "0";
        if ($("input:radio[name=rdsettings]:checked").val() == "Auto Renewal") {
            if ($("input:radio[name=rdRenewTime]:checked").val() == "RenewableFor") {
                remainingRenewal = $("#txtRenewableFor").val();
            }
        }
        var vRenewalNotes = "";
        var vRenewalChecklistAmendments = "";
        var vRenewalNotificationInternal = "";
        var vRenewalNotificationExternal = "";

        $("#inprocessRenewalSetting").css('display', '');
        if ($("#lblRenewSettingsID").text() == "") {
            $("#loadingPage").fadeIn();
            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName("ContractID") + '/renewalsettings',
                type: 'POST',
                dataType: 'json',
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                },
                data: {
                    ContractID: $("#hdnContractID").text(),
                    ContractTitle: $("#lblContractTitle").text(),
                    RenewalType: $("input:radio[name=rdsettings]:checked").val(),
                    StandardRenewalTerm: vStandardRenewalTerm,
                    Evergreen: IsEverGreen,
                    RenewableTerm: vRenewableTerm,
                    WorkflowApproval: $("input:radio[name=rdWorkflow]:checked").val(),
                    ApprovalTaskDays: $("#txtApprovalTask").val(),
                    CreateApprovalTask: 'Yes',
                    CreatedBy: localStorage.UserName,
                    ModifiedBy: localStorage.UserName,
                    NextRenewalDate: vNextRenewalDate,
                    EndDate: vEndDate,
                    RenewalRemaining: remainingRenewal,
                    RenewalNotes: vRenewalNotes,
                    RenewalChecklist: vRenewalChecklist,
                    RenewalChecklistAmendments: vRenewalChecklistAmendments,
                    RenewalNotificationInternal: vRenewalNotificationInternal,
                    RenewalNotificationExternal: vRenewalNotificationExternal
                },
                cache: false,
                success: function (person) {
                    $("#loadingPage").fadeOut();
                    $('.ui-button-green-text').parent().removeAttr('disabled');

                    $("#contractRenewal").dialog("close");
                    $("#inprocessRenewalSetting").css('display', 'none');
                }
            });
        } else {
            $("#loadingPage").fadeIn();
            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName("ContractID") + '/renewalsettings',
                type: 'PUT',
                dataType: 'json',
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                },
                data: {
                    RowKey: $("#lblRenewSettingsID").text(),
                    ContractID: $("#hdnContractID").text(),
                    ContractTitle: $("#lblContractTitle").text(),
                    RenewalType: $("input:radio[name=rdsettings]:checked").val(),
                    StandardRenewalTerm: vStandardRenewalTerm,
                    Evergreen: IsEverGreen,
                    RenewableTerm: vRenewableTerm,
                    WorkflowApproval: $("input:radio[name=rdWorkflow]:checked").val(),
                    CreateApprovalTask: 'Yes',
                    ApprovalTaskDays: $("#txtApprovalTask").val(),
                    ModifiedBy: localStorage.UserName,
                    NextRenewalDate: vNextRenewalDate,
                    EndDate: vEndDate,
                    RenewalRemaining: remainingRenewal,
                    RenewalNotes: vRenewalNotes,
                    RenewalChecklist: vRenewalChecklist,
                    RenewalChecklistAmendments: vRenewalChecklistAmendments,
                    RenewalNotificationInternal: vRenewalNotificationInternal,
                    RenewalNotificationExternal: vRenewalNotificationExternal
                },
                cache: false,
                success: function (person) {
                    $("#loadingPage").fadeOut();
                    $('.ui-button-green-text').parent().removeAttr('disabled');

                    $("#contractRenewal").dialog("close");
                    $("#inprocessRenewalSetting").css('display', 'none');
                }
            });
        }

    }

}

function ManualRenewal() {
    var IsClose = 0;
    if (requiredValidator("divManualRenewal")) {
        var vRenewalChecklist = "";
        if ($("#chkRenewalModifications").is(':checked')) {
            if (vRenewalChecklist == '') {
                vRenewalChecklist = "Renewal without any modifications";
            }
            else {
                vRenewalChecklist += "; Renewal without any modifications";
            }
        }
        if ($("#chkRenewalPriceAdjustments").is(':checked')) {
            if (vRenewalChecklist == '') {
                vRenewalChecklist = "Renewal with Price Adjustments (minor)";
            }
            else {
                vRenewalChecklist += "; Renewal with Price Adjustments (minor)";
            }
        }
        if ($("#chkRenewalRepricing").is(':checked')) {
            if (vRenewalChecklist == '') {
                vRenewalChecklist = "Renewal with Repricing (major)";
            }
            else {
                vRenewalChecklist += "; Renewal with Repricing (major)";
            }
        }
        if ($("#chkRenewalOther").is(':checked')) {
            if (vRenewalChecklist == '') {
                vRenewalChecklist = "Other Amendments";
            }
            else {
                vRenewalChecklist += "; Other Amendments";
            }
        }
        if (vRenewalChecklist == "") {

            swal("", "Select Renewal Checklist.");
        }
        else if (!dategreaterthanequaltoday("txtNewEndDate")) {

            swal("", "Renew Till Date should be greater than today.");
        }
        else if (!dategreaterthanequaltoday("txtNextRenewalDate")) {

            swal("", "Next Renewal Date should be greater than today.");
        }
        else if (!comparedates("hdnStartDate", "txtNextRenewalDate")) {

            swal("", "'Updated End (Renewed) Date' and 'Next Renewal Date' should be greater than Start Date");
        }
        else {
            $("#loadingPage").fadeIn();
            var vNextRenewalDate = '';
            var vEndDate = '';

            if ($("#txtNextRenewalDate").val() != "") {
                fNextRenewalDate = $.datepicker.formatDate('mm/dd/yy', $("#txtNextRenewalDate").datepicker('getDate'));
                vNextRenewalDate = fNextRenewalDate;
            }
            if ($("#txtNewEndDate").val() != "") {
                fNewEndDate = $.datepicker.formatDate('mm/dd/yy', $("#txtNewEndDate").datepicker('getDate'));
                vEndDate = fNewEndDate;
            }
            var vRenewalNotes = "";
            var vRenewalChecklistAmendments = "";
            var vRenewalNotificationInternal = "";
            var vRenewalNotificationExternal = "";
            vRenewalNotes = $("#txtRenewalNotes").val();
            vRenewalChecklistAmendments = "";
            var RenewalNotfInternal = $("#ddlRenewalNotfInternal").val();
            $(RenewalNotfInternal).each(function (i, item) {
                if (vRenewalNotificationInternal == '') {
                    vRenewalNotificationInternal = item;
                }
                else {
                    vRenewalNotificationInternal += "; " + item;
                }
            });
            vRenewalNotificationExternal = $("#txtRenewalNotfCounterparty").val();

            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName("ContractID") + '/renewnow',
                type: 'POST',
                dataType: 'json',
                "Content-Type": "application/json",
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                },
                data: {
                    ContractID: $("#hdnContractID").text(),
                    ModifiedBy: localStorage.UserName,
                    NextRenewalDate: vNextRenewalDate,
                    EndDate: vEndDate,
                    RenewalNotes: vRenewalNotes,
                    RenewalChecklist: vRenewalChecklist,
                    RenewalChecklistAmendments: vRenewalChecklistAmendments,
                    RenewalNotificationInternal: vRenewalNotificationInternal,
                    RenewalNotificationExternal: vRenewalNotificationExternal
                },
                cache: false,
                success: function (data) {
                    if (data != null)
                        contractItem = data;
                    BindContractTermDetail(contractItem);
                    //*Harshitha contract System milestone
                    BindSystemMilestones(contractItem);
                    $("#manualRenewal").dialog("close");
                    $("#loadingPage").fadeOut();

                    swal("", "Contract Renewed");
                    if (contractItem.TermEndDate != null) {
                        var fTermEndDate = "";
                        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                        { fTermEndDate = moment(new Date(contractItem.TermEndDate)).format('MM/DD/YYYY'); }
                        else {
                            fTermEndDate = moment(new Date(contractItem.TermEndDate)).format(localStorage.AppDateFormat);
                        }
                        $("#txtContractTermEnds").val(fTermEndDate);
                    }
                    if (contractItem.RenewalDate != null) {
                        var fRenewalDate = "";
                        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                        { fRenewalDate = moment(new Date(contractItem.RenewalDate)).format('MM/DD/YYYY'); }
                        else {
                            fRenewalDate = moment(new Date(contractItem.RenewalDate)).format(localStorage.AppDateFormat);
                        }
                        $("#txtContractTermRenewOn").val(fRenewalDate);
                    }
                    if (contractItem.AutoExpireOn != null) {
                        var fAutoExpireOn = "";
                        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                        { fAutoExpireOn = moment(new Date(contractItem.AutoExpireOn)).format('MM/DD/YYYY'); }
                        else {
                            fAutoExpireOn = moment(new Date(contractItem.AutoExpireOn)).format(localStorage.AppDateFormat);
                        }
                        $("#txtContractTermExpireOn").val(fAutoExpireOn);
                    }

                    $("#chkRenewalModifications").prop('checked', false);
                    $("#chkRenewalPriceAdjustments").prop('checked', false);
                    $("#chkRenewalRepricing").prop('checked', false);
                    $("#chkRenewalOther").prop('checked', false);
                    $("#txtNewEndDate").val("");
                    $("#txtNextRenewalDate").val("");
                    $("#txtRenewalNotes").val("");
                    $("#txtRenewalNotfCounterparty").val("");
                    GetValuesAndAutoPopulate("ddlRenewalNotfInternal", "");

                    contractItem.Status = "Renewed";
                    ContractTopActions();
                },
                error: function (data) {
                    $("#loadingPage").fadeOut();
                }
            });
        }
    }
}

function RenewSettingRadiobutton(RadioSelection) {
    switch (RadioSelection) {
        case "Non-Renewable":
            $("#lblNextRenewalDate").prop("disabled", true);
            $("#lblTermEndDate").prop("disabled", true);
            $("#txtStandardRenewalTerm").prop("disabled", true);
            $("#ddlStandardRenewalTerm").prop("disabled", true);
            $("input:radio[name=rdRenewTime]").prop("disabled", true);
            $("#txtRenewableFor").prop("disabled", true);

            $("#txtStandardRenewalTerm").val("");
            $("#txtRenewableFor").val("");
            $("#liAutoRenew1").css('display', 'none');
            $("#liAutoRenew2").css('display', 'none');
            $("input:radio[name=rdWorkflow][value='No']").attr('checked', 'checked');
            approvaltaskno();
            $("#trRenwalHistory").css('display', 'none');
            $("#trRenwalWorkflow").css('display', 'none');

            $("#btnRenewNow").css('display', 'none');

            break;
        case "Manual Renewal":
            $("#lblNextRenewalDate").prop("disabled", false);
            $("#lblTermEndDate").prop("disabled", false);

            $("#lblNextRenewalDate").prop("disabled", false);
            $("#lblTermEndDate").prop("disabled", false);
            $("#txtStandardRenewalTerm").prop("disabled", true);
            $("#ddlStandardRenewalTerm").prop("disabled", true);
            $("input:radio[name=rdRenewTime]").prop("disabled", true);
            $("#txtRenewableFor").prop("disabled", true);

            $("#txtStandardRenewalTerm").val("");
            $("#txtRenewableFor").val("");
            $("#liAutoRenew1").css('display', 'none');
            $("#liAutoRenew2").css('display', 'none');
            $("#trRenwalHistory").css('display', '');
            $("#trRenwalWorkflow").css('display', 'none');

            $("#btnRenewNow").css('display', '');
            break;
        case "Auto Renewal":
            $("#lblNextRenewalDate").prop("disabled", false);
            $("#lblTermEndDate").prop("disabled", false);

            $("#lblNextRenewalDate").prop("disabled", false);
            $("#lblTermEndDate").prop("disabled", false);
            $("#txtStandardRenewalTerm").prop("disabled", false);
            $("#ddlStandardRenewalTerm").prop("disabled", false);
            $("input:radio[name=rdRenewTime]").prop("disabled", false);
            $("#txtRenewableFor").prop("disabled", false);

            $("#liAutoRenew1").css('display', '');
            $("#liAutoRenew2").css('display', '');
            $("#trRenwalHistory").css('display', '');
            $("#trRenwalWorkflow").css('display', '');

            $("#btnRenewNow").css('display', 'none');
            break;
    }
}

$("#btnRenewNow").click(function () {
    if ($("input:radio[name=rdsettings]:checked").val() == "Manual Renewal") {
        $("#chkRenewalModifications").prop('checked', false);
        $("#chkRenewalPriceAdjustments").prop('checked', false);
        $("#chkRenewalRepricing").prop('checked', false);
        $("#chkRenewalOther").prop('checked', false);
        $("#txtNewEndDate").val("");
        $("#txtNextRenewalDate").val("");
        $("#txtRenewalNotes").val("");
        $("#txtRenewalNotfCounterparty").val("");
        GetValuesAndAutoPopulate("ddlRenewalNotfInternal", "");
        $("#manualRenewal").dialog("open");

    } else {
        swal("", "Select manual renewable.");
    }
});

function OpenWorkflowRenew() {
    $("#loadingPage").fadeIn();
    GetRenewalApprovalSettings();

}

function SaveWorkflowRenew() {
    var IsClose = 0;
    if (requiredValidator("dvWorkflowRenew", false)) {
        $("#loadingPage").fadeIn();
        var ap = '<WorkflowPaticipants>';
        $('#tblStageRenew tr').each(function (i, row) {
            var vRow = $(row).attr('id');
            var vRowIndex = vRow.replace("trStageRenew", "");
            var stage = $("#txtStageRenew" + vRowIndex).val();
            var order = $("#ddlOrderRenew" + vRowIndex).find('option:selected').text();
            var sendTo = '';
            $('#ddlAssignToRenew' + vRowIndex + '_chosen').find('.chosen-choices li').find('span').each(function () {
                if (sendTo == '') {
                    sendTo = $(this).text();
                }
                else {
                    sendTo += "; " + $(this).text();
                }
            });
            ap += "<WorkflowPaticipant><StageTitle>" + stage + "</StageTitle>" + "<Participants>" + sendTo + "</Participants>" +
                "<Order>" + order + "</Order><StageID>" + (i + 1) + "</StageID></WorkflowPaticipant>";
        });
        ap += '</WorkflowPaticipants>';
        var vApprovers = $('<div/>').text(ap).html();

        var ccsArr = $("#ddlWorkflowCCRenew").val();
        var ccs = '';
        $(ccsArr).each(function (i, item) {
            if (ccs == '') {
                ccs = item;
            }
            else {
                ccs += "; " + item;
            }
        });

        var IsEverGreen = "No";
        var vRenewableTerm = '';
        var vStandardRenewalTerm = '';
        var vNextRenewalDate = "";
        var vEndDate = "";
        var remainingRenewal = "0";
        if ($("input:radio[name=rdRenewTime]:checked").val() == "Evergreen") {
            IsEverGreen = "Yes";
        }
        else {
            vRenewableTerm = $("#txtRenewableFor").val();
        }
        if ($("input:radio[name=rdsettings]:checked").val() == "Auto Renewal") {
            vStandardRenewalTerm = $("#txtStandardRenewalTerm").val() + ";" + $("#ddlStandardRenewalTerm").find('option:selected').val();
        }
        if ($("#lblNextRenewalDate").val() != "") {
            vNextRenewalDate = $.datepicker.formatDate('mm/dd/yy', $("#lblNextRenewalDate").datepicker('getDate'));
        }
        if ($("#lblTermEndDate").val() != "") {
            vEndDate = $.datepicker.formatDate('mm/dd/yy', $("#lblTermEndDate").datepicker('getDate'));
        }
        if ($("input:radio[name=rdsettings]:checked").val() == "Auto Renewal") {
            if ($("input:radio[name=rdRenewTime]:checked").val() == "RenewableFor") {
                remainingRenewal = $("#txtRenewableFor").val();
            }
        }
        var nicInstance = nicEditors.findEditor('txtCommentRenew');
        var vcommentText = CleanWordFormatFromHTML(nicInstance.getContent());
        var vNoteTextCount = vcommentText.replace(/<\/?[^>]+(>|$)/g, "");
        if (vNoteTextCount.length <= 26500) {
            vcommentText = $('<div/>').text(vcommentText).html();
            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName("ContractID") + '/renewalsettingsworkflow',
                type: 'POST',
                dataType: 'json',
                "Content-Type": "application/json",
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                },
                data: {
                    RowKey: $("#lblRenewSettingsID").text(),
                    ContractID: $("#hdnContractID").text(),
                    ContractTitle: $("#lblContractTitle").text(),
                    RenewalType: $("input:radio[name=rdsettings]:checked").val(),
                    StandardRenewalTerm: vStandardRenewalTerm,
                    Evergreen: IsEverGreen,
                    RenewableTerm: vRenewableTerm,
                    WorkflowApproval: 'Yes',
                    CreateApprovalTask: 'Yes',
                    ApprovalTaskDays: $("#txtApprovalTask").val(),
                    Approvers: vApprovers,
                    NotesForApprovers: vcommentText,
                    RuleID: $("#ddlRuleRenew").val(),
                    WorkflowTitle: $("#txtWorkflowTitleRenew").val(),
                    Duration: $("#txtDurationRenew").val(),
                    CC: ccs,
                    ModifiedBy: localStorage.UserName,
                    NextRenewalDate: vNextRenewalDate,
                    EndDate: vEndDate,
                    RenewalRemaining: remainingRenewal,
                    RenewalNotes: "",
                    RenewalChecklist: "",
                    RenewalChecklistAmendments: "",
                    RenewalNotificationInternal: "",
                    RenewalNotificationExternal: ""
                },
                cache: false,
                success: function (config) {
                    $("#lblRenewSettingsID").text(config.RowKey);
                    $("#loadingPage").fadeOut();
                    $("#dvWorkflowRenew").dialog("close");
                },
                error: function (config) {
                    var vv = "";
                }
            });
        }
        else {
            $("#loadingPage").fadeOut();
            swal("", "Note can not exceed 26500 characters");
        }

    }
}


function AddStageRenew() {
    var vLastRow = $("#tblStageRenew tr:last").attr('id');

    var totalFileCount = "1";
    if (typeof vLastRow == "undefined") {
        totalFileCount = "1";
    }
    else {
        totalFileCount = parseInt(vLastRow.replace("trStageRenew", ""));
        totalFileCount += 1;
    }
    var htmlFormatFile = '<tr id="trStageRenew' + totalFileCount + '">';
    htmlFormatFile += '<td class="width30 wf_approval start_workflow">';
    htmlFormatFile += '<input id="txtStageRenew' + totalFileCount + '" name="Stage' + totalFileCount + '" title="Stage" placeholder="Stage Name" type="text" class="f_inpt width95 validelement" value="Stage ' + totalFileCount + '"/>';
    htmlFormatFile += '</td>';
    htmlFormatFile += '<td class="width46 start_workflow">';
    htmlFormatFile += '<select id="ddlAssignToRenew' + totalFileCount + '" name="AssignTo' + totalFileCount + '"  multiple="multiple" data-placeholder="Select" class="width97 validmultiselect"></select>';
    htmlFormatFile += '</td>';
    htmlFormatFile += '<td class="width20 padding_top_3px v_align_top start_workflow">';
    htmlFormatFile += '<select id="ddlOrderRenew' + totalFileCount + '" name="Order' + totalFileCount + '"  class="f_inpt width97" disabled="disabled"><option selected="selected">Serial</option><option>Parallel</option></select>';
    htmlFormatFile += '</td>';
    htmlFormatFile += '<td class="width4 padding_top_10px v_align_top start_workflow">';
    htmlFormatFile += '<img src="../Content/Images/icon/delete.png" style="width: 20px" onclick="DeleteStageRenew(this)" />';
    htmlFormatFile += '</td>';
    htmlFormatFile += '</tr>';

    $("#tblStageRenew").append(htmlFormatFile);
    var $options = $("#ddlApprovers > option").clone();
    $('#ddlAssignToRenew' + totalFileCount).append($options);

    $("#ddlAssignToRenew" + totalFileCount).chosen().change(function () {
        var vasstoid = $(this).attr('id').replace("ddlAssignToRenew", "");
        if ($(this).val() != null) {
            if ($(this).val().length > 1)
                $("#ddlOrderRenew" + vasstoid).prop('disabled', false);
            else
                $("#ddlOrderRenew" + vasstoid).prop('disabled', true);
        }
        else
            $("#ddlOrderRenew" + vasstoid).prop('disabled', true);
    });
}

function DeleteStageRenew(n) {
    var vv = $(n.parentNode.parentNode).find('select');
    var curVal = 0;
    if (typeof vv != 'undefined') {
        curVal = parseInt(vv.val());
    }
    n.parentNode.parentNode.parentNode.removeChild(n.parentNode.parentNode);
}

$("#ddlRuleRenew").change(function (obj) {
    BindRenewRuleApprovers();
});

var vRuleIDRenew = "";
var vWorkflowRulesRenew = [];
function BindRenewRuleApprovers() {
    var ruleName = $("#ddlRuleRenew option:selected").text();
    var vFilterRule = $.grep(vWorkflowRulesRenew, function (n, i) {
        return (n.RuleName == ruleName);
    });
    if (vFilterRule.length > 0) {
        $("#tblStageRenew").empty();
        var workflowRules = vFilterRule[0];
        var participantsInXML = workflowRules.ParticipantsInXML;
        var totalFileCount = 0;
        if (workflowRules.ParticipantsInXML != "") {
            $(participantsInXML).find('WorkflowPaticipant').each(function () {
                var StageTitle = $(this).find('StageTitle').text();
                var Participants = $(this).find('Participants').text();
                var Order = $(this).find('Order').text();
                totalFileCount++;
                var htmlFormatFile = '<tr id="trStageRenew' + totalFileCount + '">';
                htmlFormatFile += '<td class="width30 wf_approval start_workflow">';
                htmlFormatFile += '<input id="txtStageRenew' + totalFileCount + '" value="' + StageTitle + '" name="Stage' + totalFileCount + '" title="Stage" placeholder="Stage Name" type="text" class="f_inpt width95 validelement" />';
                htmlFormatFile += '</td>';
                htmlFormatFile += '<td class="width46 start_workflow">';
                htmlFormatFile += '<select id="ddlAssignToRenew' + totalFileCount + '" name="AssignTo' + totalFileCount + '"  multiple="multiple" data-placeholder="Select" class="width97 validmultiselect"></select>';
                htmlFormatFile += '</td>';
                htmlFormatFile += '<td class="width20 padding_top_3px v_align_top start_workflow">';
                htmlFormatFile += '<select id="ddlOrderRenew' + totalFileCount + '" name="Order' + totalFileCount + '"  class="f_inpt width97">';
                if (Order == "Serial")
                    htmlFormatFile += '<option value="Serial" selected="selected">Serial</option><option value="Parallel">Parallel</option></select>';
                else
                    htmlFormatFile += '<option value="Serial">Serial</option><option value="Parallel" selected="selected">Parallel</option></select>';
                htmlFormatFile += '</td>';
                htmlFormatFile += '<td class="width4 padding_top_10px v_align_top start_workflow">';

                htmlFormatFile += '</td>';
                htmlFormatFile += '</tr>';

                $("#tblStageRenew").append(htmlFormatFile);
                var $options = $("#ddlApprovers > option").clone();
                $('#ddlAssignToRenew' + totalFileCount).append($options);

                $("#ddlAssignToRenew" + totalFileCount).chosen().change(function () {
                    var vasstoid = $(this).attr('id').replace("ddlAssignToRenew", "");
                    if ($(this).val() != null) {
                        if ($(this).val().length > 1 && (workflowRoutingOptions.indexOf("Allow over-ride of Admin Configuration") >= 0 ||
                            workflowRoutingOptions.indexOf("Allow replacing participants") >= 0))
                            $("#ddlOrderRenew" + vasstoid).prop('disabled', false);
                        else
                            $("#ddlOrderRenew" + vasstoid).prop('disabled', true);
                    }
                    else
                        $("#ddlOrderRenew" + vasstoid).prop('disabled', true);
                });
                GetValuesAndAutoPopulate("ddlAssignToRenew" + totalFileCount, Participants);
                var vParticipantsArr = Participants.split(";");
                if (vParticipantsArr.length > 1)
                    $("#ddlOrderRenew" + totalFileCount).prop('disabled', false);
                else
                    $("#ddlOrderRenew" + totalFileCount).prop('disabled', true);

                if (ruleName == "Ad-hoc") {
                    $("#txtStageRenew" + totalFileCount).prop('disabled', false);
                    $("#ddlAssignToRenew" + totalFileCount).prop('disabled', false).trigger("chosen:updated");

                    $("#spAddStageRenew").css("display", "");
                } else {
                    $("#txtStageRenew" + totalFileCount).prop('disabled', true);
                    $("#ddlAssignToRenew" + totalFileCount).prop('disabled', true).trigger("chosen:updated");
                    $("#ddlOrderRenew" + totalFileCount).prop('disabled', true);
                    $("#spAddStageRenew").css("display", "none");
                }
            });
        }
        else {
            var totalFileCount = 1;
            var htmlFormatFile = '<tr id="trStageRenew' + totalFileCount + '">';
            htmlFormatFile += '<td class="width30 wf_approval start_workflow">';
            htmlFormatFile += '<input id="txtStageRenew' + totalFileCount + '" name="Stage' + totalFileCount + '" title="Stage" placeholder="Stage Name" type="text" class="f_inpt width97 validelement" value="Stage ' + totalFileCount + '"/>';
            htmlFormatFile += '</td>';
            htmlFormatFile += '<td class="width46 start_workflow">';
            htmlFormatFile += '<select id="ddlAssignToRenew' + totalFileCount + '" name="AssignTo' + totalFileCount + '"  multiple="multiple" data-placeholder="Select" class="width97 validmultiselect"></select>';
            htmlFormatFile += '</td>';
            htmlFormatFile += '<td class="width20 padding_top_3px v_align_top start_workflow">';
            htmlFormatFile += '<select id="ddlOrderRenew' + totalFileCount + '" name="Order' + totalFileCount + '"  class="f_inpt width97" disabled="disabled"><option selected="selected">Serial</option><option>Parallel</option></select>';
            htmlFormatFile += '</td>';
            htmlFormatFile += '<td class="width4 padding_top_10px v_align_top start_workflow">';
            htmlFormatFile += '<img src="../Content/Images/icon/delete.png" style="visibility: hidden; width: 20px" onclick="DeleteStage(this)" />';
            htmlFormatFile += '</td>';
            htmlFormatFile += '</tr>';

            $("#tblStageRenew").append(htmlFormatFile);
            var $options = $("#ddlApprovers > option").clone();
            $('#ddlAssignToRenew' + totalFileCount).append($options);
            $("#ddlAssignToRenew" + totalFileCount).chosen().change(function () {
                var vasstoid = $(this).attr('id').replace("ddlAssignToRenew", "");
                if ($(this).val() != null) {
                    if ($(this).val().length > 1 && (workflowRoutingOptions.indexOf("Allow over-ride of Admin Configuration") >= 0 ||
                        workflowRoutingOptions.indexOf("Allow replacing participants") >= 0))
                        $("#ddlOrderRenew" + vasstoid).prop('disabled', false);
                    else
                        $("#ddlOrderRenew" + vasstoid).prop('disabled', true);
                }
                else
                    $("#ddlOrderRenew" + vasstoid).prop('disabled', true);
            });
            $("#txtStageRenew" + totalFileCount).prop('disabled', false);
            $("#ddlAssignToRenew" + totalFileCount).prop('disabled', false).trigger("chosen:updated");

            $("#spAddStageRenew").css("display", "");
        }
    } else {
        var totalFileCount = 1;
        var htmlFormatFile = '<tr id="trStageRenew' + totalFileCount + '">';
        htmlFormatFile += '<td class="width30 wf_approval start_workflow">';
        htmlFormatFile += '<input id="txtStageRenew' + totalFileCount + '" name="Stage' + totalFileCount + '" title="Stage" placeholder="Stage Name" type="text" class="f_inpt width97 validelement" value="Stage ' + totalFileCount + '"/>';
        htmlFormatFile += '</td>';
        htmlFormatFile += '<td class="width46 start_workflow">';
        htmlFormatFile += '<select id="ddlAssignToRenew' + totalFileCount + '" name="AssignTo' + totalFileCount + '"  multiple="multiple" data-placeholder="Select" class="width97 validmultiselect"></select>';
        htmlFormatFile += '</td>';
        htmlFormatFile += '<td class="width20 padding_top_3px v_align_top start_workflow">';
        htmlFormatFile += '<select id="ddlOrderRenew' + totalFileCount + '" name="Order' + totalFileCount + '"  class="f_inpt width97" disabled="disabled"><option selected="selected">Serial</option><option>Parallel</option></select>';
        htmlFormatFile += '</td>';
        htmlFormatFile += '<td class="width4 padding_top_10px v_align_top start_workflow">';
        htmlFormatFile += '<img src="../Content/Images/icon/delete.png" style="visibility: hidden; width: 20px" onclick="DeleteStage(this)" />';
        htmlFormatFile += '</td>';
        htmlFormatFile += '</tr>';

        $("#tblStageRenew").append(htmlFormatFile);
        var $options = $("#ddlApprovers > option").clone();
        $('#ddlAssignToRenew' + totalFileCount).append($options);
        $("#ddlAssignToRenew" + totalFileCount).chosen().change(function () {
            var vasstoid = $(this).attr('id').replace("ddlAssignToRenew", "");
            if ($(this).val() != null) {
                if ($(this).val().length > 1 && (workflowRoutingOptions.indexOf("Allow over-ride of Admin Configuration") >= 0 ||
                    workflowRoutingOptions.indexOf("Allow replacing participants") >= 0))
                    $("#ddlOrderRenew" + vasstoid).prop('disabled', false);
                else
                    $("#ddlOrderRenew" + vasstoid).prop('disabled', true);
            }
            else
                $("#ddlOrderRenew" + vasstoid).prop('disabled', true);
        });
        $("#txtStageRenew" + totalFileCount).prop('disabled', false);
        $("#ddlAssignToRenew" + totalFileCount).prop('disabled', false).trigger("chosen:updated");

        $("#spAddStageRenew").css("display", "");
    }
    $("#loadingPage").fadeOut();
}

//script for default  properties start
function updatedefaultproperties() {
    if (requiredValidator('popupDefaultProperties', false)) {
        var amendablevaluetopass = $("#aNavContracts").hasClass("actNav") ? "Yes" : "No";
        $("#loadingPage").fadeIn();
        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName('ContractID') + '/defaultproperties',
            type: 'PUT',
            dataType: 'json',
            headers: {
                'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
            },
            data: {
                RowKey: getParameterByName('ContractID'),
                ContractType: $("#ddlDPContractTypes").find('option:selected').val(),
                TransactionType: $("#ddlDPTransactionType").find('option:selected').val(),
                ContractClass: $("#ddlDPContractClass").find('option:selected').val(),
                Extendable: ($("#chkDPExtendable").is(':checked') ? 'Yes' : 'No'),
                NeedApprovalForExtension: ($("#chkDPExtensionApproval").is(':checked') ? 'Yes' : 'No'),
                Renewable: ($("#chkDPRenewable").is(':checked') ? 'Yes' : 'No'),
                NeedApprovalForRenewal: ($("#chkDPRenewalApproval").is(':checked') ? 'Yes' : 'No'),
                Amendable: amendablevaluetopass,
                NeedApprovalForAmendment: 'Yes',
                ModifiedBy: localStorage.User,
            },
            cache: false,
            success: function (result) {
                $("#loadingPage").fadeOut();
                contractItem.ContractType = $("#ddlDPContractTypes").find('option:selected').val();
                contractItem.TransactionType = $("#ddlDPTransactionType").find('option:selected').val();
                contractItem.ContractClass = $("#ddlDPContractClass").find('option:selected').val();
                contractItem.Renewable = $("#chkDPRenewable").is(':checked') ? 'Yes' : 'No';
                contractItem.Extendable = ($("#chkDPExtendable").is(':checked') ? 'Yes' : 'No');
                contractItem.NeedApprovalForRenewal = ($("#chkDPRenewalApproval").is(':checked') ? 'Yes' : 'No');
                contractItem.NeedApprovalForExtension = ($("#chkDPExtensionApproval").is(':checked') ? 'Yes' : 'No');
                contractItem.Amendable = amendablevaluetopass;
                contractItem.NeedApprovalForAmendment = ($("#chkDPAmendmentApproval").is(':checked') ? 'Yes' : 'No');
                if (amendablevaluetopass == "Yes") {
                    BindAmendments(vContractID); $("#artAmendment").css('display', '');
                }
                if ($("#chkDPRenewalApproval").is(':checked')) {
                    $("#hdnRenewApprovalRequired").text("Yes");
                } else {
                    $("#hdnRenewApprovalRequired").text("No");
                }

                $('.ui-button-green-text').parent().removeAttr('disabled');
                $("#popupDefaultProperties").dialog("close");

                //Sridhar
                if (contractItem.TransactionType == "Legal/General Agreement") {
                    $("#artFinancials").css('display', 'none');
                }
                else {
                    $("#artFinancials").css('display', '');
                }

            }
        });
    }
}

$('#chkDPExtendable').click(function () {
    if ($("#chkDPExtendable").is(':checked')) {
        $("#chkDPExtensionApproval").removeAttr("disabled");
    }
    else {
        $("#chkDPExtensionApproval").attr("disabled", "disabled");
        $("#chkDPExtensionApproval").prop('checked', false);
    }
});

$('#chkDPRenewable').click(function () {
    if ($("#chkDPRenewable").is(':checked')) {
        $("#chkDPRenewalApproval").removeAttr("disabled");
    }
    else {
        $("#chkDPRenewalApproval").attr("disabled", "disabled");
        $("#chkDPRenewalApproval").prop('checked', false);
    }
});

$('#chkDPAmendable').click(function () {
    if ($("#chkDPAmendable").is(':checked')) {
        $("#chkDPAmendmentApproval").removeAttr("disabled");
    }
    else {
        $("#chkDPAmendmentApproval").attr("disabled", "disabled");
        $("#chkDPAmendmentApproval").prop('checked', false);
    }
});

function BindContractTypes() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracttypes',
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        async: true,
        success: function (contracttypes) {
            $("#ddlDPContractTypes").empty();
            $(contracttypes).each(function (i, item) {
                var find = " ";
                var re = new RegExp(find, 'g');
                var str = item.ContractType + '~' + item.TransactionType + '~' + item.ContractClass + '~' + item.Description;
                if (contractItem.ContractType == item.ContractType) {
                    if (contractItem.ContractType != "") {
                        if (thisContractAreaSettings.ContractType.split(';').indexOf(item.ContractType) > -1) {
                            $("#ddlDPContractTypes").append('<option value="' + item.ContractType + '" selected>' + item.ContractType + '</option>');
                        }
                    }
                } else {
                    if (thisContractAreaSettings.ContractType.split(';').indexOf(item.ContractType) > -1) {
                        $("#ddlDPContractTypes").append('<option value="' + item.ContractType + '">' + item.ContractType + '</option>')
                    }
                }
            });
        }
    });
}

function BindStatusbyCLM(OpenPopup) {
    var CheckBindFinalizedData = parseInt($("#tdFinalized").children().length)
    var CheckBindPipelindData = parseInt($("#tdPipelind").children().length)
    if ((CheckBindFinalizedData != 0 || CheckBindPipelindData != 0) && contractItem.Status != "Archived") {
        if (contractItem.IsFinalized == 'Yes') {
            $('#tdFinalizeContract1').css("display", "none");
            $('#tdFinalizeContract2').css("display", "none");
            $('#tdFinalizeContract3').css("display", "");
            $('#tdFinalizeContract3').html('<img src="/Content/Images/right.png" />Marked Finalized/Ready for Signature by ' + contractItem.FinalizedBy);
            $('#trPipelineStatusFull').css('display', 'none');
            $('#trPipelineStatus').css('display', 'none');
            $('input:radio[name="FinalizedStatus"][value="' + contractItem.Status + '"]').prop('checked', true);
            $('input:radio[name="FinalizedStatus"]').prop('disabled', false);
            $("#tdFinalized").css("display", "");
            $("#tdPipelind").css("display", "none");

            var imgObj = $("#imgFinalizedStatus");
            imgObj.attr("title", "Collapse");
            imgObj.attr("src", "../Content/Images/e-close.png");
            $('#trFinalizedStatus').css('display', '');
            $('#trFinalizedStatusFull').css('display', '');
            //manoj
            if (contractItem.Status == "Archived") {
                if ($("#hdnPermission").val() == "Manage") {
                    $("#trCloseOutContract").css('display', '')
                } else {
                    $("#trCloseOutContract").css('display', 'none');
                }
                $("#rtarchived").css('display', '');
            } else {
                $("#trCloseOutContract").css('display', '');
                $("#rtarchived").css('display', 'none');
            }
            //manoj
            //$("#trCloseOutContract").css('display', '')
            imgObj = $("#imgPipelineStatus");
            imgObj.attr("title", "Expand");
            imgObj.attr("src", "../Content/Images/e-open.png");
        } else {
            $('#tdFinalizeContract1').css("display", "");
            $('#tdFinalizeContract2').css("display", "");
            $('#tdFinalizeContract3').css("display", "none");
            $('#tdFinalizeContract3').html('');
            $('#trFinalizedStatusFull').css('display', 'none');
            $('#trFinalizedStatus').css('display', 'none');
            $("#trCloseOutContract").css('display', 'none')
            $('input:radio[name="PipelineStatus"][value="' + contractItem.Status + '"]').prop('checked', true);
            $('input:radio[name="PipelineStatus"]').prop('disabled', false);
            $("#tdPipelind").css("display", "");
            $("#tdFinalized").css("display", "none");

            var imgObj = $("#imgFinalizedStatus");
            imgObj.attr("title", "Collapse");
            imgObj.attr("src", "../Content/Images/e-close.png");

            imgObj = $("#imgPipelineStatus");
            imgObj.attr("title", "Expand");
            imgObj.attr("src", "../Content/Images/e-open.png");
            $('#trPipelineStatus').css('display', '');
            $('#trPipelineStatusFull').css('display', '');
        }
        $('#dvContCancelNote').css("display", "none");
        if ($("#txtReasonOfCancelContract").hasClass("validelement"))
            $("#txtReasonOfCancelContract").removeClass('validelement');
        $("#dvManageContractStatus").dialog("open");
    }
    else {
        $("#loadingPage").fadeIn();
        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contractstatusesbyCLM',
            type: 'GET',
            dataType: 'json',
            headers: {
                'eContracts-ApiKey': localStorage.APIKey
            },
            cache: false,
            success: function (contractstatuses) {
                $("#tdPipelind").empty();
                $("#tdFinalized").empty();
                var datalength = contractstatuses.length;
                var vAutoChange = '';
                for (var i = 0; i < datalength; i++) {
                    var item = contractstatuses[i];
                    if ((item.Transition == "Manual" || contractItem.Status == item.ContractStatus) && item.Active == true) {
                        if (item.Transition != "Manual")
                            vAutoChange = 'AutoChange';
                        else
                            vAutoChange = '';

                        if (item.ContractStage == "Pipeline") {
                            var ctrl = "";
                            if (item.ContractStatus == "New") {
                                ctrl = "<input id='rdPipelineNew' type='radio' name='PipelineStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='New:" + item.Description + "' class='status_green_another'><img src='../Content/Images/status/new.png'>new</b><label for='rdPipelineNew' class='css-label'>" + item.ContractStatus + "</label><br />";
                            }
                            else if (item.ContractStatus == "Awaiting Review") {
                                ctrl = "<input id='rdPipelineAwaitReview' type='radio' name='PipelineStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='Awaiting Review:" + item.Description + "' class='status_yellow'><img src='../Content/Images/status/renew.png'>rev</b><label for='rdPipelineAwaitReview' class='css-label'>" + item.ContractStatus + "</label><br />";
                            }
                            else if (item.ContractStatus == "Reviewed") {
                                ctrl = "<input id='rdPipelineReviewed' type='radio' name='PipelineStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='Reviewed:" + item.Description + "' class='status_blue'><img src='../Content/Images/status/renew.png'>rev</b><label for='rdPipelineReviewed' class='css-label'>" + item.ContractStatus + "</label><br />";
                            }
                            else if (item.ContractStatus == "Awaiting Approval") {
                                ctrl = "<input id='rdPipelineAwaitApproval' type='radio' name='PipelineStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='Awaiting Approval:" + item.Description + "' class='status_yellow'><img src='../Content/Images/status/renew.png'>appr</b><label for='rdPipelineAwaitApproval' class='css-label'>" + item.ContractStatus + "</label><br />";
                            }
                            else if (item.ContractStatus == "Approved") {
                                ctrl = "<input id='rdPipelineApproved' type='radio' name='PipelineStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='Approved:" + item.Description + "' class='status_blue'><img src='../Content/Images/status/tick.png'>appr</b><label for='rdPipelineApproved' class='css-label'>" + item.ContractStatus + "</label><br />";
                            }
                            else if (item.ContractStatus == "In Negotiation") {
                                ctrl = "<input id='rdPipelineInNegotiation' type='radio' name='PipelineStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='In Negotiation:" + item.Description + "' class='status_yellow'><img src='../Content/Images/status/renew.png'>nego</b><label for='rdPipelineInNegotiation' class='css-label'>" + item.ContractStatus + "</label><br />";
                            }
                            else if (item.ContractStatus == "Negotiation Complete") {
                                ctrl = "<input id='rdPipelineNegotiationComplete' type='radio' name='PipelineStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='Negotiation Complete:" + item.Description + "' class='status_blue'><img src='../Content/Images/status/tick.png'>nego</b><label for='rdPipelineNegotiationComplete' class='css-label'>" + item.ContractStatus + "</label><br />";
                            }
                                //ENH 452 Added Cancel Status 
                            else if (item.ContractStatus == "Cancelled") {
                                ctrl = "<input id='rdPipelineCancelled' type='radio' name='PipelineStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='Cancelled:" + item.Description + "' class='status_Gray'><img src='../Content/Images/status/close.png'>canc</b><label for='rdPipelineCancelled' class='css-label'>" + item.ContractStatus + "</label><br />";
                            }

                            $("#tdPipelind").append(ctrl);

                        }
                        else {
                            var Fctrl = "";
                            if (item.ContractStatus == "Active") {
                                Fctrl = "<input id='rdFinalizedActive' type='radio' name='FinalizedStatus' value=" + item.ContractStatus + " class='css-checkbox " + vAutoChange + "' /><b title='Active:" + item.Description + "' class='status_green'><img src='../Content/Images/status/active.png'>actv</b><label for='rdFinalizedActive' class='css-label'>" + item.ContractStatus + "</label><br />";
                            }
                            else if (item.ContractStatus == "Ready for Signature") {
                                Fctrl = "<input id='rdFinalizedReadySign' type='radio' name='FinalizedStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='Ready for Signature:" + item.Description + "' class='status_green'><img src='../Content/Images/status/active.png'>sign</b><label for='rdFinalizedReadySign' class='css-label'>" + item.ContractStatus + "</label><br />";
                            }
                            else if (item.ContractStatus == "Awaiting Signatures") {
                                Fctrl = "<input id='rdFinalizedAwaitingSign' type='radio' name='FinalizedStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='Awaiting Signatures:" + item.Description + "' class='status_yellow'><img src='../Content/Images/status/renew.png'>sign</b><label for='rdFinalizedAwaitingSign' class='css-label'>" + item.ContractStatus + "</label><br />";
                            }
                            else if (item.ContractStatus == "Signed") {
                                Fctrl = "<input id='rdFinalizedSigned' type='radio' name='FinalizedStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='Signed:" + item.Description + "' class='status_blue'><img src='../Content/Images/status/tick.png'>sign</b><label for='rdFinalizedSigned' class='css-label'>" + item.ContractStatus + "</label><br />";
                            }
                            else if (item.ContractStatus == "Up for Renewal") {
                                Fctrl = "<input id='rdFinalizedUpForRenewal' type='radio' name='FinalizedStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='Up for Renewal:" + item.Description + "' class='status_red'><img src='../Content/Images/status/exp.png'>renw</b><label for='rdFinalizedUpForRenewal' class='css-label'>" + item.ContractStatus + "</label><br />";
                            }
                            else if (item.ContractStatus == "About to Expire") {
                                Fctrl = "<input id='rdFinalizedAboutToExpire' type='radio' name='FinalizedStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='About to Expire:" + item.Description + "' class='status_red'><img src='../Content/Images/status/exp.png'>exp</b><label for='rdFinalizedAboutToExpire' class='css-label'>" + item.ContractStatus + "</label><br />";
                            }
                            else if (item.ContractStatus == "On Hold") {
                                Fctrl = "<input id='rdFinalizedOnHold' type='radio' name='FinalizedStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='On Hold:" + item.Description + "' class='status_red'><img src='../Content/Images/status/exp.png'>hold</b><label for='rdFinalizedOnHold' class='css-label'>" + item.ContractStatus + "</label><br />";
                            }
                            else if (item.ContractStatus == "Replaced") {
                                Fctrl = "<input id='rdFinalizedReplaced' type='radio' name='FinalizedStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='Replaced:" + item.Description + "' class='status_Gray'><img src='../Content/Images/status/replace.png'>rep</b><label for='rdFinalizedReplaced' class='css-label'>" + item.ContractStatus + "</label><br />";
                            }
                            else if (item.ContractStatus == "Expired") {
                                Fctrl = "<input id='rdFinalizedExpired' type='radio' name='FinalizedStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='Expired:" + item.Description + "' class='status_Gray'><img src='../Content/Images/status/expried.png'>exp</b><label for='rdFinalizedExpired' class='css-label'>" + item.ContractStatus + "</label><br />";
                            }
                            else if (item.ContractStatus == "Cancelled") {
                                Fctrl = "<input id='rdFinalizedCancelled' type='radio' name='FinalizedStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='Cancelled:" + item.Description + "' class='status_Gray'><img src='../Content/Images/status/close.png'>canc</b><label for='rdFinalizedCancelled' class='css-label'>" + item.ContractStatus + "</label><br />";
                            }
                            else if (item.ContractStatus == "Archived") {
                                if ($("#spancloseout").text() != "") {
                                    if ($("#spancloseout").text().trim() != "" && $("#spancloseout").text() == "Yes") {
                                        $("#trCloseOutContract").html('<td class="labelleft padding_left_5px"><div class="mark_Con-Final"><a href="javascript:void(0);" onclick="DeleteContractRecord()"><span class="f_button_green">Delete Contract Record</span></a></div></td>');
                                        Fctrl = "<div id='rtarchived'><input id='rdFinalizedArchived' type='radio' name='FinalizedStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='Archived:" + item.Description + "' class='status_blue'><img src='../Content/Images/status/archive.png'>ARCH</b><label for='rdFinalizedArchived' class='css-label'>" + item.ContractStatus + "</label><br /></div>";
                                    } else {
                                        $("#trCloseOutContract").html('<td class="labelleft padding_left_5px"><div class="mark_Con-Final"><a href="javascript:void(0);" onclick="MarkContractAsCloseout();"><span class="f_button_green">Mark Contract Record for Closeout</span></a></div></td>')
                                        Fctrl = "<div id='rtarchived' style='display:none;'><input id='rdFinalizedArchived' type='radio' name='FinalizedStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='Archived:" + item.Description + "' class='status_blue'><img src='../Content/Images/status/archive.png'>ARCH</b><label for='rdFinalizedArchived' class='css-label'>" + item.ContractStatus + "</label><br /></div>";
                                    }
                                } else {
                                    $("#trCloseOutContract").html('<td class="labelleft padding_left_5px"><div class="mark_Con-Final"><a href="javascript:void(0);" onclick="MarkContractAsCloseout();"><span class="f_button_green">Mark Contract Record for Closeout</span></a></div></td>')
                                    Fctrl = "<div id='rtarchived' style='display:none;'><input id='rdFinalizedArchived' type='radio' name='FinalizedStatus' value='" + item.ContractStatus + "' class='css-checkbox " + vAutoChange + "' /><b title='Archived:" + item.Description + "' class='status_blue'><img src='../Content/Images/status/archive.png'>ARCH</b><label for='rdFinalizedArchived' class='css-label'>" + item.ContractStatus + "</label><br /></div>";
                                }
                            }
                            $("#tdFinalized").append(Fctrl);
                        }
                    }
                }

                if (contractItem.IsFinalized == 'Yes') {
                    $('#tdFinalizeContract1').css("display", "none");
                    $('#tdFinalizeContract2').css("display", "none");
                    $('#tdFinalizeContract3').css("display", "");
                    $('#trPipelineStatusFull').css('display', 'none');
                    $('#trPipelineStatus').css('display', 'none');
                    $('#tdFinalizeContract3').html('<img src="/Content/Images/right.png" />Marked Finalized/Ready for Signature by ' + contractItem.FinalizedBy);
                    $('input:radio[name="FinalizedStatus"][value="' + contractItem.Status + '"]').prop('checked', true);
                    $('input:radio[name="FinalizedStatus"]').prop('disabled', false);
                    $("#tdFinalized").css("display", "");
                    $("#tdPipelind").css("display", "none");

                    var imgObj = $("#imgFinalizedStatus");
                    imgObj.attr("title", "Collapse");
                    imgObj.attr("src", "../Content/Images/e-close.png");
                    $('#trFinalizedStatus').css('display', '');
                    $('#trFinalizedStatusFull').css('display', '');
                    //manoj
                    if (contractItem.Status == "Archived") {
                        if ($("#hdnPermission").val() == "Manage") {
                            $("#trCloseOutContract").css('display', '')
                        } else {
                            $("#trCloseOutContract").css('display', 'none');
                        }
                        $("#rtarchived").css('display', '');
                    } else {
                        $("#trCloseOutContract").css('display', '');
                        $("#rtarchived").css('display', 'none');
                    }
                    //manoj
                    //$("#trCloseOutContract").css('display', '');
                    imgObj = $("#imgPipelineStatus");
                    imgObj.attr("title", "Expand");
                    imgObj.attr("src", "../Content/Images/e-open.png");


                } else {

                    $('#tdFinalizeContract1').css("display", "");
                    $('#tdFinalizeContract2').css("display", "");
                    $('#tdFinalizeContract3').css("display", "none");
                    $('#tdFinalizeContract3').html('');
                    $('#trFinalizedStatusFull').css('display', 'none');
                    $('#trFinalizedStatus').css('display', 'none');
                    $("#trCloseOutContract").css('display', 'none');
                    $('input:radio[name="PipelineStatus"][value="' + contractItem.Status + '"]').prop('checked', true);
                    $('input:radio[name="PipelineStatus"]').prop('disabled', false);
                    $("#tdPipelind").css("display", "");
                    $("#tdFinalized").css("display", "none");

                    var imgObj = $("#imgFinalizedStatus");
                    imgObj.attr("title", "Collapse");
                    imgObj.attr("src", "../Content/Images/e-close.png");

                    imgObj = $("#imgPipelineStatus");
                    imgObj.attr("title", "Expand");
                    imgObj.attr("src", "../Content/Images/e-open.png");
                    $('#trPipelineStatus').css('display', '');
                    $('#trPipelineStatusFull').css('display', '');
                }
                $('.AutoChange').prop('disabled', true);

                $('#dvContCancelNote').css("display", "none");
                if ($("#txtReasonOfCancelContract").hasClass("validelement"))
                    $("#txtReasonOfCancelContract").removeClass('validelement');
                $("#loadingPage").fadeOut();
                if (OpenPopup == 'Yes')
                    $("#dvManageContractStatus").dialog("open");
            }
        });

    }
}


function BindStatus() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contractstatusesbyCLM',
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (contractstatuses) {
            var datalenght = contractstatuses.length;
            for (var i = 0; i < datalenght; i++) {
                var item = contractstatuses[i];
                var ctrl = "";

                if ((item.ContractStatus.trim() == "Renewed" && $("#hdnIsRenewable").text() == "No") || (item.ContractStatus.trim() == "Extended" && $("#hdnIsExtendable").text() == "No") || (item.ContractStatus.trim() == "Up for Renewal" && $("#hdnIsRenewable").text() == "No")) {
                }
                else {

                    if ($("#spanstatus").text() == item.ContractStatus.trim()) {
                        ctrl = "<li id=" + item.ContractStatus.trim() + "><input id='" + item.RowKey + "' type='radio' checked onclick='javascript:statusclick(this);' name='rdstatus' value=" + encodeURI(item.ContractStatus.trim()) + " class='css-checkbox' /><label for='" + item.RowKey + "' class='css-label'>" + item.ContractStatus.trim() + "</label></li>";
                    } else {
                        ctrl = "<li id=" + item.ContractStatus.trim() + "><input id='" + item.RowKey + "' type='radio' onclick='javascript:statusclick(this);' name='rdstatus' value=" + encodeURI(item.ContractStatus.trim()) + " class='css-checkbox' /><label for='" + item.RowKey + "' class='css-label'>" + item.ContractStatus.trim() + "</label></li>";
                    }

                }

                if (item.ContractStatus.trim() == "Renewed") {
                    if ($("#hdnIsRenewable").text() != "No") {

                    }
                }
                else if (item.ContractStatus.trim() == "Extended") {
                    if ($("#hdnIsExtendable").text() != "No") {
                        ctrl += "<div class='f_list' style='padding: 0px 0px 0px 10px;display:none;' id='dvExtendCtrl'><input type='text' id='dtExtendedDate' placeholder='Extended Date' class='f_inpt width90 validdate' /></div>";
                    }
                }
                else if (item.ContractStatus.trim() == "Cancelled") {
                    ctrl += "<div class='f_list' style='padding: 0px 0px 0px 10px;display:none;' id='dvCancelCtrl'><textarea id='txtCancelledReason' placeholder='Reason for Cancellation' rows='3' class='f_text-box width90' /></div>";
                }
                $("#menu34").append(ctrl);

                if ($("#spanstatus").text() == "Renewed") {
                    $('#dvRenewCtrl').css("display", "");
                    $('#dvCancelCtrl').css("display", "none");
                }
                else if ($("#spanstatus").text() == "Cancelled") {
                    $('#dvCancelCtrl').css("display", "");
                    $('#dvRenewCtrl').css("display", "none");
                }
            }
            $("#dtRenewalDate").datepicker();
            $("#dtExtendedDate").datepicker();
        }
    });
}

function OpenRenewalForm() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts?contractid=' + getParameterByName("ContractID"),
        type: 'GET',
        cache: false,
        contentType: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, UserID: localStorage.UserID
        },
        processData: false,
        success: function (data) {
            var item = data;
            if (item.RenewalDate != null) {
                var fRenewalDate = "";
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    fRenewalDate = moment(new Date(item.RenewalDate)).format('MM/DD/YYYY');
                }
                else {
                    fRenewalDate = moment(new Date(item.RenewalDate)).format(localStorage.AppDateFormat);
                }
                $("#lblNextRenewalDate").val(fRenewalDate);
            } else {
                $("#lblNextRenewalDate").val("");
            }
            if (item.TermEndDate != null) {
                var fTermEndDate = "";
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    fTermEndDate = moment(new Date(item.TermEndDate)).format('MM/DD/YYYY');
                }
                else {
                    fTermEndDate = moment(new Date(item.TermEndDate)).format(localStorage.AppDateFormat);
                }
                $("#lblTermEndDate").val(fTermEndDate);
            } else {
                $("#lblTermEndDate").val("");
            }

            if (item.LastRenewedDate != null) {
                var fLastRenewedDate = "";
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    fLastRenewedDate = moment(new Date(item.LastRenewedDate)).format('MM/DD/YYYY');
                }
                else {
                    fLastRenewedDate = moment(new Date(item.LastRenewedDate)).format(localStorage.AppDateFormat);
                }
                $("#lblLastRenewed").text(fLastRenewedDate);
            } else {
                $("#lblLastRenewed").text("Not Available");
            }
            if (item.RenewalRemaining != null && item.RenewalRemaining != 0) {
                $("#lblRenewalRemaining").text(item.RenewalRemaining);
            } else {
                $("#lblRenewalRemaining").text("Not Available");
            }
            if (item.EndDate != null) {
                var fEndDate = "";
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    fEndDate = moment(new Date(item.EndDate)).format('MM/DD/YYYY');
                }
                else {
                    fEndDate = moment(new Date(item.EndDate)).format(localStorage.AppDateFormat);
                }
                $("#lblContractEndDate").text(fEndDate);
            } else {
                $("#lblContractEndDate").text("Not Available");
            }
        }

    });
    //Getting Renewal Settings
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName("ContractID") + '/renewalsettings',
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            $("#lblRenewSettingsID").text(data.RowKey);
            $("input:radio[name=rdsettings][value='" + data.RenewalType + "']").attr('checked', 'checked');
            RenewSettingRadiobutton(data.RenewalType);
            if (data.StandardRenewalTerm != null) {
                var term = data.StandardRenewalTerm.split(';');

                $("#txtStandardRenewalTerm").val(term[0]);
                $("#ddlStandardRenewalTerm option").filter(function (index) { return $(this).val() === term[1]; }).prop('selected', true);
            }
            $("#txtRenewableFor").val(data.RenewableTerm);

            if (data.Evergreen != null && data.Evergreen == "Yes") {
                $("input:radio[name=rdRenewTime][value='Evergreen']").attr('checked', 'checked');
                $("#txtRenewableFor").attr('readonly', 'readonly');
                $("#txtRenewableFor").val("");
            } else {
                $("input:radio[name=rdRenewTime][value='RenewableFor']").attr('checked', 'checked');
            }


            $("input:radio[name=rdWorkflow][value='" + data.WorkflowApproval + "']").attr('checked', 'checked');
            if (data.WorkflowApproval == "Yes") {
                approvaltaskyes();
            }
            else {
                $("input:radio[name=rdWorkflow][value='No']").attr('checked', 'checked');
                approvaltaskno();
            }
            $("#txtApprovalTask").val(data.ApprovalTaskDays);


        },
        error:
            function (data) {
                if ($("#hdnIsRenewable").text() == "No") {
                    $("#settingNonRenewable").prop("checked", true);

                    RenewSettingRadiobutton("Non-Renewable");
                } else {
                    $("#settingManual").prop("checked", true);

                    RenewSettingRadiobutton("Manual Renewal");
                }


                if (contractItem.NeedApprovalForRenewal != null && contractItem.NeedApprovalForRenewal == "Yes") {
                    $("input:radio[name=rdWorkflow][value='Yes']").attr('checked', true);
                    approvaltaskyes();
                }
                else {
                    $("input:radio[name=rdWorkflow][value='No']").attr('checked', true);
                    approvaltaskno();
                }
            }
    });

    //Getting Renewal History
    GetRenewalHistory();

    $("#contractRenewal").dialog("option", "title", "Manage Contract Renewal");
    $("#contractRenewal").dialog('open');

}

function GetRenewalApprovalSettings() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName("ContractID") + '/renewalsettings',
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            $("#lblRenewSettingsID").text(data.RowKey);
            EvaluateRenewalRule(data);
        },
        error:
            function (data) {
                EvaluateRenewalRule(null);
            }
    });
}

function GetWorkflowRuleDetail(RuleID) {
    var rule = RuleID.split('~');
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Workflow/configuration?workflowid=' + rule[0] + '&ruleid=' + rule[1],
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        async: true,
        success: function (rule) {
            var participantsInXML = rule.ParticipantsInXML;
            $(participantsInXML).find('WorkflowPaticipant').each(function () {
                var StageTitle = $(this).find('StageTitle').text();
                var Participants = $(this).find('Participants').text();
                var Order = $(this).find('Order').text();
                totalFileCount++;
                var htmlFormatFile = '<tr id="trStageRenew' + totalFileCount + '">';
                htmlFormatFile += '<td class="width30 wf_approval start_workflow">';
                htmlFormatFile += '<input id="txtStageRenew' + totalFileCount + '" value="' + StageTitle + '" name="Stage' + totalFileCount + '" title="Stage" placeholder="Stage Name" type="text" class="f_inpt width97 validelement" />';
                htmlFormatFile += '</td>';
                htmlFormatFile += '<td class="width46 start_workflow">';
                htmlFormatFile += '<select id="ddlAssignToRenew' + totalFileCount + '" name="AssignTo' + totalFileCount + '"  multiple="multiple" data-placeholder="Select" class="width97 validmultiselect"></select>';
                htmlFormatFile += '</td>';
                htmlFormatFile += '<td class="width20 padding_top_3px v_align_top start_workflow">';
                htmlFormatFile += '<select id="ddlOrderRenew' + totalFileCount + '" name="Order' + totalFileCount + '"  class="f_inpt width97">';
                if (Order == "Serial")
                    htmlFormatFile += '<option value="Serial" selected="selected">Serial</option><option value="Parallel">Parallel</option></select>';
                else
                    htmlFormatFile += '<option value="Serial">Serial</option><option value="Parallel" selected="selected">Parallel</option></select>';
                htmlFormatFile += '</td>';
                htmlFormatFile += '<td class="width4 padding_top_10px v_align_top start_workflow">';

                htmlFormatFile += '</td>';
                htmlFormatFile += '</tr>';

                $("#tblStageRenew").append(htmlFormatFile);
                var $options = $("#ddlApprovers > option").clone();
                $('#ddlAssignToRenew' + totalFileCount).append($options);
                $("#ddlAssignToRenew" + totalFileCount).chosen().change(function () {
                    var vasstoid = $(this).attr('id').replace("ddlAssignToRenew", "");
                    if ($(this).val() != null) {
                        if ($(this).val().length > 1)
                            $("#ddlOrderRenew" + vasstoid).prop('disabled', false);
                        else
                            $("#ddlOrderRenew" + vasstoid).prop('disabled', true);
                    }
                    else
                        $("#ddlOrderRenew" + vasstoid).prop('disabled', true);
                });
                GetValuesAndAutoPopulate("ddlAssignToRenew" + totalFileCount, Participants);

                $("#txtStageRenew" + totalFileCount).prop('disabled', true);
                $("#ddlAssignToRenew" + totalFileCount).prop('disabled', true).trigger("chosen:updated");
                $("#ddlOrderRenew" + totalFileCount).prop('disabled', true);
            });
            $('#spAddStageRenew').css("display", "none");
        }
    });
}

function EvaluateRenewalRule(data) {
    var contractTitle = $("#lblContractTitle").text();
    var contractID = getParameterByName("ContractID");
    var businessArea = $("#lblBusinessArea").text();
    var contractArea = $("#lblContractArea").text();
    $("#tblStageRenew").empty();
    $("#ddlRuleRenew").empty();


    $("#tblStageRenew").empty();


    var vWorkflowSettings = [];
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Workflow/evaluate?workflowType=Renewal Approval&contractArea=' + encodeURIComponent(contractArea) + '&businessArea=' + encodeURIComponent(businessArea) + '&contractid=' + contractID,
        type: 'GET',
        cache: false,
        contentType: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        processData: false,
        success: function (item) {
            vWorkflowSettings = item.WorkflowSettings;
            var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
            var vAccFeat = $.grep(veContractFeatures, function (n, i) {
                return (n.RowKey == "8" && n.Status == "ON");
            });
            if (vAccFeat.length > 0) {
                vWorkflowRulesRenew = item.WorkflowRules;
            }

            if (data != null) {
                vRuleIDRenew = data.RuleID;
                $("#txtDurationRenew").val(data.Duration);
                var nicInstance = nicEditors.findEditor('txtCommentRenew');
                nicInstance.setContent(data.WorkflowTitle);

                $("#txtWorkflowTitleRenew").val(data.WorkflowTitle);
                GetValuesAndAutoPopulate("ddlWorkflowCCRenew", data.CC);
            } else {
                vRuleIDRenew = "Ad-hoc";
                if (item.WorkflowSettings != null) {
                    $("#txtDurationRenew").val(vWorkflowSettings.TaskDuration);
                }
                var nicInstance = nicEditors.findEditor('txtCommentRenew');
                nicInstance.setContent('');

                $("#txtWorkflowTitleRenew").val("Renewal Approval");
                GetValuesAndAutoPopulate("ddlWorkflowCCRenew", "");
            }
            if (item.WorkflowSettings != null) {
                workflowRoutingOptions = vWorkflowSettings.WorkflowRoutingOptions.split(";");
                workflowRoutingOptions = $.map(workflowRoutingOptions, $.trim);
            }

            if (vWorkflowRulesRenew.length > 0) {
                $("#ddlRuleRenew").append('<option value="Ad-hoc">Ad-hoc</option>');
                $(vWorkflowRulesRenew).each(function (i, rule) {
                    $("#ddlRuleRenew").append('<option value="' + rule.WorkflowID + '~' + rule.RuleID + '">' + rule.RuleName + '</option>');
                });
                if (vWorkflowRulesRenew.length == 1) {
                    $("#ddlRuleRenew").attr('disabled', 'disabled');
                }
                else {
                    $("#ddlRuleRenew").removeAttr("disabled");
                }
            }
            else {
                $("#ddlRuleRenew").append('<option value="Ad-hoc">Ad-hoc</option>');
                $("#lblddlRuleRenew").css("display", "");
                $("#ddlRuleRenew").css("display", "none");
                $("#lblddlRuleRenew").text("Ad-hoc");
                $("#ddlRuleRenew").attr('disabled', 'disabled');
            }

            var vApprovers = "";
            if (data == null || data.RuleID == "" || data.RuleID == "Ad-hoc") {
                $("#ddlRuleRenew").val("Ad-hoc");
            }
            else
                $("#ddlRuleRenew").val(data.RuleID);
            if (data != null) {
                vApprovers = data.Approvers;
            }
            vWorkflowRulesRenew.push({
                RuleName: "Ad-hoc",
                ParticipantsInXML: vApprovers
            });
            BindRenewRuleApprovers();

            $("#dvWorkflowRenew").dialog("open");
        },
        error: function () {
            $("#ddlRuleRenew").append('<option value="Ad-hoc">Ad-hoc</option>');
            $("#lblddlRuleRenew").css("display", "");
            $("#ddlRuleRenew").css("display", "none");
            $("#lblddlRuleRenew").text("Ad-hoc");
            $("#ddlRuleRenew").attr('disabled', 'disabled');
            $("#ddlRuleRenew").attr('disabled', 'disabled');
            if (data.Approvers != "") {
                vWorkflowRulesRenew.push({
                    RuleName: "Ad-hoc",
                    ParticipantsInXML: data.Approvers
                });
            }
            $("#ddlRuleRenew").val("Ad-hoc");
            BindRenewRuleApprovers();

            $("#dvWorkflowRenew").dialog("open");
        }
    });
}

function approvaltaskyes() {
    $("#divWorkflowYes").css('display', '');
}

function approvaltaskno() {
    $("#divWorkflowYes").css('display', 'none');
}

function CreateContractActivityList(obj) {
    $("#loadingPage").fadeIn();
    var vUrl = vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/activities/contracts/' + getParameterByName("ContractID") + '?actiontype=';
    if (obj !== undefined) {
        vUrl = vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/activities/contracts/' + getParameterByName("ContractID") + '?actiontype=&objectname=' + obj;
    }
    $.ajax({
        url: vUrl,
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (data) {
            $("#contractLogs").empty();
            var datalenght = data.length;
            for (var i = 0; i < datalenght; i++) {
                var item = data[i];
                var sObject = item.Object;
                var sActivity = item.Activity;
                var sUserID = item.UserID;
                var sTimestamp;

                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    sTimestamp = moment(new Date(item.Timestamp)).format('MM/DD/YYYY h:mm A');
                }
                else {
                    sTimestamp = moment(new Date(item.Timestamp)).format(localStorage.AppDateFormat + " h:mm A");
                }

                var article = '<tr><td><span class="logHis_Datetime">' + sTimestamp + '</span></td><td><b>' + sObject + '</b></td><td><span class="logHis_Activity">' + sActivity + '</span></td><td><span class="logHis_Datetime">' + sUserID + '</span></td></tr>';
                $("#contractLogs").append(article);
            }
            $('#compact-pagination-Activity').css('display', '');
            $('#compact-pagination-Activity').pagination({
                items: data.length,
                itemsOnPage: 15,
                type: 'tbody',
                typeID: 'contractLogs',
                row: 'tr',
                cssStyle: 'compact-theme'
            });
            $("#loadingPage").fadeOut();
            $('#contractLogsPopup').dialog('open');
        },
        error: function () {
            $("#loadingPage").fadeOut();

            $("#contractLogs").html('No items found.');
            $('#compact-pagination-Activity').css('display', 'none');
        }
    });
}



var jqXHR = "";
function BindPeople() {
    $("#ddlSendReminderTo").append('<option value="{Contract Managers}">{Contract Managers}</option>');
    var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
    var vAccFeat = $.grep(veContractFeatures, function (n, i) {
        return (n.RowKey == "11" && n.Status == "ON");
    });
    if (vAccFeat.length > 0) {
        $("#ddlSendReminderTo").append('<option value="{Project Managers}">{Project Managers}</option>');
    }
    if (allUsers.length > 0) {//Performance Optimization
        BindPeopleDropdown(allUsers);
    } else {//Performance Optimization
        jqXHR = $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/users/coreentity',//Performance Optimization
            type: 'GET',
            dataType: 'json',
            'Content-Type': 'application/json',
            cache: false,
            headers: {
                'eContracts-ApiKey': localStorage.APIKey
            },
            success: function (data) {
                BindPeopleDropdown(data);//Performance Optimization
            },
            error:
                function (data) {
                }
        });
    }
}
function GetUserList() {
    var vUserList = '';
    if (allUsers.length > 0) {//Performance Optimization
        allUsersList = allUsers;
        vUserList = $("#ddlApprovers").html();
        //vUserList = $("#ddlApprovers > option").clone();
    } else {//Performance Optimization
        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/users/coreentity',//Performance Optimization
            type: 'GET',
            dataType: 'json',
            'Content-Type': 'application/json',
            cache: false,
            async: false,
            headers: {
                'eContracts-ApiKey': localStorage.APIKey
            },
            success: function (dataUser) {
                allUsersList = dataUser;
                $(dataUser).each(function (i, item) {
                    var sRowKey = item.RowKey;
                    var sUserName = item.UserName;
                    vUserList += '<option value="' + sUserName + '">' + sUserName + '</option>';
                });
            },
            error:
                function (dataUser) {
                }
        });
    }
    return vUserList;
}

function GetArrayUserList() {
    // var vUserList = '';
    var arrUsers = [];
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/users',
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        async: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (dataUser) {
            $(dataUser).each(function (i, item) {
                var sRowKey = item.RowKey;
                var sUserName = item.UserName;
                // vUserList += '<option value="' + sUserName + '">' + sUserName + '</option>';
                arrUsers.push(sUserName);
            });
        },
        error:
            function (dataUser) {
            }
    });
    return arrUsers;
}

function ViewBusinessArea() {
    $('#txtBARowkey').val("");
    $('#txtBAParent').val("");
    $('#txtBA').val("");
    $("#browseBA").dialog("option", "title", "Browse Business Area");
    $("#browseBA").dialog("open");
    $("#browseBA").height("auto");
}

function ViewOriginatingParty() {
    ViewOPCounterparty();
    getcompanyprofile();
    $("#tblOriginatingParties").html("");
    $("#browseOriginatingParty").dialog("option", "title", "Originating Party Picker");
    $("#browseOriginatingParty").dialog("open");
}

function ViewOPCounterparty() {
    if ($('#tblOPCounterparties tr').length <= 0) {
        CounterpartyFunc1();
    }
}

function CounterpartyFunc() {
    $("#loadingPage").fadeIn();
    $("#tblCounterparties").empty();
    $("#liSelectedCounterParty").empty();
    var SelectedCounterpartList = [];
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty',
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (data) {
            CounterPartyArrayprev = [];
            if (strSelCounterPartyField != "") {
                $.each($('#' + strSelCounterPartyField + '').val().replace("; ", ";").split(";"), function () {
                    if (SelectedCounterpartList.indexOf($.trim(this)) == -1)
                        SelectedCounterpartList.push($.trim(this));
                });
            }
            else {
                $.each($('#Counterparty').val().replace("; ", ";").split(";"), function () {
                    if (SelectedCounterpartList.indexOf($.trim(this)) == -1)
                        SelectedCounterpartList.push($.trim(this));
                });
            }


            var myCounterPartyArrayList = [];
            var obj1 = {
            };
            //manoj
            $(data).each(function (idata, itemdata) {
                if (!(itemdata.CounterpartyName in obj1)) {
                    if (itemdata.CounterpartyName.trim() != "") {
                        if (itemdata.IsGlobal == "Yes")
                            myCounterPartyArrayList.push(itemdata);
                        else {
                            if (typeof (itemdata.BusinessAreasPath) != "undefined" && itemdata.BusinessAreasPath != "") {
                                var contractarea = "";
                                var Businesssarea = "";
                                var splitbusinessPath = itemdata.BusinessAreasPath.split(';');
                                $(splitbusinessPath).each(function (index) {
                                    if (this != null && this.toString() != "") {
                                        var contBusi = this.split('>');
                                        if (typeof (contBusi) != "undefined") {
                                            if (contBusi.length > 0) {
                                                contractarea = contBusi[0].trim();
                                                Businesssarea = contBusi[contBusi.length - 1].trim();
                                                if (thisBusinessAreaNameC == Businesssarea && thisContractAreaNameC == contractarea)
                                                    myCounterPartyArrayList.push(itemdata);
                                            }
                                        }
                                    }
                                })

                            }
                        }
                    }
                }
                obj1[itemdata.CounterpartyName] = true;
            });


            //manoj
            var article = '<thead><tr><th><input id="selectallCounterParty" onclick="funselectallCounterParty(this);" type="checkbox"/> Counterparty Name</th><th>Counterparty Type</th><th>Country</th></tr></thead><tbody>';
            var countryvalue = ''
            $(myCounterPartyArrayList).each(function (iArray, itemArray) {
                article += '<tr><td>';
                if (SelectedCounterpartList.length > 0) {
                    if (SelectedCounterpartList.indexOf(itemArray.CounterpartyName.trim()) > -1) {
                        article += '<input id="' + itemArray.RowKey + '" type="checkbox" name="Counterparty" onclick="checkMultipleDocumentsCounterParty(this);" checked class="css1-checkbox" value="' + escape(itemArray.CounterpartyName.trim()) + '" />';
                    }
                    else {
                        article += '<input id="' + itemArray.RowKey + '" type="checkbox" name="Counterparty" onclick="checkMultipleDocumentsCounterParty(this);"  class="css1-checkbox" value="' + escape(itemArray.CounterpartyName.trim()) + '" />';
                    }
                }
                else {
                    article += '<input id="' + itemArray.RowKey + '" type="checkbox" name="Counterparty" onclick="checkMultipleDocumentsCounterParty(this);"  class="css1-checkbox" value="' + escape(itemArray.CounterpartyName.trim()) + '" />';
                }
                article += '<label for="CP' + itemArray.RowKey + '" class="css1-label" title="' + escape(itemArray.CounterpartyName.trim()) + '" onmouseover="UnescapeNameMouseOver(this)" style="display: inline;">' + itemArray.CounterpartyName.trim() + '</label></td>';
                article += '<td>' + itemArray.CounterpartyType + '</td>';
                countryvalue = itemArray.Country != "0" ? itemArray.Country : "-"
                article += '<td>' + countryvalue + '</td>';
                article += '</tr>';
            });
            //manoj
            $("#listWrapper").html('<table id="tblCounterparties" class="f_list customtblCounterparties"></table>');
            $("#tblCounterparties").html(article);
            _alphabetSearch = '';
            $("#tblCounterparties").DataTable({
                "columnDefs": [
                            { "orderable": false, 'targets': "_all" }
                ],
                "fnDrawCallback": function () {
                    eventFired('Counterparty', 'selectallCounterParty', 'tblCounterparties');
                },
                "iDisplayLength": 20,
                "searchHighlight": true,
                "pagingType": "full_numbers",
                //"scrollY": "420px",
                //"scrollCollapse": true,
            });
            alphabeticselection('tblCounterparties');
            article = '';
            if ($('input:checkbox[name="Counterparty"]:checked').length == $('input:checkbox[name="Counterparty"]').length && $('input:checkbox[name="Counterparty"]:checked').length != 0) {
                $("#selectallCounterParty").attr('checked', true);
            } else {
                $("#selectallCounterParty").attr('checked', false);
            }
            $.each(SelectedCounterpartList, function () {
                if (typeof ($.trim(this)) != 'undefined' && $.trim(this) != null && $.trim(this) != "") {
                    $('#liSelectedCounterParty').append('<span style="font-size:13px;">' + $.trim(this) + '<img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveSelectedCouterParty(this);" style="float:right" /></span>');
                }
            });
            //manoj
            $("#loadingPage").fadeOut();
            PrvRelatedCounterparities = [];
            arrRelatedCounterparities = [];
            curRelatedCounterparities = [];
            $("#browseCounterparty").dialog("option", "title", "Counterparty Picker");
            $("#browseCounterparty").dialog("open");
        },
        error: function () {
            $("#tblCounterparties").html('');
            PrvRelatedCounterparities = [];
            arrRelatedCounterparities = [];
            curRelatedCounterparities = [];
            $('#loadCP').html('<p style="color: red; margin-top: 50px; margin-bottom: 10px; margin-left: 10px;">No items found.</p>')
            $("#browseCounterparty").dialog("option", "title", "Counterparty Picker");
            $("#browseCounterparty").dialog("open");
            $("#loadingPage").fadeOut();
        }
    });
}
//function CounterpartyFunc1() {

//    $("#tblOPCounterparties").empty();
//    var vCounterparty = $('#Counterparty').val();
//    if (typeof vCounterparty != 'undefined') {
//        $.each(vCounterparty.split(";"), function (i, item) {
//            var vCounterpartyName = $.trim(item);
//            if (vCounterpartyName != "") {
//                var article = '<li>';
//                if ($('#OriginatingParty').val() == vCounterpartyName) {
//                    article += '<input id="CPO' + i + '" type="radio" name="OriginatingParty" class="css-checkbox" checked value="' + vCounterpartyName + '" />';
//                } else {
//                    article += '<input id="CPO' + i + '" type="radio" name="OriginatingParty" class="css-checkbox" value="' + vCounterpartyName + '" />';
//                }
//                article += '<label for="CPO' + i + '" class="css-label">' + vCounterpartyName + '</label>';
//                article += '</li>';
//                $("#tblOPCounterparties").append(article);
//            }
//            else if (vCounterpartyName == "Counterparty not in the list")
//            { $("#tblOPCounterparties").append('<li>' + vCounterpartyName + '</li>'); }
//            else {
//                $("#tblOPCounterparties").append('<li style="font-size:13px;">No Counterparty is available for this contract.</li>');
//            }
//        });
//    }
//}
function CounterpartyFunc1() {
    $("#tblOPCounterparties").empty();
    var vCounterparty = $('#Counterparty').val();
    if (typeof vCounterparty != 'undefined') {
        $.each(vCounterparty.split(";"), function (i, item) {
            var vCounterpartyName = $.trim(item);
            if (vCounterpartyName != "") {
                var article = '<li>';
                if ($('#OriginatingParty').val() == vCounterpartyName) {
                    article += '<input id="CPO' + i + '" type="radio" name="OriginatingParty" class="css-checkbox" checked value="' + vCounterpartyName + '" />';
                } else {
                    article += '<input id="CPO' + i + '" type="radio" name="OriginatingParty" class="css-checkbox" value="' + vCounterpartyName + '" />';
                }
                article += '<label for="CPO' + i + '" class="css-label">' + vCounterpartyName + '</label>';
                article += '</li>';
                $("#tblOPCounterparties").append(article);
            }
            else if (vCounterpartyName == "Counterparty not in the list") {
                $("#tblOPCounterparties").append('<li>' + vCounterpartyName + '</li>');
            }
            else {
                $("#tblOPCounterparties").append('<li style="font-size:13px;">No Counterparty is available for this contract.</li>');
            }
        });
    }
}
//function ViewCounterparty() {
//    $('#loadCP').html('<img src="../Content/Images/icon/loading.gif"> Working on it...');
//    if ($('#tblCounterparties tr').length <= 0) {
//        CounterpartyFunc();
//    } else {
//        $('#loadCP').empty();
//    }
//    $("#browseCounterparty").dialog("option", "title", "Counterparty Picker");
//    $("#browseCounterparty").dialog("open");
//}
function ViewCounterparty(selectedFieldName) {
    strSelCounterPartyField = selectedFieldName;
    $("#txtSearchBox").val('');
    if (vCounterpartyFields.length > 0) {
        CounterpartyFunc();
    }
    else {
        CounterpartyFunc();
        //manoj
        //if (localStorage.UserType.indexOf("Global Contract Owner") >= 0 || localStorage.UserType.indexOf("Global Administrator") >= 0) {
        //    $("#menuSMultiple").css("display", "");
        //    getCounterpartyprimaryFields();
        //} else {
        //    $("#menuSMultiple").css("display", "none");
        //}
        getCounterpartyprimaryFields();
        //manoj
    }
    $('#loadCP').html('<img src="../Content/Images/icon/loading.gif"> Working on it...');
}

function SaveCounterparty() {
    var isformvalid = false;
    if (requiredValidator('addEditCounterparty', false)) {
        $("#loadingPage").fadeIn();
        isformvalid = true;
        var entityid = $("#txtCounterpartyIDadd").val();
        var AddressLine1 = $("#txtAddressLine1add").val();

        if (AddressLine1 == null || AddressLine1 == '') {
            AddressLine1 = '';
        }
        var vTitle = $("#txtCounterpartyNameadd").val();
        var counterpartyForm = $("#counterpartyFormadd *").serialize();
        counterpartyForm += "&AccountID=" + localStorage.AccountID;
        counterpartyForm += "&CreatedBy=" + localStorage.UserName;
        counterpartyForm += "&ModifiedBy=" + localStorage.UserName;
        counterpartyForm += "&IsGlobal=" + $('input[name="IsGlobalN"]:checked').val();
        var strBusinessAreaOwnerof = "";
        if ($('input[type="radio"][name=IsGlobalN]:checked').val() == "No") {
            if ($("#txtNewCpBusinessArea").val() != "") {
                if ($("#txtNewCpBusinessArea").val() != "") {
                    for (var i = 0; i < selectedBusinessAreaID11.length; i++) {

                        var rowKPath = jQuery.grep(BusinessAreaPathRowKey, function (a) {
                            return a[1] === selectedBusinessAreaID11[i][1];
                        });
                        if (rowKPath != null && typeof (rowKPath) != "undefined" && rowKPath.length != 0)
                            strBusinessAreaOwnerof += rowKPath[0][0] + "; ";
                    }

                    strBusinessAreaOwnerof = strBusinessAreaOwnerof.slice(0, -1)
                }
            } else {
                strBusinessAreaOwnerof = "";
            }
        }
        counterpartyForm += "&BusinessAreasPath=" + encodeURIComponent(strBusinessAreaOwnerof);
        //counterpartyForm += "&IsGlobal=" + $('input[name="IsGlobalN"]:checked').val();

        var cpresult = "&";
        $("#counterpartyFormadd .fielddatecontrol").each(function (index) {
            if ($(this).attr('class').toLowerCase().indexOf("hasdatepicker") >= 0) {

                var name = $(this).attr('class');
                name = name.split("hasDatepicker")[0];
                name = name.slice(0, -1);

                name = name.substr(name.lastIndexOf(' ') + 1);
                var value = $.datepicker.formatDate('mm/dd/yy', $(this).datepicker('getDate'));
                cpresult = cpresult + name + "=" + value + "&";
            }
            else {
                var name = $(this).attr('class').substr($(this).attr('class').lastIndexOf(' ') + 1);
                var value = $.datepicker.formatDate('mm/dd/yy', $(this).datepicker('getDate'));
                cpresult = cpresult + name + "=" + value + "&";
            }
        });
        cpresult = cpresult.slice(0, -1)
        counterpartyForm += cpresult;

        cpresult = "&";
        $("#counterpartyFormadd .fieldphonecontrol").each(function (index) {
            if ($(this).val() != null && $(this).val() != "") {
                var name = $(this)[0].id.split('_')[0];
                var value = $(this).intlTelInput("getSelectedCountryData").iso2 + "," + $(this).intlTelInput("getSelectedCountryData").dialCode + "," + $(this).intlTelInput("getNumber", intlTelInputUtils.numberFormat.INTERNATIONAL);
                cpresult = cpresult + name + "=" + value + "&";
            }
            else {
                var name = $(this)[0].id.split('_')[0];
                var value = "";
                cpresult = cpresult + name + "=" + value + "&";
            }
        });
        cpresult = cpresult.slice(0, -1)
        counterpartyForm += cpresult;


        var formData = new FormData();
        formData.append("AccountID", localStorage.AccountID);
        formData.append("SearializeControls", counterpartyForm);

        if (entityid != '') {
            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty/dynamicformupdate',
                type: 'PUT',
                dataType: 'json',
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                },
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function (person) {

                    //update contract if counterparty name is changed
                    if ($("#summCounterparty").text() == $("#txtCounterpartyNameadd").val()) {
                    } else {
                        $("#summCounterparty").html('<a href="javascript:void(0);" onclick="RedirectToCounterparty(\'' + $("#txtCounterpartyNameadd").val() + '\')">' + $("#txtCounterpartyNameadd").val() + '</a>');
                        $.ajax({
                            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + vContractID + '/changecounterparty?counterparty=' + encodeURIComponent($("#txtCounterpartyNameadd").val()),
                            type: 'PUT',
                            dataType: 'json',
                            headers: {
                                'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging, username: localStorage.UserName
                            },
                            cache: false,
                            success: function (result) {
                            },
                            error: function (person) {
                            },
                        });
                    }

                    swal("", person);
                    $("#loadingPage").fadeOut();
                    //CounterpartyFunc();
                    //CounterpartyFunc1();
                    $("#txtCounterpartyNameadd").val("");
                    $("#addEditCounterparty").dialog("close");
                    $("#ddlCounterpartyTypeadd").val("0");
                    //$("#txtAddressLine1add").val("");
                    //$("#txtAddressLine2add").val("");
                    //$("#txtCityadd").val("");
                    //$("#txtStateadd").val("");
                    //$("#txtZipadd").val("");
                    //$("#ddlCountryadd").val("0");
                    //$("#txtContactNoadd").val("");
                    $("#ddlStatusadd").val("0");
                    //$("#txtEmailIDadd").val("");

                },
                error: function (person) {
                    if (person.statusText == "Conflict") {
                        swal("", "<span style=\"font-weight:700\">" + vTitle + "</span> Counterparty is Already Exist");
                    }
                    $("#loadingPage").fadeOut();
                }
            });
        }
        else {
            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty/dynamicform',
                type: 'POST',
                dataType: 'json',
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                },
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function (person) {

                    //update contract if counterparty name is changed
                    if ($("#summCounterparty").text() == $("#txtCounterpartyNameadd").val()) {
                    } else {
                        //$("#summCounterparty a").filter(':Contains("' + $("#txtCounterpartyNameadd").val() + '")').remove()
                        //$("#summCounterparty").append('<a href="javascript:void(0);" onclick="RedirectToCounterparty(\'' + $("#txtCounterpartyNameadd").val() + '\')">' + $("#txtCounterpartyNameadd").val() + '</a>');
                        var oldvalue = "&oldvalue= " + encodeURIComponent(oldCounterParty);// Bug id: eO38121
                        $.ajax({
                            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + vContractID + '/changecounterparty?counterparty=' + encodeURIComponent($("#txtCounterpartyNameadd").val()),
                            type: 'PUT',
                            dataType: 'json',
                            data: oldvalue,
                            headers: {
                                'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging, username: localStorage.UserName
                            },
                            cache: false,
                            success: function (result) {
                                contractItem.Counterparty = result.Counterparty;
                                if (contractItem.Counterparty.indexOf(';') >= 0) {
                                    var cparr = contractItem.Counterparty.split(';')
                                    var html = "";
                                    $("#summCounterparty").empty();
                                    cparr.forEach(function (value, index) {
                                        if (html == "") {
                                            html = '<a href="javascript:void(0);" onclick="RedirectToCounterparty(\'' + value + '\')">' + value + '</a>'
                                        } else {
                                            html += ';' + ' ' + '<a href="javascript:void(0);" onclick="RedirectToCounterparty(\'' + value + '\')">' + value + '</a>';
                                        }
                                    })
                                    $("#summCounterparty").html(html);
                                } else {
                                    $("#summCounterparty").html('<a href="javascript:void(0);" onclick="RedirectToCounterparty(\'' + $("#txtCounterpartyNameadd").val() + '\')">' + $("#txtCounterpartyNameadd").val() + '</a>');
                                }

                            },
                            error: function (person) {
                            },
                        });
                    }

                    swal("", "Counterparty created.");
                    $("#loadingPage").fadeOut();
                    if (strSelCounterPartyField != "") {
                        if ($("#" + strSelCounterPartyField + "").val() == '')
                            $('#' + strSelCounterPartyField + '').val($("#txtCounterpartyName").val());
                        else
                            $('#' + strSelCounterPartyField + '').val($('#' + strSelCounterPartyField + '').val() + "; " + $("#txtCounterpartyName").val());
                    }
                    else {
                        if ($("#Counterparty").val() == '')
                            $('#Counterparty').val($("#txtCounterpartyName").val());
                        else
                            $('#Counterparty').val($('#Counterparty').val() + "; " + $("#txtCounterpartyName").val());

                    }


                    // CounterpartyFunc();
                    // CounterpartyFunc1();
                    $("#txtCounterpartyNameadd").val("");
                    $("#addEditCounterparty").dialog("close");
                    $("#ddlCounterpartyTypeadd").val("0");
                    //$("#txtAddressLine1add").val("");
                    //$("#txtAddressLine2add").val("");
                    //$("#txtCityadd").val("");
                    //$("#txtStateadd").val("");
                    //$("#txtZipadd").val("");
                    //$("#ddlCountryadd").val("0");
                    //$("#txtContactNoadd").val("");
                    $("#ddlStatusadd").val("0");
                    // $("#txtEmailIDadd").val("");
                    $("#addEditCounterparty").dialog("close");
                },
                error: function (person) {
                    if (person.statusText == "Conflict") {
                        swal("", "<span style=\"font-weight:700\">" + vTitle + "</span> Counterparty is Already Exist");
                    }
                    $("#loadingPage").fadeOut();
                }
            });
        }
    }
    return isformvalid;
}

function CounterpartyPopup(obj) {
    getCounterpartyFieldsadd();
    $("#txtCounterpartyIDadd").val("");
    $("#txtNewCpBusinessArea").val('');
    // $('input[type="radio"][name=IsGlobal][value="Yes"]').prop('checked', true);
    $("#trcp-RgBusi").hide();
    $("#txtNewCpBusinessArea").removeClass("validelement");
    $("#txtCounterpartyNameadd").val((obj != null && obj != "") ? obj.trim() : "");
    $('#ddlCounterpartyTypeadd').val('0');


    if (thisBusinessAreaNameC == "") {
        $('input[type="radio"][name=IsGlobalN][value="Yes"]').prop('checked', true);
        $('#counterpartyItemsadd #trcp-RgBusi').hide();
        $("#txtNewCpBusinessArea").removeClass("validelement");
    }
    else {

        $('input[type="radio"][name=IsGlobalN][value="No"]').prop('checked', true);
        $('#counterpartyItemsadd #trcp-RgBusi').show();
        $("#txtNewCpBusinessArea").addClass("validelement");
        addDefaultBusinessareaCounterparty();
    }
    //$("#txtAddressLine1add").val("");
    //$("#txtAddressLine2add").val("");
    //$("#txtCityadd").val("");
    //$("#txtStateadd").val("");
    //$("#txtZipadd").val("");
    //$('#ddlCountryadd').val('0');
    //$("#txtContactNoadd").val("");
    //$("#txtEmailIDadd").val("");
    $("#ddlStatusadd").val("Active");


    //$(".validelement").each(function (index, element) {
    //    $(element).removeClass("error");
    //    $("#errormsg_" + element.id).remove();
    //});

    //$("#addEditCounterparty").dialog("option", "title", "New Counterparty");
    //$("#addEditCounterparty").dialog("open");
}

$('input[type=radio][name=IsGlobalN]').change(function () {

    if (this.value == 'Yes') {
        //  $("#trcp-RgBusi").hide();
        $('#counterpartyItemsadd #trcp-RgBusi').hide();
        $("#txtNewCpBusinessArea").removeClass("validelement");
        selectedBusinessAreaID11 = [];
        selectedBusinessAreaID11Temp = [];
        BAOwnersselecteditems = [];

    }
    else if (this.value == 'No') {
        //$("#trcp-RgBusi").show();
        $('#counterpartyItemsadd #trcp-RgBusi').show();
        if (thisBusinessAreaNameC != "") {
            addDefaultBusinessareaCounterparty();
            $("#txtNewCpBusinessArea").addClass("validelement");
        }
    }
    //manoj
    $("#RelatedCounterparties").val('');
    PrvRelatedCounterparities = [];
    arrRelatedCounterparities = [];
    curRelatedCounterparities = [];
    //manoj
});

function SelectLegalEntities() {
    $("#OPCounterparties").removeClass('pop_up_Harizondal_meta_active');
    $("#OPLeagalEntities").addClass('pop_up_Harizondal_meta_active');
    $('#tblOPLegalEntities').css("display", "");
    $('#tblOPCounterparties').css("display", "none");
    $('#txtOriginatingPartyType').val("Legal Entity");
    $('#compact-paginationOPLegalEntities').css("display", "");
    $('#compact-paginationOPCounterparties').css("display", "none");
}

function SelectCounterparties() {
    $("#OPLeagalEntities").removeClass('pop_up_Harizondal_meta_active');
    $("#OPCounterparties").addClass('pop_up_Harizondal_meta_active');
    $('#tblOPLegalEntities').css("display", "none");
    $('#tblOPCounterparties').css("display", "");
    $('#txtOriginatingPartyType').val("Counterparty");
    $('#compact-paginationOPCounterparties').css("display", "");
    $('#compact-paginationOPLegalEntities').css("display", "none");
}

//manoj
function getcompanyprofile(objvalueselect) {
    var control = "";
    $("#tblOPLegalEntities").empty();
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/legalentities',
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        async: false,
        success: function (data) {
            var columnOP = [];
            $("#tblOPLegalEntities").empty();
            var legalentityval = $("#CompanyProfile").find('option:selected').text();
            //LeagalEntity = data;
            $(data).each(function (i, item) {
                if (typeof objvalueselect != 'undefined' && objvalueselect != null && objvalueselect != "" && objvalueselect == item.LegalEntityName) {
                    //SelectedLegalEntity = objvalueselect;
                    control += "<option selected='selected' value='" + item.LegalEntityName + "'>" + item.LegalEntityName + "</option>";
                } else if ($("#summCompyLegalEntity").text() == item.LegalEntityName) {
                    control += "<option selected='selected' value='" + item.LegalEntityName + "'>" + item.LegalEntityName + "</option>";
                } else {
                    control += "<option value='" + item.LegalEntityName + "'>" + item.LegalEntityName + "</option>";
                }

                var article = '<li>';
                if ($('#OriginatingParty').val() != "") {
                    if ($('#OriginatingParty').val() == item.LegalEntityName) {
                        article += '<input id="OP' + item.RowKey + '" type="radio" name="OriginatingParty" class="css-checkbox" checked value="' + item.LegalEntityName + '" />';
                    } else {
                        article += '<input id="OP' + item.RowKey + '" type="radio" name="OriginatingParty" class="css-checkbox" value="' + item.LegalEntityName + '" />';
                    }
                    article += '<label for="OP' + item.RowKey + '" class="css-label">' + item.LegalEntityName + '</label>';
                    article += '</li>';
                    $("#tblOPLegalEntities").append(article);
                } else if (typeof legalentityval != 'undefined' && legalentityval != '' && legalentityval != '--Select--') {
                    if ($("#CompanyProfile").find('option:selected').text() == item.LegalEntityName) {
                        article += '<input id="OP' + item.RowKey + '" type="radio" name="OriginatingParty" class="css-checkbox" checked value="' + item.LegalEntityName + '" />';
                    } else {
                        article += '<input id="OP' + item.RowKey + '" type="radio" name="OriginatingParty" class="css-checkbox" value="' + item.LegalEntityName + '" />';
                    }
                    article += '<label for="OP' + item.RowKey + '" class="css-label">' + item.LegalEntityName + '</label>';
                    article += '</li>';
                    $("#tblOPLegalEntities").append(article);
                }
                else {
                    if (typeof objvalueselect != 'undefined' && objvalueselect != null && objvalueselect != "" && objvalueselect == item.LegalEntityName) {
                        article += '<input id="OP' + item.RowKey + '" type="radio" name="OriginatingParty" class="css-checkbox" checked value="' + item.LegalEntityName + '" />';
                    } else if ($("#summCompyLegalEntity").text() == item.LegalEntityName) {
                        article += '<input id="OP' + item.RowKey + '" type="radio" name="OriginatingParty" class="css-checkbox" checked value="' + item.LegalEntityName + '" />';
                    } else {
                        article += '<input id="OP' + item.RowKey + '" type="radio" name="OriginatingParty" class="css-checkbox" value="' + item.LegalEntityName + '" />';
                    }
                    article += '<label for="OP' + item.RowKey + '" class="css-label">' + item.LegalEntityName + '</label>';
                    article += '</li>';
                    $("#tblOPLegalEntities").append(article);
                }
                //columnOP.push(item.LegalEntityName);
                //$("#txtSearchBoxOPLegal").autocomplete({
                //    source: columnOP,
                //    minLength: 1,
                //    focus: function (event, ui) {
                //        return false;
                //    }
                //});
            });

            var vCount = $("#tblOPLegalEntities li").length;
            $('#compact-paginationOPLegalEntities').pagination({
                items: vCount,
                itemsOnPage: 15,
                type: 'ul',
                row: 'li',
                typeID: 'tblOPLegalEntities',
                cssStyle: 'compact-theme'
            });
        }
    });
    return control;
}
//manoj

function getcontractpricingtype(obj) {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contractpricingtype',
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (data) {
            $(data).each(function (i, item) {
                if (item.TypeName == obj) {
                    $("#ContractPricingType").append("<option value='" + item.TypeName + "' selected='selected'>" + item.TypeName + "</option>")
                }
                else {
                    $("#ContractPricingType").append("<option value='" + item.TypeName + "'>" + item.TypeName + "</option>")
                }
            });

        }
    });
}

function getbillingfrequency(obj) {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/billingfrequency',
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (data) {
            $(data).each(function (i, item) {
                if (item.TypeName == obj) {
                    $("#BillingFrequency").append("<option value='" + item.TypeName + "' selected='selected'>" + item.TypeName + "</option>")
                }
                else {
                    $("#BillingFrequency").append("<option value='" + item.TypeName + "'>" + item.TypeName + "</option>")
                }
            });

        }
    });
}

function getStatus(obj) {
    var control = "";
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contractstatuses',
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        async: false,
        success: function (contractstatuses) {
            $(contractstatuses).each(function (i, item) {
                if (item.ContractStatus == obj) {
                    control += "<option value=" + encodeURI(item.ContractStatus) + " selected='selected'>" + item.ContractStatus + "</option>";
                }
                else {
                    control += "<option value=" + encodeURI(item.ContractStatus) + ">" + item.ContractStatus + "</option>";
                }
            });
        }
    });
    return control;
}

function getContractCurrency(obj) {
    var control = "";
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/currencies',
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        async: false,
        success: function (data) {
            $(data).each(function (i, item) {
                if (item.Abbreviation == obj) {
                    control += "<option value=" + encodeURI(item.Abbreviation) + " selected='selected'>" + item.Abbreviation + "</option>";
                }
                else {
                    control += "<option value=" + encodeURI(item.Abbreviation) + ">" + item.Abbreviation + "</option>";
                }
            });
        }
    });
    return control;
}
var vSelectedCounterPartyId = "";
var vCounterpartyFields = [];
function AddCounterparty() {
    if ($('input[type="radio"][name=PickCounterparty]:checked').val() == 'Existing') {
        //manoj
        var arrselectedcunterparty = [];
        $.each($('#liSelectedCounterParty').children(), function () {
            if (typeof ($.trim(this)) != 'undefined' && $.trim(this) != null && $.trim(this.textContent) != "") {
                if (arrselectedcunterparty.indexOf($.trim(this.textContent)) == -1)
                    arrselectedcunterparty.push($.trim(this.textContent));
            }
        });
        if (arrselectedcunterparty.length > 0) {
            if (strSelCounterPartyField != "") {
                $("#" + strSelCounterPartyField + "").val(arrselectedcunterparty.join("; "));
            }
            else {
                $("#Counterparty").val(arrselectedcunterparty.join("; "));
            }
        } else {
            if (strSelCounterPartyField != "") {
                $("#" + strSelCounterPartyField + "").val('');
            }
            else {
                $("#Counterparty").val('');
            }
        }
        arrselectedcunterparty = [];
        //manoj
        $("#browseCounterparty").dialog("close");
        return true;
    }
    else {
        if (requiredValidator('addNewEntityFieldsTest', false)) {
            isformvalid = true;
            var entityid = $("#txtCounterpartyID").val();
            var AddressLine1 = $("#txtAddressLine1").val();

            if (AddressLine1 == null || AddressLine1 == '') {
                AddressLine1 = '';
            }
            if ($("#chkCounterpartyNotInList").is(':checked')) {
                $("#loadingPage").fadeIn();
                var strBusinessAreaOwnerof = "";
                if ($('input[type="radio"][name=IsGlobal]:checked').val() == "No") {
                    if ($("#txtOwnerofBusinessArea").val() != "") {
                        if ($("#txtOwnerofBusinessArea").val() != "") {
                            for (var i = 0; i < selectedBusinessAreaID11.length; i++) {

                                var rowKPath = jQuery.grep(BusinessAreaPathRowKey, function (a) {
                                    return a[1] === selectedBusinessAreaID11[i][1];
                                });
                                if (rowKPath != null && typeof (rowKPath) != "undefined" && rowKPath.length != 0)
                                    strBusinessAreaOwnerof += rowKPath[0][0] + "; ";
                            }

                            strBusinessAreaOwnerof = strBusinessAreaOwnerof.slice(0, -1)
                        }
                    } else {

                        strBusinessAreaOwnerof = "";
                    }
                }
                else {
                    $("#txtOwnerofBusinessArea").val('');
                    strBusinessAreaOwnerof = "";
                }
                var vTitle = $("#txtCounterpartyName").val();
                var counterpartyForm = $("#counterpartyForm *").serialize();
                counterpartyForm += "&AccountID=" + localStorage.AccountID;
                counterpartyForm += "&CreatedBy=" + localStorage.UserName;
                counterpartyForm += "&ModifiedBy=" + localStorage.UserName;
                counterpartyForm += "&BusinessAreasPath=" + encodeURIComponent(strBusinessAreaOwnerof);
                var cpresult = "&";
                $("#counterpartyForm .fielddatecontrol").each(function (index) {
                    if ($(this).attr('class').toLowerCase().indexOf("hasdatepicker") >= 0) {

                        var name = $(this).attr('class');
                        name = name.split("hasDatepicker")[0];
                        name = name.slice(0, -1);

                        name = name.substr(name.lastIndexOf(' ') + 1);
                        var value = $.datepicker.formatDate('mm/dd/yy', $(this).datepicker('getDate'));
                        cpresult = cpresult + name + "=" + value + "&";
                    }
                    else {
                        var name = $(this).attr('class').substr($(this).attr('class').lastIndexOf(' ') + 1);
                        var value = $.datepicker.formatDate('mm/dd/yy', $(this).datepicker('getDate'));
                        cpresult = cpresult + name + "=" + value + "&";
                    }
                });
                cpresult = cpresult.slice(0, -1)
                counterpartyForm += cpresult;

                cpresult = "&";
                $("#counterpartyForm .fieldphonecontrol").each(function (index) {
                    if ($(this).val() != null && $(this).val() != "") {
                        var name = $(this)[0].id.split('_')[0];
                        var value = $(this).intlTelInput("getSelectedCountryData").iso2 + "," + $(this).intlTelInput("getSelectedCountryData").dialCode + "," + $(this).intlTelInput("getNumber", intlTelInputUtils.numberFormat.INTERNATIONAL);
                        cpresult = cpresult + name + "=" + value + "&";
                    }
                    else {
                        var name = $(this)[0].id.split('_')[0];
                        var value = "";
                        cpresult = cpresult + name + "=" + value + "&";
                    }
                });
                cpresult = cpresult.slice(0, -1)
                counterpartyForm += cpresult;

                var formData = new FormData();
                formData.append("AccountID", localStorage.AccountID);
                formData.append("SearializeControls", counterpartyForm);

                $.ajax({
                    url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty/dynamicform',
                    type: 'POST',
                    dataType: 'json',
                    headers: {
                        'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                    },
                    data: formData,
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        if (!$.isEmptyObject(arrRelatedCounterparities)) {
                            CreateRelatedCounterparies(data, $("#txtCounterpartyName").val())
                        }
                        if (strSelCounterPartyField != "") {
                            if ($('#' + strSelCounterPartyField + '').val() != "") {
                                var CPValue = $('#' + strSelCounterPartyField + '').val() + "; " + $("#txtCounterpartyName").val();
                                $('#' + strSelCounterPartyField + '').val(CPValue.trim());
                            }
                            else {
                                $('#' + strSelCounterPartyField + '').val($("#txtCounterpartyName").val());

                            }
                        }
                        else {
                            if ($('#Counterparty').val() != "") {
                                var CPValue = $('#Counterparty').val() + "; " + $("#txtCounterpartyName").val();
                                $('#Counterparty').val(CPValue.trim());
                            }
                            else {
                                $('#Counterparty').val($("#txtCounterpartyName").val());

                            }
                        }

                        $('#chkCounterpartyNotInList').prop('checked', false);
                        $('#dvCPExistingCounterparty').css("display", "");
                        $('#dvCPAddCounterparty').css("display", "none");
                        $('#rdCPAddCounterparty').prop('checked', false);
                        $('#rdCPExistingCounterparty').prop('checked', true);

                        $('.CP_Det').remove();
                        $('.CP_Det1').css('display', 'none');
                        $("#ddlCounterpartyType").removeClass('validelement');
                        $("#txtEmailID").removeClass('validemail');
                        ClearAddCounterparty();
                        $("#browseCounterparty").dialog("close");
                        $("#loadingPage").fadeOut();
                    },
                    error: function (person) {
                        swal("", "Counterparty Name Exist");
                        $("#loadingPage").fadeOut();
                    }
                });

            } else {
                var duplicatecounteparty = false;
                if (strSelCounterPartyField != "") {
                    if ($('#' + strSelCounterPartyField + '').val() != "") {
                        var arrselectedcounterpaty = ";" + $('#' + strSelCounterPartyField + '').val().replace("; ", ";") + ";"
                        if (arrselectedcounterpaty.toLowerCase().indexOf(";" + $("#txtCounterpartyName").val().trim().toLowerCase() + ";") > -1) {
                            duplicatecounteparty = true;
                        }
                    }

                }
                else {
                    if ($('#Counterparty').val() != "") {
                        var arrselectedcounterpaty = ";" + $('#Counterparty').val().replace("; ", ";") + ";"
                        if (arrselectedcounterpaty.toLowerCase().indexOf(";" + $("#txtCounterpartyName").val().trim().toLowerCase() + ";") > -1) {
                            duplicatecounteparty = true;
                        }
                    }
                }

                if (!duplicatecounteparty) {
                    $('#dvCPExistingCounterparty').css("display", "");
                    $('#dvCPAddCounterparty').css("display", "none");
                    $('#rdCPAddCounterparty').prop('checked', false);
                    $('#rdCPExistingCounterparty').prop('checked', true);
                    if (strSelCounterPartyField != "") {
                        if ($('#' + strSelCounterPartyField + '').val() != "") {
                            var CPValue = $('#' + strSelCounterPartyField + '').val() + "; " + $("#txtCounterpartyName").val();
                            $('#' + strSelCounterPartyField + '').val(CPValue.trim());
                        }
                        else {
                            $('#' + strSelCounterPartyField + '').val($("#txtCounterpartyName").val());
                        }
                    }
                    else {
                        if ($('#Counterparty').val() != "") {
                            var CPValue = $('#Counterparty').val() + "; " + $("#txtCounterpartyName").val();
                            $('#Counterparty').val(CPValue.trim());
                        }
                        else {
                            $('#Counterparty').val($("#txtCounterpartyName").val());
                        }
                    }


                    ClearAddCounterparty();
                    $("#browseCounterparty").dialog("close");
                    $("#loadingPage").fadeOut();
                } else {
                    swal("", "Counterparty Name Exist");
                }
            }
        }
    }


}

function AddOriginatingParty() {
    if ($('input:radio[name=OriginatingParty]:checked').val() != null) {
        $('#OriginatingParty').val($('input:radio[name=OriginatingParty]:checked').val());
        return true;
    } else {

        swal("", "No Originating Party has been selected.");
        return false;
    }
}
$("#settingRenewEvergreen").click(function () {

    $("#txtRenewableFor").attr('readonly', 'readonly');
});

$("#settingRenewableFor").click(function () {
    $("#txtRenewableFor").removeAttr('readonly');
});

//ENH476- Related Contracts - UI Change
function BindRelatedContracts(contractid) {
    if (contractid == null || contractid == "") {
        contractid = vContractID;
    }
    $("#ulRelatedContracts").empty();
    $("#ulRelatedContracts").html('<img src="../Content/Images/icon/loading.gif"> Please wait...');//Performance Optimization
    $('#liSelected').empty();
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/relatedcontracts?contractid=' + contractid,
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, 'UserID': localStorage.UserID
        },
        cache: false,
        success: function (contactsJsonPayload) {
            arrRelatedcontractRowkey = [];
            arrRelatedContractsSelected = [];
            $("#ulRelatedContracts").empty();
            arrRelatedcontractRowkey = [];
            arrRelatedContractsSelected = [];
            var count = 0;
            $("#hdnRelatedContracts").text("");
            if (typeof (contactsJsonPayload) != "undefined") {
                $(contactsJsonPayload).each(function (i, item) {
                    OlRelatedContracts = contactsJsonPayload;
                    var myUrl = '/Contracts/ContractDetails?ContractID=' + encodeURI(item.RelatedContractID);
                    arrRelatedcontractRowkey.push(item.RelatedContractID);
                    if (arrRelatedContractsSelected.length > 0) {
                        arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID += ";" + item.RelatedContractID;
                        arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractTitle += ";" + item.RelatedContractTitle;
                        arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedStatus += ";" + item.RelatedStatus;
                        arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedRelationshipType += ";" + item.RelatedRelationshipType;
                        arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelationshipType += ";" + item.RelationshipType;
                    }
                    else {
                        arrRelatedContractsSelected.push({
                            ContractID: "",
                            ContractTitle: "",
                            RelatedContractID: item.RelatedContractID,
                            RelatedContractTitle: item.RelatedContractTitle,
                            RelatedStatus: item.RelatedStatus,
                            RelationshipType: item.RelationshipType,
                            RelatedRelationshipType: item.RelatedRelationshipType,
                            CreatedBy: item.CreatedBy,
                            ModifiedBy: item.ModifiedBy
                        });
                    }
                    $("#hdnRelatedContracts").append(item.RelatedContractID + ';');
                    if (item.Permission == "InRecycleBin") {
                        if ($("#ulRelatedContracts").html() == '')
                            $("#ulRelatedContracts").append('<li><span style="color: #ff4d4d" title="This Contract Record is no longer available.">' + item.RelatedContractTitle + '</span> (' + item.RelatedRelationshipType + ')<li>');
                        else
                            $("#ulRelatedContracts").append('<li><span style="color: #ff4d4d" title="This Contract Record is no longer available.">' + item.RelatedContractTitle + '</span> (' + item.RelatedRelationshipType + ')<li>');
                        $('#liSelected').append('<span style="font-size:11px;" id=' + item.RelatedContractID + '>' + item.RelatedContractTitle + ' (' + item.RelatedRelationshipType + ')</span>');
                    }
                    else {
                        if (item.Permission != "" && item.Permission != "No Access") {
                            if (item.RelatedStatus == "Expired") {
                                $("#ulRelatedContracts").append('<li><a href="javascript:getRelatedContractDetails(\'' + item.RelatedContractID + '\');">' + item.RelatedContractTitle + '</a> (' + item.RelatedRelationshipType + ')<a id="ExpireContract" onmouseover="hoverFunction(this);"><img src="/Content/Images/warning_red.png" style="cursor: default !important;margin: 0px 0px 0px 0px;display: inline-block;width: 15px;"></a></li>');
                            }
                            else {
                                $("#ulRelatedContracts").append('<li><a href="javascript:getRelatedContractDetails(\'' + item.RelatedContractID + '\');">' + item.RelatedContractTitle + '</a> (' + item.RelatedRelationshipType + ')</li>');
                            }
                            //if ($("#ulRelatedContracts").html() == '')

                            //else
                            //    $("#ulRelatedContracts").append('; <a href="' + myUrl + '">' + item.RelatedContractTitle + '</a> (' + item.RelatedRelationshipType + ')');

                            $('#liSelected').append('<span style="font-size:11px;" id=' + item.RelatedContractID + '>' + item.RelatedContractTitle + ' (' + item.RelatedRelationshipType + ') <img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveRelationship(this);" style="float:right" /></span>');
                        } else {
                            if ($("#ulRelatedContracts").html() == '')
                                $("#ulRelatedContracts").append('<li><span class="disabled_item_link" title="Contract Record not available.It is likely that you do not have permission or it may have been deleted.">' + item.RelatedContractTitle + '</span> (' + item.RelatedRelationshipType + ')<li>');
                            else
                                $("#ulRelatedContracts").append('<li><span class="disabled_item_link" title="Contract Record not available.It is likely that you do not have permission or it may have been deleted.">' + item.RelatedContractTitle + '</span> (' + item.RelatedRelationshipType + ')<li>');

                            $('#liSelected').append('<span style="font-size:11px;" id=' + item.RelatedContractID + '>' + item.RelatedContractTitle + ' (' + item.RelatedRelationshipType + ')</span>');
                        }
                    }
                });
            } else {
                $('#ulRelatedContracts').html('No items found.');
            }
        },
        error: function (contactsJsonPayload) {
            $("#hdnRelatedContracts").text("");
            $("#ulRelatedContracts").empty();
            arrRelatedcontractRowkey = [];
            arrRelatedContractsSelected = [];
            if (!$("#lblRelatedContractsCount").text().trim()) {
                $("#ulRelatedContracts").append('No items found.');
            }
            else {
                $("#ulRelatedContracts").append('No items found.');
            }

        }

    });
}

var vSentNotification;
function CreateNotificationList(contractid) {
    if (contractid == null || contractid == "") {
        contractid = vContractID;
    }
    $("#alertsList").html('');
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/notifications?contractid=' + contractid,
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            if (data.length == 0) {
                $("#alertsList").append('No Alert Sent');
            }
            else {
                vSentNotification = data;
                $(data).each(function (i, item) {
                    var sNotificationTitle = item.NotificationTitle;
                    var sNotificationDate = moment(new Date(item.NotificationDate)).format('Do MMM');

                    var article = "";
                    if (i < 5) {
                        article += "<a href='javascript:void(0)' onclick='ViewNotificationDetail(\"" + i + "\");'>" + sNotificationTitle + "</a> <small title='Notified On'>" + sNotificationDate + "</small> | <small title='Notified To'>" + item.UserID + "</small><br/>";
                        $("#alertsList").append(article);
                    }


                    var sCategory = item.Category;
                    var vPriority = item.Priority;
                    var vPriorityIcon = '<img src="../Content/Images/priority_none.png" alt="None" title="None" style="vertical-align: text-bottom;" />';
                    if (vPriority == "High") {
                        vPriorityIcon = '<img src="../Content/Images/priority_high.png" alt="High" title="High" style="vertical-align: text-bottom;" />';
                    }
                    else if (vPriority == "Medium") {
                        vPriorityIcon = '<img src="../Content/Images/priority_medium.png" alt="Medium" title="Medium" style="vertical-align: text-bottom;" />';
                    }
                    else if (vPriority == "Low") {
                        vPriorityIcon = '<img src="../Content/Images/priority_low.png" alt="Low" title="Low" style="vertical-align: text-bottom;" />';
                    }

                    article = "";
                    article += '<article class="d-box1">';
                    article += '<div class="d_left-table">' + sNotificationDate;
                    article += '</div>';
                    article += '<div class="d_middle-table">';
                    article += '<p class="text"><a href="javascript:void(0)" onclick="ViewNotificationDetail(\'' + i + '\');">' + sNotificationTitle + '&nbsp;' + vPriorityIcon + '</a></p>';
                    article += '</div>';
                    article += '<div class="d_right-table">';
                    article += '<p class="text">' + item.UserID + '</p>';
                    article += '</div>';
                    article += '</article>';
                    $("#alertsListAll").append(article);
                });

                $('#compact-pagination-Alerts').pagination({
                    items: data.length,
                    itemsOnPage: 10,
                    type: 'section',
                    typeID: 'alertsListAll',
                    row: 'article',
                    cssStyle: 'compact-theme'
                });
            }
        },
        error:
            function (data) {
                $("#alertsList").append('No Alert Sent');
            }
    });
}

function CreateContractAlertList(contractid) {
    if (contractid == null || contractid == "") {
        contractid = vContractID;
    }

    var article = "";
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contractalerts?contractid=' + contractid,
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            var itemcheckcount = 0;
            var allitem = data.length;
            var curDate = moment(new Date());
            var blUpcomingAlert = false;
            $(data).each(function (i, item) {
                var sRowKey = item.RowKey;
                var sAlertTitle = item.EventName;
                var sPriority = item.Priority;


                if (item.Active == true) {
                    var vv = 0;
                    if (item.EventName == "Contract Renewals") {
                        if (typeof vContractRecord !== 'undefined') {
                            var vDate = vContractRecord.RenewalDate;
                            var start = moment(vDate);
                            var vv = start.diff(curDate, "days");
                        }
                    } else if (item.EventName == "Contract Expiration") {
                        if (typeof vContractRecord !== 'undefined') {
                            var vDate = vContractRecord.ExpiryDate;
                            var start = moment(vDate);
                            var vv = start.diff(curDate, "days");
                        }
                    }

                    if (vv > 0 && (vv <= item.Reminder1 + 60 || vv <= item.Reminder2 + 60 || vv <= item.Reminder3 + 60)) {

                        var alert = "";
                        alert += "<img src='../Content/Images/waitng-approval.png' />" + sAlertTitle;
                        alert += "<small class='contRsmaLl'>reminder due in " + vv + " days</small>";
                        alert += "<br/>";

                        $("#alertsListUpcoming").append(alert);
                        blUpcomingAlert = true;
                    }
                }
            });

            if (blUpcomingAlert) {
                $("#spNoUpcomingAlert").css('display', 'none');
            }
        },
        error:
            function (data) {
            }
    });
}

function ViewNotificationDetail(id) {
    $("#tdNotificationText").html(vSentNotification[id].NotificationDescription);
    $("#tdNotificationSentTo").html(vSentNotification[id].UserID);
    $("#tdNotificationSentOn").html(moment(new Date(vSentNotification[id].NotificationDate)).format('Do MMM, h:mm A'));
    $("#dvNotificationDetail").dialog("open");
}

function ShowAllAlerts() {
    $("#allAlerts").dialog("open");
}

function ShowUpcomingAlert() {
    $("#dvUpcomingAertsList").css("display", "");
    $("#dvSentAertsList").css("display", "none");

    $("#aSentAlert").removeClass("active");
    $("#aUpcomingAlert").addClass("active");
}

function ShowSentAlert() {
    $("#dvUpcomingAertsList").css("display", "none");
    $("#dvSentAertsList").css("display", "");

    $("#aUpcomingAlert").removeClass("active");
    $("#aSentAlert").addClass("active");
}

function ShowTabDetail(TabName) {
    if (TabName == "Summary") {
        $('.info-box-main-body').css("display", "none");
        $('#tabSummaryDetail').css("display", "");

        $(".contracttab").removeClass("active");
        $("#tabSummary").addClass("active");
    }
    else if (TabName == "Activity") {
        if ($('#dvContractWorkflows div').length == 0) //Performance Optimization
        {
            GetContractActivities(vContractID); //Performance Optimization
        }
        $('.info-box-main-body').css("display", "none");
        $('#tabActivityDetail').css("display", "");

        $(".contracttab").removeClass("active");
        $("#tabActivity").addClass("active");
    }
    else if (TabName == "Catalog") {
        $('.info-box-main-body').css("display", "none");
        $('#tabCatalogDetail').css("display", "");

        $(".contracttab").removeClass("active");
        $("#tabCatalog").addClass("active");
    }
    else if (TabName == "Transactions") {
        $('.info-box-main-body').css("display", "none");
        $('#tabTransactionsDetail').css("display", "");

        $(".contracttab").removeClass("active");
        $("#tabTransactions").addClass("active");
    }
    else if (TabName == "Obligation") {
        if ($('#ObligationNewDetailsTableBody tr').length == 0 && $('#ObligationNewDetailsTableBodyGroup tr').length == 0) //Performance Optimization
            GetObligationCatalogs(); //Performance Optimization
        $('.info-box-main-body').css("display", "none");
        $('#tabObligationNewDetail').css("display", "");

        $(".contracttab").removeClass("active");
        $("#tabObligation").addClass("active");
    }
    else if (TabName == "Notes") {
        if ($('#ulNotesBody li').length == 0) //Performance Optimization
            BindNotes(vContractID); //Performance Optimization
        $('.info-box-main-body').css("display", "none");
        $('#tabNotesDetail').css("display", "");

        $(".contracttab").removeClass("active");
        $("#tabNotes").addClass("active");
    }
    else if (TabName == "TermsClause") {
        if ($('#ulNotesBody li').length == 0) //Performance Optimization
            TermsAndClauseDocument(vContractID); //Performance Optimization
        $('.info-box-main-body').css("display", "none");
        $('#tabTermsClauseDetail').css("display", "");

        $(".contracttab").removeClass("active");
        $("#tabTermsClause").addClass("active");
    }
    else if (TabName == "Documents") {
        $('.info-box-main-body').css("display", "none");
        $('#tabDocumentsDetail').css("display", "");

        $(".contracttab").removeClass("active");
        $("#tabDocuments").addClass("active");
    }
    else if (TabName == "DocumentView") {
        $('.info-box-main-body').css("display", "none");
        $('#tabDocumentViewDetail').css("display", "");

        $(".contracttab").removeClass("active");
        $("#tabDocumentView").addClass("active");
    }
    else if (TabName == "Amendment") {//Performance Optimization
        if ($('#ulAmendment li').length == 0) {
            BindAmendments(vContractID);
        }

        $('.info-box-main-body').css("display", "none");
        $('#tabAmendmentDetail').css("display", "");

        $(".contracttab").removeClass("active");
        $("#tabAmendment").addClass("active");
    }
    else if (TabName == "Correspondence") {
        if ($('#ulCorrespondence li').length == 0)
            BindCorrespondence(vContractID);

        $('.info-box-main-body').css("display", "none");
        $('#tabCorrespondenceDetail').css("display", "");

        $(".contracttab").removeClass("active");
        $("#tabCorrespondence").addClass("active");
    }//Performance Optimization
}

function ReloadContracts() {
    if (!inrefreshState) {
        inrefreshState = true;
        setTimeout(function () {
            inrefreshState = false;
        }, 5000);
        vContractID = getParameterByName("ContractID");
        try {

            //[Bug id - eO36418] [Refresh Button: App navigating to Summary section whenever user click on In-App Refresh button]
            if ($("#tabSummary").hasClass("active")) {
                ShowTabDetail('Summary');
            }
            else if ($("#tabDocumentView").hasClass("active")) {
                ShowTabDetail('DocumentView');
            }
            else if ($("#tabDocuments").hasClass("active")) {
                ShowTabDetail('Documents');
            }
            else if ($("#tabTermsClause").hasClass("active")) {
                ShowTabDetail('TermsClause');
            }
            else if ($("#tabNotes").hasClass("active")) {
                ShowTabDetail('Notes');
            }
            else if ($("#tabObligation").hasClass("active")) {
                ShowTabDetail('Obligation');
            }
            else if ($("#tabTransactions").hasClass("active")) {
                ShowTabDetail('Transactions');
            }
            else if ($("#tabCatalog").hasClass("active")) {
                ShowTabDetail('Catalog');
            }
            else if ($("#tabActivity").hasClass("active")) {
                ShowTabDetail('Activity');
            }
            else
                ShowTabDetail('Summary');

            BindContractDetails(vContractID);
            //getAllCategoriesandLabels();
            EnableDisableOCR();
            icontractdetails();   //ENH485  Featured metadata
            BindRelatedContracts(vContractID);
            CreateContractAlertList(vContractID);
            $("#hdnShowAllTextValueheader").html($("#showAll")[0].innerHTML)
            //var showalltextvalue = $("#showAll").text();

            //manoj
            var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
            var vDocLibFeat = $.grep(veContractFeatures, function (n, i) {
                return (n.RowKey == "20" && n.Status == "ON");
            });
            var details = "";
            if (vDocLibFeat.length > 0) {
                //Tab width decrease
                if (!($(".borderTop_Right_none").hasClass("newdocview"))) {
                    $(".borderTop_Right_none").addClass('newdocview');
                }
                //Tab width decrease
                details += '<div class="row-group"><div class="col11 no-pad"><div class="col7"><img src="/Content/Images/documents.png"> <a title="Displays Folder(s) and Document(s) associated with the Contract Record." href="javascript:void(0);" class="link-head" onclick="javascript: togglediv(\'ulDocument\', \'dvDocument\', \'imgdoc\');">Documents (<i id="lblDocumentsCount"></i>)</a><a href="javascript:void(0);" id="documentsort" class="add-btn close1 margin-left-5 obligation-act-new openmenuDocumentSort" style="display:none"><img src="../Content/Images/down_arrow_blk.png" alt="" title=""></a><a href="javascript:void(0);" class="add-btn close1 Contribute" id="btnAddContractDocument"><img src="/Content/Images/add-icon.png">Add</a><label class="details-label Contribute" id="lblAddContractDocument">or Drag & Drop</label><a href="javascript:void(0);" class="add-btn close1 Contribute" id="btnaddnewsubfolder"><img src="/Content/Images/add-icon.png">Manage Folder</a><a href="javascript:void(0);" id="documentMultiActions" class="add-btn close1 margin-left-5 obligation-act-new openmenuDocumentMultiActions" style="display:none"><img src="../Content/Images/icon/drop.png" style="height:14px !important;"></a></div>'
            + '<div class="col2" style="width: 12%;padding: 0;"><ul id="ulFolderDocumentView" class="tab"><li style="display:inline-block;"><a href="javascript:void(0);" id="listfolderdocumentview" class="tablinks group-wit-btn active" data-value="folder" onclick="DisplayDocument(\'folder\')"><img src="/Content/Images/folder-view.png" title="Displays Folder(s) and Documents(s) associated with Contract Record"></a></li><li style="display:inline-block; margin-left:-1px;"><a href="javascript:void(0);" id="listdocumentview" data-value="document" class="tablinks group-wit-btn" onclick="DisplayDocument(\'document\')"><img src="/Content/Images/list-view.png" title="Displays Documents(s) associated with Contract Record"></a></li></ul></div><div id="dvdocumentkeyword" style="width: 29%; float:left;"><input style="width: 72%;float: left;padding: 5px 27px 5px 5px; border: 1px solid #ccc!important;" id="txtdocumentkeyword" name="keyword" placeholder="Document(s) Search" class="topSearchBox validelement" type="text"><img class="poPSear" style="    cursor: pointer;position: relative;left: -62px;top: 1px;padding: 4px 0px 5px 5px;" onclick="javascript:SearchDocumentKeyword();" src="/Content/Images/search1.png"><a href="javascript:void(0)" class="linkPickerClear" style="float: left;display: block;margin-left: 4px!important;margin-top: 7px!important;" onclick="ClearDocumentKeyword();">Clear</a></div></div>'
            + '<div class="col1 text-right no-pad"><a href="javascript:void(0);" class="close1" onclick="javascript: togglediv(\'ulDocument\', \'dvDocument\', \'imgdoc\');"><img id="imgdoc" src="/Content/Images/e-open.png"></a></div></div><h2 id="showAll" class="box-title" style="margin-left: 26px;float: none;line-height: 16px;margin-top: 5px;"></h2><div class="row-group"><div class="col12"> <div id="holder" style="width:100%;"><div id="iddropfile" class="dropfiles" style="display:none;">Drop files here.</div><ul class="ul-data" id="ulDocumentLoading"></ul><ul class="ul-data" id="ulDocument"></ul><span id="uploaddocumentprocess" style="font-size:12px; display:none;"><img src="/Content/Images/loading.gif" /> Uploading...</span></div></div><div id="dvDocument" class="col12 pad-top"></div></div>';
                $("#dvtabDocumentView").html(details);
                //$("#dvtabSummaryDocumentView").html('<div class="row-group"><div class="col10 no-pad"><img src="/Content/Images/documents.png"> <a title="Displays Primary and Pinned Document(s)associated with the Contract Record." href="javascript:void(0);" class="link-head" onclick="javascript: togglediv(\'ulPinDocument\', \'dvPinDocument\', \'imgPindoc\');">Primary and Pinned Document(s) (<i id="lblPinDocumentsCount"></i>)</a><a href="javascript:void(0);" id="pindocumentsort" class="add-btn close1 margin-left-5 obligation-act-new openmenuDocumentSort" style="display:none"><img src="../Content/Images/down_arrow_blk.png" alt="" title=""></a></div><div class="col2 text-right no-pad"><a href="javascript:void(0);" class="close1" onclick="javascript: togglediv(\'ulPinDocument\', \'dvPinDocument\', \'imgPindoc\');"><img id="imgPindoc" src="/Content/Images/e-open.png"></a></div></div><div class="row-group"><div class="col12"><div style="width:100%;"><div class="warning-msg clearfix clpendingaction" style="display:none;"><img src="/Content/Images/icon/warning-icon.png" alt=""><table id="tblDocumentMissing"></table><a href="javascript:void(0);" class="close1" onclick="GetContractPendingAction(true,\'Documents\')" title="View All"><img src="/Content/Images/view-all-new.png" style="cursor:pointer;">&nbsp;</a></div><ul class="ul-data" id="ulPinDocumentLoading"></ul><ul class="ul-data" id="ulPinDocument"></ul></div></div><div id="dvPinDocument" class="col12 pad-top"></div></div>');
                $("#dvtabSummaryDocumentView").html('<div class="row-group"><div class="col10 no-pad"><img src="/Content/Images/documents.png"> <a title="Displays Primary and Pinned Document(s) associated with the Contract Record." href="javascript:void(0);" class="link-head" onclick="javascript: togglediv(\'ulPinDocument\', \'dvPinDocument\', \'imgPindoc\');">Primary and Pinned Document(s) (<i id="lblPinDocumentsCount"></i>)</a><a href="javascript:void(0);" id="pindocumentsort" class="add-btn close1 margin-left-5 obligation-act-new openmenuDocumentSort" style="display:none"><img src="../Content/Images/down_arrow_blk.png" alt="" title=""></a></div><div class="col2 text-right no-pad"><a href="javascript:void(0);" class="close1" onclick="javascript: togglediv(\'ulPinDocument\', \'dvPinDocument\', \'imgPindoc\');"><img id="imgPindoc" src="/Content/Images/e-open.png"></a></div></div><div class="row-group pad-top"><div class="col12"><div style="width:100%;"><div class="wmessage clearfix clpendingaction" style="display:none;margin-left:35%;margin-top:-26px;margin-bottom:39px;"><table id="tblDocumentMissing"></table></div><ul class="ul-data" id="ulPinDocumentLoading"></ul><ul class="ul-data" id="ulPinDocument"></ul></div></div><div id="dvPinDocument" class="col12 pad-top"></div></div>'); //ENH 23  Minor Enhancement Specs-Rahul
                $("#hdnnewdocumentfeature").text("Yes");
                $("#litabDocumentView").css("display", "");
                $('#txtdocumentkeyword').keypress(function (e) {
                    if (e.keyCode == 13) {
                        SearchDocumentKeyword();
                    }
                });
            } else {
                //Tab width increase
                if (!($(".borderTop_Right_none").hasClass("newdocview"))) {
                    $(".borderTop_Right_none").removeClass('newdocview');
                }
                if ($("#tabDocumentView").hasClass("active")) {
                    $('.info-box-main-body').css("display", "none");
                    $('#tabSummaryDetail').css("display", "");

                    $(".contracttab").removeClass("active");
                    $("#tabSummary").addClass("active");
                }
                //Tab width increase
                details += '<div class="row-group"><div class="col10 no-pad"><img src="/Content/Images/documents.png"> <a title="Displays Folder(s) and Document(s) associated with the Contract Record." href="javascript:void(0);" class="link-head" onclick="javascript: togglediv( \'ulDocument\', \'dvDocument\', \'imgdoc\');">Documents (<i id="lblDocumentsCount"></i>)</a><a href="javascript:void(0);" class="add-btn close1 Contribute" id="btnAddContractDocument" style="display:none;"><img src="/Content/Images/add-icon.png">Add</a><label class="details-label Contribute" id="lblAddContractDocument" style="display:none;">or Drag & Drop</label><a href="javascript:void(0);" class="add-btn close1 Contribute" id="btnaddnewsubfolder"style="display:none;" ><img src="/Content/Images/add-icon.png">Manage Folder</a><a href="javascript:void(0);" id="documentMultiActions" class="add-btn close1 margin-left-5 obligation-act-new openmenuDocumentMultiActions" style="display:none"><img src="../Content/Images/icon/drop.png" style="height:14px !important;"></a></div>'
                + '<div class="col2 text-right no-pad"><a href="javascript:void(0);" class="close1" onclick="javascript: togglediv(\'ulDocument\', \'dvDocument\', \'imgdoc\');"><img id="imgdoc" src="/Content/Images/e-open.png"></a></div></div><div class="warning-msg clearfix clpendingaction" style="display:none;"><img src="/Content/Images/icon/warning-icon.png" alt=""><table id="tblDocumentMissingNormal"></table><a href="javascript:void(0);" class="close1" onclick="GetContractPendingAction(true,\'Missing\')" title="View All"><img src="/Content/Images/view-all-new.png" style="cursor:pointer;">&nbsp;</a></div><h2 id="showAll" class="box-title" style="margin-left: 26px;float: none;line-height: 16px;margin-top: 5px;"></h2>'
                + '<div class="row-group"><div class="col12"><div id="holder" style="width:100%;"><div id="iddropfile" class="dropfiles" style="display:none;">Drop files here.</div><ul class="ul-data" id="ulDocumentLoading"></ul><ul class="ul-data" id="ulDocument"></ul><span id="uploaddocumentprocess" style="font-size:12px; display:none;"><img src="/Content/Images/loading.gif" /> Uploading...</span></div></div><div id="dvDocument" class="col12 pad-top"></div></div>';
                $("#dvtabSummaryDocumentView").html(details);
                $("#hdnnewdocumentfeature").text("No");
                $("#litabDocumentView").css("display", "none");
                documentview = "";
            }
            details = "";
            $(".openmenuDocumentMultiActions").contextMenu({
                menu: 'dropdownMenuDocumentMultiActions', leftButton: true
            }, function (action, el, pos) {
                contextMenuDocumentMultiActions(action, el, pos);
            });
            $(".openmenuDocumentSort").contextMenu({
                menu: 'dropdownMenuDocumentSort', leftButton: true
            }, function (action, el, pos) {
                contextMenuDocumentSort(action, el.parent("a"), pos);
            });
            //dynamic holder binding value
            holder = document.getElementById('holder');
            holder.ondragover = function (e) {
                if (document.getElementById("btnAddContractDocument").style.display != "none") {
                    e.preventDefault();
                    document.getElementById("holder").style.border = "2px dashed blue ";
                    $("#holder").css("min-height", "100px");
                    document.getElementById("holder").style.opacity = "0.5";
                    e.dataTransfer.setData('text/html', "You dragged the image!");
                    document.getElementById("iddropfile").style.display = "block";
                }
            };
            holder.ondragend = function () {
                this.className = ''; return false;
            };
            holder.ondragleave = function () {
                document.getElementById("holder").style.border = "2px dashed white";
                $("#holder").css("min-height", "0px");
                $('#holder').css("opacity", "1");
                $('#holder').css("pointer-events", "auto");
                document.getElementById("iddropfile").style.display = "none";
            };
            var totalfiles = "";
            holder.ondrop = function (e) {
                if (contractItem.Permission != 'View' && contractItem.Permission != '' && contractItem.Permission != null) {
                    $("#loadingPage").fadeIn();
                    this.className = '';
                    e.preventDefault();
                    var files = e.dataTransfer.files;
                    var fileslength = files.length;
                    //if (document.getElementById("tbBulkControls").rows.length < 6) {
                    //    if (fileslength <= 5) {
                    for (var i = 0; i < fileslength; i++) {
                        droppedfiles.push(files[i]);
                    }
                    totalfiles = files;
                    removedItems = [];
                    ReturnFolderSelection_New();
                    readfiles(files);
                    if ($("#tbBulkControls tbody").find("tr").length > 0) {
                        $(".cldraganddrop").css('display', 'none');
                        $('#btnBulkUploadSave').css('display', '');
                        $('#btnBulkUploadCancel').css('display', '');
                        $("#bulkuploaddoc").dialog("option", "title", "Bulk Document Upload");
                        $("#bulkuploaddoc").dialog("open");
                        $("#bulkuploaddoc").height("auto");
                        applybulkdocumetdraganddrop();
                    }
                    else {
                        dropexitfilename = [];
                        droppedfiles = [];
                        droppedControls = 0;
                        parentfolderidtopass = "";
                        dropdownlength = 0;
                        uploadedfilecount = 0;
                        document.getElementById("holder").style.border = "2px dashed white";
                        $("#holder").css("min-height", "0px");
                        $('#holder').css("opacity", "1");
                        $('#holder').css("pointer-events", "auto");
                        document.getElementById("iddropfile").style.display = "none";
                    }
                    $("#loadingPage").fadeOut();
                    //    }
                    //    else {
                    //        $("#loadingPage").fadeOut();
                    //        swal("", "Maximum 5 file(s) only allowed at a time....!");
                    //        document.getElementById("holder").style.border = "1px solid white";
                    //        $('#holder').css("opacity", "1");
                    //        $('#holder').css("pointer-events", "auto");
                    //    }
                    //}
                    //else {
                    //    $("#loadingPage").fadeOut();
                    //    swal("", "Maximum 5 file(s) only allowed at a time....!");
                    //    document.getElementById("holder").style.border = "1px solid white";
                    //    $('#holder').css("opacity", "1");
                    //    $('#holder').css("pointer-events", "auto");
                    //}
                }
            }
            $('#btnAddContractDocument').click(function () {
                Updatedocumenttap = false;
                $("#lblTemplateDescription").text("");
                $('#addNewDocument').css("pointer-events", "auto");
                $("#btnManagesubfolder").css("display", "none");
                AddContractDocument();
                addbuttonclick = true;
            });


            //$('#btnaddnewsubfolder').click(function () {
            //    $.ajax({
            //        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/documents/UpdateDocCache?itemid=qmoCesGu',
            //        type: 'POST',
            //        dataType: 'json',
            //        headers: {
            //            'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging, username: localStorage.UserName
            //        },
            //        cache: false,
            //        success: function (data) {
            //            alert("Success");
            //        },
            //        error: function (data) {
            //            alert("Fail");
            //        }
            //    });
            //});

            $('#btnaddnewsubfolder').click(function () {
                Updatedocumenttap = false;
                AddContractDocument("ManageFolder");
                //manoj
                //if (typeof ($('#showAll').text()) != "undefined" && $('#showAll').text().replace(/ \/ /g, '/') != null && $('#showAll').text().replace(/ \/ /g, '/') != "") {
                //    $("#txtnewfoldervalue").attr("placeholder", "Enter New sub-folder name");
                //    $("#dvfoldercreation").dialog("option", "title", "Create Sub-folder");
                //    //manoj
                //    var fldratrical = "";
                //    var arrShowallTesxt = $.map($('#showAll').text().split('/'), $.trim);
                //    arrShowallTesxt = arrShowallTesxt.filter(function (vFolder) { return vFolder !== '' });
                //    //var arrShowallTesxt = $('#showAll').text().split('/').filter(function (vFolder) { return vFolder !== '' });
                //    if (arrShowallTesxt.length == 1) {
                //        fldratrical = '<img src="../Content/Images/icon/folder_open.png" style="margin-right: 5px;"><span>' + arrShowallTesxt.toString() + '</span>';
                //    } else {
                //        for (var fldr = 0; fldr < arrShowallTesxt.length; fldr++) {
                //            if (arrShowallTesxt.length - 1 == fldr) {
                //                fldratrical += '/<img src="../Content/Images/icon/folder_open.png" style="margin-right: 5px;"><span>' + arrShowallTesxt[fldr].toString() + '</a>';
                //            } else {
                //                fldratrical += '/<img src="../Content/Images/icon/folder.png" style="margin-right: 5px;"><span>' + arrShowallTesxt[fldr].toString() + '</a>';
                //            }
                //        }
                //    }
                //    if (fldratrical.charAt(0) == '/') {
                //        fldratrical = fldratrical.substr(1);
                //    }
                //    $("#showAllFolder").html(fldratrical);
                //    //manoj
                //} else {
                //    $(this).attr("placeholder", "Enter folder name");
                //    $("#dvfoldercreation").dialog("option", "title", "Create Folder");
                //    $("#showAllFolder").html('');
                //}

                //var selectedparentdocument = "";
                //var headerid = $("#lblContractTitle").text();
                //headerid = headerid.replace(/[\*\|\,\"\:\<\>\[\}\{\}\'\(\)\&\#\%\.\-\!]/g, '').replace(/\//g, '').replace(/\s\s+/g, " ").trim();
                //selectedparentdocument = ($('#hdContAreaDocLibName').val() != null && $('#hdContAreaDocLibName').val() != "") ? $('#hdContAreaDocLibName').val() : '/Contract Documents/';
                //selectedparentdocument = (selectedparentdocument.charAt(0) != '/') ? '/' + selectedparentdocument : selectedparentdocument;
                //selectedparentdocument = ((selectedparentdocument.substr(selectedparentdocument.length - 1)) != "/") ? selectedparentdocument + "/" : selectedparentdocument;
                ////if (typeof ($('#showAll').text()) != "undefined" && $('#showAll').text().replace(/ \/ /g, '/') != null && $('#showAll').text().replace(/ \/ /g, '/') != "") {
                //selectedparentdocument = (typeof ($('#showAll').text()) != "undefined" && $('#showAll').text().replace(/ \/ /g, '/') != null && $('#showAll').text().replace(/ \/ /g, '/') != "") ? selectedparentdocument + $('#showAll').text().replace(/ \/ /g, '/') + '/' : selectedparentdocument + headerid + '/';
                //$("#hdnnewfolderurl").val(selectedparentdocument);
                //$("#hdnnewfoldercreatedfrom").val("detailspage");
                //$("#txtnewfoldervalue").removeClass('error');
                //$("#errormsg_txtnewfoldervalue").remove();
                ////$("#dvfoldercreation").dialog("option", "title", "Create Folder");
                //$("#dvfoldercreation").dialog("open");
            });
            //dynamic holder binding value
            $("#showAll").html($("#hdnShowAllTextValueheader")[0].innerHTML);
            $("#hdnShowAllTextValueheader").html('');
            if (documentview == null || documentview == "" || documentview == 'folder') {
                if ($("#showAll").text().indexOf("/") >= 0) {
                    showfolderdocuments($("#showAll").find("a:last")[0])
                } else {
                    BindDocument(vContractID);
                }
            } else {
                DisplayDocument(documentview);
            }
            //GetContractPendingAction(true, "BindPeoples");
            $("#hdnFolderDocumentView").text('');
            $("#hdnShowAllTextValue").html('');
            PrvFolderselection = '';
            //Bind primary and pined document based on new feature
            if ($("#hdnnewdocumentfeature").text() == "Yes") {
                CreateDocumentListPinView(vContractID);
            }
            //manoj
            BindMilestone(vContractID);
            GetContractActivities(vContractID);
            TermsAndClauseDocument(vContractID);
            BindNotes(vContractID);
            GetInnerFeatures();
            BindMetaData(contractItem, true);
            if (!pendingStarted) {
                $("#tblContractSettingMetadata").empty()
                $("#tblStartApprovalMetadata").empty()
                $("#tblEditcontractMetadata").empty()
                $("#tblActivitiesMetadata").empty()
                $("#tblJustInfoMetadata").empty()
            }

        } catch (e) {
            $("#loadingPage").fadeOut();
        }

        //pendingStarted = false;
        $("#tblContractSettingMetadata").empty();
        //GetContractPendingAction(false);

    }
    //vSliderCounter = 0;
    // Check Upcoming Task Slider    Added 2.4final to 2.4
    //suren
    GetRenewalChecklistAndNotes(vContractID, 0);
}

function BackToList() {
    if (document.referrer.indexOf(window.location.hostname) != -1) {
        var referrer = document.referrer;
        if (referrer.indexOf('Contracts/CreateContract') >= 0 || referrer.indexOf('Contracts/EditContract') >= 0) {
            // var Stage = "";
            //  Stage = getParameterByName("Stage");
            if (Stage == "pipeline" && contractItem.IsFinalized != "Yes")
                if (getParameterByName("View") != '') {
                    window.location = '/Pipeline?View=' + getParameterByName("View")
                } else {
                    window.location = '/Pipeline'
                }
            else {
                if (getParameterByName("View") != '') {
                    window.location = '/Contracts?View=' + getParameterByName("View")
                } else {
                    window.location = '/Contracts'
                }
            }
        }
        else {
            //   var Stage = "";
            //  Stage = getParameterByName("Stage");
            if (Stage == "pipeline")
                if (getParameterByName("View") != '') {
                    window.location = '/Pipeline?View=' + getParameterByName("View")
                } else {
                    parent.history.back();
                }
            else {
                if (getParameterByName("View") != '') {
                    window.location = '/Contracts?View=' + getParameterByName("View")
                } else {
                    parent.history.back();
                }
            }
        }
    }
    else {
        parent.history.back();
    }
    return false;
}

function getParameterByName(name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
        results = regex.exec(location.search);
    return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
}

function togglediv(firstObject, secondObject, imgObject) {
    switch (imgObject) {//Performance Optimization
        case 'imgRelatedContracts':
            if ($('#ulRelatedContracts li').length === 0) {
                BindRelatedContracts();
            }
            break;
    }//Performance Optimization

    if (firstObject != "")
        $("#" + firstObject).slideToggle();
    if (secondObject != "")
        $("#" + secondObject).slideToggle();
    if (imgObject != "") {
        var imgObj = $("#" + imgObject);

        if (imgObj.attr("title") == "Collapse") {
            imgObj.attr("title", "Expand");
            imgObj.attr("src", "../Content/Images/e-open.png");
        } else {
            imgObj.attr("title", "Collapse");
            imgObj.attr("src", "../Content/Images/e-close.png");
        }
    }

}

function setBlankValueToHyphen(tableId) {
    $('#' + tableId + ' tr td').each(function () {
        var cellText = $(this).html();
        if (cellText == '' || cellText == '0') {
            $(this).html('-');
        }


    });
}

function AddStage() {
    var vLastRow = $("#tblStage tr:last").attr('id');
    var vRowLength = $("#tblStage tr").length;
    if (typeof vRowLength != 'undefined')
        vRowLength = parseInt(vRowLength) + 1;
    var totalFileCount = "1";
    if (typeof vLastRow == "undefined") {
        totalFileCount = "1";
    }
    else {
        totalFileCount = parseInt(vLastRow.replace("trStage", ""));
        totalFileCount += 1;
    }
    var htmlFormatFile = '<tr id="trStage' + totalFileCount + '">';
    htmlFormatFile += '<td class="width30 wf_approval start_workflow">';
    htmlFormatFile += '<input id="txtStage' + totalFileCount + '" name="Stage' + totalFileCount + '" title="Stage" placeholder="Stage Name" type="text" class="f_inpt width95_a validelement" value="Stage ' + vRowLength + '"/>';
    htmlFormatFile += '</td>';
    htmlFormatFile += '<td class="width46 start_workflow">';
    htmlFormatFile += '<select id="ddlAssignTo' + totalFileCount + '" name="AssignTo' + totalFileCount + '"  multiple="multiple" data-placeholder="Select" class="width97 a-Workflow-height validmultiselect"></select>';
    htmlFormatFile += '</td>';
    htmlFormatFile += '<td class="width20 padding_top_3px v_align_top start_workflow">';
    //If adhoc workflow is configured in settings
    if (workflowAdHoc) {
        htmlFormatFile += '<select id="ddlOrder' + totalFileCount + '" name="Order' + totalFileCount + '"  class="f_inpt width97 height32"><option selected="selected">Serial</option><option>Parallel</option></select>';
    } else {
        htmlFormatFile += '<select id="ddlOrder' + totalFileCount + '" name="Order' + totalFileCount + '"  class="f_inpt width97 height32" disabled="disabled"><option selected="selected">Serial</option><option>Parallel</option></select>';
    }
    htmlFormatFile += '</td>';
    htmlFormatFile += '<td class="width4 padding_top_10px v_align_top start_workflow">';
    htmlFormatFile += '<img src="../Content/Images/icon/delete.png" style="width: 20px" onclick="DeleteStage(this)" />';
    htmlFormatFile += '</td>';
    htmlFormatFile += '</tr>';

    $("#tblStage").append(htmlFormatFile);
    var $options = $("#ddlApprovers > option").clone();
    $('#ddlAssignTo' + totalFileCount).append($options);

    $("#ddlAssignTo" + totalFileCount).chosen().change(function () {
        var vasstoid = $(this).attr('id').replace("ddlAssignTo", "");
        if ($(this).val() != null) {
            if ($(this).val().length > 1) {
                $("#ddlOrder" + vasstoid).prop('disabled', false);
            }
            else {
                $("#ddlOrder" + vasstoid).val("Serial");
                $("#ddlOrder" + vasstoid).prop('disabled', true);
            }
        }
        else {
            $("#ddlOrder" + vasstoid).val("Serial");
            $("#ddlOrder" + vasstoid).prop('disabled', true);
        }
    });
    //ENH492 - Workflow Cycle time Report & default naming of stages.
    $("#txtStage" + totalFileCount).autocomplete({
        source: StageName,
        minLength: 1,
        focus: function (event, ui) {
            return false;
        },
        select: function (evn, uidetails) {
            $("#txtStage" + totalFileCount).val(uidetails.item.label);

        }
    });

}

function DeleteStage(n) {
    var vv = $(n.parentNode.parentNode).find('select');
    var curVal = 0;
    if (typeof vv != 'undefined') {
        curVal = parseInt(vv.val());
    }
    n.parentNode.parentNode.parentNode.removeChild(n.parentNode.parentNode);
    $("#tblStage tr").each(function (i, item) {

        if (typeof ($(item).attr('id')) != "undefined" && $(item).attr('id') != "" && $(item).attr('id') != null) {
            var ind = $(item).attr('id').replace('trStage', '');
            if (typeof (ind) != "undefined" && ind != "" && ind != null) {
                if ($("#txtStage" + ind).val().indexOf('Stage ') == 0) {
                    var replaceint = $("#txtStage" + ind).val().replace('Stage ', '');
                    if ($.isNumeric(replaceint)) {
                        if (!isNaN(parseInt(replaceint)) && !isNaN(parseInt(i)) && parseInt(replaceint) != (parseInt(i) + 1)) {
                            $("#txtStage" + ind).val('Stage ' + (parseInt(i) + 1))
                        }
                    }
                }
            }
        }
    })

}
//To restore contract
function RestoreContract() {

    var contractTitle = $("#lblContractTitle").text();
    swal({
        title: '',
        text: "Are you sure you want to <span style=\"font-weight:700\">restore " + contractTitle + "</span> record?",
        type: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes',
        cancelButtonText: 'No',
        html: true
    },
function (confirmed) {
    if (confirmed) {
        var contractID = $("#hdnContractID").text();
        $("#loadingPage").fadeIn();
        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/RestoreContract?contractid=' + contractID,
            type: 'POST',
            dataType: 'json',
            headers: {
                'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging, username: localStorage.UserName
            },
            cache: false,
            success: function (data) {
                $("#loadingPage").fadeOut();
                swal({
                    title: '',
                    text: data,

                },
 function (confirmed) {
     if (confirmed) {
         location = "/Contracts/ContractDetails?ContractID=" + contractID + "";
     }

 });

            },
            error: function (data) {
                $("#loadingPage").fadeOut();
            }
        });
    }
    return;
});

}

function StartWorkflow() {
    if (requiredValidator("ulStartWorkflow", true)) {
        if (contractItem.IsPublic == "Yes") {
            StartWorkFlowProcess();
        } else {
            $("#loadingPage").fadeIn();
            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/contractpermission?contractid=' + vContractID,
                type: 'GET',
                dataType: 'json',
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey, username: localStorage.UserName
                },
                "Content-Type": "application/json",
                cache: false,
                success: function (UserList) {
                    var PermittedUser = UserList.split(';');
                    $('#tblStage tr').each(function (i, row) {
                        var vRow = $(row).attr('id');
                        var vRowIndex = vRow.replace("trStage", "");
                        $('#ddlAssignTo' + vRowIndex + '_chosen').find('.chosen-choices li').find('span').each(function () {
                            PermittedUser.push($(this).text());
                        });
                    });
                    var ccsArr = [];
                    $($("#ddlWorkflowCC").val()).each(function (i, item) {
                        ccsArr.push(item);
                    });
                    var FilterArray = $.grep(ccsArr, function (nccsArr, iccsArr) {
                        return (PermittedUser.indexOf(nccsArr) == -1);
                    });
                    if (FilterArray.length > 0) {
                        var liuser = FilterArray.join(',');
                        if (liuser.lastIndexOf(",") > -1) {
                            liuser = liuser.substr(0, liuser.lastIndexOf(",")) + ' and ' + liuser.substr(liuser.lastIndexOf(",") + 1);
                        }
                        swal({
                            title: '',
                            //text: liuser + " are not a part of the contract, Are you sure add this user as <span style=\"font-weight:700\">Readonly Permission</span>'?",
                            text: "'<span style=\"font-weight:700\">" + liuser + "</span> do not have access to this contract, . Do you want to provide access?",
                            type: 'warning',
                            showCancelButton: true,
                            confirmButtonText: 'Yes',
                            cancelButtonText: 'No',
                            html: true
                        },
                        function (confirmed) {
                            if (confirmed) {
                                StartWorkFlowProcess();
                            } else {
                                $("#loadingPage").fadeOut();
                            }
                            return;
                        });
                    } else {
                        StartWorkFlowProcess();
                    }
                },
                error: function (UserList) {
                    $("#loadingPage").fadeOut();
                }
            });
        }
    }
}

function StartWorkFlowProcess() {
    var vAutoUpdateObjectStatus;
    vAutoUpdateObjectStatus = $("#chkAutoUpdateStatus").is(':checked') ? 'Yes' : 'No';
    var sendSummary = $("#chkSendSummaryDoc").is(':checked') ? 'Yes' : 'No';
    $("#loadingPage").fadeIn();
    var vWorkflowStage = [];
    $('#tblStage tr').each(function (i, row) {
        var vRow = $(row).attr('id');
        var vRowIndex = vRow.replace("trStage", "");
        var stage = $("#txtStage" + vRowIndex).val();
        var order = $("#ddlOrder" + vRowIndex).find('option:selected').text();
        var approvers = $("#ddlAssignTo" + vRowIndex).val();
        var sendTo = '';

        $('#ddlAssignTo' + vRowIndex + '_chosen').find('.chosen-choices li').find('span').each(function () {
            if (sendTo == '') {
                sendTo = $(this).text();
            }
            else {
                sendTo += "; " + $(this).text();
            }
        });
        vWorkflowStage.push({
            "StageID": i + 1,
            "StageTitle": stage,
            "Participants": sendTo,
            "Order": order
        });
    });
    //*Harshitha 
    var nicInstance = nicEditors.findEditor('txtComment');
    var vcommentText = CleanWordFormatFromHTML(nicInstance.getContent());
    var vNoteTextCount = vcommentText.replace(/>\/?[^>]+(>|$)/g, "");
    if (vNoteTextCount.length <= 26500) {
        //var vcommentText = nicInstance.getContent();
        vcommentText = $('<div/>').text(vcommentText).html();
        var ccsArr = $("#ddlWorkflowCC").val();
        var ccs = '';
        $(ccsArr).each(function (i, item) {
            if (ccs == '') {
                ccs = item;
            }
            else {
                ccs += "; " + item;
            }
        });
        var vObject = "Contracts";
        var vTaskRouting = $("#lblddlRule").text();
        if ($("#hdWorkflowType").val() == "Document Review") {
            vObject = "Documents";
        }
        if ($("#hdWorkflowType").val() == "Amendment Approval") {
            vObject = "Amendments";
        }

        if (workflowAdHoc == "on") {
            vTaskRouting = $("#ddlRule").find('option:selected').text();
        }
        if (vTaskRouting != "Default" && vTaskRouting != "Ad-hoc") {
            vTaskRouting = "Conditional";
        }

        //Approval Sheet Region

        var strIsApprovalSheetConfigured = "No";
        var strIsSummaryDisplayedInWorkflow = "No";
        var strIsSummaryTempInWorkflow = "No";
        var strSummaryTempDetails = "";
        var strSummaryAdditionalDocs = "";
        var strContractApprovalSheetName = "";
        if ($("#hdWorkflowType").val() == "Contract Approval") {
            if (IsApprovalSheetFeatureExits) {
                if (oRelatedApprovalSheets != "") {
                    if ($("#contractDetailsSummaryConfiguration").css('display') != 'none') {
                        if ($('input[type="radio"][name=IsApprovalSheetTaskDetails]:checked').val() == "No") {
                            strIsSummaryDisplayedInWorkflow = "No";
                            strContractApprovalSheetName = "";
                        }
                        else {
                            if ($("#ddlApprovalsSheets").val() != "0" && $("#ddlApprovalsSheets").val() != "Select") {
                                strIsSummaryDisplayedInWorkflow = "Yes";
                                strContractApprovalSheetName = $("#ddlApprovalsSheets").val();
                            }
                            else {
                                strIsSummaryDisplayedInWorkflow = "No";
                                strContractApprovalSheetName = "";
                            }
                        }

                        if ($('input[type="radio"][name=IsApprovalSheet]:checked').val() == "No") {
                            strIsSummaryTempInWorkflow = "No";
                            strSummaryTempDetails = "";
                        }
                        else {
                            if ($('#lblApprovalSheetTempdocuments').children().length > 0) {
                                strIsSummaryTempInWorkflow = "Yes";
                                strSummaryTempDetails = "<SummaryTempDetails>";
                                $('#lblApprovalSheetTempdocuments').find('div').each(function () {
                                    strSummaryTempDetails += '<Metadata>';
                                    strSummaryTempDetails += '<DocumentID>' + $(this).find("#DocumentID").text() + '</DocumentID>';
                                    strSummaryTempDetails += '<DocumentName>' + $(this).find("#DocumentName").text() + '</DocumentName>';
                                    strSummaryTempDetails += '<DocumentURL>' + decodeURI($(this).find("#DocumentURL").text()) + '</DocumentURL>';
                                    strSummaryTempDetails += '</Metadata>';
                                });
                                strSummaryTempDetails += "</SummaryTempDetails>";
                            }
                            else {
                                strIsSummaryTempInWorkflow = "No";
                                strSummaryTempDetails = "";
                            }
                        }
                        if ($('#lblApprovalSheetdocuments').children().length > 0) {
                            strSummaryAdditionalDocs = "<SummaryAdditionalDocs>";
                            $('#lblApprovalSheetdocuments').find('div').each(function () {
                                strSummaryAdditionalDocs += '<Metadata>';
                                strSummaryAdditionalDocs += '<DocumentID>' + $(this).find("#DocumentID").text() + '</DocumentID>';
                                strSummaryAdditionalDocs += '<DocumentName>' + $(this).find("#DocumentName").text() + '</DocumentName>';
                                strSummaryAdditionalDocs += '<DocumentURL>' + decodeURI($(this).find("#DocumentURL").text()) + '</DocumentURL>';
                                strSummaryAdditionalDocs += '</Metadata>';
                            });
                            strSummaryAdditionalDocs += "</SummaryAdditionalDocs>";
                        }
                        else {
                            strSummaryAdditionalDocs = "";
                        }

                        strIsApprovalSheetConfigured = "No";

                    }
                    else {
                        strIsApprovalSheetConfigured = "No";
                        strIsSummaryDisplayedInWorkflow = "No";
                        strIsSummaryTempInWorkflow = "No";
                        strContractApprovalSheetName = "";
                        strSummaryTempDetails = "";
                        strSummaryAdditionalDocs = "";
                    }
                }
                else {
                    strIsApprovalSheetConfigured = "No";
                    strIsSummaryDisplayedInWorkflow = "No";
                    strIsSummaryTempInWorkflow = "No";
                    strContractApprovalSheetName = "";
                    strSummaryTempDetails = "";
                    strSummaryAdditionalDocs = "";
                }
            }
        }
        else {
            strIsApprovalSheetConfigured = "No";
            strIsSummaryDisplayedInWorkflow = "No";
            strIsSummaryTempInWorkflow = "No";
            strContractApprovalSheetName = "";
            strSummaryTempDetails = "";
            strSummaryAdditionalDocs = "";
        }
        //Approval Sheet Region

        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Workflow',
            type: 'POST',
            "Content-Type": "application/json;charset=utf-8",
            headers: {
                'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
            },
            data: {
                "Object": vObject,
                "ObjectID": $("#hdWorkflowObjectID").val(),
                "ObjectTitle": $("#hdWorkflowObjectTitle").val(),
                "WorkflowTitle": $("#txtWorkflowTitle").val(),
                "WorkflowType": $("#hdWorkflowType").val(),
                "CCs": ccs,
                "Notes": vcommentText,
                "DurationPerTask": $("#txtDuration").val(),
                "Initiator": localStorage.UserName,
                "StopIfRejectedByAnyParticipant": "No",
                "StopIfItemModified": "No",
                "WorkflowStage": vWorkflowStage,
                "ContractArea": $("#lblContractArea").text(),
                "BusinessArea": $("#lblBusinessArea").text(),
                "BusinessAreaPath": $("#lblBusinessAreaPath").text(),
                "AutoUpdateStatus": vAutoUpdateObjectStatus,
                //manoj
                "SendSummary": sendSummary,
                //manoj
                "TaskRouting": vTaskRouting,
                "IsApprovalSheetConfigured": strIsApprovalSheetConfigured,
                "ContractApprovalSheetName": unescape(strContractApprovalSheetName),
                "IsSummaryDisplayedInWorkflow": strIsSummaryDisplayedInWorkflow,
                "IsSummaryTempInWorkflow": strIsSummaryTempInWorkflow,
                "SummaryTempDetails": strSummaryTempDetails,
                "SummaryAdditionalDocs": strSummaryAdditionalDocs
            },
            cache: false,
            success: function (status) {
                var vmsg = $("#hdWorkflowType").val() + " Workflow Started";
                $("#inprocessStartWorkflow").css('display', 'none');

                if ((vAutoUpdateObjectStatus == "Yes" || $("#hdIsPrimaryDoc").val() == "Yes") && contractItem.IsFinalized != "Yes") {
                    if (vObject == "Contracts") {
                        var vContractStatus = ["Ready for Signature", "Awaiting Signatures", "Signed", "Active", "Up for Renewal", "About to Expire", "Renewed", "Extended", "On Hold", "Replaced", "Expired", "Cancelled", "Terminated", "Archived"];
                        if ($.inArray(contractItem.Status, vContractStatus) !== -1)
                            vmsg = 'This Contract Record is moved to the Pipeline Contracts. Check "Pipeline" tab.';
                        contractItem.Status = "Awaiting Approval";
                        $("#lblApprovalWorkflow").text("In Progress");
                        $("#addActivityApproval").css('display', 'none');
                    }
                    else {
                        contractItem.Status = "Awaiting Review";
                    }
                    ContractTopActions();
                }
                if (vObject == "Contracts") {
                    $("#lblApprovalWorkflow").text("In Progress");
                }
                BindUpdatedContractDetails(vContractID);
                if (vObject == "Documents") {
                    //manoj
                    if (documentview == null || documentview == "" || documentview == 'folder') {
                        if ($('#showAll').text() != null && $('#showAll').text() != "" && typeof ($('#showAll').text()) != "undefined") {
                            var selectedfoldervalue = $('#showAll').find("a");
                            var textvalueselected = $(selectedfoldervalue)[$(selectedfoldervalue).length - 1].textContent;
                            var idvalueselected = $(selectedfoldervalue)[$(selectedfoldervalue).length - 1].id;
                            var parentdocumentdetails = {
                                id: idvalueselected, text: textvalueselected
                            };
                            showfolderdocuments(parentdocumentdetails);
                        }
                        else {
                            BindDocument(vContractID);
                        }
                    } else {
                        DisplayDocument(documentview);
                    }
                    //GetContractPendingAction(true, "BindPeoples");
                    $("#hdnFolderDocumentView").text('');
                    $("#hdnShowAllTextValue").html('');
                    PrvFolderselection = '';
                    //Bind primary and pined document based on new feature
                    if ($("#hdnnewdocumentfeature").text() == "Yes") {
                        CreateDocumentListPinView(vContractID);
                    }
                    //manoj
                }

                $("#dvWorkflow").dialog("close");//ui-dialog-buttonset
                //manoj
                $("#txtWorkflowTitle").prop('readonly', false);
                //manoj
                GetContractActivities(vContractID);
                $("#loadingPage").fadeOut();

                BindWorkflow();
            },
            error: function () {
                $("#loadingPage").fadeOut();
            }
        });
    }
    else {
        $("#loadingPage").fadeOut();
        swal("", "Note can not exceed 26500 characters");
    }
}

function SaveLabel() {
    var allowtosave = false;
    var RestricedCategory = [];
    //manoj
    if ($("#labelEditPopupaction").text() == "New") {
        if (arrLabelCollection.length > 0) {
            var CategoriesCollection = [];
            $.each(arrLabelCollection, function (arrLabel) {
                if (arrLabel != null) {
                    if ($.trim(arrLabelCollection[arrLabel].Category) != "") {
                        CategoriesCollection.push($.trim(arrLabelCollection[arrLabel].Category));
                    }
                }
            });
            var obj1 = {
            };
            //manoj
            var CategoriesList = [];
            $(CategoriesCollection).each(function (iCategories, itemCategories) {
                if (!(itemCategories in obj1)) {
                    if ($.trim(itemCategories) != "") {
                        CategoriesList.push($.trim(itemCategories));
                    }
                }
                obj1[itemCategories] = true;
            });
            $(CategoriesList).each(function (iCategoriesList, itemCategoriesList) {
                //manoj
                var FilterdCategory = $.grep(LabelsCategories, function (nCategory, iCategory) {
                    return (nCategory.LabelCategory == itemCategoriesList && nCategory.Restrict == "Yes");
                });
                if (FilterdCategory.length > 0) {
                    var repeatedcategories = $.grep(arrLabelCollection, function (nrepeated, irepeated) {
                        return (nrepeated.Category == itemCategoriesList);
                    });
                    if (repeatedcategories.length > 1) {
                        var repeatedautocategories = $.grep(arrLabelCollection, function (nautorepeated, iautorepeated) {
                            return (nautorepeated.Category == itemCategoriesList && nautorepeated.Auto == true);
                        });
                        var repeatednormalcategories = $.grep(arrLabelCollection, function (nnormalrepeated, inormalrepeated) {
                            return (nnormalrepeated.Category == itemCategoriesList && nnormalrepeated.Auto == false);
                        });
                        if (repeatedautocategories.length > 0 && repeatednormalcategories.length > 0) {
                            RestricedCategory.push(itemCategoriesList);
                        } else if (repeatednormalcategories.length > 1) {
                            RestricedCategory.push(itemCategoriesList);
                        }
                    }
                }
            });
            if (RestricedCategory.length == 0) {
                allowtosave = true;
            }
        } else {
            allowtosave = true;
        }
        //manoj
    } else {
        allowtosave = true;
    }
    //manoj
    if (allowtosave) {
        var vLabels = "";
        $(ContractLabels).each(function () {
            if (vLabels == "") {
                vLabels = this.toString();
            }
            else {
                vLabels += "; " + this.toString();
            }
        });
        var contractRecord = "Labels=" + vLabels;
        contractRecord += "&ModifiedBy=" + localStorage.UserName;
        $("#loadingPage").fadeIn();
        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/label?contractid=' + vContractID,
            type: 'PUT',
            headers: {
                'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
            },
            dataType: 'json',
            data:
                {
                    Labels: vLabels,
                    ModifiedBy: localStorage.UserName
                },
            cache: false,
            headers: {
                'eContracts-ApiKey': localStorage.APIKey
            },
            success: function (data) {
                $("#loadingPage").fadeOut();
                contractItem = data;
                BindContractLabels();
                $("#labelEditPopup").dialog("close");
            },
            error: function (data) {
            }
        });
    } else {
        var swalmessage = RestricedCategory.join(',');
        swalmessage = (swalmessage.trim().charAt(0) != ",") ? swalmessage.trim() : swalmessage.substr(1);
        swalmessage = swalmessage.trim();
        if (swalmessage.lastIndexOf(",") > -1) {
            swalmessage = swalmessage.substr(0, swalmessage.lastIndexOf(",")) + ' and ' + swalmessage.substr(swalmessage.lastIndexOf(",") + 1);
            $("#labelEditPopup").dialog("close");
            $("#loadingPage").fadeOut();
        }
        swal("", " '" + swalmessage.trim() + "' are restriced category.");
    }
}

function BindContractLabels() {

    $("#LabelsAdd").hide();
    $('#LabelEdit').hide();
    var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
    var vAccFeat = [];
    vAccFeat = $.grep(veContractFeatures, function (n, i) {
        return (n.RowKey == "18" && n.Status == "ON");
    });

    lstSelectedLabels = contractItem.Labels;
    var AutoLable = [];
    if (contractItem.AutoLabels != '' && contractItem.AutoLabels != null) {
        AutoLable = contractItem.AutoLabels.split(';');
    }
    if (contractItem.Labels != '') {
        var txtLabelSpans = "";
        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/label?labelNames=' + encodeURIComponent(contractItem.Labels),
            type: 'GET',
            dataType: 'json',
            cache: false,
            headers: {
                'eContracts-ApiKey': localStorage.APIKey
            },
            success: function (data) {
                $('#dvLabelList').empty();
                var datalenght = data.length;
                if (datalenght > 0) {
                    for (var i = 0; i < datalenght; i++) {
                        var item = data[i];
                        txtLabelSpans += '<span class="label margin-right-5" style="font-size:12px;background-color:#' + item.LabelColor.trim() + ' !important;">';
                        txtLabelSpans += '<small style="float: left;">' + item.LabelTitle + '</small>';
                        if (!($.inArray(item.LabelTitle, AutoLable) > -1 && vAccFeat.length > 0)) {
                            if ($("#hdnPermission").val() != 'View')
                                txtLabelSpans += '<img src="/Content/Images/close_white.png" class="Manage" onclick="javascript:RemoveSelectedLabel(this);" style="float: right; margin: 2px 0px 0px 3px;">';
                        }
                        txtLabelSpans += '</span>';
                    }
                    $('#dvLabelList').append(txtLabelSpans);
                    if ($("#hdnPermission").val() != 'View')
                        $('#LabelEdit').show();
                    $("#LabelsAdd").hide();
                }
                else {

                    $('#dvLabelList').empty();
                    var clickEdit = "";
                    if ($("#hdnPermission").val() != 'View')
                        $("#LabelsAdd").show();
                    $('#LabelEdit').hide();
                    $('#dvLabelList').append(clickEdit);
                }

            }, error: function (data) {
                $('#dvLabelList').empty();
                var clickEdit = "";
                if ($("#hdnPermission").val() != 'View')
                    $("#LabelsAdd").show();
                $('#LabelEdit').hide();
                $('#dvLabelList').append(clickEdit);
            }
        });
    } else {
        //var clickEdit = "";
        //if ($("#hdnPermission").val() != 'View')
        //    $("#LabelsAdd").show();
        //$('#LabelEdit').hide();
        //$('#dvLabelList').append(clickEdit);
        $('#dvLabelList').empty();

        if ($('#dvLabelList').children().length == 0) {
            if ($("#hdnPermission").val() != 'View')
                $("#LabelsAdd").show();
            $('#LabelEdit').hide();
            $('#dvLabelList').append("");
        }
    }
}

function RemoveSelectedLabel(obj) {
    var child = obj.parentNode;
    var lblText = child.firstChild.textContent;
    swal({
        title: '',
        text: "Are you sure you want to remove '<span style=\"font-weight:700\">" + lblText + "</span>'?",
        type: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes',
        cancelButtonText: 'No',
        html: true
    },
     function (confirmed) {
         if (confirmed) {
             child.parentNode.removeChild(child);
             ContractLabels = jQuery.grep(ContractLabels, function (value) {
                 return value != lblText;
             });
             $.ajax({
                 url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/label?contractid=' + getParameterByName('ContractID') + '&label=' + encodeURIComponent(lblText),
                 type: 'DELETE',
                 dataType: 'json',
                 headers: {
                     'eContracts-ApiKey': localStorage.APIKey, username: localStorage.UserName
                 },
                 "Content-Type": "application/json",
                 cache: false,
                 success: function (data) {
                     contractItem = data;
                 }
             });
             if ($('#dvLabelList').children().length == 0) {
                 if ($("#hdnPermission").val() != 'View')
                     $("#LabelsAdd").show();
                 $('#LabelEdit').hide();

                 $('#dvLabelList').append("");
             }
         }
         return;
     });

}

function SearchLabels(isnew) {
    searchLabelsNew("Search");
}

function bindLabelCategory(action) {
    $("#loadingPage").fadeIn();
    $("#selCategoryFilter").html('<option value="All">All Category</option>')
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/alllabelcategories',
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (contactsJsonPayload) {
            //manoj
            LabelsCategories = contactsJsonPayload;
            //manoj
            $(contactsJsonPayload).each(function (i, item) {
                $("#selCategoryFilter").append('<option value="' + escape(item.LabelCategory) + '">' + item.LabelCategory + '</option>');
            });
            searchLabelsNew(action);
        }, error: function (data) {
            searchLabelsNew(action);
        }
    });
}

//manoj
function searchLabelsNew(action) {
    if (action == "Search") {
        if ($.trim($("#txtSearchLabel").val()) != "") {
            $("#tblLabelPopup").html('<img src="../Content/Images/icon/loading.gif"> Searching...');
        } else {
            $("#tblLabelPopup").html('<img src="../Content/Images/icon/loading.gif">');
        }
    }
    //get all Labels
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/label',
        type: 'GET',
        dataType: 'json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (datalabel) {
            //manoj
            var data = $.grep(datalabel, function (ndata, idata) {
                return (ndata.LabelTitle != null && ndata.LabelTitle != "");
            });
            //manoj
            BindLabelTable(data, action);
        },
        error: function (data) {
            var labeldata = [];
            BindLabelTable(labeldata, action);
        }
    });
    //get all Labels
}

function BindLabelTable(labeldata, action) {
    var actionDetails = (action == "Search") ? $.trim($("#labelEditPopupaction").text()) : action;
    //manoj
    var Labels = [];
    var AutoLabels = [];
    var IsChecked = "";
    var IsDisabled = "";
    var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
    var vAccFeat = [];
    vAccFeat = $.grep(veContractFeatures, function (n, i) {
        return (n.RowKey == "18" && n.Status == "ON");
    });
    if (contractItem.Labels != null)
        Labels = $.map(contractItem.Labels.split(";"), $.trim);
    if (contractItem.AutoLabels != null)
        AutoLabels = $.map(contractItem.AutoLabels.split(";"), $.trim);
    var AllLabelCollection = Labels;
    $(AutoLabels).each(function (iAutoLabels, itemAutoLabels) {
        if ($.trim(itemAutoLabels) != "") {
            AllLabelCollection.push($.trim(itemAutoLabels));
        }
    });
    var obj1 = {
    };
    //manoj
    var FilterLabelCollection = [];
    $(AllLabelCollection).each(function (iAllLabel, itemAllLabel) {
        if (!(itemAllLabel in obj1)) {
            if ($.trim(itemAllLabel) != "") {
                FilterLabelCollection.push($.trim(itemAllLabel));
            }
        }
        obj1[itemAllLabel] = true;
    });
    $(FilterLabelCollection).each(function (iFilterLabel, itemFilterLabel) {
        var FilteredLabelsDetails = $.grep(labeldata, function (nFilteredLabel, iFilteredLabel) {
            return (nFilteredLabel.LabelTitle == itemFilterLabel);
        });
        if (FilteredLabelsDetails.length > 0) {
            if (AutoLabels.indexOf(FilteredLabelsDetails[0].LabelTitle) > -1 && vAccFeat.length > 0) {
                var arrLabelAvailable = $.grep(arrLabelCollection, function (nAvailable, iAvailable) {
                    return (nAvailable.Label == FilteredLabelsDetails[0].LabelTitle && nAvailable.Category == FilteredLabelsDetails[0].LabelCategory);
                });
                if (arrLabelAvailable.length == 0) {
                    var LabelDetails = {
                        Category: FilteredLabelsDetails[0].LabelCategory, Label: FilteredLabelsDetails[0].LabelTitle, Auto: true
                    };
                    arrLabelCollection.push(LabelDetails);
                }
            } else if (Labels.indexOf(FilteredLabelsDetails[0].LabelTitle) > -1 && (action == "Add" || action == "New")) {
                var arrLabelAvailable = $.grep(arrLabelCollection, function (nAvailable, iAvailable) {
                    return (nAvailable.Label == FilteredLabelsDetails[0].LabelTitle && nAvailable.Category == FilteredLabelsDetails[0].LabelCategory);
                });
                if (arrLabelAvailable.length == 0) {
                    var LabelDetails = {
                        Category: FilteredLabelsDetails[0].LabelCategory, Label: FilteredLabelsDetails[0].LabelTitle, Auto: false
                    };
                    arrLabelCollection.push(LabelDetails);
                }
            } else if (action != "Search") {
                var arrLabelAvailable = $.grep(arrLabelCollection, function (nAvailable, iAvailable) {
                    return (nAvailable.Label == FilteredLabelsDetails[0].LabelTitle && nAvailable.Category == FilteredLabelsDetails[0].LabelCategory);
                });
                if (arrLabelAvailable.length == 0) {
                    var LabelDetails = {
                        Category: FilteredLabelsDetails[0].LabelCategory, Label: FilteredLabelsDetails[0].LabelTitle, Auto: false
                    };
                    arrLabelCollection.push(LabelDetails);
                }
            }
        }
    });

    var FilteredLabels = [];
    if ($("#txtSearchLabel").val() != "") {
        FilteredLabels = $.grep(labeldata, function (nlabel, ilabel) {
            return (nlabel.LabelTitle.toLowerCase().indexOf($("#txtSearchLabel").val().toLowerCase()) > -1 || nlabel.LabelCategory.toLowerCase().indexOf($("#txtSearchLabel").val().toLowerCase()) > -1);
        });
    } else {
        FilteredLabels = labeldata;
    }
    if ($("#selCategoryFilter").val() != "All") {
        FilteredLabels = $.grep(FilteredLabels, function (nlabel, ilabel) {
            return (nlabel.LabelCategory == unescape($("#selCategoryFilter").val()));
        });
    }

    var lblRow = "";
    var relatedTag = [];
    $.each(FilteredLabels, function (key, row) {
        if (row.LabelTitle != "" && row.LabelTitle != null) {
            IsChecked = "";
            IsDisabled = "";
            if (Labels.length != 0 && $.inArray(row.LabelTitle, Labels) > -1) {

                if ($.inArray(row.LabelTitle, ContractLabels) == -1 && (action == "Add" || action == "New")) {
                    ContractLabels.push(row.LabelTitle);
                    IsChecked = "checked";
                }
                if (AutoLabels.length != 0 && $.inArray(row.LabelTitle, AutoLabels) > -1 && vAccFeat.length > 0) {
                    IsChecked = "checked";
                    IsDisabled = "disabled";
                }
            }
            if (ContractLabels.length != 0 && $.inArray(row.LabelTitle, ContractLabels) > -1) {
                IsChecked = "checked";
            }
            lblRow += "<tr><td ><input type='checkbox' " + IsChecked + "  id='chkLabel" + row.RowKey + "' name='chkLabel' value='" + row.LabelTitle + "' onchange='ChangeLableCheck(this)'";
            if (IsDisabled != "") {
                lblRow += "class='autodisabledlabel " + row.LabelCategory + "'";
                lblRow += "disabled='disabled'";
                lblRow += "data-category='" + row.LabelCategory + "'";
            } else {
                lblRow += "class='" + row.LabelCategory + "'";
                lblRow += "data-category='" + row.LabelCategory + "'";
            }
            lblRow += "'><label class='css-label margin-right8 lblSrchLabel'>" + row.LabelTitle + "</label></td><td><label class='css-label margin-right8 lblSrchLabel'>" + row.LabelCategory + "</label></td></tr>";
            relatedTag.push(row.LabelTitle);
        }
    });
    $("#txtSearchLabel").autocomplete({
        source: relatedTag,
        minLength: 1,
        focus: function (event, ui) {
            return false;
        },
        select: function (evn, uidetails) {
            $("#txtSearchLabel").val(uidetails.item.label);
            SearchLabels();
        }
    });
    $("#tblLabelPopup").html(lblRow);

    $('#compact-paginationLabel').pagination({
        items: $("#tblLabelPopup tr").length,
        itemsOnPage: 10,
        type: 'tbody',
        row: 'tr',
        typeID: 'tblLabelPopup',
        cssStyle: 'compact-theme'
    });

    if (action == 'New') {


        disablelabelbysearch();
        //manoj
        $("#loadingPage").fadeOut();
        $("#labelEditPopupaction").text("New");
        $("#labelEditPopup").dialog("option", "title", "Edit Label");
        $("#labelEditPopup").dialog("open");
        $("#labelEditPopup").height("auto");
    } else if (action == 'Add') {
        $("#loadingPage").fadeOut();
        $("#labelEditPopupaction").text("Add");
        $("#labelEditPopup").dialog("option", "title", "Add Label");
        $("#labelEditPopup").dialog("open");
        $("#labelEditPopup").height("auto");
    } else if (action == 'Search') {
        disablelabelbysearch();
    }
}
//manoj

//Transactions Methods


$('#addTransactionpopup').click(function () {

    $("#lblTransactionCTitle").text($("#lblContractTitle").text());

    $("#txtTransProductName").val('');

    $("#txtTransItems").val('');
    $("#txtTransAmount").val('');
    $("#dtTransDate").val('');

    $("#ddlTransactionStatus").val("0");
    $("#ddlTransactionCompliance").val("0");


    if ($("#hdnBaseCurrency").val() == "")
        $("#ddlTransactionCurrency").val("0");
    else
        $("#ddlTransactionCurrency").val($("#hdnBaseCurrency").val());


    $('#transactionAddPopup').dialog('open');
});


$('#viewTransProductDetails').click(function () {

    $('#loadProduct').html('<img src="../Content/Images/icon/loading.gif"> Working on it...');
    if ($('#tbodyExistingProducts tr').length <= 0) {
        getProducts();

    } else {
        clearobligationproducts();
        $('#loadProduct').empty();
        $("#viewProductsPopup").dialog("option", "title", "Product Picker");
        $("#viewProductsPopup").dialog("open");
    }

});

function SaveMulProducts() {
    $("#loadingPage").fadeIn();

    $('input:checkbox[name="ExtProductsMul"]:checked').each(function () {

        var vProduct = this.value;
        var vProductID = this.id;
        var Units = "";
        var Price = "";
        var Currency = "";
        if ($(this).parent().parent().find('#ProductUnits').text() != null && $(this).parent().parent().find('#ProductUnits').text() != "" && $(this).parent().parent().find('#ProductUnits').text() != "null") {
            Units = $(this).parent().parent().find('#ProductUnits').text();
        }

        if ($(this).parent().parent().find('#ProductPrice').text() != null && $(this).parent().parent().find('#ProductPrice').text() != "" && $(this).parent().parent().find('#ProductPrice').text() != "null") {
            Price = $(this).parent().parent().find('#ProductPrice').text();
        }

        if ($(this).parent().parent().find('#ProductCurrency').text() != null && $(this).parent().parent().find('#ProductCurrency').text() != "" && $(this).parent().parent().find('#ProductCurrency').text() != "null") {
            Currency = $(this).parent().parent().find('#ProductCurrency').text();
        }
        else {
            Currency = $("#hdnBaseCurrency").val();
        }

        var catalogForm = "CatalogName=" + vProduct;

        catalogForm += "&CommitmentID=" + "";
        catalogForm += "&Units=" + Units;
        catalogForm += "&TotalPriceValue=" + "";
        catalogForm += "&AccountID=" + localStorage.AccountID;
        catalogForm += "&CreatedBy=" + localStorage.UserName;
        catalogForm += "&ModifiedBy=" + localStorage.UserName;
        catalogForm += "&UnitPriceValue=" + Price;
        catalogForm += "&UnitPriceCurrency=" + Currency;
        catalogForm += "&ValidUpto=" + "";

        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/obligations/catalogs?contractid=' + vContractID,
            type: 'POST',
            dataType: 'json',
            headers: {
                'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
            },
            data: catalogForm,
            cache: false,
            success: function (data) {

            },
            error: function (data) {
                $("#loadingPage").fadeOut();
            }
        });
    });

    getCatalogsbycontract(vContractID);
    $("#loadingPage").fadeOut();
}

$("#ddlRelationshipType").change(function () {
    $("#ddlRelationshipTypeParent").empty();
    var jsLang = this.value;
    var rowK = jQuery.grep(RelationshipTypes, function (a) {
        return a[0] === jsLang;
    });
    if (rowK != null && typeof (rowK) != "undefined" && rowK.length != 0) {
        var Relationship = rowK[0];
        $("#ddlRelationshipTypeParent").append("<option value='" + Relationship[1] + "'>" + Relationship[1] + "</option>");
        $.each(Relationship[2], function (index, value) {
            var optRel2 = value.toString();
            $("#ddlRelationshipTypeParent").append("<option value='" + optRel2 + "'>" + optRel2 + "</option>");
        })
        //if ($(Relationship[2]).length == 0) {
        //    var optRel2 = Relationship[1].toString();
        //    $("#ddlRelationshipTypeParent").append("<option value='" + optRel2 + "'>" + optRel2 + "</option>");
        //}
    }
    else {
        switch (jsLang) {
            case 'Master Agreement':
                $("#ddlRelationshipTypeParent").append("<option value='Master Agreement'>Master Agreement</option>");
                $("#ddlRelationshipTypeParent").append("<option value='Sub-Agreement'>Sub-Agreement</option>");
                $("#ddlRelationshipTypeParent").append("<option value='SOW'>SOW</option>");
                break;
            case 'Prime Contractor Agreement':
                $("#ddlRelationshipTypeParent").append("<option value='Prime Contractor Agreement'>Prime Contractor Agreement</option>");
                $("#ddlRelationshipTypeParent").append("<option value='Sub Contractor Agreement'>Sub Contractor Agreement</option>");
                break;
            case 'Blanket Agreement':
                $("#ddlRelationshipTypeParent").append("<option value='Blanket Agreement'>Blanket Agreement</option>");
                $("#ddlRelationshipTypeParent").append("<option value='Order'>Order</option>");
                $("#ddlRelationshipTypeParent").append("<option value='Invoice'>Invoice</option>");
                break;
            case 'Original':
                $("#ddlRelationshipTypeParent").append("<option value='Original'>Original</option>");
                $("#ddlRelationshipTypeParent").append("<option value='Duplicate'>Duplicate</option>");
                $("#ddlRelationshipTypeParent").append("<option value='Copy'>Copy</option>");
                break;
            case 'Past Contract':
                $("#ddlRelationshipTypeParent").append("<option value='Past Contract'>Past Contract</option>");
                $("#ddlRelationshipTypeParent").append("<option value='Renegotiated Contract'>Renegotiated Contract</option>");
                break;
            case 'Primary Contract':
                $("#ddlRelationshipTypeParent").append("<option value='Primary Contract'>Primary Contract</option>");
                $("#ddlRelationshipTypeParent").append("<option value='Amendment'>Amendment</option>");
                $("#ddlRelationshipTypeParent").append("<option value='Modification'>Modification</option>");
                break;
            case 'Other':
                $("#ddlRelationshipTypeParent").append("<option value='Other'>Other</option>");
                break;
        }
    }

    $('input:checkbox[name="RelatedContract"]:checked').each(function () {
        $(this).parent().parent().children(".ddl").empty();
        var vOptions = "<select class='f_inpt width90' onchange='showallspans(this)'>";
        var jsLang = $("#ddlRelationshipTypeParent option:selected").val();
        RelatedContractRelationShipTypeparent = jsLang;
        var jsLangType = $("#ddlRelationshipType option:selected").val();
        var rela1 = jQuery.grep(RelationshipTypes, function (a) {
            return (a[1] === jsLang && a[0] === jsLangType);
        });
        var rela2 = jQuery.grep(RelationshipTypes, function (a) {
            return (a[2].indexOf(jsLang) > -1 && a[0] === jsLangType);
        });
        if (rela1 != null && typeof (rela1) != "undefined" && rela1.length != 0) {
            var Relationship = rela1[0];
            $.each(Relationship[2], function (index, value) {
                var optRel2 = value.toString();
                vOptions += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
            });
            //$(Relationship[2]).each(function () {
            //    var optRel2 = value.toString();
            //    vOptions += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
            //})
            if ($(Relationship[2]).length == 0) {
                var optRel2 = Relationship[1].toString();
                vOptions += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
            }
        }
        else if (rela2 != null && typeof (rela2) != "undefined" && rela2.length != 0) {
            var Relationship = rela2[0];
            vOptions += "<option value='" + Relationship[1] + "'>" + Relationship[1] + "</option>";
        }
        else {
            switch (jsLang) {
                case 'Master Agreement':
                    vOptions += '<option value="Sub-Agreement">Sub-Agreement</option>';
                    vOptions += '<option value="SOW">SOW</option>';
                    break;
                case 'Sub-Agreement':
                case 'SOW':
                    vOptions += '<option value="Master Agreement">Master Agreement</option>';
                    break;
                case 'Prime Contractor Agreement':
                    vOptions += '<option value="Sub Contractor Agreement">Sub Contractor Agreement</option>';
                    break;
                case 'Sub Contractor Agreement':
                    vOptions += '<option value="Prime Contractor Agreement">Prime Contractor Agreement</option>';
                    break;
                case 'Blanket Agreement':
                    vOptions += '<option value="Order">Order</option>';
                    vOptions += '<option value="Invoice">Invoice</option>';
                    break;
                case 'Order':
                case 'Invoice':
                    vOptions += '<option value="Blanket Agreement">Blanket Agreement</option>';
                    break;
                case 'Original':
                    vOptions += '<option value="Duplicate">Duplicate</option>';
                    vOptions += '<option value="Copy">Copy</option>';
                    break;
                case 'Duplicate':
                case 'Copy':
                    vOptions += '<option value="Original">Original</option>';
                    break;
                case 'Past Contract':
                    vOptions += '<option value="Renegotiated Contract">Renegotiated Contract</option>';
                    break;
                case 'Renegotiated Contract':
                    vOptions += '<option value="Past Contract">Past Contract</option>';
                    break;
                case 'Primary Contract':
                    vOptions += '<option value="Amendment">Amendment</option>';
                    vOptions += '<option value="Modification">Modification</option>';
                    break;
                case 'Amendment':
                case 'Modification':
                    vOptions += '<option value="Primary Contract">Primary Contract</option>';
                    break;
                case 'Other':
                    vOptions += '<option value="Other">Other</option>';
                    break;
            }
        }

        vOptions += '</select>';
        $(this).parent().parent().children(".ddl").append(vOptions);
    });
    showallspans("");
    showallspansNew();
});

$("#ddlRelationshipTypeParent").change(function () {
    $('input:checkbox[name="RelatedContract"]:checked').each(function () {
        $(this).parent().parent().children(".ddl").empty();
        var vOptions = "<select class='f_inpt width90' onchange='showallspans(this)'>";
        var jsLang = $("#ddlRelationshipTypeParent option:selected").val();
        RelatedContractRelationShipTypeparent = jsLang;
        var jsLangType = $("#ddlRelationshipType option:selected").val();
        var rela1 = jQuery.grep(RelationshipTypes, function (a) {
            return (a[1] === jsLang && a[0] === jsLangType);
        });
        var rela2 = jQuery.grep(RelationshipTypes, function (a) {
            return (a[2].indexOf(jsLang) > -1 && a[0] === jsLangType);
        });
        if (rela1 != null && typeof (rela1) != "undefined" && rela1.length != 0) {
            var Relationship = rela1[0];
            $.each(Relationship[2], function (index, value) {
                var optRel2 = value.toString();
                vOptions += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
            });
            //$.each(Relationship[2], function (index, value) {
            //    var optRel2 = value.toString();
            //    vOptions += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
            //})
            if ($(Relationship[2]).length == 0) {
                var optRel2 = Relationship[1].toString();
                vOptions += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
            }
        }
        else if (rela2 != null && typeof (rela2) != "undefined" && rela2.length != 0) {
            var Relationship = rela2[0];
            vOptions += "<option value='" + Relationship[1] + "'>" + Relationship[1] + "</option>";
        }
        else {
            switch (jsLang) {
                case 'Master Agreement':
                    vOptions += '<option value="Sub-Agreement">Sub-Agreement</option>';
                    vOptions += '<option value="SOW">SOW</option>';
                    break;
                case 'Sub-Agreement':
                case 'SOW':
                    vOptions += '<option value="Master Agreement">Master Agreement</option>';
                    break;
                case 'Prime Contractor Agreement':
                    vOptions += '<option value="Sub Contractor Agreement">Sub Contractor Agreement</option>';
                    break;
                case 'Sub Contractor Agreement':
                    vOptions += '<option value="Prime Contractor Agreement">Prime Contractor Agreement</option>';
                    break;
                case 'Blanket Agreement':
                    vOptions += '<option value="Order">Order</option>';
                    vOptions += '<option value="Invoice">Invoice</option>';
                    break;
                case 'Order':
                case 'Invoice':
                    vOptions += '<option value="Blanket Agreement">Blanket Agreement</option>';
                    break;
                case 'Original':
                    vOptions += '<option value="Duplicate">Duplicate</option>';
                    vOptions += '<option value="Copy">Copy</option>';
                    break;
                case 'Duplicate':
                case 'Copy':
                    vOptions += '<option value="Original">Original</option>';
                    break;
                case 'Past Contract':
                    vOptions += '<option value="Renegotiated Contract">Renegotiated Contract</option>';
                    break;
                case 'Renegotiated Contract':
                    vOptions += '<option value="Past Contract">Past Contract</option>';
                    break;
                case 'Primary Contract':
                    vOptions += '<option value="Amendment">Amendment</option>';
                    vOptions += '<option value="Modification">Modification</option>';
                    break;
                case 'Amendment':
                case 'Modification':
                    vOptions += '<option value="Primary Contract">Primary Contract</option>';
                    break;
                case 'Other':
                    vOptions += '<option value="Other">Other</option>';
                    break;
            }
        }

        vOptions += '</select>';
        $(this).parent().parent().children(".ddl").append(vOptions);
    });
    showallspans("");
    showallspansNew();

});

function liRemoveRelationship(obj) {
    lblcontracttitle = $("#lblContractTitle").text();
    // alert(lblcontracttitle)
    var child = obj.parentNode;
    var relatedContractTitle = child.textContent;
    var relatedContractidtodelete = child.id;
    var selectedcontract = $.grep(OlRelatedContracts, function (n) {
        return n.RelatedContractID == relatedContractidtodelete
    })
    var relationShipType = "";
    if (selectedcontract.length > 0)
        relationShipType = selectedcontract[0].RelationshipType;

    swal({
        title: '',
        text: "Do you wish to remove the relationship between the <span style=\"font-weight:700\">'" + lblcontracttitle + "(" + relationShipType + ")" + "' and '" + relatedContractTitle + "' </span>?",
        type: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes',
        cancelButtonText: 'No',
        html: true
    },
     function (confirmed) {
         if (confirmed) {

             if (!addbuttonclick) {
                 child.parentNode.removeChild(child);
                 var relatedContractID = child.id;
                 $('#loadContract').html('<img src="../Content/Images/icon/loading.gif"> Working on it...');
                 $("#loadingPage").fadeIn();
                 $('#tblPopupContracts').empty();
                 $("#txtSearchBoxContract").val("");
                 $.ajax({
                     url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName('ContractID') + '/relatedcontracts?relatedcontractid=' + relatedContractID,
                     type: 'DELETE',
                     dataType: 'json',
                     headers: {
                         'eContracts-ApiKey': localStorage.APIKey, username: localStorage.UserName
                     },
                     "Content-Type": "application/json",
                     cache: false,
                     success: function (data) {
                         BindRelatedContracts();
                         var vURL = vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/getrelatedcontracts?stage=&searchkeyword=&customquery=&sortbyfield=ContractTitle&orderby=ASC';
                         if ($('#tblPopupContracts tr').length <= 0) {
                             relatedContractsTag = [];
                             $("#txtSearchBoxContract").val("");
                             $.ajax({
                                 url: vURL,
                                 type: 'GET',
                                 dataType: 'json',
                                 "Content-Type": "application/json",
                                 headers: {
                                     'eContracts-ApiKey': localStorage.APIKey, BusinessAreaLocation: $("#lblBusinessAreaPath").text(), UserID: localStorage.UserID
                                 },
                                 cache: false,
                                 success: function (data) {
                                     $('#loadContract').empty();
                                     $("#hdnRelatedContracts").append(";" + getParameterByName("ContractID"))
                                     $(data).each(function (i, item) {
                                         if ($("#hdnRelatedContracts").text().indexOf(item.RowKey) > -1) {
                                         }
                                         else {
                                             if (item.RowKey != getParameterByName("ContractID")) {
                                                 var article = '<tr><td class="width65">';
                                                 if (arrRelatedcontractRowkey.indexOf(item.RowKey) > -1) {
                                                     article += '<input id="' + item.RowKey + '" type="checkbox" name="RelatedContract" checked onchange="javascript:collectrelatedcontractrowkey(this);" class="css1-checkbox" value="' + item.ContractTitle + '" />';
                                                     article += '<label for="' + item.RowKey + '" class="css1-label"><a href="/Contracts/ContractDetails?ContractID=' + item.RowKey + '" target="_blank">' + item.ContractTitle + '</a></label>';    //ENH487 Customer inhanc
                                                     article += '</td>';
                                                     article += '<td><label class="">' + item.ContractType + '</label></td>'
                                                     article += '<td><label class="">'
                                                     if (item.Counterparty != null && item.Counterparty != "") {
                                                         article += item.Counterparty
                                                     } else {
                                                         article += "-"
                                                     }
                                                     article += '</label></td><td><label class="" style="word-break: break-all;">'
                                                     if (item.ContractNumber != null && item.ContractNumber != "") {
                                                         article += item.ContractNumber
                                                     } else {
                                                         article += "-"
                                                     }
                                                     article += '</label></td><td><label class="">' + item.Status + '</label></td>'
                                                     article += '<td class="ddl width34">';
                                                     article += "<select class='f_inpt width90' onchange='showallspans(this)'>";
                                                     var jsLangselected = RelatedContractRelationShipTypeparent;
                                                     var jsLangType = $("#ddlRelationshipType option:selected").val();
                                                     var rela1 = jQuery.grep(RelationshipTypes, function (a) {
                                                         return (a[1] === jsLangselected && a[0] === jsLangType);
                                                     });
                                                     var rela2 = jQuery.grep(RelationshipTypes, function (a) {
                                                         return (a[2].indexOf(jsLangselected) > -1 && a[0] === jsLangType);
                                                     });
                                                     if (rela1 != null && typeof (rela1) != "undefined" && rela1.length != 0) {
                                                         var Relationship = rela1[0];
                                                         $.each(Relationship[2], function (index, value) {
                                                             var optRel2 = value.toString();
                                                             article += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                                                         });
                                                         //$(Relationship[2]).each(function () {
                                                         //    var optRel2 = value.toString();
                                                         //    article += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                                                         //})
                                                         if ($(Relationship[2]).length == 0) {
                                                             var optRel2 = Relationship[1].toString();
                                                             article += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                                                         }
                                                     }
                                                     else if (rela2 != null && typeof (rela2) != "undefined" && rela2.length != 0) {
                                                         var Relationship = rela2[0];
                                                         article += "<option value='" + Relationship[1] + "'>" + Relationship[1] + "</option>";
                                                     }
                                                     else {
                                                         switch (jsLangselected) {
                                                             case 'Master Agreement':
                                                                 article += '<option value="Sub-Agreement">Sub-Agreement</option>';
                                                                 article += '<option value="SOW">SOW</option>';
                                                                 break;
                                                             case 'Sub-Agreement':
                                                             case 'SOW':
                                                                 article += '<option value="Master Agreement">Master Agreement</option>';
                                                                 break;
                                                             case 'Prime Contractor Agreement':
                                                                 article += '<option value="Sub Contractor Agreement">Sub Contractor Agreement</option>';
                                                                 break;
                                                             case 'Sub Contractor Agreement':
                                                                 article += '<option value="Prime Contractor Agreement">Prime Contractor Agreement</option>';
                                                                 break;
                                                             case 'Blanket Agreement':
                                                                 article += '<option value="Order">Order</option>';
                                                                 article += '<option value="Invoice">Invoice</option>';
                                                                 break;
                                                             case 'Order':
                                                             case 'Invoice':
                                                                 article += '<option value="Blanket Agreement">Blanket Agreement</option>';
                                                                 break;
                                                             case 'Original':
                                                                 article += '<option value="Duplicate">Duplicate</option>';
                                                                 article += '<option value="Copy">Copy</option>';
                                                                 break;
                                                             case 'Duplicate':
                                                             case 'Copy':
                                                                 article += '<option value="Original">Original</option>';
                                                                 break;
                                                             case 'Past Contract':
                                                                 article += '<option value="Renegotiated Contract">Renegotiated Contract</option>';
                                                                 break;
                                                             case 'Renegotiated Contract':
                                                                 article += '<option value="Past Contract">Past Contract</option>';
                                                                 break;
                                                             case 'Primary Contract':
                                                                 article += '<option value="Amendment">Amendment</option>';
                                                                 article += '<option value="Modification">Modification</option>';
                                                                 break;
                                                             case 'Amendment':
                                                             case 'Modification':
                                                                 article += '<option value="Primary Contract">Primary Contract</option>';
                                                                 break;
                                                             case 'Other':
                                                                 article += '<option value="Other">Other</option>';
                                                                 break;
                                                         }
                                                     }
                                                     article += '</select></td></tr>';
                                                     $("#tblPopupContracts").append(article);

                                                 }
                                                 else {
                                                     article += '<input id="' + item.RowKey + '" type="checkbox" name="RelatedContract" onchange="javascript:collectrelatedcontractrowkey(this);" class="css1-checkbox" value="' + item.ContractTitle + '" />';
                                                     article += '<label for="' + item.RowKey + '" class="css1-label"><a href="/Contracts/ContractDetails?ContractID=' + item.RowKey + '" target="_blank">' + item.ContractTitle + '</a></label>';        //ENH487 Customer inhanc
                                                     article += '</td>';
                                                     article += '<td><label class="">' + item.ContractType + '</label></td>'
                                                     article += '<td><label class="">'
                                                     if (item.Counterparty != null && item.Counterparty != "") {
                                                         article += item.Counterparty
                                                     } else {
                                                         article += "-"
                                                     }
                                                     article += '</label></td><td><label class="" style="word-break: break-all;">'
                                                     if (item.ContractNumber != null && item.ContractNumber != "") {
                                                         article += item.ContractNumber
                                                     } else {
                                                         article += "-"
                                                     }
                                                     article += '</label></td><td><label class="">' + item.Status + '</label></td>'
                                                     article += '<td class="ddl"></td></tr>'
                                                     article += '</tr>'
                                                     $("#tblPopupContracts").append(article);
                                                 }

                                                 relatedContractsTag.push(item.ContractTitle.trim());
                                             }
                                         }
                                         $("#" + item.RowKey).click(function () {
                                             if (this.checked) {
                                                 if ($(this).parent().parent().children(".ddl").find('option').length == 0) {
                                                     var vOptions = "<select class='f_inpt width90' onchange='showallspans(this)'>";
                                                     var jsLang = $("#ddlRelationshipTypeParent option:selected").val();
                                                     var jsLangType = $("#ddlRelationshipType option:selected").val();
                                                     var rela1 = jQuery.grep(RelationshipTypes, function (a) {
                                                         return (a[1] === jsLang && a[0] === jsLangType);
                                                     });
                                                     var rela2 = jQuery.grep(RelationshipTypes, function (a) {
                                                         return (a[2].indexOf(jsLang) > -1 && a[0] === jsLangType);
                                                     });
                                                     if (rela1 != null && typeof (rela1) != "undefined" && rela1.length != 0) {
                                                         var Relationship = rela1[0];
                                                         $.each(Relationship[2], function (index, value) {
                                                             var optRel2 = value.toString();
                                                             vOptions += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                                                         })
                                                         if ($(Relationship[2]).length == 0) {
                                                             var optRel2 = Relationship[1].toString();
                                                             vOptions += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                                                         }
                                                     }
                                                     else if (rela2 != null && typeof (rela2) != "undefined" && rela2.length != 0) {
                                                         var Relationship = rela2[0];
                                                         vOptions += "<option value='" + Relationship[1] + "'>" + Relationship[1] + "</option>";
                                                     }
                                                     else {
                                                         switch (jsLang) {
                                                             case 'Master Agreement':
                                                                 vOptions += '<option value="Sub-Agreement">Sub-Agreement</option>';
                                                                 vOptions += '<option value="SOW">SOW</option>';
                                                                 break;
                                                             case 'Sub-Agreement':
                                                             case 'SOW':
                                                                 vOptions += '<option value="Master Agreement">Master Agreement</option>';
                                                                 break;
                                                             case 'Prime Contractor Agreement':
                                                                 vOptions += '<option value="Sub Contractor Agreement">Sub Contractor Agreement</option>';
                                                                 break;
                                                             case 'Sub Contractor Agreement':
                                                                 vOptions += '<option value="Prime Contractor Agreement">Prime Contractor Agreement</option>';
                                                                 break;
                                                             case 'Blanket Agreement':
                                                                 vOptions += '<option value="Order">Order</option>';
                                                                 vOptions += '<option value="Invoice">Invoice</option>';
                                                                 break;
                                                             case 'Order':
                                                             case 'Invoice':
                                                                 vOptions += '<option value="Blanket Agreement">Blanket Agreement</option>';
                                                                 break;
                                                             case 'Original':
                                                                 vOptions += '<option value="Duplicate">Duplicate</option>';
                                                                 vOptions += '<option value="Copy">Copy</option>';
                                                                 break;
                                                             case 'Duplicate':
                                                             case 'Copy':
                                                                 vOptions += '<option value="Original">Original</option>';
                                                                 break;
                                                             case 'Past Contract':
                                                                 vOptions += '<option value="Renegotiated Contract">Renegotiated Contract</option>';
                                                                 break;
                                                             case 'Renegotiated Contract':
                                                                 vOptions += '<option value="Past Contract">Past Contract</option>';
                                                                 break;
                                                             case 'Primary Contract':
                                                                 vOptions += '<option value="Amendment">Amendment</option>';
                                                                 vOptions += '<option value="Modification">Modification</option>';
                                                                 break;
                                                             case 'Amendment':
                                                             case 'Modification':
                                                                 vOptions += '<option value="Primary Contract">Primary Contract</option>';
                                                                 break;
                                                             case 'Other':
                                                                 vOptions += '<option value="Other">Other</option>';
                                                                 break;
                                                         }
                                                     }
                                                     vOptions += '</select>';
                                                     $(this).parent().parent().children(".ddl").append(vOptions);
                                                 }
                                             } else {

                                                 $(this).parent().parent().children(".ddl").empty();
                                             }

                                             showallspans("");
                                             showallspansNew();

                                         });
                                     });
                                     $("#loadingPage").fadeOut();
                                     collectrelatedcontractrowkey("");
                                     var vCount = $("#tblPopupContracts tr").length;
                                     if (vCount != 0) {
                                         $("#tblPopupContracts tr td").attr('style', 'vertical-align: top');
                                         $('#compact-paginationRelatedContracts').css('display', '');
                                         $('#compact-paginationRelatedContracts').pagination({
                                             items: vCount,
                                             itemsOnPage: 10,
                                             type: 'tbody',
                                             typeID: 'tblPopupContracts',
                                             row: 'tr',
                                             cssStyle: 'compact-theme'
                                         });
                                     } else {
                                         $('#compact-paginationRelatedContracts').css('display', 'none');
                                         $('#loadContract').html('<p style="margin-left: 20px;">No items found.</p>')
                                     }
                                     $("#txtSearchBoxContract").autocomplete({
                                         source: relatedContractsTag,
                                         minLength: 1,
                                         focus: function (event, ui) {
                                             return false;
                                         },
                                         select: function (evn, uidetails) {
                                             $("#txtSearchBoxContract").val(uidetails.item.label);
                                             ViewContracts();
                                         }
                                     });
                                 },
                                 error: function () {
                                     $('#loadMA').empty();
                                     $('#loadMA').html('<p style="margin-left: 20px;">No items found.</p>');
                                 }
                             });
                         }
                         else {
                             $('#loadMA').empty();
                         }
                         vContractID = getParameterByName("ContractID");
                         BindRelatedContractsPopup(vContractID);
                     }
                 });
             }
             else {
                 child.parentNode.removeChild(child);
                 var relatedContractID = child.id;
                 var hdnContracts = $.map($("#hdnRelatedContracts").text().split(';'), $.trim);
                 var htnIndex = hdnContracts.indexOf(relatedContractID);
                 hdnContracts.splice(htnIndex, 1);
                 $("#hdnRelatedContracts").html(hdnContracts.join(';'));

                 var selectedrelatedcontract = [];
                 $.each($("#RelatedContracts").val().split(";"), function () {
                     if (this != "") {
                         if ($.trim(this) != "") {
                             selectedrelatedcontract.push($.trim(this));
                         }
                     }
                 });
                 var rtitle = child.textContent.substring(0, child.textContent.lastIndexOf('(')).trim();
                 if (selectedrelatedcontract.indexOf(rtitle) > -1) {
                     selectedrelatedcontract.splice(selectedrelatedcontract.indexOf(rtitle), 1);
                     $("#RelatedContracts").val(selectedrelatedcontract.join(";"));
                     selectedrelatedcontract = [];
                 }

                 $('#loadContract').html('<img src="../Content/Images/icon/loading.gif"> Working on it...');
                 $("#loadingPage").fadeIn();
                 $('#tblPopupContracts').empty();
                 $("#txtSearchBoxContract").val("");
                 $.ajax({
                     url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName('ContractID') + '/relatedcontracts?relatedcontractid=' + relatedContractID,
                     type: 'DELETE',
                     dataType: 'json',
                     headers: {
                         'eContracts-ApiKey': localStorage.APIKey, username: localStorage.UserName
                     },
                     "Content-Type": "application/json",
                     cache: false,
                     success: function (data) {
                         var vURL = vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/getrelatedcontracts?stage=&searchkeyword=&customquery=&sortbyfield=ContractTitle&orderby=ASC';
                         if ($('#tblPopupContracts tr').length <= 0) {
                             relatedContractsTag = [];
                             $("#txtSearchBoxContract").val("");
                             $.ajax({
                                 url: vURL,
                                 type: 'GET',
                                 dataType: 'json',
                                 "Content-Type": "application/json",
                                 headers: {
                                     'eContracts-ApiKey': localStorage.APIKey, BusinessAreaLocation: $("#lblBusinessAreaPath").text(), UserID: localStorage.UserID
                                 },
                                 cache: false,
                                 success: function (data) {
                                     $('#loadContract').empty();
                                     $("#hdnRelatedContracts").append(";" + getParameterByName("ContractID"))
                                     $(data).each(function (i, item) {
                                         if ($("#hdnRelatedContracts").text().indexOf(item.RowKey) > -1) {
                                         }
                                         else {
                                             if (item.RowKey != getParameterByName("ContractID")) {
                                                 var article = '<tr><td class="width65">';
                                                 if (arrRelatedcontractRowkey.indexOf(item.RowKey) > -1) {
                                                     article += '<input id="' + item.RowKey + '" type="checkbox" name="RelatedContract" checked onchange="javascript:collectrelatedcontractrowkey(this);" class="css1-checkbox" value="' + item.ContractTitle + '" />';
                                                     article += '<label for="' + item.RowKey + '" class="css1-label"><a href="/Contracts/ContractDetails?ContractID=' + item.RowKey + '" target="_blank">' + item.ContractTitle + '</a></label>';                 //ENH487 Customer inhanc
                                                     article += '</td>';
                                                     article += '<td><label class="">' + item.ContractType + '</label></td>'
                                                     article += '<td><label class="">'
                                                     if (item.Counterparty != null && item.Counterparty != "") {
                                                         article += item.Counterparty
                                                     } else {
                                                         article += "-"
                                                     }
                                                     article += '</label></td><td><label class="" style="word-break: break-all;">'
                                                     if (item.ContractNumber != null && item.ContractNumber != "") {
                                                         article += item.ContractNumber
                                                     } else {
                                                         article += "-"
                                                     }
                                                     article += '</label></td><td><label class="">' + item.Status + '</label></td>'
                                                     article += '<td class="ddl width34">';
                                                     article += "<select class='f_inpt width90' onchange='showallspans(this)'>";
                                                     var jsLangselected = RelatedContractRelationShipTypeparent;
                                                     var jsLangType = $("#ddlRelationshipType option:selected").val();
                                                     var rela1 = jQuery.grep(RelationshipTypes, function (a) {
                                                         return (a[1] === jsLangselected && a[0] === jsLangType);
                                                     });
                                                     var rela2 = jQuery.grep(RelationshipTypes, function (a) {
                                                         return (a[2].indexOf(jsLangselected) > -1 && a[0] === jsLangType);
                                                     });
                                                     if (rela1 != null && typeof (rela1) != "undefined" && rela1.length != 0) {
                                                         var Relationship = rela1[0];
                                                         $.each(Relationship[2], function (index, value) {
                                                             var optRel2 = value.toString();
                                                             article += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                                                         })
                                                         if ($(Relationship[2]).length == 0) {
                                                             var optRel2 = Relationship[1].toString();
                                                             article += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                                                         }
                                                     }
                                                     else if (rela2 != null && typeof (rela2) != "undefined" && rela2.length != 0) {
                                                         var Relationship = rela2[0];
                                                         article += "<option value='" + Relationship[1] + "'>" + Relationship[1] + "</option>";
                                                     }
                                                     else {
                                                         switch (jsLangselected) {
                                                             case 'Master Agreement':
                                                                 article += '<option value="Sub-Agreement">Sub-Agreement</option>';
                                                                 article += '<option value="SOW">SOW</option>';
                                                                 break;
                                                             case 'Sub-Agreement':
                                                             case 'SOW':
                                                                 article += '<option value="Master Agreement">Master Agreement</option>';
                                                                 break;
                                                             case 'Prime Contractor Agreement':
                                                                 article += '<option value="Sub Contractor Agreement">Sub Contractor Agreement</option>';
                                                                 break;
                                                             case 'Sub Contractor Agreement':
                                                                 article += '<option value="Prime Contractor Agreement">Prime Contractor Agreement</option>';
                                                                 break;
                                                             case 'Blanket Agreement':
                                                                 article += '<option value="Order">Order</option>';
                                                                 article += '<option value="Invoice">Invoice</option>';
                                                                 break;
                                                             case 'Order':
                                                             case 'Invoice':
                                                                 article += '<option value="Blanket Agreement">Blanket Agreement</option>';
                                                                 break;
                                                             case 'Original':
                                                                 article += '<option value="Duplicate">Duplicate</option>';
                                                                 article += '<option value="Copy">Copy</option>';
                                                                 break;
                                                             case 'Duplicate':
                                                             case 'Copy':
                                                                 article += '<option value="Original">Original</option>';
                                                                 break;
                                                             case 'Past Contract':
                                                                 article += '<option value="Renegotiated Contract">Renegotiated Contract</option>';
                                                                 break;
                                                             case 'Renegotiated Contract':
                                                                 article += '<option value="Past Contract">Past Contract</option>';
                                                                 break;
                                                             case 'Primary Contract':
                                                                 article += '<option value="Amendment">Amendment</option>';
                                                                 article += '<option value="Modification">Modification</option>';
                                                                 break;
                                                             case 'Amendment':
                                                             case 'Modification':
                                                                 article += '<option value="Primary Contract">Primary Contract</option>';
                                                                 break;
                                                             case 'Other':
                                                                 article += '<option value="Other">Other</option>';
                                                                 break;
                                                         }
                                                     }
                                                     article += '</select></td></tr>';
                                                     $("#tblPopupContracts").append(article);
                                                 }
                                                 else {
                                                     article += '<input id="' + item.RowKey + '" type="checkbox" name="RelatedContract" onchange="javascript:collectrelatedcontractrowkey(this);" class="css1-checkbox" value="' + item.ContractTitle + '" />';
                                                     article += '<label for="' + item.RowKey + '" class="css1-label"><a href="/Contracts/ContractDetails?ContractID=' + item.RowKey + '" target="_blank">' + item.ContractTitle + '</a></label>';        //ENH487 Customer inhanc
                                                     article += '</td>';
                                                     article += '<td><label class="">' + item.ContractType + '</label></td>'
                                                     article += '<td><label class="">'
                                                     if (item.Counterparty != null && item.Counterparty != "") {
                                                         article += item.Counterparty
                                                     } else {
                                                         article += "-"
                                                     }
                                                     article += '</label></td><td><label class="" style="word-break: break-all;">'
                                                     if (item.ContractNumber != null && item.ContractNumber != "") {
                                                         article += item.ContractNumber
                                                     } else {
                                                         article += "-"
                                                     }
                                                     article += '</label></td><td><label class="">' + item.Status + '</label></td>'
                                                     article += '<td class="ddl"></td></tr>'
                                                     article += '</tr>'
                                                     $("#tblPopupContracts").append(article);
                                                 }

                                                 relatedContractsTag.push(item.ContractTitle.trim());
                                             }
                                         }
                                         $("#" + item.RowKey).click(function () {
                                             if (this.checked) {
                                                 if ($(this).parent().parent().children(".ddl").find('option').length == 0) {
                                                     var vOptions = "<select class='f_inpt width90' onchange='showallspans(this)'>";
                                                     var jsLang = $("#ddlRelationshipTypeParent option:selected").val();
                                                     var jsLangType = $("#ddlRelationshipType option:selected").val();
                                                     var rela1 = jQuery.grep(RelationshipTypes, function (a) {
                                                         return (a[1] === jsLang && a[0] === jsLangType);
                                                     });
                                                     var rela2 = jQuery.grep(RelationshipTypes, function (a) {
                                                         return (a[2].indexOf(jsLang) > -1 && a[0] === jsLangType);
                                                     });
                                                     if (rela1 != null && typeof (rela1) != "undefined" && rela1.length != 0) {
                                                         var Relationship = rela1[0];
                                                         $.each(Relationship[2], function (index, value) {
                                                             var optRel2 = value.toString();
                                                             vOptions += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                                                         })
                                                         if ($(Relationship[2]).length == 0) {
                                                             var optRel2 = Relationship[1].toString();
                                                             vOptions += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                                                         }
                                                     }
                                                     else if (rela2 != null && typeof (rela2) != "undefined" && rela2.length != 0) {
                                                         var Relationship = rela2[0];
                                                         vOptions += "<option value='" + Relationship[1] + "'>" + Relationship[1] + "</option>";
                                                     }
                                                     else {
                                                         switch (jsLang) {
                                                             case 'Master Agreement':
                                                                 vOptions += '<option value="Sub-Agreement">Sub-Agreement</option>';
                                                                 vOptions += '<option value="SOW">SOW</option>';
                                                                 break;
                                                             case 'Sub-Agreement':
                                                             case 'SOW':
                                                                 vOptions += '<option value="Master Agreement">Master Agreement</option>';
                                                                 break;
                                                             case 'Prime Contractor Agreement':
                                                                 vOptions += '<option value="Sub Contractor Agreement">Sub Contractor Agreement</option>';
                                                                 break;
                                                             case 'Sub Contractor Agreement':
                                                                 vOptions += '<option value="Prime Contractor Agreement">Prime Contractor Agreement</option>';
                                                                 break;
                                                             case 'Blanket Agreement':
                                                                 vOptions += '<option value="Order">Order</option>';
                                                                 vOptions += '<option value="Invoice">Invoice</option>';
                                                                 break;
                                                             case 'Order':
                                                             case 'Invoice':
                                                                 vOptions += '<option value="Blanket Agreement">Blanket Agreement</option>';
                                                                 break;
                                                             case 'Original':
                                                                 vOptions += '<option value="Duplicate">Duplicate</option>';
                                                                 vOptions += '<option value="Copy">Copy</option>';
                                                                 break;
                                                             case 'Duplicate':
                                                             case 'Copy':
                                                                 vOptions += '<option value="Original">Original</option>';
                                                                 break;
                                                             case 'Past Contract':
                                                                 vOptions += '<option value="Renegotiated Contract">Renegotiated Contract</option>';
                                                                 break;
                                                             case 'Renegotiated Contract':
                                                                 vOptions += '<option value="Past Contract">Past Contract</option>';
                                                                 break;
                                                             case 'Primary Contract':
                                                                 vOptions += '<option value="Amendment">Amendment</option>';
                                                                 vOptions += '<option value="Modification">Modification</option>';
                                                                 break;
                                                             case 'Amendment':
                                                             case 'Modification':
                                                                 vOptions += '<option value="Primary Contract">Primary Contract</option>';
                                                                 break;
                                                             case 'Other':
                                                                 vOptions += '<option value="Other">Other</option>';
                                                                 break;
                                                         }
                                                     }
                                                     vOptions += '</select>';
                                                     $(this).parent().parent().children(".ddl").append(vOptions);
                                                 }
                                             } else {

                                                 $(this).parent().parent().children(".ddl").empty();
                                             }
                                             showallspans("");
                                             showallspansNew()

                                         });
                                     });
                                     $("#loadingPage").fadeOut();
                                     collectrelatedcontractrowkey("");
                                     var vCount = $("#tblPopupContracts tr").length;
                                     if (vCount != 0) {
                                         $("#tblPopupContracts tr td").attr('style', 'vertical-align: top');
                                         $('#compact-paginationRelatedContracts').css('display', '');
                                         $('#compact-paginationRelatedContracts').pagination({
                                             items: vCount,
                                             itemsOnPage: 10,
                                             type: 'tbody',
                                             typeID: 'tblPopupContracts',
                                             row: 'tr',
                                             cssStyle: 'compact-theme'
                                         });
                                     } else {
                                         $('#compact-paginationRelatedContracts').css('display', 'none');
                                         $('#loadContract').html('<p style="margin-left: 20px;">No items found.</p>')
                                     }
                                     $("#txtSearchBoxContract").autocomplete({
                                         source: relatedContractsTag,
                                         minLength: 1,
                                         focus: function (event, ui) {
                                             return false;
                                         },
                                         select: function (evn, uidetails) {
                                             $("#txtSearchBoxContract").val(uidetails.item.label);
                                             ViewContracts();
                                         }
                                     });
                                 },
                                 error: function () {
                                     $('#loadMA').empty();
                                     $('#loadMA').html('<p style="margin-left: 20px;">No items found.</p>');
                                 }
                             });
                         }
                         else {
                             $('#loadMA').empty();
                         }
                         vContractID = getParameterByName("ContractID");
                         BindRelatedContractsPopup(vContractID);
                     }
                 });



             }
         }
         return;
     });
}

function BindRelatedContractsPopup(contractid) {
    //if (contractid == null || contractid == "") { contractid = vContractID; }
    //$('#liSelected').empty();
    //$.ajax({
    //    url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/relatedcontracts?contractid=' + contractid,
    //    type: 'GET',
    //    dataType: 'json',
    //    headers: { 'eContracts-ApiKey': localStorage.APIKey, UserID: localStorage.UserID },
    //    cache: false,
    //    success: function (contactsJsonPayload) {
    //        var count = 0;
    //        $(contactsJsonPayload).each(function (i, item) {
    //            if (item.Permission != "")
    //                $('#liSelected').append('<span style="font-size:11px;" id=' + item.RelatedContractID + '>' + item.RelatedContractTitle + ' (' + item.RelatedRelationshipType + ') <img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveRelationship(this);" style="float:right" /></span>');
    //        });
    //    },
    //    error: function (request) {
    //    }
    //});
}

function ViewContracts() {
    relatedContractsTag = [];
    var selectedrows = "";
    if ($("#txtSearchBoxContract").val() != "") {
        $('input:checkbox[name="RelatedContract"]:checked').each(function () {
            rowtext = this.value;
            if (rowtext != "" && rowtext.trim() == $("#txtSearchBoxContract").val().trim() && this.checked == true)
                $(this).parent().parent().remove();
        });
        selectedrows = $('input:checkbox[name="RelatedContract"]:checked').parent().parent();
    }

    var strCustomQueryRelCon = "";
    if ($("#filteroptionstatus").css('display') != 'none') {
        var RelConFilterCP = $('#ddlRelConFilterCounterparty option:selected');
        var strQryRelConFilterCP = "";
        if (RelConFilterCP != null && RelConFilterCP != "") {
            RelConFilterCP.each(function () {
                strQryRelConFilterCP += $(this).text() + "~";
            });
            strQryRelConFilterCP = removeLastChar(strQryRelConFilterCP, '~');
        }

        if (strQryRelConFilterCP != null && strQryRelConFilterCP != "") {
            strCustomQueryRelCon += "Counterparty:" + encodeURIComponent(strQryRelConFilterCP) + ";";
        }

    }

    if ($("#filteroptiontype").css('display') != 'none') {
        var RelConFilterContractTypes = $('#ddlRelConFilterContractType option:selected');
        var strQryRelConFilterCT = "";
        if (RelConFilterContractTypes != null && RelConFilterContractTypes != "") {
            RelConFilterContractTypes.each(function () {
                strQryRelConFilterCT += $(this).text() + "~";
            });
            strQryRelConFilterCT = removeLastChar(strQryRelConFilterCT, '~');
        }

        if (strQryRelConFilterCT != null && strQryRelConFilterCT != "") {
            strCustomQueryRelCon += "ContractType:" + encodeURIComponent(strQryRelConFilterCT) + ";";
        }
    }
    if (strCustomQueryRelCon != "")
        strCustomQueryRelCon = removeLastChar(strCustomQueryRelCon, ';');

    $("#tblPopupContracts").html('');
    $('#loadContract').html('<img src="../Content/Images/icon/loading.gif"> Searching...');
    var vURL = vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/getrelatedcontracts?stage=&searchkeyword=' + encodeURIComponent($("#txtSearchBoxContract").val()) + '&customquery=' + strCustomQueryRelCon + '&sortbyfield=ContractTitle&orderby=ASC';
    $.ajax({
        url: vURL,
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, BusinessAreaLocation: $("#lblBusinessAreaPath").text(), UserID: localStorage.UserID
        },
        cache: false,
        success: function (data) {
            $('#loadContract').empty();
            $("#tblPopupContracts").html('');
            var datalenght = data.length;
            $("#hdnRelatedContracts").append(";" + getParameterByName("ContractID"))

            arr = [];
            RelatedContractIDarr = [];
            vRelatedContractTitlearr = [];
            RelatedRelationshipTypearr = [];
            counterpartyTags = [];
            if (arrRelatedContractsSelected.length > 0) {
                $.each(arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractTitle.split(";"), function () {
                    if (this != "") {
                        if ($.trim(this) != "") {
                            arr.push($.trim(this));
                        }
                    }
                });
            }

            if (arr.length > 0) {
                if (arrRelatedContractsSelected.length > 0) {
                    $.each(arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID.split(";"), function () {
                        RelatedContractIDarr.push($.trim(this));
                    });
                    $.each(arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractTitle.split(";"), function () {
                        vRelatedContractTitlearr.push($.trim(this));
                    });
                    $.each(arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedRelationshipType.split(";"), function () {
                        RelatedRelationshipTypearr.push($.trim(this));
                    });
                }
            }


            for (var i = 0; i < datalenght; i++) {
                var item = data[i];
                if ($("#hdnRelatedContracts").text().indexOf(item.RowKey) > -1) {

                }
                else {
                    if (arr.indexOf(item.ContractTitle.trim()) >= 0) {
                        var article = '<tr><td>';
                        article += '<input id="' + item.RowKey + '" type="checkbox" name="RelatedContract" onchange="javascript:collectrelatedcontractrowkey(this);" checked class="css1-checkbox" value="' + item.ContractTitle + '" />';
                        article += '<label for="' + item.RowKey + '" class="css1-label"><a href="/Contracts/ContractDetails?ContractID=' + item.RowKey + '" target="_blank">' + item.ContractTitle + '</a></label>';        //ENH487 Customer inhanc
                        article += '</td>';
                        article += '<td><label class="">' + item.ContractType + '</label></td>'
                        article += '<td><label class="">'
                        if (item.Counterparty != null && item.Counterparty != "") {
                            article += item.Counterparty
                        } else {
                            article += "-"
                        }
                        article += '</label></td><td><label class="" style="word-break: break-all;">'
                        if (item.ContractNumber != null && item.ContractNumber != "") {
                            article += item.ContractNumber
                        } else {
                            article += "-"
                        }
                        article += '</label></td><td><label class="">' + item.Status + '</label></td>'
                        var relationtypefetch = "";
                        if (arrRelatedContractsSelected.length > 0) {
                            var indexvaluetake = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractTitle.split(';').indexOf(item.ContractTitle.trim());
                            relationtypefetch = RelatedRelationshipTypearr[indexvaluetake];
                        }
                        else {
                            if (arr.indexOf(item.ContractTitle.trim()) >= 0) {
                                var indexvaluetake = arr.indexOf(item.ContractTitle.trim());
                                relationtypefetch = RelatedRelationshipTypearr[indexvaluetake];
                            }
                        }
                        //var indexvaluetake = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractTitle.split(';').indexOf(item.ContractTitle.trim());
                        //var relationtypefetch = RelatedRelationshipTypearr[indexvaluetake];
                        article += "<td class='ddl'><select class='f_inpt width90' onchange='showallspans(this)'>";
                        var jsLang = $("#ddlRelationshipTypeParent option:selected").val();
                        switch (jsLang) {
                            case 'Master Agreement':
                                if (relationtypefetch == "Sub-Agreement") {
                                    article += '<option value="Sub-Agreement" selected>Sub-Agreement</option>';
                                    article += '<option value="SOW">SOW</option>';
                                }
                                else {
                                    article += '<option value="Sub-Agreement" >Sub-Agreement</option>';
                                    article += '<option value="SOW" selected>SOW</option>';
                                }
                                break;
                            case 'Sub-Agreement':
                            case 'SOW':
                                article += '<option value="Master Agreement">Master Agreement</option>';
                                break;
                            case 'Prime Contractor Agreement':
                                article += '<option value="Sub Contractor Agreement">Sub Contractor Agreement</option>';
                                break;
                            case 'Sub Contractor Agreement':
                                article += '<option value="Prime Contractor Agreement">Prime Contractor Agreement</option>';
                                break;
                            case 'Blanket Agreement':
                                if (relationtypefetch == "Order") {
                                    article += '<option value="Order" selected>Order</option>';
                                    article += '<option value="Invoice">Invoice</option>';
                                }
                                else {
                                    article += '<option value="Order">Order</option>';
                                    article += '<option value="Invoice" selected>Invoice</option>';
                                }

                                break;
                            case 'Order':
                            case 'Invoice':
                                article += '<option value="Blanket Agreement">Blanket Agreement</option>';
                                break;
                            case 'Original':
                                if (relationtypefetch == "Duplicate") {
                                    article += '<option value="Duplicate" selected>Duplicate</option>';
                                    article += '<option value="Copy">Copy</option>';
                                }
                                else {
                                    article += '<option value="Duplicate">Duplicate</option>';
                                    article += '<option value="Copy" selected>Copy</option>';
                                }
                                break;
                            case 'Duplicate':
                            case 'Copy':
                                article += '<option value="Original">Original</option>';
                                break;
                            case 'Past Contract':
                                article += '<option value="Renegotiated Contract">Renegotiated Contract</option>';
                                break;
                            case 'Renegotiated Contract':
                                article += '<option value="Past Contract">Past Contract</option>';
                                break;
                            case 'Primary Contract':
                                if (relationtypefetch == "Amendment") {
                                    article += '<option value="Amendment" selected>Amendment</option>';
                                    article += '<option value="Modification">Modification</option>';
                                }
                                else {
                                    article += '<option value="Amendment">Amendment</option>';
                                    article += '<option value="Modification" selected>Modification</option>';
                                }
                                break;
                            case 'Amendment':
                            case 'Modification':
                                article += '<option value="Primary Contract">Primary Contract</option>';
                                break;
                            case 'Other':
                                article += '<option value="Other">Other</option>';
                                break;
                        }

                        article += '</select></td></tr>';
                        $("#tblPopupContracts").append(article);

                        relatedContractsTag.push(item.ContractTitle.trim());
                    }
                    else {
                        var article = '<tr><td>';
                        article += '<input id="' + item.RowKey + '" type="checkbox"  name="RelatedContract" onchange="javascript:collectrelatedcontractrowkey(this);"  class="css1-checkbox" value="' + item.ContractTitle + '" />';
                        article += '<label for="' + item.RowKey + '" class="css1-label"><a href="/Contracts/ContractDetails?ContractID=' + item.RowKey + '" target="_blank">' + item.ContractTitle + '</a></label>';     //ENH487 Customer inhanc
                        article += '</td>';
                        article += '<td><label class="">' + item.ContractType + '</label></td>'
                        article += '<td><label class="">'
                        if (item.Counterparty != null && item.Counterparty != "") {
                            article += item.Counterparty
                        } else {
                            article += "-"
                        }
                        article += '</label></td><td><label class="" style="word-break: break-all;">'
                        if (item.ContractNumber != null && item.ContractNumber != "") {
                            article += item.ContractNumber
                        } else {
                            article += "-"
                        }
                        article += '</label></td><td><label class="">' + item.Status + '</label></td>'
                        article += '<td class="ddl"><td>';
                        article += '  </tr>'
                        relatedContractsTag.push(item.ContractTitle.trim());
                        $("#tblPopupContracts").append(article);
                    }
                }
                $("#" + item.RowKey).click(function () {
                    if (this.checked) {
                        if ($(this).parent().parent().children(".ddl").find('option').length == 0) {
                            var vOptions = "<select class='f_inpt width90' onchange='showallspans(this)'>";
                            var jsLang = $("#ddlRelationshipTypeParent option:selected").val();
                            var jsLangType = $("#ddlRelationshipType option:selected").val();
                            var rela1 = jQuery.grep(RelationshipTypes, function (a) {
                                return (a[1] === jsLang && a[0] === jsLangType);
                            });
                            var rela2 = jQuery.grep(RelationshipTypes, function (a) {
                                return (a[2].indexOf(jsLang) > -1 && a[0] === jsLangType);
                            });
                            if (rela1 != null && typeof (rela1) != "undefined" && rela1.length != 0) {
                                var Relationship = rela1[0];
                                $.each(Relationship[2], function (index, value) {
                                    var optRel2 = value.toString();
                                    vOptions += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                                })
                                if ($(Relationship[2]).length == 0) {
                                    var optRel2 = Relationship[1].toString();
                                    vOptions += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                                }
                            }
                            else if (rela2 != null && typeof (rela2) != "undefined" && rela2.length != 0) {
                                var Relationship = rela2[0];
                                vOptions += "<option value='" + Relationship[1] + "'>" + Relationship[1] + "</option>";
                            }
                            else {
                                switch (jsLang) {
                                    case 'Master Agreement':
                                        vOptions += '<option value="Sub-Agreement">Sub-Agreement</option>';
                                        vOptions += '<option value="SOW">SOW</option>';
                                        break;
                                    case 'Sub-Agreement':
                                    case 'SOW':
                                        vOptions += '<option value="Master Agreement">Master Agreement</option>';
                                        break;
                                    case 'Prime Contractor Agreement':
                                        vOptions += '<option value="Sub Contractor Agreement">Sub Contractor Agreement</option>';
                                        break;
                                    case 'Sub Contractor Agreement':
                                        vOptions += '<option value="Prime Contractor Agreement">Prime Contractor Agreement</option>';
                                        break;
                                    case 'Blanket Agreement':
                                        vOptions += '<option value="Order">Order</option>';
                                        vOptions += '<option value="Invoice">Invoice</option>';
                                        break;
                                    case 'Order':
                                    case 'Invoice':
                                        vOptions += '<option value="Blanket Agreement">Blanket Agreement</option>';
                                        break;
                                    case 'Original':
                                        vOptions += '<option value="Duplicate">Duplicate</option>';
                                        vOptions += '<option value="Copy">Copy</option>';
                                        break;
                                    case 'Duplicate':
                                    case 'Copy':
                                        vOptions += '<option value="Original">Original</option>';
                                        break;
                                    case 'Past Contract':
                                        vOptions += '<option value="Renegotiated Contract">Renegotiated Contract</option>';
                                        break;
                                    case 'Renegotiated Contract':
                                        vOptions += '<option value="Past Contract">Past Contract</option>';
                                        break;
                                    case 'Primary Contract':
                                        vOptions += '<option value="Amendment">Amendment</option>';
                                        vOptions += '<option value="Modification">Modification</option>';
                                        break;
                                    case 'Amendment':
                                    case 'Modification':
                                        vOptions += '<option value="Primary Contract">Primary Contract</option>';
                                        break;
                                    case 'Other':
                                        vOptions += '<option value="Other">Other</option>';
                                        break;
                                }
                            }
                            vOptions += '</select>';
                            $(this).parent().parent().children(".ddl").append(vOptions);
                        }
                    } else {

                        $(this).parent().parent().children(".ddl").empty();
                    }
                    showallspans(this);

                });
            }
            collectrelatedcontractrowkey("");
            var vCount = $("#tblPopupContracts tr").length;
            if (vCount != 0) {
                $('#loadContract').html('');
                $("#tblPopupContracts tr td").attr('style', 'vertical-align: top');
                $('#compact-paginationRelatedContracts').css('display', '');
                $('#compact-paginationRelatedContracts').pagination({
                    items: vCount,
                    itemsOnPage: 10,
                    type: 'tbody',
                    typeID: 'tblPopupContracts',
                    row: 'tr',
                    cssStyle: 'compact-theme'
                });
            } else {
                //  collectrelatedcontractrowkey();
                $('#loadContract').html('<p style="color: red; margin-top: 50px; margin-bottom: 10px; margin-left: 10px;">No items found.</p>')
                $('#compact-paginationRelatedContracts').css('display', 'none');
            }

            //Sridhar
            if (selectedrows != null && selectedrows != "") {
                if (selectedrows != null && selectedrows != "") {
                    $('input:checkbox[name="RelatedContract"]:checked').each(function () {
                        rowtext = $(this).parent().parent().children().find("input[type=checkbox]")[0].value;
                        if (rowtext != "") {
                            $(selectedrows).each(function (i, item) {
                                if (item.children[0].textContent.trim() == rowtext.trim()) {
                                    selectedrows.splice(i, 1);
                                }
                            });
                        }
                    });
                    $(selectedrows).each(function (i, item) {
                        $(item).hide();
                    });
                    $("#tblPopupContracts").append(selectedrows);
                }
            }
            $("#txtSearchBoxContract").autocomplete({
                source: relatedContractsTag,
                minLength: 2,
                focus: function (event, ui) {
                    return false;
                },
                select: function (evn, uidetails) {
                    $("#txtSearchBoxContract").val(uidetails.item.label);
                    ViewContracts();
                }
            });
            $(".validelement").each(function (index, element) {
                $(element).removeClass("error");
                $("#errormsg_" + element.id).remove();
            });
            if ($('#dvfilter').is(':hidden')) {
            }
            else {
                $('#dvfilter').slideToggle();
            }
        },
        error: function () {
            collectrelatedcontractrowkey("");
            if ($('#dvfilter').is(':hidden')) {
            }
            else {
                $('#dvfilter').slideToggle();
            }
            $(".validelement").each(function (index, element) {
                $(element).removeClass("error");
                $("#errormsg_" + element.id).remove();
            });
            $('#compact-paginationRelatedContracts').css('display', 'none');
            $('#loadContract').html('<p style="color: red; margin-top: 50px; margin-bottom: 10px; margin-left: 10px;">No items found.</p>')
        }
    });

}

function formatDate(date) {

    var d = new Date(date),
        month = '' + (d.getMonth() + 1),
        day = '' + d.getDate(),
        year = d.getFullYear();

    if (month.length < 2) month = '0' + month;
    if (day.length < 2) day = '0' + day;

    return [year, month, day].join('-');
}

function BindProjects(items) {
    $("#tblRelatedProjects").empty();
    if (items.indexOf(';') >= 0) {
        var vrelated = "";
        $.each(items.split(";"), function (a, itemname) {
            vrelated += '<tr>';
            vrelated += '<td height="10" align="left" valign="top" class="content-text clr999"><a href="javascript:void(0);" onclick="ViewProject(\'' + itemname.split(':')[0] + '\')">' + itemname.split(':')[0] + '</a></td>';
            if (itemname.split(':')[1] == "Default Task") {
                vrelated += '<td height="10" align="left" valign="top" class="content-text">' + itemname.split(':')[1] + '</td>';
            } else {
                vrelated += '<td height="10" align="left" valign="top" class="content-text"><a href="javascript:void(0);" onclick="ViewProjectTask(\'' + itemname + '\')">' + itemname.split(':')[1] + '</a></td>';
            }
            vrelated += '</tr>';
        });
        $("#tblRelatedProjects").html(vrelated);
    } else {
        var vrelated1 = "";
        vrelated1 = '<tr>';
        vrelated1 += '<td height="10" align="left" valign="top" class="content-text clr999"><a href="javascript:void(0);" onclick="ViewProject(\'' + items.split(':')[0] + '\')">' + items.split(':')[0] + '</a></td>';
        if (items.split(':')[1] == "Default Task") {
            vrelated1 += '<td height="10" align="left" valign="top" class="content-text">' + items.split(':')[1] + '</td>';
        } else {
            vrelated1 += '<td height="10" align="left" valign="top" class="content-text"><a href="javascript:void(0);" onclick="ViewProjectTask(\'' + items + '\')">' + items.split(':')[1] + '</a></td>';
        }
        vrelated1 += '</tr>';
        $("#tblRelatedProjects").html(vrelated1);
    }
}

function ViewProject(projectname) {
    $("#loadingPage").fadeIn();
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/project?projectName=' + projectname.trim(),
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (entity) {
            $("#dvProjectID").html(entity.ProjectID);
            $("#dvProjectName").html(entity.ProjectName);
            if (entity.Description == null || entity.Description == "") {
                $("#dvDescription").html("-");
            } else {
                $("#dvDescription").html(entity.Description);
            }
            $("#dvStatus").html(entity.Status);
            if (entity.StartDate == null || entity.StartDate == "") {
                $("#dvStartDate").html("-")
            }
            else {
                var fStartDate = "";
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    fStartDate = moment(new Date(entity.StartDate)).format('MM/DD/YYYY');
                }
                else {
                    fStartDate = moment(new Date(entity.StartDate)).format(localStorage.AppDateFormat);
                }
                $("#dvStartDate").html(fStartDate);
            }
            if (entity.EndDate == null || entity.EndDate == "") {
                $("#dvEndDate").html("-")
            }
            else {
                var fEndDate = "";
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    fEndDate = moment(new Date(entity.EndDate)).format('MM/DD/YYYY');
                }
                else {
                    fEndDate = moment(new Date(entity.EndDate)).format(localStorage.AppDateFormat);
                }
                $("#dvEndDate").html(fEndDate);
            }
            if (entity.SubAccount == null || entity.SubAccount == "") {
                $("#dvSubAccount").html("-")
            }
            else {
                $("#dvSubAccount").html(entity.SubAccount);
            }
            $("#dvProjectManager").html(entity.ProjectManager);
            $("#dvBusinessManager").html(entity.BusinessManager);
            if (entity.CustomerID == null || entity.CustomerID == "") {
                $("#dvCustomerID").html("-")
            }
            else {
                $("#dvCustomerID").html(entity.CustomerID);
            }
            if (entity.Country == "--Select--") {
                $("#dvCountry").html("-");
            } else {
                $("#dvCountry").html(entity.Country);
            }
            if (entity.Division == null || entity.Division == "") {
                $("#dvDivision").html("-")
            }
            else {
                $("#dvDivision").html(entity.Division);
            }
            if (entity.PracticeArea == null || entity.PracticeArea == "") {
                $("#dvPracticeArea").html("-")
            }
            else {
                $("#dvPracticeArea").html(entity.PracticeArea);
            }

            if (entity.ContractManager == null || entity.ContractManager == "") {
                $("#dvProjectContractManager").html("-")
            } else {
                $("#dvProjectContractManager").html(entity.ContractManager)
            }

            if (entity.USAIDContractNumber == null || entity.USAIDContractNumber == "") {
                $("#dvProjectUSAIDNumber").html("-")
            } else {
                $("#dvProjectUSAIDNumber").html(entity.USAIDContractNumber)
            }

            $("#dvViewProject").dialog("open");
            $("#loadingPage").fadeOut();
        },
        error:
            function (data) {
                $("#loadingPage").fadeOut();
            }
    });
}

function ViewProjectTask(taskid) {
    $("#loadingPage").fadeIn();
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/projecttaskbytaskid?taskid=' + taskid.trim(),
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (entity) {
            $("#dvTaskID").html(entity.TaskID);
            $("#dvTaskDescription").html(entity.TaskDescription);
            if (entity.Manager == null || entity.Manager == "") {
                $("#dvManager").html("-");
            } else {
                $("#dvManager").html(entity.Manager);
            }
            if (entity.StartDate == null || entity.StartDate == "") {
                $("#dvTaskStartDate").html("-");
            }
            else {
                var fStartDate = "";
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    fStartDate = moment(new Date(entity.StartDate)).format('MM/DD/YYYY');
                }
                else {
                    fStartDate = moment(new Date(entity.StartDate)).format(localStorage.AppDateFormat);
                }
                $("#dvTaskStartDate").html(fStartDate);
            }
            if (entity.EndDate == null || entity.EndDate == "") {
                $("#dvTaskEndDate").html("-");
            }
            else {
                var fEndDate = "";
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    fEndDate = moment(new Date(entity.EndDate)).format('MM/DD/YYYY');
                }
                else {
                    fEndDate = moment(new Date(entity.EndDate)).format(localStorage.AppDateFormat);
                }
                $("#dvTaskEndDate").html(fEndDate);
            }
            $("#dvViewProjectTask").dialog("open");
            $("#loadingPage").fadeOut();
        },
        error:
            function (data) {
                $("#loadingPage").fadeOut();
            }
    });
}

function caluculatedifference(currency1, currency2) {

    var c1 = currency1.replace(/[&\/\\#,+()$~%'":*?<>{}]/g, '');
    var c2 = currency2.replace(/[&\/\\#,+()$~%'":*?<>{}]/g, '');

    var res = Number(parseFloat(c2).toFixed(2)) - Number(parseFloat(c1).toFixed(2));

    return res;
}

function escapeRegExp(str) {
    return str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
}


$('#btnNewNotes').click(function () {
    $(".validelement").each(function (index, element) {

        $(element).removeClass("error");
        $("#errormsg_" + element.id).remove();
    });
    $(".validNicEdit").each(function (index, element) {

        $(element).removeClass("error");
        $("#errormsg_" + element.id).remove();
    });


    var vActiveParticipants = contractItem.ContractManagers + ";" + contractItem.Approvers + ";" + contractItem.Reviewers + ";" + contractItem.Signees + ";" + contractItem.Requestor;
    //*Harshitha

    var regexp = new RegExp(escapeRegExp(localStorage.UserName), 'g');
    vActiveParticipants = vActiveParticipants.replace(regexp, '');
    $("#ddlSendTo option").removeClass('hideUserlocal');

    $("#ddlSendTo option").each(function (index, element) {
        if (element.value == localStorage.UserName) {
            $(element).addClass('hideUserlocal');
        }
    });

    //$("#ddlSendTo option[value='" + localStorage.UserName + "']").addClass('hideUserlocal');

    var nicInstance = nicEditors.findEditor('txtNotes');
    nicInstance.setContent('');

    $("#txtNoteID").val("");
    GetValuesAndAutoPopulate("ddlSendTo", vActiveParticipants);

    $("#dvAddNotes").dialog("option", "title", "Add a Note");
    $("#dvAddNotes").dialog("open");
});

function GetNoteDetail(noteid) {
    $("#loadingPage").fadeIn();
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracts/notes?noteid=' + noteid,
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (data) {
            $("#txtNoteID").val(data.RowKey);
            //*Harshitha
            var nicInstance = nicEditors.findEditor('txtNotes');
            nicInstance.setContent(data.Note);

            GetValuesAndAutoPopulate("ddlSendTo", data.SendTo);

            $("#loadingPage").fadeOut();
            $("#dvAddNotes").dialog("option", "title", "Edit a Note");
            $("#dvAddNotes").dialog("open");
        },
        error: function (request) {
            $("#loadingPage").fadeOut();
        }
    });
}

function DeleteNote(noteid) {
    swal({
        title: '',
        text: "Are you sure you want to <span style='font-weight:700'>delete</span>?",
        type: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes',
        cancelButtonText: 'No',
        html: true
    },
     function (confirmed) {
         if (confirmed) {
             $("#loadingPage").fadeIn();
             $.ajax({
                 url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracts/notes?noteid=' + noteid + '&username=' + localStorage.UserName,
                 type: 'DELETE',
                 dataType: 'json',
                 headers: {
                     'eContracts-ApiKey': localStorage.APIKey
                 },
                 cache: false,
                 success: function (data) {
                     $("#loadingPage").fadeOut();
                     BindNotes(vContractID);
                 },
                 error: function (request) {
                     $("#loadingPage").fadeOut();
                     BindNotes(vContractID);
                 }
             });
         }
         return;
     });

}

function AddNotes() {
    if (requiredValidator('dvAddNotes')) {
        //*Harshitha 
        var nicInstance = nicEditors.findEditor('txtNotes');
        var vNotesText = CleanWordFormatFromHTML(nicInstance.getContent());
        var vNoteTextCount = vNotesText.replace(/<\/?[^>]+(>|$)/g, "");
        if (vNoteTextCount.length <= 26500) {
            $("#loadingPage").fadeIn();
            vNotesText = $('<div/>').text(vNotesText).html();
            var globalConOwners = getGlobalContractOwners();
            var toRemove = (contractItem.ContractManagers + ";" + contractItem.Approvers + ";" + contractItem.Reviewers + ";" + contractItem.Signees
                + ";" + contractItem.ContractAreaAdministrators + ";" + contractItem.BusinessAreaOwners + ";" + contractItem.ReadOnlyPermissions
                + ";" + contractItem.ReadWritePermissions + ";" + contractItem.FullControlPermissions + ";" + contractItem.ProjectManager + ";" + globalConOwners).split(';');
            toRemove = $.map(toRemove, $.trim);
            var myArray = $('#ddlSendTo').val();
            if (myArray == null)
                myArray = [];
            myArray = myArray.filter(function (el) {
                return toRemove.indexOf(el) < 0;
            });
            var vAllowToAdd = true;
            if (myArray.length > 0) {
                swal({
                    title: '',
                    text: "'" + myArray.join(', ') + "'  do not have access to this contract. Do you want to provide access?",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes',
                    cancelButtonText: 'No',
                    html: true
                },
          function (confirmed) {
              if (confirmed) {
                  var sendTo = '';
                  $('#ddlSendTo_chosen').find('.chosen-choices li').find('span').each(function () {
                      if (sendTo == '') {
                          sendTo = $(this).text();
                      }
                      else {
                          sendTo += "; " + $(this).text();
                      }
                  });
                  vContractID = getParameterByName("ContractID");
                  var vUrl = vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracts/' + vContractID + '/notes';
                  var vType = 'POST';
                  if ($("#txtNoteID").val() != "") {
                      vUrl = vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracts/' + vContractID + '/notes?noteid=' + $("#txtNoteID").val();
                      vType = 'PUT';
                  }
                  $.ajax({
                      url: vUrl,
                      type: vType,
                      dataType: 'json',
                      headers: {
                          'eContracts-ApiKey': localStorage.APIKey
                      },
                      data: {
                          ContractID: vContractID,
                          Note: vNotesText,
                          SendTo: sendTo,
                          CreatedBy: localStorage.UserName
                      },
                      cache: false,
                      success: function (person) {

                          BindNotes(vContractID);
                          if (myArray.length > 0) {
                              var ReadOnlyUsers = contractItem.ReadOnlyPermissions;
                              if (ReadOnlyUsers == '')
                                  ReadOnlyUsers = myArray.join('; ');
                              else
                                  ReadOnlyUsers += "; " + myArray.join('; ');
                              contractItem.ReadOnlyPermissions = ReadOnlyUsers;

                              $.ajax({
                                  url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName("ContractID") + '/permission',
                                  type: 'PUT',
                                  dataType: 'json',
                                  headers: {
                                      'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                                  },
                                  data: {

                                      ReadOnlyPermissions: ReadOnlyUsers,
                                      ReadWritePermissions: contractItem.ReadWritePermissions,
                                      FullControlPermissions: contractItem.FullControlPermissions,
                                      ModifiedBy: localStorage.UserName,
                                      CustomPermission: "Yes"
                                  },
                                  cache: false,
                                  success: function (person) {
                                  }
                              });
                          }
                          $("#dvAddNotes").dialog("close");
                      },
                      complete: function () {
                          $("#loadingPage").fadeOut();
                      }
                  });
              }
              else {
                  $("#loadingPage").fadeOut();
              }
              return;
          });

            }
            else {
                if (vAllowToAdd) {
                    var sendTo = '';
                    $('#ddlSendTo_chosen').find('.chosen-choices li').find('span').each(function () {
                        if (sendTo == '') {
                            sendTo = $(this).text();
                        }
                        else {
                            sendTo += "; " + $(this).text();
                        }
                    });
                    vContractID = getParameterByName("ContractID");
                    var vUrl = vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracts/' + vContractID + '/notes';
                    var vType = 'POST';
                    if ($("#txtNoteID").val() != "") {
                        vUrl = vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracts/' + vContractID + '/notes?noteid=' + $("#txtNoteID").val();
                        vType = 'PUT';
                    }
                    $.ajax({
                        url: vUrl,
                        type: vType,
                        dataType: 'json',
                        headers: {
                            'eContracts-ApiKey': localStorage.APIKey
                        },
                        data: {
                            ContractID: vContractID,
                            Note: vNotesText,
                            SendTo: sendTo,
                            CreatedBy: localStorage.UserName,
                            CustomPermission: "Yes"
                        },
                        cache: false,
                        success: function (person) {
                            BindNotes(vContractID);
                            if (myArray.length > 0) {
                                var ReadOnlyUsers = contractItem.ReadOnlyPermissions;
                                if (ReadOnlyUsers == '')
                                    ReadOnlyUsers = myArray.join('; ');
                                else
                                    ReadOnlyUsers += "; " + myArray.join('; ');
                                contractItem.ReadOnlyPermissions = ReadOnlyUsers;

                                $.ajax({
                                    url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName("ContractID") + '/permission',
                                    type: 'PUT',
                                    dataType: 'json',
                                    headers: {
                                        'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                                    },
                                    data: {
                                        ReadOnlyPermissions: ReadOnlyUsers,
                                        ReadWritePermissions: contractItem.ReadWritePermissions,
                                        FullControlPermissions: contractItem.FullControlPermissions,
                                        ModifiedBy: localStorage.UserName
                                    },
                                    cache: false,
                                    success: function (person) {
                                    }
                                });
                            }
                            $("#dvAddNotes").dialog("close");
                        },
                        complete: function () {
                            $("#loadingPage").fadeOut();
                        }
                    });
                } else {
                    $("#loadingPage").fadeOut();
                }
            }
        }
        else {
            swal("", "Note can not exceed 26500 characters");
        }
    }

}

function AddNotes2() {
    if (requiredValidator('dvAddNotes')) {
        $("#loadingPage").fadeIn();
        var sendTo = '';
        $('#ddlSendTo_chosen').find('.chosen-choices li').find('span').each(function () {
            if (sendTo == '') {
                sendTo = $(this).text();
            }
            else {
                sendTo += "; " + $(this).text();
            }
        });
        vContractID = getParameterByName("ContractID");
        //*Harshitha
        var nicInstance = nicEditors.findEditor('txtNotes');
        var vNotesText = CleanWordFormatFromHTML(nicInstance.getContent());
        var vNoteTextCount = vNotesText.replace(/>\/?[^>]+(>|$)/g, "");
        if (vNoteTextCount.length <= 26500) {
            vNotesText = $.trim(vNotesText);
            vNotesText = $('<div/>').text(vNotesText).html();

            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracts/' + vContractID + '/notes',
                type: 'POST',
                dataType: 'json',
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                },
                data: {
                    ContractID: vContractID,
                    Note: vNotesText,
                    SendTo: sendTo,
                    CreatedBy: localStorage.UserName
                },
                cache: false,
                success: function (person) {

                    BindNotes(vContractID);
                    $("#dvAddNotes").dialog("close");
                },
                complete: function () {
                    $("#loadingPage").fadeOut();
                }
            });
        }
        else {
            $("#loadingPage").fadeOut();
            swal("", "Note can not exceed 26500 characters");
        }
    }
}

function BindNotes(contractid) {
    if (contractid == null || contractid == "") {
        contractid = vContractID;
    }
    $("#ulNotesBody").empty();
    $("#dvNotes").empty();
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracts/' + contractid + '/notes',
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (data) {
            var count = 0;
            var datalenght = 0;
            if (data != null)
                datalenght = data.length;
            if (datalenght > 0) {
                var article = '';
                for (var i = 0; i < datalenght; i++) {
                    var item = data[i];
                    count++;
                    var vTimedesc = '';
                    if (item.Created != null && item.Created != "") {
                        var vTime = moment(new Date(item.Created)).format('MMMM Do YYYY');
                        var vTimeExact = moment(new Date(item.Created)).format('h:mm A');
                        vTimedesc = ' on ' + vTime + ' at ' + vTimeExact;
                    }

                    if (count <= 10)
                        article += '<li>';
                    else
                        article += '<li class="ShowMoreNotes" style="display:none;">';


                    article += '<span style="display: block;clear: both;" class="note_body color_dark width100">' + item.Note + '</span>';
                    article += '<span class="color_lightgrey" style="float: left; width: 99%; margin: 10px 0px;" >Posted by ' + item.CreatedBy + vTimedesc;
                    if (item.CreatedBy == localStorage.UserName)
                        article += '<span style="float: right; width: 4%;"><img src="../Content/Images/edit-quick.png" class="margin-left-5" onclick="GetNoteDetail(\'' + item.RowKey + '\')" /><img src="../Content/Images/close-quick.png" class="margin-left-5" onclick="DeleteNote(\'' + item.RowKey + '\')" /></span>';
                    article += '</span>';
                    article += '<span><small class="color_lightgrey">&nbsp;</small></span>';
                    article += '</li>';

                }

                $("#ulNotesBody").html(article);

                $("#ulNotesBody li span.note_body").each(function () {
                    recursiveRemoveWidthEach($(this));
                });
            }
            else {
                $("#ulNotesBody").append('<li><b class="color_lightgrey">No items found.</b></li>');
            }

            if (count > 10) {
                var more = count - 10;
                $("#dvNotes").html('<a id="ShowMoreNotes" href="javascript:void(0);" class="pad-all close1" onclick="ShowMoreNotes()">' + more + ' More Notes </a>' +
                                      '<a id="ShowLessNotes" href="javascript:void(0);" class="pad-all close1" onclick="ShowLessNotes()" style="display:none;">Show less</a>');
            }

            $("#lblNotesCount").text(count);

            if (!$("#lblNotesCount").text().trim()) {
                $("#ulNotesBody").append('<li>No items found.</li>');
            }
        },
        error: function (request) {
            $("#lblNotesCount").text('0');
            $("#ulNotesBody").append('No items found.');
        }
    });
}

function ShowMoreNotes() {
    $('.ShowMoreNotes').css("display", "");
    $('#ShowMoreNotes').css("display", "none");
    $('#ShowLessNotes').css("display", "");
}

function ShowLessNotes() {
    $('.ShowMoreNotes').css("display", "none");
    $('#ShowMoreNotes').css("display", "");
    $('#ShowLessNotes').css("display", "none");
}

function getcontracttypemetadata(strcontracttype) {
    GetallMetadataWithCT = [];   //ENH485  Featured metadata
    GetallFinancialMetadataWithCT = [];
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracttypes/metadatas?contracttypename=' + encodeURIComponent(strcontracttype),
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (metadataFields) {
            //manoj
            var FeaturedMetadataFilter = $.grep(metadataFields, function (item, i) {
                return item.FeaturedMetadata == "true";
            });
            //manoj
            GetallMetadataWithCT = FeaturedMetadataFilter;  //ENH485  Featured metadata

            //manoj
            FeaturedMetadataFilter = $.grep(metadataFields, function (item, i) {
                return item.FinancialField == "true";
            });
            //manoj
            GetallFinancialMetadataWithCT = FeaturedMetadataFilter;
            var numberexists = '';
            $(metadataFields).each(function (i, item) {
                if (item.FieldName == "ContractNumber") {
                    numberexists = $(icontractItem).find(item.FieldName).text();
                }
            });
            $("#trContractMetadataNumber").css('display', '');
            if (numberexists != '') {
                $("#trContractMetadataNumber").prop("title", numberexists);
            } else {
                $('#summCNumber').text('Not Available');
            }
            if (MethodCount == 0) {
                icontractdetails();  //ENH485  Featured metadata
            }
            else {
                showMetadataWithFeaturedMeta();
            }
        }
    });
}

function BindRequestDetails(requestid) {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Requests/requestsbyrequestid?requestid=' + requestid,
        type: 'GET',
        cache: false,
        contentType: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        processData: false,
        success: function (item) {
            var vUsers = '';
            var projMgrs = item.Requestor;
            if (projMgrs.indexOf(';') >= 0) {
                var userDisable = '';
                var userTitle = '';
                $.each(item.Requestor.split(";"), function (a, itemname) {
                    userDisable = '';
                    usertitle = '';
                    if (vActiveUsers.indexOf(itemname.trim()) < 0 && vActiveUsers.length > 0) {
                        userDisable = ' disabled_item_link';
                        usertitle = 'title="This user is no longer available."';
                    }
                    if (vUsers == '') {
                        vUsers = '<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(itemname) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + itemname + '</a>';
                    } else {
                        vUsers += '; <a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(itemname) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + itemname + '</a>';
                    }
                });
            } else {
                if (item.Requestor != null) {
                    if (vActiveUsers.indexOf(item.Requestor.trim()) < 0 && vActiveUsers.length > 0) {
                        userDisable = ' disabled_item_link';
                        usertitle = 'title="This user is no longer available."';
                    }
                    vUsers = '<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(item.Requestor) + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + item.Requestor + '</a>';
                }

            }
            $("#spRequestor").html(vUsers)
            if (item.InRecycleBin == "Yes")
                $("#summRelatedRequest").html('<a href="/Pipeline/RequestDetails?RequestID=' + requestid + '">' + item.RequestTitle + '</a>');
            else
                $("#summRelatedRequest").html('<a href="/Pipeline/RequestDetails?RequestID=' + requestid + '">' + item.RequestTitle + '</a>');
        },
        error: function (request) {
        }
    });
}


$(document).ready(function () {
    $("#dvManageContractStatus").dialog({
        autoOpen: false,
        closeText: "",
        width: "60%",
        title: "Manage Contract Record Status",
        buttons: {
            "OK": function () {

                ChangeContractStatus();
            },
            Cancel: function () {
                $(this).dialog("close");
            }
        },
        modal: true
    });

    //Popup for the single document status by ID start
    $("#dvManageDocumentStatus").dialog({
        autoOpen: false,
        closeText: "",
        width: "60%",
        title: "Manage Document Status",
        buttons: {
            "OK": function () {
                ChangeDocumentStatusByID();
            },
            Cancel: function () {
                changedocumentstatusbyid = '';
                $(this).dialog("close");
            }
        },
        modal: true
    });
    //Popup for the single document status by ID End

    $(".openmenuTerm").contextMenu({
        menu: 'dropdownMenuTerm', leftButton: true
    }, function (action, el, pos) {
        contextMenuTerm(action, el.parent("div"), pos);
    });
    $(".openmenuFixedTerm").contextMenu({
        menu: 'dropdownMenuFixedTerm', leftButton: true
    }, function (action, el, pos) {
        contextMenuFixedTerm(action, el.parent("div"), pos);
    });
    $(".openmenuRenewalTerm").contextMenu({
        menu: 'dropdownMenuRenewalTerm', leftButton: true
    }, function (action, el, pos) {
        contextMenuRenewalTerm(action, el.parent("div"), pos);
    });
});

function contextMenuTerm(action, el, pos) {
    switch (action) {
        case "view":
            {
                var vTermType = contractItem.ContractTermType;
                var vTermTypeDisplay = vTermType != "" ? TermTypeDisplayName[vTermType] : "NA";
                var vMetadata = '<tr>';
                vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Term Type</td>';
                vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + vTermTypeDisplay + '</td>';
                vMetadata += '</tr>';
                if (vTermType == "Fixed Term") {
                    var vStartdate = '';
                    var vEnddate = '';

                    var vCounterNotice = '';
                    //Renewal / Cancellation Conditions
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Cancellation Conditions</td>';
                    if (contractItem.ContractTermNotes != null && contractItem.ContractTermNotes != '')
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + contractItem.ContractTermNotes + '</td>';
                    else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';
                    vMetadata += '</tr>';



                    //Current Term
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Start / Effective Date</td>';
                    if (contractItem.StartDate != null && contractItem.StartDate != '') {
                        var rstartdate = '';
                        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                            rstartdate = contractItem.StartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                        }
                        else {
                            if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                                rstartdate = contractItem.StartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                            }
                            else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                                rstartdate = contractItem.StartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                            }

                        }
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + rstartdate + ' </td>';
                    }
                    else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';

                    vMetadata += '</tr>';


                    //Next Evaluation Date
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Next Evaluation Date</td>';
                    if (contractItem.NextEvaluationDate != null && contractItem.NextEvaluationDate != '') {
                        var nextEvaluationDate = '';
                        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                            nextEvaluationDate = contractItem.NextEvaluationDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                        }
                        else {
                            if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                                nextEvaluationDate = contractItem.NextEvaluationDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                            }
                            else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                                nextEvaluationDate = contractItem.NextEvaluationDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                            }

                        }
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + nextEvaluationDate + '</td>';
                    }
                    else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';

                    vMetadata += '</tr>';


                    //End Date
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">End Date</td>';
                    if (contractItem.EndDate != null && contractItem.EndDate != '') {
                        var renddate = '';
                        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                            renddate = contractItem.EndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                        }
                        else {
                            if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                                renddate = contractItem.EndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                            }
                            else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                                renddate = contractItem.EndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                            }

                        }
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + renddate + '</td>';
                    }
                    else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';

                    vMetadata += '</tr>';


                    //Counterparty Contact / Address for Notice
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Counterparty Contact / Address for Notice</td>';
                    if (contractItem.CounterpartyNotices != null && contractItem.CounterpartyNotices != '')
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + contractItem.CounterpartyNotices + '</td>';
                    else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';
                    vMetadata += '</tr>';

                    //Counterparty Cancellation Notice
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Counterparty Cancellation Notice</td>';
                    if (contractItem.CounterpartyNoticesCancel != null && contractItem.CounterpartyNoticesCancel != '') {
                        //var counterpartyNoticesCancelDate = '';
                        //if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                        //    counterpartyNoticesCancelDate = contractItem.CounterpartyNoticesCancelDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                        //}
                        //else {
                        //    if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                        //        counterpartyNoticesCancelDate = contractItem.CounterpartyNoticesCancelDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                        //    }
                        //    else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                        //        counterpartyNoticesCancelDate = contractItem.CounterpartyNoticesCancelDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                        //    }

                        //}
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + contractItem.CounterpartyNoticesCancel + ' day(s)</td>';
                    } else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';
                    vMetadata += '</tr>';

                    $(".renewableTermDetails").css('display', 'none');

                    showTermActivities();

                }
                else if (vTermType == "Evergreen / Perpetual") {
                    //Renewal / Cancellation Conditions
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Cancellation Conditions</td>';
                    if (contractItem.ContractTermNotes != null && contractItem.ContractTermNotes != '')
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + contractItem.ContractTermNotes + '</td>';
                    else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';
                    vMetadata += '</tr>';



                    //Current Term
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Start / Effective Date</td>';
                    if (contractItem.StartDate != null && contractItem.StartDate != '') {
                        var rstartdate = '';
                        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                            rstartdate = contractItem.StartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                        }
                        else {
                            if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                                rstartdate = contractItem.StartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                            }
                            else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                                rstartdate = contractItem.StartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                            }

                        }
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + rstartdate + ' </td>';
                    }
                    else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';

                    vMetadata += '</tr>';


                    //Next Evaluation Date
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Next Evaluation Date</td>';
                    if (contractItem.NextEvaluationDate != null && contractItem.NextEvaluationDate != '') {
                        var nextEvaluationDate = '';
                        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                            nextEvaluationDate = contractItem.NextEvaluationDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                        }
                        else {
                            if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                                nextEvaluationDate = contractItem.NextEvaluationDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                            }
                            else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                                nextEvaluationDate = contractItem.NextEvaluationDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                            }

                        }
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + nextEvaluationDate + '</td>';
                    }
                    else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';

                    vMetadata += '</tr>';

                    //Counterparty Contact / Address for Notice
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Counterparty Contact / Address for Notice</td>';
                    if (contractItem.CounterpartyNotices != null && contractItem.CounterpartyNotices != '')
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + contractItem.CounterpartyNotices + '</td>';
                    else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';
                    vMetadata += '</tr>';

                    //Counterparty Cancellation Notice
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Counterparty Cancellation Notice</td>';
                    if (contractItem.CounterpartyNoticesCancel != null && contractItem.CounterpartyNoticesCancel != '') {
                        //var counterpartyNoticesCancelDate = '';
                        //if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                        //    counterpartyNoticesCancelDate = contractItem.CounterpartyNoticesCancelDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                        //}
                        //else {
                        //    if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                        //        counterpartyNoticesCancelDate = contractItem.CounterpartyNoticesCancelDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                        //    }
                        //    else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                        //        counterpartyNoticesCancelDate = contractItem.CounterpartyNoticesCancelDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                        //    }

                        //}
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + contractItem.CounterpartyNoticesCancel + ' day(s)</td>';
                    } else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';
                    vMetadata += '</tr>';

                    $(".renewableTermDetails").css('display', 'none');
                    showTermActivities();
                }
                else if (vTermType == "Executed / Performance") {
                    //Renewal / Cancellation Conditions
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Cancellation Conditions</td>';
                    if (contractItem.ContractTermNotes != null && contractItem.ContractTermNotes != '')
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + contractItem.ContractTermNotes + '</td>';
                    else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';
                    vMetadata += '</tr>';



                    //Date of execution
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Start / Effective Date</td>';
                    if (contractItem.StartDate != null && contractItem.StartDate != '') {
                        var rstartdate = '', renddate = '';
                        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                            rstartdate = contractItem.StartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                        }
                        else {
                            if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                                rstartdate = contractItem.StartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                            }
                            else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                                rstartdate = contractItem.StartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                            }

                        }
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + rstartdate + ' </td>';
                    }
                    else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';

                    vMetadata += '</tr>';


                    //Counterparty Contact / Address for Notice
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Counterparty Contact / Address for Notice</td>';
                    if (contractItem.CounterpartyNotices != null && contractItem.CounterpartyNotices != '')
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + contractItem.CounterpartyNotices + '</td>';
                    else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';
                    vMetadata += '</tr>';

                    //Counterparty Cancellation Notice
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Counterparty Cancellation Notice</td>';
                    if (contractItem.CounterpartyNoticesCancel != null && contractItem.CounterpartyNoticesCancel != '') {
                        //var counterpartyNoticesCancelDate = '';
                        //if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                        //    counterpartyNoticesCancelDate = contractItem.CounterpartyNoticesCancelDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                        //}
                        //else {
                        //    if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                        //        counterpartyNoticesCancelDate = contractItem.CounterpartyNoticesCancelDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                        //    }
                        //    else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                        //        counterpartyNoticesCancelDate = contractItem.CounterpartyNoticesCancelDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                        //    }

                        //}
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + contractItem.CounterpartyNoticesCancel + ' day(s)</td>';
                    } else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';
                    vMetadata += '</tr>';

                    $(".renewableTermDetails").css('display', 'none');
                    showTermActivities();
                } else if (vTermType == "Renewable") {
                    var vRenewOn = '';

                    //Renewal / Cancellation Conditions
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Renewal / Cancellation Conditions</td>';
                    if (contractItem.ContractTermNotes != null && contractItem.ContractTermNotes != '')
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + contractItem.ContractTermNotes + '</td>';
                    else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';
                    vMetadata += '</tr>';

                    //Auto-Renew at the end of each term
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Auto-Renew at the end of each term</td>';
                    if (contractItem.AutoRenew != null && contractItem.AutoRenew != '')
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + contractItem.AutoRenew + '</td>';
                    else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';
                    vMetadata += '</tr>';

                    //Requires Renewal Authorization
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Requires Renewal Authorization</td>';
                    if (contractItem.RequiresAuth != null && contractItem.RequiresAuth != '')
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + contractItem.RequiresAuth + '</td>';
                    else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';
                    vMetadata += '</tr>';

                    //Renewal Notice to Counterparty
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Renewal Notice to Counterparty</td>';
                    if (contractItem.CounterpartyNoticesRenewalDate != null && contractItem.CounterpartyNoticesRenewalDate != '') {
                        var counterpartyNoticesRenewalDate = '';
                        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                            counterpartyNoticesRenewalDate = contractItem.CounterpartyNoticesRenewalDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                        }
                        else {
                            if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                                counterpartyNoticesRenewalDate = contractItem.CounterpartyNoticesRenewalDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                            }
                            else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                                counterpartyNoticesRenewalDate = contractItem.CounterpartyNoticesRenewalDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                            }

                        }
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + counterpartyNoticesRenewalDate + '</td>';
                    } else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';
                    vMetadata += '</tr>';

                    //Counterparty Cancellation Notice
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Counterparty Cancellation Notice</td>';
                    if (contractItem.CounterpartyNoticesCancelDate != null && contractItem.CounterpartyNoticesCancelDate != '') {
                        var counterpartyNoticesCancelDate = '';
                        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                            counterpartyNoticesCancelDate = contractItem.CounterpartyNoticesCancelDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                        }
                        else {
                            if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                                counterpartyNoticesCancelDate = contractItem.CounterpartyNoticesCancelDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                            }
                            else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                                counterpartyNoticesCancelDate = contractItem.CounterpartyNoticesCancelDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                            }

                        }
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + counterpartyNoticesCancelDate + '</td>';
                    } else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';
                    vMetadata += '</tr>';

                    //Counterparty Contact / Address for Notice
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Counterparty Contact / Address for Notice</td>';
                    if (contractItem.CounterpartyNotices != null && contractItem.CounterpartyNotices != '')
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + contractItem.CounterpartyNotices + '</td>';
                    else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';
                    vMetadata += '</tr>';

                    //Current Term
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Current Term</td>';
                    if (contractItem.EffectiveDate != null && contractItem.EffectiveDate != '') {
                        var rstartdate = '', renddate = '';
                        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                            rstartdate = contractItem.EffectiveDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                            if (contractItem.TermEndDate != null)
                                renddate = contractItem.TermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                        }
                        else {
                            if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                                rstartdate = contractItem.EffectiveDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                                if (contractItem.TermEndDate != null)
                                    renddate = contractItem.TermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                            }
                            else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                                rstartdate = contractItem.EffectiveDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                                if (contractItem.TermEndDate != null)
                                    renddate = contractItem.TermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                            }

                        }
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + rstartdate + ' - ' + renddate + '</td>';
                    }
                    else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';
                    vMetadata += '</tr>';

                    //Upcoming Term
                    vMetadata += '<tr>';
                    vMetadata += '<td style="padding: 5px;color: #2f2f2f;">Upcoming Term</td>';
                    if (contractItem.NextTermStartDate != null && contractItem.NextTermStartDate != '' && contractItem.NextTermEndDate != null && contractItem.NextTermEndDate != '') {
                        var rstartdate = '', renddate = '';
                        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                            rstartdate = contractItem.NextTermStartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                            renddate = contractItem.NextTermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                        }
                        else {
                            if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                                rstartdate = contractItem.NextTermStartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                                renddate = contractItem.NextTermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                            }
                            else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                                rstartdate = contractItem.NextTermStartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                                renddate = contractItem.NextTermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                            }

                        }
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">' + rstartdate + ' - ' + renddate + '</td>';
                    }
                    else
                        vMetadata += '<td style="padding: 5px;color: #2f2f2f;">-</td>';
                    vMetadata += '</tr>';

                    $(".renewableTermDetails").css('display', '');
                    //$("#MetaRenewalViewHistoryLink").css("display", "");
                    //$("#tblMetadataDetail").css("display", "none");
                    //$("#viewMetadataDetailForRenew").css("display", "");
                    //    vMetadata += '<h2 class="pop_heading" style="font-size: 18px;text-decoration: initial;">Term Type :' + vTermType + '</h2></br>';
                    //    vMetadata += '<small>Renew On or Before:</small>';
                    //    if (contractItem.CounterpartyNoticesRenewal != null && contractItem.CounterpartyNoticesRenewalDate != null) {
                    //        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                    //        { vRenewOn = contractItem.CounterpartyNoticesRenewalDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1'); }
                    //        else {
                    //            if (localStorage.AppDateFormat == 'DD/MM/YYYY') { vRenewOn = contractItem.CounterpartyNoticesRenewalDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1'); }
                    //            else if (localStorage.AppDateFormat == 'MM/DD/YYYY') { vRenewOn = contractItem.CounterpartyNoticesRenewalDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1'); }

                    //        }
                    //        vMetadata += '<small class="small_text">' + vRenewOn + '</small></br>';
                    //    }
                    //    else {
                    //        vMetadata += '</br>';
                    //    }
                    //    vMetadata += '<small>Upcoming Term :</small>';
                    //    vMetadata += '<small class="small_text">';
                    //    if (contractItem.NextTermStartDate != null)
                    //        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                    //        { vMetadata += contractItem.NextTermStartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1'); }
                    //        else {
                    //            if (localStorage.AppDateFormat == 'DD/MM/YYYY') { vMetadata += contractItem.NextTermStartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1'); }
                    //            else if (localStorage.AppDateFormat == 'MM/DD/YYYY') { vMetadata += contractItem.NextTermStartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1'); }

                    //        }
                    //    vMetadata += '</small>';
                    //    vMetadata += '<small>-</small>';
                    //    vMetadata += '<small class="small_text">';
                    //    if (contractItem.NextTermEndDate != null)
                    //        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                    //        { vMetadata += contractItem.NextTermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1'); }
                    //        else {
                    //            if (localStorage.AppDateFormat == 'DD/MM/YYYY') { vMetadata += contractItem.NextTermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1'); }
                    //            else if (localStorage.AppDateFormat == 'MM/DD/YYYY') { vMetadata += contractItem.NextTermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1'); }
                    //        }
                    //    vMetadata += '</small></br>';
                    //    vMetadata += '<small>Current Term :</small>';
                    //    vMetadata += '<small class="small_text">';
                    //    if (contractItem.EffectiveDate != null)
                    //        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                    //        { vMetadata += contractItem.EffectiveDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1'); }
                    //        else {
                    //            if (localStorage.AppDateFormat == 'DD/MM/YYYY') { vMetadata += contractItem.EffectiveDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1'); }
                    //            else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                    //                vMetadata += contractItem.EffectiveDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                    //            }
                    //        }
                    //    vMetadata += '</small>';
                    //    vMetadata += '<small>-</small>';
                    //    vMetadata += '<small class="small_text">';
                    //    if (contractItem.TermEndDate != null)
                    //        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                    //        { vMetadata += contractItem.TermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1'); }
                    //        else {
                    //            if (localStorage.AppDateFormat == 'DD/MM/YYYY') { vMetadata += contractItem.TermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1'); }
                    //            else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                    //                vMetadata += contractItem.TermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                    //            }
                    //        }
                    //    vMetadata += '</small></br>';
                    //    vMetadata += '<h2 class="pop_heading" style="font-size: 18px;">Renewal Terms & Conditions</h2></br>';
                    //    var RenewalTypes = '';
                    //    if (contractItem.RequiresAuth != null && contractItem.AutoRenew != null) {
                    //        if (contractItem.AutoRenew == 'Yes')
                    //            RenewalTypes += 'Auto Renewal ';
                    //        else
                    //            RenewalTypes += 'Manual Renewal ';

                    //        if (contractItem.RequiresAuth == 'Yes')
                    //            RenewalTypes += 'With Authorization';
                    //        else
                    //            RenewalTypes += 'Without Authorization';
                    //    }
                    //    vMetadata += '<small>Renewal Types :</small><small class="small_text">' + RenewalTypes + '</small></br>';
                    //    vMetadata += '<small>Renewal/Termination Conditions :</small><small class="small_text">' + contractItem.ContractTermNotes + '</small></br>';
                    //    var CounterNoticeON = '';
                    //    var vDiffNoticON = '';
                    //    var vFromDate = moment(new Date());
                    //    if (contractItem.CounterpartyNoticesCancel != null && contractItem.CounterpartyNoticesCancelDate != null) {
                    //        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                    //        { CounterNoticeON = contractItem.CounterpartyNoticesCancelDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1'); }
                    //        else {
                    //            if (localStorage.AppDateFormat == 'DD/MM/YYYY') { CounterNoticeON = contractItem.CounterpartyNoticesCancelDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1'); }
                    //            else if (localStorage.AppDateFormat == 'MM/DD/YYYY') { CounterNoticeON = contractItem.CounterpartyNoticesCancelDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1'); }
                    //        }
                    //        vDiffNoticON = DiffBetDate(vFromDate, contractItem.CounterpartyNoticesCancelDate);
                    //        vMetadata += '<small class="small_text">Counterparty Notice for Termination ' + vDiffNoticON + ' Prior (' + CounterNoticeON + ')</small></br>';
                    //    }

                    //    vMetadata += '<h2 class="pop_heading" style="font-size: 18px;">Renewal Activity & Status</h2></br>';
                    //    vMetadata += '<small class="small_text">' + UpcomingChecklist + '</small></br>';
                    //    vMetadata += '<small class="small_text">' + UpComingNotes + '</small>';
                    //}
                }
                $("#tbodyTermSummary").html(vMetadata);
                //setBlankValueToHyphen("tblMetadataDetail");
                $("#dvRenewHistory").css('display', 'none');
                $("#dvActivityComment").css('display', 'none');
                $("#viewMetadataDetail").dialog("option", "title", "View Contract Term & Renewals Details");
                $("#viewMetadataDetail").dialog("open");
                break;
            }
        case "manage":

            {
                OpenManageContractTerm(contractItem);

                break;
            }
    }
}
//Added 2.4final to 2.4
function contextMenuFixedTerm(action, el, pos) {
    switch (action) {

        case "manage":
            {
                OpenManageContractTerm(contractItem);
                break;
            }
        case "Cancel":
            {
                $("#txtReasonOfCancel").val("");
                $("#ddlSendToCancel").val('');
                $("#dvCancelContract").dialog("open");
                break;
            }

    }
}
function contextMenuRenewalTerm(action, el, pos) {
    switch (action) {

        case "manage":
            {
                OpenManageContractTerm(contractItem);
                break;
            }
        case "Expire":
            {
                ExpireContract();
                break;
            }

    }
}
// 
function toggledivsingle(object, imgObject) {
    $("#" + object).slideToggle();

    var imgObj = $("#" + imgObject);

    if (imgObj.attr("title") == "Collapse") {
        imgObj.attr("title", "Expand");
        imgObj.attr("src", "../Content/Images/e-open.png");
    } else {
        imgObj.attr("title", "Collapse");
        imgObj.attr("src", "../Content/Images/e-close.png");
    }
}

$("#linkAddValidity").click(function () {
    //$("#formValidity").toggle();
    $("#formValidityForm").toggle();
    //manoj
    $('#linkAddValidity').text("Document Validity & Reminders ");
    if (document.getElementById("formValidityForm").style.display == "none") {
        $('#linkAddValidity').append("<img src='../Content/Images/down_more.png' />");
    } else {
        $('#linkAddValidity').append("<img src='../Content/Images/up_arrow.png' />");
    }
});

$("#linkMoreInfo").click(function () {
    $(".clmoreinfo").toggle();
    if ($('#linkMoreInfo').text().indexOf("More Information") > -1) {
        $('#linkMoreInfo').text("Less Information ");
        $('#linkMoreInfo').append("<img src='../Content/Images/up_arrow.png' />");
    } else {
        $('#linkMoreInfo').text("More Information ");
        $('#linkMoreInfo').append("<img src='../Content/Images/down_more.png' />");
    }
    //$('#linkMoreInfo').append("<img src='../Content/Images/down_more.png' />");
});

$("#linkMoreInfo1").click(function () {
    $(".clmoreinfo1:not(.finalizedDoc)").toggle();
    if ($('#linkMoreInfo1').text().indexOf("More Information") > -1) {
        $('#linkMoreInfo1').text("Less Information ");
        $('#linkMoreInfo1').append("<img src='../Content/Images/up_arrow.png' />");
    } else {
        $('#linkMoreInfo1').text("More Information ");
        $('#linkMoreInfo1').append("<img src='../Content/Images/down_more.png' />");
    }
    //$('#linkMoreInfo1').append("<img src='../Content/Images/down_more.png' />");
});

$("#ddlHistoryFilter").change(function () {
    var option = $(this).find('option:selected').val();
    if (option == "All") {
        CreateContractActivityList();
    } else {
        CreateContractActivityList(option);
    }
});

$("#linkAddValidity1").click(function () {
    $("#formValidity1").toggle();
    $("#formDocImg1").toggle();
    $("#ulvalidity1").toggle();

    //manoj
    $('#linkAddValidity1').text("Document Validity & Reminders ");
    if (document.getElementById("ulvalidity1").style.display == "none") {
        //$('#linkAddValidity1').text("Document Validity & Reminders ");
        $('#linkAddValidity1').append("<img src='../Content/Images/down_more.png' />");
    } else {
        $('#linkAddValidity1').append("<img src='../Content/Images/up_arrow.png' />");
    }
    //manoj


    //if ($("#linkAddValidity1").text() == "Track document expiration date") {
    //    $('#linkAddValidity1').text("Document does not expire");
    //} else {
    //    $('#linkAddValidity1').text("Track document expiration date");
    //}
});

function SetStandardFlag(strisstandard) {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts?contractid=' + vContractID + '&isstandard=' + strisstandard + '&username=' + localStorage.UserName,
        type: 'PUT',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
        },
        cache: false,
        success: function (data) {
            if (strisstandard == "Yes") {
                //$("#iStandardCont").css('display', '');
                //$("#iNonStandardCont").css('display', 'none');
                $("#liContractStandard").css('display', '');
                $("#liContractNonStandard").css('display', 'none');
                contractItem.IsStandard = "Yes";
            }
            else {
                //$("#iStandardCont").css('display', 'none');
                //$("#iNonStandardCont").css('display', '');
                $("#liContractStandard").css('display', 'none');
                $("#liContractNonStandard").css('display', '');
                contractItem.IsStandard = "No";
            }
            if (contractItem.IsDraft == "Yes") {
                $(".draft").css('display', 'none');
            }
            $("#loadingPage").fadeOut();
        },
        error: function () {
            $("#loadingPage").fadeOut();
        }
    });
}

function ViewGeneric(obj) {
    vGlobalObjForGeneric = obj;
    $("#loadingPage").fadeIn();
    $("#tblGeneric").empty();
    $("#tblGenericheader").empty();
    $("#liSelectedRU").empty();
    var art = '<tr><td><article style="width:100%; text-align:center;">';
    art += '<input id="txtSearchBoxGeneric" class="f_inpt cl width80" type="text"  style="text-wrap:none" placeholder="Type to Search" />';
    art += '<img title="Search" style="cursor: pointer; position: relative; left: -40px; top:-2px;" onclick="javascript: SearchGeneric();" src="../Content/Images/search_over.png" />';
    art += "<a href='javascript:void(0)' class='linkPickerClear' onclick='ClearGeneric();'>Clear</a>";
    art += '</article></td></tr>';
    $("#tblGenericheader").append(art);

    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contractfieldbydisplayname?fielddisplayname=' + encodeURIComponent(obj.id),
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            var prevSelected = $("#" + obj.title).val();
            arrprevRU = [];
            $.each(prevSelected.split(";"), function () {
                arrprevRU.push($.trim(this));
            });
            var arraysplitRU = [];
            myArrayRU = [];
            arraysplitRU = data[0].ChoiceValues.split("\n")
            var obj1 = {
            };
            for (var i = 0; i < arraysplitRU.length; i++) {
                if (!(arraysplitRU[i] in obj1)) {
                    if (arraysplitRU[i].trim() != "") {
                        myArrayRU.push(arraysplitRU[i]);
                    }
                }
                obj1[arraysplitRU[i]] = true;
            }
            var resultfound = true;
            var myArraylength = myArrayRU.length;
            $("#browseGeneric").data('param_1', obj.title).dialog("option", "title", obj.id + " Picker");
            CreateReportUnitList(0);
            var vCount = myArraylength;

            $('#compact-paginationGeneric').pagination({
                items: vCount,
                itemsOnPage: 10,
                typeID: 'tblGeneric',
                cssStyle: 'compact-theme',
                listname: 'ReportUnit'
            });
            $('#compact-paginationGeneric').css("display", "");
            $("#txtSearchBoxGeneric").autocomplete({
                source: myArrayRU,
                minLength: 1,
                focus: function (event, ui) {
                    return false;
                },
                select: function (evn, uidetails) {
                    $("#txtSearchBoxGeneric").val(uidetails.item.label);
                    SearchGeneric();
                }
            });
            $("#loadingPage").fadeOut();
            $("#browseGeneric").dialog("open");

        },
        error:
            function (data) {
                $("#tblGeneric").html("No item found.");
                $("#browseGeneric").dialog("open");
                $("#loadingPage").fadeOut();
            }
    });

    $('#txtSearchBoxGeneric').keypress(function (e) {
        if ($('#txtSearchBoxGeneric').val() != "") {
            if (e.keyCode == 13) {
                $(".ui-autocomplete").css('display', 'none');
                SearchGeneric();
            }
        }
    });
}

function ClearGeneric() {
    $('#loadGen').html('<img src="../Content/Images/icon/loading.gif">');
    $("#tblGeneric").find("tr:gt(0)").remove();
    $("#txtSearchBoxGeneric").val("")
    var searchKeyword = "";
    filtergeneric(searchKeyword);
}

function SearchGeneric() {
    $('#loadGen').html('<img src="../Content/Images/icon/loading.gif">Searching...');
    $("#tblGeneric").find("tr:gt(0)").remove();
    var searchKeyword = $("#txtSearchBoxGeneric").val();
    filtergeneric(searchKeyword);
}

function filtergeneric(searchKeyword) {
    $("#tblGeneric").empty();
    $("#liSelectedRU").empty();
    multipleChecksDocumentID = [];
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contractfieldbydisplayname?fielddisplayname=' + encodeURIComponent(vGlobalObjForGeneric.id),
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            var prevSelected = $("#" + vGlobalObjForGeneric.title).val();
            arrprevRU = [];
            $.each(prevSelected.split(";"), function () {
                arrprevRU.push($.trim(this));
            });
            var arraysplitRU = [];
            myArrayRU = [];
            arraysplitRU = data[0].ChoiceValues.split("\n")
            var obj1 = {
            };
            for (var i = 0; i < arraysplitRU.length; i++) {
                if (!(arraysplitRU[i] in obj1)) {
                    if (arraysplitRU[i].trim() != "") {
                        if (arraysplitRU[i].toLowerCase().indexOf(searchKeyword.toLowerCase()) > -1 || searchKeyword == "") {
                            myArrayRU.push(arraysplitRU[i]);
                        }
                        obj1[arraysplitRU[i]] = true;
                    }
                }
            }
            var resultfound = true;
            var myArraylength = myArrayRU.length;
            CreateReportUnitList(0);

            var vCount = myArraylength;

            var vCount = $("#tblGeneric tr").length;

            $('#compact-paginationGeneric').pagination({
                items: vCount,
                itemsOnPage: 10,
                typeID: 'tblGeneric',
                cssStyle: 'compact-theme',
                listname: 'ReportUnit'
            });
            $('#compact-paginationGeneric').css("display", "");
            $("#txtSearchBoxGeneric").autocomplete({
                source: arraysplitRU,
                minLength: 1,
                focus: function (event, ui) {
                    return false;
                },
                select: function (evn, uidetails) {
                    $("#txtSearchBoxGeneric").val(uidetails.item.label);
                    SearchGeneric();
                }
            });
            $('#loadGen').empty();
        },
        error:
            function (data) {
                $('#loadGen').empty();
                $("#tblGeneric").html('No item found.')
            }
    });

    $('#txtSearchBoxGeneric').keypress(function (e) {
        if ($('#txtSearchBoxGeneric').val() != "") {
            if (e.keyCode == 13) {
                $(".ui-autocomplete").css('display', 'none');
                SearchGeneric();
            }
        }
    });
}

function BindUpdatedContractDetails(contractid) {
    $("#loadingPage").fadeIn();
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts?contractid=' + contractid,
        type: 'GET',
        cache: false,
        contentType: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, UserID: localStorage.UserID
        },
        processData: false,
        success: function (item) {
            contractItem = item;
            vContractTile = item.ContractTitle;

            BindContractPeopleMetadata(item);
            BindContractRolesMetadata();
            ContractTopActions();
            if (item.InRecycleBin == "Yes") {
                $("#hdnPermission").val('View');
                $("#liContractstatus").hide()
                $("#dvRecyclebinMessage").css('display', '');
            }
            else {
                $("#hdnPermission").val(item.Permission);

            }
            ApplyPermissionToMenu($("#hdnPermission").val());
            if (item.IsStandard == "Yes") {
                //$("#iStandardCont").css('display', '');
                //$("#iNonStandardCont").css('display', 'none');

                $("#liContractStandard").css('display', 'none');
                $("#liContractNonStandard").css('display', '');
            } else {
                //$("#iStandardCont").css('display', 'none');
                //$("#iNonStandardCont").css('display', '');
                $("#liContractStandard").css('display', '');
                $("#liContractNonStandard").css('display', 'none');
            }
            if (item.InRecycleBin == "Yes" && item.Permission == "Manage") {
                $("#DeleteContract").show();
                $("#DeleteContractRecycle").show();
            }
            BindContractTermDetail(contractItem);
            $("#loadingPage").fadeOut();
        },
        error: function (data) {
            $("#loadingPage").fadeOut();

            BindContractTermDetail(contractItem);

            $("#loadingPage").fadeOut();
        },
        error: function (data) {
            $("#loadingPage").fadeOut();
        }
    });
}

$("#rad_ReplaceComputer").click(function () {
    $(".validelement").each(function (index, element) {
        $(element).removeClass("error");
        $("#errormsg_" + element.id).remove();
    });
    //manoj
    //For OCR Document
    $("#ReplacefileUploadOCR").prop('checked', false);
    $("#trReplacefileUploadOCR").css('display', 'none');
    //For OCR Document
    //manoj
});

$("#rad_ReplaceTemplate").click(function () {
    $(".validelement").each(function (index, element) {
        $(element).removeClass("error");
        $("#errormsg_" + element.id).remove();
    });
    $("#lblTemplateDescription").text("");
    //manoj
    //For OCR Document
    $("#ReplacefileUploadOCR").prop('checked', false);
    $("#trReplacefileUploadOCR").css('display', 'none');
    //For OCR Document
    //manoj
});

$("#btnCancel").click(function () {
    $('#txtAddUser').val('').trigger('chosen:updated');
    $("#ddlPermission").val("0");
    $("#divBtn").hide();
});

$("#btnSave").click(function () {
    if (requiredValidator("addEditPermission")) {
        var string = "";
        var UserDesignation = "";
        var arrApprovers = $.map(contractItem.Approvers.split(";"), $.trim);
        var arrReviewers = $.map(contractItem.Reviewers.split(";"), $.trim);
        var arrContractManagers = $.map(contractItem.ContractManagers.split(";"), $.trim);
        var arrRequestor = $.map(contractItem.Requestor.split(";"), $.trim);
        var PermissionToUser = $("#txtAddUser").val();
        var vLastRow = $("#newPopup li:last").attr('id');
        var totalPermissionCount = "1";
        if (typeof vLastRow == "undefined") {
            totalPermissionCount = "1";
        }
        else {
            vLastRow = $("#newPopup li").length;
            totalPermissionCount = parseInt(vLastRow);
            totalPermissionCount = parseInt(totalPermissionCount) + 1;
        }
        $(PermissionToUser).each(function (i, item) {
            if ($.inArray(item, arrApprovers) > -1) {
                UserDesignation = "(Approver)";
            }
            else if ($.inArray(item, arrReviewers) > -1) {
                UserDesignation = "(Reviewer)";
            }
            else if ($.inArray(item, arrContractManagers) > -1) {
                UserDesignation = "(Contract Owner)";
            }
            else if ($.inArray(item, arrRequestor) > -1) {
                UserDesignation = "(Requestor)";
            }
            string += "<li id='PermissionList" + totalPermissionCount + "'><div class='share-pop-up-Middle'><div><p id='PermissionUser" + totalPermissionCount + "'>" + item + "</p>";
            string += "<span >" + UserDesignation + "</span></div></div>";
            string += "<div class='share-pop-up-Right'><span id='UserPermission" + totalPermissionCount + "'><select id='PermissionOption" + totalPermissionCount + "'>";
            if ($("#ddlPermission option:selected").text() == "Full Control") {
                string += "<option value='FullControl' selected >Full Control</option>";
                string += "<option value='Read/Write'>Read/Write</option>";
                string += "<option value='ReadOnly'>Read Only</option>";
            }
            else if ($("#ddlPermission option:selected").text() == "Read/Write") {
                string += "<option value='FullControl'  >Full Control</option>";
                string += "<option value='Read/Write' selected >Read/Write</option>";
                string += "<option value='ReadOnly'>Read Only</option>";
            }
            else if ($("#ddlPermission option:selected").text() == "Read Only") {
                string += "<option value='FullControl'>Full Control</option>";
                string += "<option value='Read/Write'>Read/Write</option>";
                string += "<option value='ReadOnly' selected >Read Only</option>";
            }
            string += "</select><img id=" + totalPermissionCount + " src='/Content/Images/close.png' onclick='Remove(this)'/></span></div></li>";
            arrPermsnUser.push(item.trim());
            totalPermissionCount = parseInt(totalPermissionCount) + 1;
            UserDesignation = "";
        });
        $('#newPopup').append(string);
        var arrForPermission = [];

        $("#txtAddUser").empty();

        arrUser = arrUser.filter(function (x) {
            return arrPermsnUser.indexOf(x) < 0
        })
        var datalenght = arrUser.length;
        for (var i = 0; i < datalenght; i++) {
            var sUserName = arrUser[i];
            var article = '<option value="' + sUserName + '">' + sUserName + '</option>';
            $("#txtAddUser").append(article);

        }
        $("#txtAddUser").chosen();
        $('#txtAddUser').trigger('chosen:updated');
        $("#ddlPermission").val("0");

        $("#divBtn").hide();
    }

});

function Remove(obj) {
    swal({
        title: '',
        text: "Are you sure you want to <span style='font-weight:700'>delete</span>?",
        type: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes',
        cancelButtonText: 'No',
        html: true
    },
      function (confirmed) {
          if (confirmed) {
              var strPermissionUser = "";
              strPermissionUser = $("#PermissionUser" + obj.id).html();
              $("#txtAddUser").empty();
              arrUser.push(strPermissionUser);
              var i = arrPermsnUser.indexOf(strPermissionUser);
              if (i != -1)
                  arrPermsnUser.splice(i, 1);
              var datalenght = arrUser.length;
              var article;
              for (var i = 0; i < datalenght; i++) {
                  var sUserName = arrUser[i];
                  article += '<option value="' + sUserName + '">' + sUserName + '</option>';
              }
              $("#txtAddUser").html(article);
              $("#txtAddUser").chosen();
              $('#txtAddUser').trigger('chosen:updated');
              $("#PermissionList" + obj.id).remove();
          }
          return;
      });

}

$("#txtAddUser").change(function () {
    $("#divBtn").show();

});

$('#chkPublicContract').change(function () {
    var isChecked = this.checked;
    if (isChecked) {
        $("#chkpermission").attr("disabled", "disabled");
        $("#chkpermission").prop('checked', false);
    } else {
        $("#chkpermission").removeAttr("disabled");
        $("#chkpermission").prop('checked', false);
    }
});

function GetValueAndPopulateManagerNew(contractItem, item) {
    var GBCOwners = [];
    contractAccessUsers = [];
    var users = [];
    if (contractItem.ProjectManager != null && contractItem.ProjectManager != "" && contractItem.ProjectManager != "Not Assigned") {
        users = contractItem.ProjectManager.split(';');
        $.each(users, function (index, value) {
            contractAccessUsers.push(value.trim());
        });
    }

    if (contractItem.BusinessAreaOwners != null && contractItem.BusinessAreaOwners != "" && contractItem.BusinessAreaOwners != "Not Assigned") {
        users = contractItem.BusinessAreaOwners.split(';');
        $.each(users, function (index, value) {
            contractAccessUsers.push(value.trim());
        });
    }

    if (contractItem.ContractAreaAdministrators != null && contractItem.ContractAreaAdministrators != "" && contractItem.ContractAreaAdministrators != "Not Assigned") {
        users = contractItem.ContractAreaAdministrators.split(';');
        $.each(users, function (index, value) {
            contractAccessUsers.push(value.trim());
        });
    }

    users = $.map(contractItem.Approvers.split(";"), $.trim);
    $.each(users, function (index, value) {
        contractAccessUsers.push(value.trim());
    });

    users = $.map(contractItem.Reviewers.split(";"), $.trim);
    $.each(users, function (index, value) {
        contractAccessUsers.push(value.trim());
    });

    users = $.map(contractItem.ContractManagers.split(";"), $.trim);
    $.each(users, function (index, value) {
        contractAccessUsers.push(value.trim());
    });

    users = $.map(contractItem.Requestor.split(";"), $.trim);
    $.each(users, function (index, value) {
        contractAccessUsers.push(value.trim());
    });

    users = $.map(contractItem.SharedWith.split(";"), $.trim);
    $.each(users, function (index, value) {
        contractAccessUsers.push(value.trim());
    });

    users = $.map(contractItem.Requestor.split(";"), $.trim);
    $.each(users, function (index, value) {
        contractAccessUsers.push(value.trim());
    });
    $(ContractRoles).each(function () {
        var itemfield = $(this)[0];
        var itemfieldPerm = $(this)[1];
        if ($(RecvMetadatavaluetofinalize).find(itemfield).text() != "undefined" && $(RecvMetadatavaluetofinalize).find(itemfield).text() != null && $(RecvMetadatavaluetofinalize).find(itemfield).text() != "") {
            users = $.map($(RecvMetadatavaluetofinalize).find(itemfield).text().split(";"), $.trim);
            $.each(users, function (index, value) {
                contractAccessUsers.push(value.trim());
            });
        }
    });
    if (item != null && item != "") {
        users = $.map(item.FullControl.split(";"), $.trim);
        $.each(users, function (index, value) {
            contractAccessUsers.push(value.trim());
        });

        users = $.map(item.Contribute.split(";"), $.trim);
        $.each(users, function (index, value) {
            contractAccessUsers.push(value.trim());
        });

        users = $.map(item.Readonly.split(";"), $.trim);
        $.each(users, function (index, value) {
            contractAccessUsers.push(value.trim());
        });

    } else {

        if (contractItem.FullControlPermissions != null && contractItem.FullControlPermissions != "") {
            users = contractItem.FullControlPermissions.split(';');
            $.each(users, function (index, value) {
                contractAccessUsers.push(value.trim());
            });
        }

        if (contractItem.ReadWritePermissions != null && contractItem.ReadWritePermissions != "") {
            users = contractItem.ReadWritePermissions.split(';');
            $.each(users, function (index, value) {
                contractAccessUsers.push(value.trim());
            });
        }


        if (contractItem.ReadOnlyPermissions != null && contractItem.ReadOnlyPermissions != "") {
            users = contractItem.ReadOnlyPermissions.split(';');
            $.each(users, function (index, value) {
                contractAccessUsers.push(value.trim());
            });
        }
    }
    //Rahul
    if (allUsersList != [] && allUsersList.length > 0 && typeof allUsersList != 'undefined') {
        var allGlobalContractOwners = $.grep(allUsersList, function (item, i) {
            return item.UserType.indexOf('Global Contract Owner') > -1;
        });
        if (allGlobalContractOwners.length > 0) {
            GBCOwners = allGlobalContractOwners.map(function (p) {
                return p.UserName;
            });
            contractAccessUsers = contractAccessUsers.concat(GBCOwners);
        }
    }
    //Rahul
    contractAccessUsers = contractAccessUsers.filter(function (e) {
        return e
    });
    contractAccessUsers = contractAccessUsers.sort();
    contractAccessUsers = stringArrayUnique(contractAccessUsers).sort();

    arrPermsnUser = contractAccessUsers;
    //var vLastRow = $("#newPopup li:last").attr('id');

    //var totalPermissionCount = "1";
    //if (typeof vLastRow == "undefined") {
    //    totalPermissionCount = "1";
    //}
    //else {
    //    vLastRow = $("#newPopup li").length;
    //    totalPermissionCount = vLastRow;
    //    totalPermissionCount = parseInt(totalPermissionCount) + 1;
    //}

    var string = "";

    arrUser = arrUser.filter(function (el) {
        return contractAccessUsers.indexOf(el) < 0;
    });
    var datalenght = arrUser.length;
    var article;
    for (var i = 0; i < datalenght; i++) {
        var sUserName = arrUser[i];
        article += '<option value="' + sUserName + '">' + sUserName + '</option>';
    }
    $("#txtAddUser").html(article);
    $("#txtAddUser").chosen();
    $('#txtAddUser').trigger('chosen:updated');

    //ENH-472 (In Contract, People & Permission tab displaying all the Global Contract Owners.)
    //var allGlobalContractOwners = $.grep(allUsersList, function (item, i) {
    //    return item.UserType.indexOf('Global Contract Owner') > -1;
    //});

    //if (allGlobalContractOwners.length > 0) {
    //    var vUserClass = '';
    //    var userTitle = '';
    //    $.each(allGlobalContractOwners, function (i, user) {
    //        var pValue = i + 1;
    //        if (vActiveUsers.indexOf(user.UserName.trim()) < 0 && vActiveUsers.length > 0) {
    //            vUserClass = 'disabled_item_link';
    //            usertitle = "title='This user is no longer available.'";
    //        }

    //        string += "<li id='PermissionList" + pValue + "'><div class='share-pop-up-Middle'><div class='Link_UserProfile'><p id='PermissionUser" + pValue + "' class='" + vUserClass + "' " + usertitle + ">" + user.UserName.trim() + "</p>";
    //        string += "<span id='UserRole" + pValue + "'>" + "(Global Contract Owner)" + "</span></div></div>";
    //        string += "<div class='share-pop-up-Right'><span class='sortSpanUserPermission' id='UserPermission" + pValue + "'><label>Full Control</label></span></div></li>";

    //    });

    //    $('#newPopup').append(string);
    //}
    //    string = '';
    //ENH-472 (In Contract, People & Permission tab displaying all the Global Contract Owners.)


    //manoj
    var vLastRow = $("#newPopup li:last").attr('id');

    var totalPermissionCount = "1";
    if (typeof vLastRow == "undefined") {
        totalPermissionCount = "1";
    }
    else {
        vLastRow = $("#newPopup li").length;
        totalPermissionCount = vLastRow;
        totalPermissionCount = parseInt(totalPermissionCount) + 1;
    }
    //manoj

    $.each(contractAccessUsers, function (index, value) {
        var vUserClass = '';
        var userTitle = '';
        var fullpermission = false;
        var strUserRole = "";
        var strPermission = "";
        if ($.inArray(value, $.map(contractItem.BusinessAreaOwners.split(";"), $.trim)) > -1) {
            strUserRole = "Business Area Owner";
            strPermission = "Full Control";
            fullpermission = true;
        }

        //Rahul Added on 9th March 2018 
        var GlobalContractOwners = jQuery.grep(allGlobalContractOwners, function (user) {
            return (user.UserName == value);
        });

        if (GlobalContractOwners.length > 0) {
            strPermission = "Full Control";
            fullpermission = true;
            if (strUserRole != "") {
                strUserRole += ",Global Contract owner";
            }
            else {
                strUserRole = "Global Contract owner";
            }
        }
        //Rahul Added on 9th March 2018

        if ($.inArray(value, $.map(contractItem.ProjectManager.split(";"), $.trim)) > -1) {
            strPermission = "Full Control";
            fullpermission = true;
            if (strUserRole != "") {
                strUserRole += ",Project Manager";
            }
            else {
                strUserRole = "Project Manager";
            }
        }


        if ($.inArray(value, $.map(contractItem.ContractAreaAdministrators.split(";"), $.trim)) > -1) {
            if (strPermission == "") {
                strPermission = "Read Only";
            }
            if (strUserRole != "") {
                strUserRole += ",Contract Area Administrator";
            }
            else {
                strUserRole = "Contract Area Administrator";
            }
        }

        if ($.inArray(value, $.map(contractItem.Approvers.split(";"), $.trim)) > -1) {
            if (strUserRole != "") {
                strUserRole += ",Approver";
            }
            else {
                strUserRole = "Approver";
            }
        }

        if ($.inArray(value, $.map(contractItem.Reviewers.split(";"), $.trim)) > -1) {
            if (strUserRole != "") {
                strUserRole += ",Reviewer";
            }
            else {
                strUserRole = "Reviewer";
            }
        }

        if ($.inArray(value, $.map(contractItem.ContractManagers.split(";"), $.trim)) > -1) {
            if (strUserRole != "") {
                strUserRole += ",Contract Owner";
            }
            else {
                strUserRole = "Contract Owner";
            }
        }
        if ($.inArray(value, $.map(contractItem.Requestor.split(";"), $.trim)) > -1) {
            if (strUserRole != "") {
                strUserRole += ",Requestor";
            }
            else {
                strUserRole = "Requestor";
            }
        }

        $(ContractRoles).each(function () {
            var itemfield = $(this)[0];
            var itemfieldPerm = $(this)[1];
            var itemfieldDis = $(this)[2];
            if ($(RecvMetadatavaluetofinalize).find(itemfield).text() != "undefined" && $(RecvMetadatavaluetofinalize).find(itemfield).text() != null && $(RecvMetadatavaluetofinalize).find(itemfield).text() != "") {
                if ($.inArray(value, $.map($(RecvMetadatavaluetofinalize).find(itemfield).text().split(";"), $.trim)) > -1) {
                    if (strUserRole != "") {
                        strUserRole += "," + itemfieldDis;
                    }
                    else {
                        strUserRole = itemfieldDis;
                    }
                }
            }
        });


        if (item != null && item != "") {
            if ($.inArray(value, $.map(item.FullControl.split(";"), $.trim)) > -1) {
                strPermission = "Full Control";
            }

            if ($.inArray(value, $.map(item.Contribute.split(";"), $.trim)) > -1) {
                if (strPermission == "" || strPermission == "Read Only") {
                    strPermission = "Read/Write";
                }
            }

            if ($.inArray(value, $.map(item.Readonly.split(";"), $.trim)) > -1) {
                if (strPermission == "" || strPermission == "Read Only") {
                    strPermission = "Read Only";
                }
            }
        } else {
            if ($.inArray(value, $.map(contractItem.FullControlPermissions.split(";"), $.trim)) > -1) {
                strPermission = "Full Control";
            }

            if ($.inArray(value, $.map(contractItem.ReadWritePermissions.split(";"), $.trim)) > -1) {
                if (strPermission == "" || strPermission == "Read Only") {
                    strPermission = "Read/Write";
                }
            }

            if ($.inArray(value, $.map(contractItem.ReadOnlyPermissions.split(";"), $.trim)) > -1) {
                if (strPermission == "" || strPermission == "Read Only") {
                    strPermission = "Read Only";
                }
            }
        }

        if ($.inArray(value, $.map(contractItem.SharedWith.split(";"), $.trim)) > -1) {
            if (strUserRole != "") {
                strUserRole += "";
                strPermission = "Share";
                vUserClass = "Share"
            }
            else {
                strUserRole = "";
                strPermission = "Share";
                vUserClass = "Share";
            }
        }

        if (item != null && item != "") {

            if ($.inArray(value, $.map(item.FullControl.split(";"), $.trim)) > -1) {
                strPermission = "Full Control";
            }

            if ($.inArray(value, $.map(item.Contribute.split(";"), $.trim)) > -1) {
                if (strPermission == "" || strPermission == "Read Only") {
                    strPermission = "Read/Write";
                }
            }

            if ($.inArray(value, $.map(item.Readonly.split(";"), $.trim)) > -1) {
                if (strPermission == "") {
                    strPermission = "Read Only";
                }
            }

        }

        if (vUserClass == '') {
            if (vActiveUsers.indexOf(value.trim()) < 0 && vActiveUsers.length > 0) {
                vUserClass = 'disabled_item_link';
                usertitle = "title='This user is no longer available.'";
            }
        }
        else {
            vUserClass = '';
            usertitle = '';
        }

        string += "<li id='PermissionList" + totalPermissionCount + "'><div class='share-pop-up-Middle'><div class='Link_UserProfile'><p id='PermissionUser" + totalPermissionCount + "' class='" + vUserClass + "' " + usertitle + ">" + value.trim() + "</p>";

        if (strUserRole != "") {
            string += "<span id='UserRole" + totalPermissionCount + "'>" + "(" + strUserRole + ")" + "</span></div></div>";

        }
        else {
            string += "<span id='UserRole" + totalPermissionCount + "'>" + "" + strUserRole + "" + "</span></div></div>";
        }

        if (fullpermission) {
            strPermission = "Full Control";
            string += "<div class='share-pop-up-Right'><span class='sortSpanUserPermission' id='UserPermission" + totalPermissionCount + "'><label>" + strPermission + "</label></span></div></li>";

        }
        else {
            string += "<div class='share-pop-up-Right'><span class='sortSpanUserPermission' id='UserPermission" + totalPermissionCount + "'>";
            if (strPermission == "Full Control" || strPermission == "Read/Write" || strPermission == "Read Only") {
                string += "<select id='PermissionOption" + totalPermissionCount + "'>";
                if (strPermission == "Full Control") {
                    string += "<option value='FullControl' selected >Full Control</option>";
                    string += "<option value='Read/Write'>Read/Write</option>";
                    string += "<option value='ReadOnly'>Read Only</option>";
                }
                else if (strPermission == "Read/Write") {
                    string += "<option value='FullControl'  >Full Control</option>";
                    string += "<option value='Read/Write' selected >Read/Write</option>";
                    string += "<option value='ReadOnly'>Read Only</option>";
                }
                else if (strPermission == "Read Only") {
                    string += "<option value='FullControl'>Full Control</option>";
                    string += "<option value='Read/Write'>Read/Write</option>";
                    string += "<option value='ReadOnly' selected>Read Only</option>";
                }
                string += "</select>";
            }
            else {
                if (strPermission == "") {
                    strPermission = "Read Only";
                    string += "<label>" + strPermission + "</label>";
                }
                else if (strPermission == "Share") {
                    strPermission = "Shared As Link";
                    string += "<label>" + strPermission + "</label>";
                }
            }

            if (strUserRole == "" && strPermission != "Share" && strPermission != "Shared As Link") {
                string += "<img id=" + totalPermissionCount + " src='/Content/Images/close.png' onclick='Remove(this)'/>";
            }
            string += "</span></div></li>";
        }

        strPermission = "";
        totalPermissionCount = parseInt(totalPermissionCount) + 1;
    });

    $('#newPopup').append(string);
    var nonEditLI = $('#newPopup li').has('span.sortSpanUserPermission label');
    var editLI = $('#newPopup li').has('span.sortSpanUserPermission select');

    $('#newPopup').empty();

    $(nonEditLI).each(function () {
        $('#newPopup').append($(this));
    });

    $(editLI).each(function () {
        $('#newPopup').append($(this));
    });
    GBCOwners = [];
}

var vCounterpartyFields = [];

function getCounterpartyprimaryFields() {

    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty/primaryfields',
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (metadataFields) {
            vCounterpartyFields = [];
            $(metadataFields).each(function (i, item) {
                if (item != null && item.FieldName != null) {
                    if ((item.FieldName == "CounterpartyName") || (item.FieldName == "CounterpartyType") || (item.FieldName == "Status")) {
                        if (item.FieldName == "CounterpartyType") {
                            vCounterpartyFields.push(item.FieldName)
                        }
                    }
                    else {
                        vCounterpartyFields.push(item.FieldName)
                    }
                }
            });

        },
        error: function (metadataFields) {
            vCounterpartyFields = [];
        }
    });
}

function liRemoveSelectedCouterParty(obj) {
    var child = obj.parentNode;
    //manoj
    //var tablebind = $('#tblCounterparties').DataTable();
    //$.each($('input:checkbox[name="Counterparty"]:checked', tablebind.rows().nodes()), function () {
    $('input:checkbox[name="Counterparty"]:checked').each(function () {
        if (typeof ($.trim(this)) != 'undefined' && $.trim(this) != null) {
            if (unescape($.trim(this.value)) == child.textContent) {
                this.checked = false;
            }
        }
    });
    child.parentNode.removeChild(child);

    if ($('input:checkbox[name="Counterparty"]:checked').length == $('input:checkbox[name="Counterparty"]').length && $('input:checkbox[name="Counterparty"]:checked').length != 0) {
        $("#selectallCounterParty").prop('checked', true);
    } else {
        $("#selectallCounterParty").prop('checked', false);
    }
    //manoj

}

function funselectall(obj) {
    if (obj.checked) { // check select status  
        $('input:checkbox[name=Generic]').prop('checked', true);
        //checkMultipleDocumentsd("");
        checkGeneric("");
    } else {
        $('input:checkbox[name=Generic]').prop('checked', false);

        //checkMultipleDocumentsd("");
        checkGeneric("");
    }
}

function checkGeneric(object) {
    $('#liSelectedRU').empty();
    var checkboxcheck = true;
    $('input[type=checkbox][name="Generic"]').each(function () {
        var DocumentID = this.id;
        var duplicatechecking = false;
        var isChecked = this.checked;
        if (isChecked) {
            if ((multipleChecksDocumentIDd.indexOf(DocumentID.trim())) == -1) {
                multipleChecksDocumentIDd.push(DocumentID.trim());
            }
        }
        else {
            if (multipleChecksDocumentIDd.indexOf(DocumentID.trim()) != -1) {
                var ind = multipleChecksDocumentIDd.indexOf(DocumentID.trim());
                multipleChecksDocumentIDd.splice(ind, 1);
            }
            checkboxcheck = false;
        }
    });
    for (var spl = 0; spl < multipleChecksDocumentIDd.length; spl++) {
        if (multipleChecksDocumentIDd[spl].trim() != "") {
            $('#liSelectedRU').append('<span style="font-size:13px;">' + multipleChecksDocumentIDd[spl].trim() + '<img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveSelectedRU(this);" style="float:right" /></span>');
        }
    }
    if (checkboxcheck == true) {
        $("#selectall").prop('checked', true);
    }
    else {
        $("#selectall").prop('checked', false);
    }
    try {
        hideAllMenuAndStopPro(event);
    }
    catch (ex) {

    }
}

function liRemoveSelectedRU(obj) {
    var child = obj.parentNode;
    var child12 = child.firstChild.nodeValue;
    child12 = child12.trim();
    if (multipleChecksDocumentIDd.indexOf(child12) != -1) {
        var ind = multipleChecksDocumentIDd.indexOf(child12);
        multipleChecksDocumentIDd.splice(ind, 1);
    }

    //$("#" + child12).prop('checked', false);
    var checkboxcheck = true;
    child.parentNode.removeChild(child);
    $('input[type=checkbox][name="Generic"]').each(function () {
        var DocumentID = this.value;
        var duplicatechecking = false;
        if (multipleChecksDocumentIDd.indexOf(DocumentID.trim()) > -1) {
        }
        else {
            this.checked = false;
        }
        var isChecked = this.checked;
        if (!isChecked) {
            checkboxcheck = false;
        }
    });
    if (checkboxcheck == true) {
        $("#selectall").prop('checked', true);
    }
    else {
        $("#selectall").prop('checked', false);
    }
}

function CreateReportUnitList(page) {
    $("#tblGeneric").css("display", "");
    var startIndex = page * 10;
    var endIndex = startIndex + 10;
    $('#tblGeneric').empty();
    if (endIndex > myArrayRU.length) endIndex = myArrayRU.length;
    $("#spResult").html((startIndex + 1) + '&nbsp;to&nbsp;' + endIndex + '&nbsp;of&nbsp;' + myArrayRU.length);
    var resultfound = false;
    var checkboxchecking = true;
    if (startIndex == endIndex) {
        var art = "No items found.";
        $("#tblGeneric").html(art);
        checkboxchecking = false;
        $('#loadGen').empty();
    }
    else {
        $("#tblGeneric").html('');
        var spltarrprevRUstr = arrprevRU.toString();
        if (spltarrprevRUstr.indexOf(";") > -1) {
            var spltarrprevRU = spltarrprevRUstr.split(';');
            arrprevRU = [];
            for (var arrli = 0; arrli < spltarrprevRU.length; arrli++) {
                if (spltarrprevRU[arrli].trim() != "") {
                    arrprevRU.push(spltarrprevRU[arrli]);
                }
            }
        }
        for (var i = startIndex; i < endIndex; i++) {
            var article = "";
            if (i == startIndex) {
                article += '<tr><th><input id="selectall" onclick="funselectall(this);" type="checkbox"/> Select/Deselect All</th></tr>';
            }

            article += '<tr><td>';
            if (arrprevRU != null && multipleChecksDocumentIDd.length > 0) {
                if (arrprevRU.indexOf(myArrayRU[i]) >= 0 && multipleChecksDocumentIDd.indexOf(myArrayRU[i].trim()) > -1) {
                    article += '<input id="' + myArrayRU[i] + '" type="checkbox" name="Generic" onclick="checkGeneric(this);" checked class="css1-checkbox" value="' + myArrayRU[i] + '" />';
                }
                else if (multipleChecksDocumentIDd.indexOf(myArrayRU[i].trim()) > -1) {
                    article += '<input id="' + myArrayRU[i] + '" type="checkbox" name="Generic" onclick="checkGeneric(this);" checked class="css1-checkbox" value="' + myArrayRU[i] + '" />';
                }
                else {
                    article += '<input id="' + myArrayRU[i] + '" type="checkbox" name="Generic" onclick="checkGeneric(this);"  class="css1-checkbox" value="' + myArrayRU[i] + '" />';
                    checkboxchecking = false;
                }
            }
            else if (arrprevRU.indexOf(myArrayRU[i]) >= 0 && multipleChecksDocumentIDd.length == 0) {
                article += '<input id="' + myArrayRU[i] + '" type="checkbox" name="Generic" onclick="checkGeneric(this);" checked class="css1-checkbox" value="' + myArrayRU[i] + '" />';
            }
            else if (multipleChecksDocumentIDd.indexOf(myArrayRU[i].trim()) > -1) {
                article += '<input id="' + myArrayRU[i] + '" type="checkbox" name="Generic" onclick="checkGeneric(this);" checked class="css1-checkbox" value="' + myArrayRU[i] + '" />';
            }
            else {
                article += '<input id="' + myArrayRU[i] + '" type="checkbox" name="Generic" onclick="checkGeneric(this);"  class="css1-checkbox" value="' + myArrayRU[i] + '" />';
                checkboxchecking = false;
            }
            article += '<label for="' + myArrayRU[i] + '" class="css1-label">' + myArrayRU[i] + '</label>';
            article += '</td></tr>';
            $("#tblGeneric").append(article);
            $('#loading').empty();
            resultfound = true;

        }
    }
    if (checkboxchecking == true) {
        $("#selectall").prop('checked', true);
    }
    else {
        $("#selectall").prop('checked', false);
    }
    var checkingsdivchild = document.getElementById("liSelectedRU").hasChildNodes();
    if (!checkingsdivchild) {
        if (multipleChecksDocumentIDd.length > 0) {
            for (var spl = 0; spl < multipleChecksDocumentIDd.length; spl++) {
                if (multipleChecksDocumentIDd[spl].trim() != "") {
                    $('#liSelectedRU').append('<span style="font-size:13px;">' + multipleChecksDocumentIDd[spl].trim() + '<img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveSelectedRU(this);" style="float:right" /></span>');
                }
            }
        }
        else {
            var idtext = $("#browseGeneric").data('param_1');
            if (typeof idtext != 'undefined') {
                var textvalid = $('#' + idtext).val();
                if (typeof textvalid != 'undefined' && textvalid != "") {
                    var splitmulicheckforbind = textvalid.split(';');
                    for (var spl = 0; spl < splitmulicheckforbind.length; spl++) {
                        if (splitmulicheckforbind[spl].trim() != "") {
                            $('#liSelectedRU').append('<span style="font-size:13px;">' + splitmulicheckforbind[spl] + '<img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveSelectedRU(this);" style="float:right" /></span>');
                            multipleChecksDocumentIDd.push(splitmulicheckforbind[spl].trim());
                        }
                    }
                }
                else {
                    checkGeneric("");
                }
            }
            else {
                checkGeneric("");
            }
        }
    }
    $('#loadGen').empty();
}

function ViewProjects() {
    $('#loadPro').html('<img src="../Content/Images/icon/loading.gif"> Working on it...');
    if ($('#tblProjects tr').length <= 0) {
        ProjectsFunc();
    } else {
        $('#loadPro').empty();
        $("#browseProjects").dialog("option", "title", "Project Picker");
        $("#browseProjects").dialog("open");
    }
}

function ViewProjectTasks() {
    if ($("#Project").val() != "") {
        $('#loadPro').html('<img src="../Content/Images/icon/loading.gif"> Working on it...');
        ProjectTasksFunc();
    } else {
        //  alert("Please select project")
        swal("", "Please select project");
    }
}

function ProjectsFunc() {
    $("#tblProjects").empty();
    $("#loadingPage").fadeIn();
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/project',
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (data) {
            $('#loadPro').empty();
            var arr = [];
            var counterpartyTags = [];
            $.each($('#Project').val().split(";"), function () {
                arr.push($.trim(this));
            });
            var datalength = data.length;
            if (datalength > 0) {
                for (var i = 0; i < datalength; i++) {
                    var item = data[i];
                    var article = "";
                    if (i == 0) {
                        article += '<tr><th>Project Name</th></tr>';
                    }

                    article += '<tr><td>';
                    if (arr.indexOf(item.ProjectName) >= 0) {
                        article += '<input id="Pro' + item.RowKey + '" type="checkbox" name="Project" class="css1-checkbox" checked value="' + item.ProjectName + '" />';
                    } else {
                        article += '<input id="Pro' + item.RowKey + '" type="checkbox" name="Project" class="css1-checkbox" value="' + item.ProjectName + '" />';
                    }
                    article += '<label for="Pro' + item.RowKey + '" class="css1-label">' + item.ProjectName + '</label>';

                    article += '<input type="text" name="ProjectManager" style="display: none;" value="' + item.ProjectManager + '" />';
                    article += '</td></tr>';

                    counterpartyTags.push(item.ProjectName);
                    $("#tblProjects").append(article);
                }

                $("#txtSearchBoxProjects").autocomplete({
                    source: counterpartyTags,
                    minLength: 1,
                    focus: function (event, ui) {
                        return false;
                    },
                    select: function (evn, uidetails) {
                        $("#txtSearchBoxProjects").val(uidetails.item.label);
                        SearchProjects();
                    }
                });

                var vCount = $("#tblProjects tr").length;
                $('#compact-paginationProjects').pagination({
                    items: vCount,
                    itemsOnPage: 10,
                    currentPage: 1,
                    cssStyle: 'compact-theme',
                    type: 'tdbody',
                    row: 'tr',
                    typeID: 'tblProjects'
                });
                $("#loadingPage").fadeOut();
                $("#browseProjects").dialog("option", "title", "Project Picker");
                $("#browseProjects").dialog("open");
            } else {
                $("#loadingPage").fadeOut();
                $("#browseProjects").dialog("option", "title", "Project Picker");
                $("#browseProjects").dialog("open");
                $('#loadPro').html('<p style="color: red; margin-top: 50px; margin-bottom: 10px; margin-left: 10px;">No items found.</p>')
            }
        },
        error: function () {
            $('#loadPro').html('<p style="color: red; margin-top: 50px; margin-bottom: 10px; margin-left: 10px;">No items found.</p>')
        }
    });
}

function ProjectTasksFunc() {
    $("#tblProjectTasks").empty();
    $("#loadingPage").fadeIn();

    var vVarDataLength = 0;
    var isProjectSelected = false;
    var nproject = [];
    $.each($('#Project').val().split(";"), function () {
        nproject.push($.trim(this));
    });
    nproject = nproject.sort();
    $.each(nproject, function () {
        isProjectSelected = true;
        var vVarProjectName = $.trim(this);
        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/projecttasks?projectnames=' + encodeURIComponent(vVarProjectName),
            type: 'GET',
            dataType: 'json',
            "Content-Type": "application/json",
            headers: {
                'eContracts-ApiKey': localStorage.APIKey
            },
            cache: false,
            success: function (data) {
                $('#loadProTask').empty();
                var arr = [];
                var counterpartyTags = [];
                $.each($('#ProjectTask').val().split(";"), function () {
                    arr.push($.trim(this));
                });
                var datalength = data.length;
                if (datalength > 0) {
                    for (var i = 0; i < datalength; i++) {
                        var item = data[i];
                        var article = "";
                        if (i == 0) {
                            if (arr.indexOf(vVarProjectName + ':Default Task') >= 0) {
                                article += '<tr><th><input id="' + vVarProjectName + '" onclick="funselectalltasks(this);" type="checkbox" checked name="ProjectTask" value="' + vVarProjectName + ':Default Task" class="float_left margin-right-5" />' + vVarProjectName + ' (Default Task)</th></tr>';
                            } else {
                                article += '<tr><th><input id="' + vVarProjectName + '" onclick="funselectalltasks(this);" type="checkbox" name="ProjectTask" value="' + vVarProjectName + ':Default Task" class="float_left margin-right-5" />' + vVarProjectName + ' (Default Task)</th></tr>';
                            }
                        }

                        article += '<tr><td>';
                        if (arr.indexOf(vVarProjectName + ':' + item.TaskID) >= 0) {
                            article += '<input id="' + vVarProjectName + item.RowKey + '" type="checkbox" title="' + vVarProjectName + '" onclick="funselecttask(this);" name="ProjectTask" class="css1-checkbox" checked   value="' + vVarProjectName + ':' + item.TaskID + '" />';
                        } else {
                            article += '<input id="' + vVarProjectName + item.RowKey + '" type="checkbox" title="' + vVarProjectName + '" onclick="funselecttask(this);" name="ProjectTask" class="css1-checkbox"  value="' + vVarProjectName + ':' + item.TaskID + '" />';
                        }
                        article += '<label for="' + vVarProjectName + item.RowKey + '" class="css1-label">' + item.TaskID + ':' + item.TaskDescription + '</label>';
                        article += '</td></tr>';

                        counterpartyTags.push(item.TaskID);
                        $("#tblProjectTasks").append(article);
                    }
                    if (vVarDataLength == 0) {
                        vVarDataLength = datalength;
                    }

                } else {

                }
            },
            error: function () {
                $('#loadProTask').empty();
            }
        });
    });

    if (vVarDataLength == 0) {
        $("#loadingPage").fadeOut();
        $("#browseProjectTasks").dialog("option", "title", "Project Task Picker");
        $("#browseProjectTasks").dialog("open");
        $('#loadProTask').empty();
        if (!isProjectSelected) {
            $('#loadProTask').html('<p style="color: red; margin-top: 50px; margin-bottom: 10px; margin-left: 10px;">No items found.</p>')
        }
    } else {
        $("#txtSearchBoxProjectTasks").autocomplete({
            source: counterpartyTags,
            minLength: 1,
            focus: function (event, ui) {
                return false;
            }
        });

        var vCount = $("#tblProjectTasks tr").length;
        $('#compact-paginationProjectTasks').pagination({
            items: vCount,
            itemsOnPage: 10,
            typeID: 'tblProjectTasks',
            cssStyle: 'compact-theme'
        });
        $("#loadingPage").fadeOut();
        $("#browseProjectTasks").dialog("option", "title", "Project Task Picker");
        $("#browseProjectTasks").dialog("open");
    }

}

function ClearProjectSearch() {
    $('#txtSearchBoxProjects').val('');
    $('input:checkbox[name=Project]').attr('checked', false);
    $("#Project").val("");
    projectManager = "";
    SearchProjects();
}

function SearchProjects() {
    $("#tblProjects").html('');
    $('#loadPro').html('<img src="../Content/Images/icon/loading.gif"> Searching...');
    var vURL = vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/project?searchkeyword=' + encodeURIComponent($("#txtSearchBoxProjects").val()) + '&customquery=&sortbyfield=ProjectName&orderby=ASC';
    $.ajax({
        url: vURL,
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (data) {
            var arr = [];
            $.each($('#Project').val().split(";"), function () {
                arr.push($.trim(this));
            });
            var datalength = data.length;
            var article = '';
            for (var i = 0; i < datalength; i++) {
                var item = data[i];
                if (i == 0) {
                    article += '<tr><th>Project Name</th></tr>';
                }
                article = '<tr><td>';
                if (arr.indexOf(item.ProjectName) >= 0) {
                    article += '<input id="Pro' + item.RowKey + '" type="checkbox" name="Project" class="css1-checkbox" checked value="' + item.ProjectName + '" />';
                } else {
                    article += '<input id="Pro' + item.RowKey + '" type="checkbox" name="Project" class="css1-checkbox" value="' + item.ProjectName + '" />';
                }

                article += '<label for="Pro' + item.RowKey + '" class="css1-label">' + item.ProjectName + '</label>';
                article += '<input type="text" name="ProjectManager" style="display: none;" value="' + item.ProjectManager + '" />';
                article += '</td></tr>';
            }
            $('#loadPro').empty();
            $("#tblProjects").html(article);
            article = '';
            //$("#tblProjects").append(article);
            var vCount = $("#tblProjects tr").length;
            if (vCount != 0) {
                $('#loadPro').html('');
                $('#compact-paginationProjects').css('display', '');
                $('#compact-paginationProjects').pagination({
                    items: vCount,
                    itemsOnPage: 10,
                    typeID: 'tblProjects',
                    cssStyle: 'compact-theme'
                });
            } else {
                $('#loadPro').html('<p style="color: red; margin-top: 50px; margin-bottom: 10px; margin-left: 10px;">No items found.</p>')
                $('#compact-paginationProjects').css('display', 'none');
            }
        },
        error: function () {
            $('#compact-paginationProjects').css('display', 'none');
            $('#loadPro').html('<p style="color: red; margin-top: 50px; margin-bottom: 10px; margin-left: 10px;">No items found.</p>')
        }
    });

}

var arr = [];
var RelatedContractIDarr = [];
var vRelatedContractTitlearr = [];
var RelatedRelationshipTypearr = [];
var counterpartyTags = [];

function ViewRelatedContracts() {
    $("#lblRelatedPopup_ContractTitle").text("Select Relationship for " + $("#lblContractTitle").text())
    $("#loadingPage").fadeIn();
    $('#loadContract').html('<img src="../Content/Images/icon/loading.gif"> Working on it...');
    $('#tblPopupContracts').empty();
    $("#txtSearchBoxContract").val("");
    var vURL = vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/getrelatedcontracts?stage=&searchkeyword=&customquery=&sortbyfield=ContractTitle&orderby=ASC';
    relatedContractsTag = [];
    $("#txtSearchBoxContract").val("");
    $.ajax({
        url: vURL,
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, BusinessAreaLocation: $("#lblBusinessAreaPath").text(), UserID: localStorage.UserID
        },
        cache: false,
        success: function (data) {
            $('#loadContract').empty();
            $('#tblPopupContracts').empty();
            var arrdetailssplit = [];
            $.each(oldRelatedcontract.split(";"), function () {
                if (this != "") {
                    if ($.trim(this) != "") {
                        arrdetailssplit.push($.trim(this));
                    }
                }
            });
            oldRelatedcontract = arrdetailssplit.join("; ");
            oldRelatedcontract = oldRelatedcontract.trim();
            arroldRelatedcontract = arrdetailssplit;

            $.each($('#RelatedContracts').val().split(";"), function () {
                if (this != "") {
                    if ($.trim(this) != "") {
                        arr.push($.trim(this));
                    }
                }
            });
            if ($('#RelatedContracts').val() != "") {
                $.each($('#RelatedContracts').val().split(";"), function () {
                    if (!(arr.indexOf($.trim(this)) > -1)) {
                        arr.push($.trim(this));
                    }
                });
                if (arr.length > 0) {
                    if (arrRelatedContracts.length > 0) {
                        $.each(arrRelatedContracts[arrRelatedContracts.length - 1].RelatedContractID.split(";"), function () {
                            RelatedContractIDarr.push($.trim(this));
                        });
                        $.each(arrRelatedContracts[arrRelatedContracts.length - 1].RelatedContractTitle.split(";"), function () {
                            vRelatedContractTitlearr.push($.trim(this));
                        });
                        $.each(arrRelatedContracts[arrRelatedContracts.length - 1].RelatedRelationshipType.split(";"), function () {
                            RelatedRelationshipTypearr.push($.trim(this));
                        });
                    }
                }
            }
            $(data).each(function (i, item) {
                if ($("#hdnRelatedContracts").text().indexOf(item.RowKey) > -1) { }
                else {
                    if (arroldRelatedcontract.indexOf(item.ContractTitle.trim()) >= 0) {

                    } else if (SavedRelatedContract.indexOf(item.ContractTitle.trim()) == -1) {
                        var article = '<tr><td>';
                        if (arr.indexOf(item.ContractTitle.trim()) >= 0) {
                            article += '<input id="' + item.RowKey + '" type="checkbox" name="RelatedContract" onchange="javascript:collectrelatedcontractrowkey(this);" class="css1-checkbox" value="' + item.ContractTitle + '" checked />';
                        } else {
                            article += '<input id="' + item.RowKey + '" type="checkbox" name="RelatedContract" onchange="javascript:collectrelatedcontractrowkey(this);" class="css1-checkbox" value="' + item.ContractTitle + '" />';
                        }
                        article += '<label for="' + item.RowKey + '" class="css1-label"><a href="/Contracts/ContractDetails?ContractID=' + item.RowKey + '" target="_blank">' + item.ContractTitle + '</a></label>';          //ENH487 Customer inhanc
                        article += '</td>';
                        article += '<td><label class="">' + item.ContractType + '</label></td>'
                        article += '<td><label class="">'
                        if (item.Counterparty != null && item.Counterparty != "") {
                            article += item.Counterparty
                        } else {
                            article += "-"
                        }
                        article += '</label></td><td><label class="" style="word-break: break-all;">'
                        if (item.ContractNumber != null && item.ContractNumber != "") {
                            article += item.ContractNumber
                        } else {
                            article += "-"
                        }
                        article += '</label></td><td><label class="">' + item.Status + '</label></td>'
                        if (arr.indexOf(item.ContractTitle.trim()) >= 0) {
                            var indexvaluetake = arr.indexOf(item.ContractTitle.trim());
                            var relationtypefetch = RelatedRelationshipTypearr[indexvaluetake];
                            article += "<td class='ddl'><select class='f_inpt width90' onchange='showallspans(this)'>";
                            var jsLang = $("#ddlRelationshipTypeParent option:selected").val();
                            var jsLangType = $("#ddlRelationshipType option:selected").val();
                            var rela1 = jQuery.grep(RelationshipTypes, function (a) {
                                return (a[1] === jsLang && a[0] === jsLangType);
                            });
                            var rela2 = jQuery.grep(RelationshipTypes, function (a) {
                                return (a[2].indexOf(jsLang) > -1 && a[0] === jsLangType);
                            });
                            if (rela1 != null && typeof (rela1) != "undefined" && rela1.length != 0) {
                                var Relationship = rela1[0];
                                $.each(Relationship[2], function (index, value) {
                                    var optRel2 = value.toString();
                                    article += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                                })
                                if ($(Relationship[2]).length == 0) {
                                    var optRel2 = Relationship[1].toString();
                                    article += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                                }
                            }
                            else if (rela2 != null && typeof (rela2) != "undefined" && rela2.length != 0) {
                                var Relationship = rela2[0];
                                article += "<option value='" + Relationship[1] + "'>" + Relationship[1] + "</option>";
                            }
                            else {
                                switch (jsLang) {
                                    case 'Master Agreement':
                                        if (relationtypefetch == "Sub-Agreement") {
                                            article += '<option value="Sub-Agreement" selected>Sub-Agreement</option>';
                                            article += '<option value="SOW">SOW</option>';
                                        }
                                        else {
                                            article += '<option value="Sub-Agreement" >Sub-Agreement</option>';
                                            article += '<option value="SOW" selected>SOW</option>';
                                        }
                                        break;
                                    case 'Sub-Agreement':
                                    case 'SOW':
                                        article += '<option value="Master Agreement">Master Agreement</option>';
                                        break;
                                    case 'Prime Contractor Agreement':
                                        article += '<option value="Sub Contractor Agreement">Sub Contractor Agreement</option>';
                                        break;
                                    case 'Sub Contractor Agreement':
                                        article += '<option value="Prime Contractor Agreement">Prime Contractor Agreement</option>';
                                        break;
                                    case 'Blanket Agreement':
                                        if (relationtypefetch == "Order") {
                                            article += '<option value="Order" selected>Order</option>';
                                            article += '<option value="Invoice">Invoice</option>';
                                        }
                                        else {
                                            article += '<option value="Order">Order</option>';
                                            article += '<option value="Invoice" selected>Invoice</option>';
                                        }

                                        break;
                                    case 'Order':
                                    case 'Invoice':
                                        article += '<option value="Blanket Agreement">Blanket Agreement</option>';
                                        break;
                                    case 'Original':
                                        if (relationtypefetch == "Duplicate") {
                                            article += '<option value="Duplicate" selected>Duplicate</option>';
                                            article += '<option value="Copy">Copy</option>';
                                        }
                                        else {
                                            article += '<option value="Duplicate">Duplicate</option>';
                                            article += '<option value="Copy" selected>Copy</option>';
                                        }
                                        break;
                                    case 'Duplicate':
                                    case 'Copy':
                                        article += '<option value="Original">Original</option>';
                                        break;
                                    case 'Past Contract':
                                        article += '<option value="Renegotiated Contract">Renegotiated Contract</option>';
                                        break;
                                    case 'Renegotiated Contract':
                                        article += '<option value="Past Contract">Past Contract</option>';
                                        break;
                                    case 'Primary Contract':
                                        if (relationtypefetch == "Amendment") {
                                            article += '<option value="Amendment" selected>Amendment</option>';
                                            article += '<option value="Modification">Modification</option>';
                                        }
                                        else {
                                            article += '<option value="Amendment">Amendment</option>';
                                            article += '<option value="Modification" selected>Modification</option>';
                                        }
                                        break;
                                    case 'Amendment':
                                    case 'Modification':
                                        article += '<option value="Primary Contract">Primary Contract</option>';
                                        break;
                                    case 'Other':
                                        article += '<option value="Other">Other</option>';
                                        break;
                                }
                            }

                            article += '</select><td></tr>';
                        }
                        else {
                            article += '<td class="ddl"><td></tr>'
                        }
                        $("#tblPopupContracts").append(article);
                        if (item.ContractTitle != $("#lblContractTitle").text().trim())
                            relatedContractsTag.push(item.ContractTitle.trim());

                        $("#" + item.RowKey).click(function () {
                            if (this.checked) {
                                if ($(this).parent().parent().children(".ddl").find('option').length == 0) {
                                    var vOptions = "<select class='f_inpt width90' onchange='showallspans(this)'>";
                                    var jsLang = $("#ddlRelationshipTypeParent option:selected").val();
                                    var jsLangType = $("#ddlRelationshipType option:selected").val();
                                    var rela1 = jQuery.grep(RelationshipTypes, function (a) {
                                        return (a[1] === jsLang && a[0] === jsLangType);
                                    });
                                    var rela2 = jQuery.grep(RelationshipTypes, function (a) {
                                        return (a[2].indexOf(jsLang) > -1 && a[0] === jsLangType);
                                    });
                                    if (rela1 != null && typeof (rela1) != "undefined" && rela1.length != 0) {
                                        var Relationship = rela1[0];
                                        $.each(Relationship[2], function (index, value) {
                                            var optRel2 = value.toString();
                                            vOptions += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                                        })
                                        if ($(Relationship[2]).length == 0) {
                                            var optRel2 = Relationship[1].toString();
                                            vOptions += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                                        }
                                    }
                                    else if (rela2 != null && typeof (rela2) != "undefined" && rela2.length != 0) {
                                        var Relationship = rela2[0];
                                        vOptions += "<option value='" + Relationship[1] + "'>" + Relationship[1] + "</option>";
                                    }
                                    else {
                                        switch (jsLang) {
                                            case 'Master Agreement':
                                                vOptions += '<option value="Sub-Agreement">Sub-Agreement</option>';
                                                vOptions += '<option value="SOW">SOW</option>';
                                                break;
                                            case 'Sub-Agreement':
                                            case 'SOW':
                                                vOptions += '<option value="Master Agreement">Master Agreement</option>';
                                                break;
                                            case 'Prime Contractor Agreement':
                                                vOptions += '<option value="Sub Contractor Agreement">Sub Contractor Agreement</option>';
                                                break;
                                            case 'Sub Contractor Agreement':
                                                vOptions += '<option value="Prime Contractor Agreement">Prime Contractor Agreement</option>';
                                                break;
                                            case 'Blanket Agreement':
                                                vOptions += '<option value="Order">Order</option>';
                                                vOptions += '<option value="Invoice">Invoice</option>';
                                                break;
                                            case 'Order':
                                            case 'Invoice':
                                                vOptions += '<option value="Blanket Agreement">Blanket Agreement</option>';
                                                break;
                                            case 'Original':
                                                vOptions += '<option value="Duplicate">Duplicate</option>';
                                                vOptions += '<option value="Copy">Copy</option>';
                                                break;
                                            case 'Duplicate':
                                            case 'Copy':
                                                vOptions += '<option value="Original">Original</option>';
                                                break;
                                            case 'Past Contract':
                                                vOptions += '<option value="Renegotiated Contract">Renegotiated Contract</option>';
                                                break;
                                            case 'Renegotiated Contract':
                                                vOptions += '<option value="Past Contract">Past Contract</option>';
                                                break;
                                            case 'Primary Contract':
                                                vOptions += '<option value="Amendment">Amendment</option>';
                                                vOptions += '<option value="Modification">Modification</option>';
                                                break;
                                            case 'Amendment':
                                            case 'Modification':
                                                vOptions += '<option value="Primary Contract">Primary Contract</option>';
                                                break;
                                            case 'Other':
                                                vOptions += '<option value="Other">Other</option>';
                                                break;
                                        }
                                    }

                                    vOptions += '</select>';
                                    $(this).parent().parent().children(".ddl").append(vOptions);
                                }
                            } else {
                                $(this).parent().parent().children(".ddl").empty();
                            }
                            showallspans(this);
                        });
                    }
                }
            });

            var vCount = $("#tblPopupContracts tr").length;
            if (vCount != 0) {
                $("#tblPopupContracts tr td").attr('style', 'vertical-align: top');
                $('#compact-paginationRelatedContracts').css('display', '');
                $('#compact-paginationRelatedContracts').pagination({
                    items: vCount,
                    itemsOnPage: 10,
                    type: 'tbody',
                    typeID: 'tblPopupContracts',
                    row: 'tr',
                    cssStyle: 'compact-theme'
                });
            } else {
                $('#compact-paginationRelatedContracts').css('display', 'none');
                $('#loadContract').html('<p style="margin-left: 20px;">No items found.</p>')
            }
            $("#txtSearchBoxContract").autocomplete({
                source: relatedContractsTag,
                minLength: 2,
                focus: function (event, ui) {
                    return false;
                },
                select: function (evn, uidetails) {
                    $("#txtSearchBoxContract").val(uidetails.item.label);
                    ViewContracts();
                }
            });
            $("#popupContracts").dialog("option", "title", "Related Contract Record(s)");
            $("#popupContracts").dialog("open");
            $("#loadingPage").fadeOut();
        },
        error: function () {
            $('#loadMA').empty();
            $('#loadMA').html('<p style="margin-left: 20px;">No items found.</p>');
            $("#loadingPage").fadeOut();
        }
    });
    vContractID = getParameterByName("ContractID");
    BindRelatedContractsPopup(vContractID);
}

function SelectExistingCounterparty() {
    $('#dvCPExistingCounterparty').css("display", "");
    $('#dvCPAddCounterparty').css("display", "none");
    $('#chkCounterpartyNotInList').prop('checked', false);
}

function SelectAddCounterparty() {
    $('#dvCPExistingCounterparty').css("display", "none");
    $('#dvCPAddCounterparty').css("display", "");
    if (!$('#chkCounterpartyNotInList').prop('checked')) {
        $('#chkCounterpartyNotInList').trigger('click');
    }
}
function ClearAddCounterparty() {
    $("#txtSearchBox").val("");
    $("#txtCounterpartyID").val("");
    $("#txtCounterpartyName").val("");
    $("#txtOwnerofBusinessArea").val('');
    $('input[type="radio"][name=IsGlobal][value="Yes"]').prop('checked', true);
    $("#trcp-RgBusi").hide();
    $("#txtOwnerofBusinessArea").removeClass("validelement");
    $('#ddlCounterpartyType').val('0');
    $("#txtAddressLine1").val("");
    $("#txtAddressLine2").val("");
    $("#txtCity").val("");
    $("#txtState").val("");
    $("#txtZip").val("");
    $('#ddlCountry').val('0');
    $("#txtContactNo").val("");
    $("#txtEmailID").val("");
    $("#ddlStatus").val("Active");
    $("#chkCounterpartyNotInList").attr("checked", false);
    $('.CP_Det').css('display', 'none');
    $('.CP_Det1').css('display', 'none');
    $("#ddlCounterpartyType").removeClass('validelement');
    $("#txtEmailID").removeClass('validemail');
    $(".validelement").each(function (index, element) {
        $(element).removeClass("error");
        $("#errormsg_" + element.id).remove();
    });
}

//function getCounterpartyFields() {
//    $("#loadingPage").fadeIn();
//    $.ajax({
//        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty/primaryfields',
//        type: 'GET',
//        dataType: 'json',
//        headers: {
//            'eContracts-ApiKey': localStorage.APIKey
//        },
//        cache: false,
//        success: function (metadataFields) {
//            vCounterpartyFields = [];
//            $("#counterpartyDynamicItems").empty();
//            $(metadataFields).each(function (i, item) {
//                if ((item.FieldName == "CounterpartyName") || (item.FieldName == "CounterpartyType") || (item.FieldName == "Status")) {
//                    if (item.FieldName == "CounterpartyType") {
//                        vCounterpartyFields.push(item.FieldName);
//                    }
//                }
//                else {
//                    vCounterpartyFields.push(item.FieldName);
//                    if (item.ShowInCreateForm == "true") {
//                        var vControls = "";
//                        var vDate = "";
//                        var vNumber = "";
//                        var vPhoneNumber = "";
//                        var PhoneID = "";
//                        var PhoneCountry = "";
//                        var vEmail = "";
//                        var vMultiDDL = "";
//                        var vUser = "";
//                        var vUserList = "";
//                        var vNumberD = "";
//                        var vNumberP = "";
//                        var vNumberPD = "";
//                        if (item.Required == "true") {
//                            vControls += '<li class="removableCounterpartyField CP_Det"><p><b>' + item.FieldDisplayName + '</b><small>*</small></p><div>';
//                        } else {
//                            vControls += '<li class="removableCounterpartyField CP_Det"><p><b>' + item.FieldDisplayName + '</b></p><div>';
//                        }
//                        if (item.FieldType == "Single Line Text") {
//                            if (item.Required == "true") {
//                                vControls += "<input type='text' id=" + item.FieldName + " maxlength='100' name=" + item.FieldName + " class='validelement'>";
//                            } else {
//                                vControls += "<input type='text' id=" + item.FieldName + " maxlength='100' name=" + item.FieldName + ">";
//                            }
//                            vControls += '<label  class="p-text">' + item.Description + '</label>';
//                            if (item.FieldHelp == "true") {
//                                vControls += '<span class="p-text help"> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
//                            }
//                            vControls += '</div></li>';
//                        }
//                        else if (item.FieldType == "Multi Line Text") {
//                            if (item.Required == "true") {
//                                vControls += "<textarea name=" + item.FieldName + " maxlength='300' id=" + item.FieldName + " title='" + item.FieldDisplayName + "' cols='25' rows='3' class=' validelement'></textarea>";
//                            } else {
//                                vControls += "<textarea name=" + item.FieldName + " maxlength='300' id=" + item.FieldName + " title='" + item.FieldDisplayName + "' cols='25' rows='3'></textarea>";
//                            }
//                            vControls += '<label  class="p-text">' + item.Description + '</label>';
//                            if (item.FieldHelp == "true") {
//                                vControls += '<span class="p-text help"> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
//                            }
//                            vControls += '</div></li>';
//                        }
//                        else if (item.FieldType == "Hyperlink") {
//                            //manoj
//                            //for Hyperlink
//                            var Hyperlinkvalue = item.DefaultURL;
//                            if (item.Required == "true") {
//                                vControls += "<input type='text' id=CP" + item.FieldName + " maxlength='2083' name=" + item.FieldName + " placeholder='http://www.' value = '" + Hyperlinkvalue + "' class='validelement validwebsite'>";
//                            } else {
//                                vControls += "<input type='text' id=CP" + item.FieldName + " maxlength='2083' name=" + item.FieldName + " placeholder='http://www.' value = '" + Hyperlinkvalue + "' class='validwebsite'>";
//                            }
//                            vControls += '<label  class="p-text">' + item.Description + '</label>';
//                            vControls += '<br/>' + '<a href="javascript:void(0)" class="linkText" title="' + item.FieldDisplayName + '" onclick="navigateurl(\'CP' + item.FieldName + '\')"> Navigate</a>';
//                            vControls += '</div></li>';
//                            //for Hyperlink
//                            //manoj
//                        }
//                        else if (item.FieldType == "Phone Number") {
//                            if (item.Required == "true") {
//                                vControls += "<input type='text' id='" + item.FieldName + "_CP' title='" + item.FieldDisplayName + "'  class='form-contro validelement validPhone fieldphonecontrol' />";
//                            } else {
//                                vControls += "<input type='text' id='" + item.FieldName + "_CP' title='" + item.FieldDisplayName + "'  class='form-contro validPhone fieldphonecontrol' />";
//                            }
//                            vControls += '<label  class="p-text">' + item.Description + '</label>';
//                            vControls += '</div></li>';

//                            vPhoneNumber = vControls;
//                            PhoneID = item.FieldName;
//                            PhoneCountry = item.Country;
//                        }
//                        else if (item.FieldType == "Date") {

//                            if (item.Required == "true") {
//                                vControls += "<input type='text' id=" + item.FieldName + " title='" + item.FieldDisplayName + "'  class='validelement validdate fielddatecontrol " + item.FieldName + "'/>";
//                            } else {
//                                vControls += "<input type='text' id=" + item.FieldName + "  title='" + item.FieldDisplayName + "' class='validdate fielddatecontrol " + item.FieldName + "'/>";
//                            }

//                            //if (item.Required == "true") {
//                            //    vControls += "<input type='text' id=" + item.FieldName + " title='" + item.FieldDisplayName + "' name=" + item.FieldName + " class='validelement validdate'/>";
//                            //} else {
//                            //    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validdate'/>";
//                            //}
//                            if (item.FieldHelp == "true") {
//                                vControls += '<span> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
//                            }
//                            vControls += '<br/>' + '<label  class="p-text">' + item.Description + '</label>';
//                            vControls += '</div></li>';

//                            vDate = item.FieldName;
//                        }
//                        else if (item.FieldType == "Choice") {
//                            if (item.Required == "true") {
//                                vControls += "<select id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "'  class='validelement'>";

//                            } else {
//                                vControls += "<select id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "'>";
//                            }
//                            vControls += "<option value='0'>--Select--</option>";
//                            var myArray = [];
//                            myArray = item.ChoiceValues.split("\n")
//                            var myArraylength = myArray.length;

//                            for (var i = 0; i < myArraylength; i = i + 1) {
//                                do {
//                                    myArray[i] = myArray[i].replace("&amp;", "&");
//                                } while (myArray[i].indexOf("&amp;") > -1)
//                                vControls += "<option value='" + myArray[i] + "'>" + myArray[i] + "</option>";
//                            }

//                            vControls += '</select>';
//                            vControls += '<label  class="p-text">' + item.Description + '</label>';
//                            if (item.FieldHelp == "true") {
//                                vControls += '<span> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
//                            }
//                            vControls += '</div></li>';
//                        } else if (item.FieldType == "Lookup") {
//                            if (item.FieldName == "RelatedCounterparties") {
//                                if (item.Required == "true") {
//                                    vControls += "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement' readonly='readonly' type='text' />";
//                                } else {
//                                    vControls += "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' readonly='readonly' type='text' />";
//                                }
//                                vControls += '<label  class="p-text">' + item.Description + '</label>';
//                                if (item.FieldHelp == "true") {
//                                    vControls += '<span class="p-text help"> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
//                                }
//                                vControls += "<a href='javascript:void(0)' class='linkText' id='" + item.FieldDisplayName + "' title='" + item.FieldName + "' onclick='ViewCounterpartyRelated(this)'> Browse</a>";
//                                vControls += '</div></li>';
//                            } else {
//                                if (item.Required == "true") {
//                                    vControls += "<select id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement'>";
//                                } else {
//                                    vControls += "<select id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "'>";
//                                }
//                                vControls += "<option value='0'>--Select--</option>";

//                                $.ajax({
//                                    url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/customlookupvaluedetails?lookupname=' + item.ChoiceValues,
//                                    type: 'GET',
//                                    dataType: 'json',
//                                    "Content-Type": "application/json",
//                                    headers: {
//                                        'eContracts-ApiKey': localStorage.APIKey
//                                    },
//                                    cache: false,
//                                    success: function (data) {
//                                        var datalength1 = data.LookupFields.split(';');
//                                        datalength1 = datalength1.sort();
//                                        datalength1 = sortArrOfObjectsByParam(datalength1);
//                                        var datalength = datalength1.length;
//                                        for (var i = 0; i < datalength; i++) {
//                                            var itemname = datalength1[i];
//                                            $("#" + item.FieldName).append("<option value='" + itemname + "'>" + itemname + "</option>")
//                                        }
//                                    }
//                                });
//                                vControls += '</select>';
//                                vControls += '<label  class="p-text">' + item.Description + '</label>';
//                                if (item.FieldHelp == "true") {
//                                    vControls += '<span> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
//                                }
//                                vControls += '</div></li>';
//                            }
//                        }
//                        else if (item.FieldType.indexOf("Dropdown") > -1 || item.FieldType.indexOf("Multi Select") > -1) {
//                            if (item.Required == "true") {
//                                vControls += "<select id=" + item.FieldName + " multiple='multiple' class='width90 chosenmulti validuser' name=" + item.FieldName + " title='" + item.FieldDisplayName + "' data-placeholder='--Select--'>"
//                            } else {
//                                vControls += "<select id=" + item.FieldName + " multiple='multiple' class='width90 chosenmulti' name=" + item.FieldName + " title='" + item.FieldDisplayName + "' data-placeholder='--Select--'>"
//                            }
//                            if (item.FieldType.indexOf("Dropdown") > -1) {
//                                var vMultiDDL1 = "";
//                                if (vMultiDDL1 == '') {
//                                    var myArray = [];
//                                    myArray = item.ChoiceValues.split("\n")
//                                    var myArraylength = myArray.length;
//                                    for (var i = 0; i < myArraylength; i = i + 1) {
//                                        vMultiDDL1 += "<option value='" + myArray[i] + "'>" + myArray[i] + "</option>";
//                                    }
//                                }
//                                vControls += vMultiDDL1;
//                            } else {
//                                var vMultiDDL1 = "";
//                                if (vMultiDDL1 == '') {
//                                    $.ajax({
//                                        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/customlookupvaluedetails?lookupname=' + item.ChoiceValues,
//                                        type: 'GET',
//                                        dataType: 'json',
//                                        "Content-Type": "application/json",
//                                        headers: {
//                                            'eContracts-ApiKey': localStorage.APIKey
//                                        },
//                                        cache: false,
//                                        async: false,
//                                        success: function (data) {
//                                            var datalength1 = data.LookupFields.split(';');
//                                            datalength1 = datalength1.sort();
//                                            datalength1 = sortArrOfObjectsByParam(datalength1);
//                                            var datalength = datalength1.length;
//                                            for (var i = 0; i < datalength; i++) {
//                                                var itemname = datalength1[i];
//                                                vMultiDDL1 += "<option value='" + itemname + "'>" + itemname + "</option>";
//                                            }
//                                        }
//                                    });
//                                }
//                                vControls += vMultiDDL1;
//                            }

//                            vControls += '</select>';
//                            vControls += '<label  class="p-text">' + item.Description + '</label>';
//                            if (item.FieldHelp == "true") {
//                                vControls += '<span> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
//                            }
//                            vControls += '</div></li>';
//                            vMultiDDL = item.FieldName;
//                        }
//                        else if (item.FieldType == "Number") {
//                            if (item.Required == "true") {
//                                vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement form_input' />";
//                            } else {
//                                vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='form_input' />";
//                            }

//                            if (item.FieldHelp == "true") {
//                                vControls += '<span > <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
//                            }
//                            vControls += '<label  class="p-text">' + item.Description + '</label>';
//                            vControls += '</div></li>';
//                            vNumber = item.FieldName;
//                        }
//                        else if (item.FieldType == "Number-D") {
//                            if (item.Required == "true") {
//                                vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement form_input' />";
//                            } else {
//                                vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='form_input' />";
//                            }

//                            if (item.FieldHelp == "true") {
//                                vControls += '<span > <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
//                            }
//                            vControls += '<label  class="p-text">' + item.Description + '</label>';
//                            vControls += '</div></li>';
//                            vNumberD = item.FieldName;
//                        }
//                            //Percent
//                        else if (item.FieldType == "Number-P") {
//                            if (item.Required == "true") {
//                                vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement form_input' />";
//                            } else {
//                                vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='form_input' />";
//                            }

//                            if (item.FieldHelp == "true") {
//                                vControls += '<span > <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
//                            }
//                            vControls += '<label class="margin-top-8  p-text" >' + '%' + '</label>';
//                            vControls += '<label  class="p-text">' + item.Description + '</label>';
//                            vControls += '</div></li>';
//                            vNumberP = item.FieldName;
//                        }
//                            //Percent Decimal
//                        else if (item.FieldType == "Number-PD") {
//                            if (item.Required == "true") {
//                                vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement form_input' />";
//                            } else {
//                                vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='form_input' />";
//                            }

//                            if (item.FieldHelp == "true") {
//                                vControls += '<span > <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
//                            }
//                            vControls += '<label class="margin-top-8 p-text" >' + '%' + '</label>';
//                            vControls += '<label  class="p-text">' + item.Description + '</label>';
//                            vControls += '</div></li>';
//                            vNumberPD = item.FieldName;
//                        }
//                        else if (item.FieldType == "Yes/No") {

//                            vControls += "	<div style='width: auto; margin-right: 15px;'><input style='float: left; width: auto;' type='radio' name=" + item.FieldName + " value='Yes'><span style='float: left; margin: 7px 0px 0px 5px;'>Yes </span></div>";
//                            vControls += "	<div style='width: auto;'><input style='float: left; width: auto;' type='radio' name=" + item.FieldName + " checked value='No'><span style='float: left; margin: 7px 0px 0px 5px;'>No </span></div>";
//                            //vControls += "	<input type='radio' name=" + item.FieldName + " value='Yes'>Yes ";
//                            //vControls += "	<input type='radio' name=" + item.FieldName + " checked value='No'>No";

//                            vControls += '<label style="width:auto;margin:7px 0px 0px 5px;" class="col12 p-text text-left help">' + item.Description + '</label>';
//                            if (item.FieldHelp == "true") {
//                                vControls += '<span style="width:auto;margin:7px 0px 0px 5px;"> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
//                            }
//                            vControls += '</div></li>';
//                        } else if (item.FieldType == "Email") {
//                            if (item.Required == "true") {
//                                vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validemail validelement' />";
//                            } else {
//                                vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validemail' />";
//                            }
//                            vControls += '<label class="p-text">' + item.Description + '</label>';
//                            if (item.FieldHelp == "true") {
//                                vControls += '<span> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
//                            }
//                            vControls += '</div></li>';
//                        } else if (item.FieldType.indexOf("Browse") > -1) {
//                            if (item.Required == "true") {
//                                vControls += "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement' readonly='readonly' type='text' />";
//                            } else {
//                                vControls += "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' readonly='readonly' type='text' />";
//                            }
//                            vControls += '<label class="p-text">' + item.Description + '</label>';
//                            if (item.FieldHelp == "true") {
//                                vControls += '<span class="p-text help"> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
//                            }
//                            vControls += "<br/>" + "<a href='javascript:void(0)' class='linkText' id='" + item.FieldDisplayName + "' title='" + item.FieldName + "' onclick='ViewGenericCounterparty(this)'> Browse</a>";
//                            vControls += '</div></li>';
//                        } else if (item.FieldType == "File Upload") {
//                            if (item.Required == "true") {
//                                vControls += "<input type='file' id=" + item.FieldName + " name='docAttachment' title='" + item.FieldDisplayName + "' class='form-contro validelement browse-file-doc' onchange='javascript:changeinupload(this);' />";
//                            } else {
//                                vControls += "<input type='file' id=" + item.FieldName + " name='docAttachment' title='" + item.FieldDisplayName + "' class='form-contro browse-file-doc' onchange='javascript:changeinupload(this);' />";
//                            }
//                            vControls += '<label class="p-text">' + item.Description + '</label>';
//                            if (item.FieldHelp == "true") {
//                                vControls += '<span> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
//                            }
//                            vControls += '</div></li>';
//                        } else if (item.FieldType == "Currency" || item.FieldType == "Value / Financials") {
//                            if (item.Required == "true") {
//                                vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement' />";
//                            } else {
//                                vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' />";
//                            }
//                            vControls += '<label class="p-text">' + item.Description + '</label>';
//                            if (item.FieldHelp == "true") {
//                                vControls += '<span class="p-text help"> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
//                            }
//                            vControls += '</div></li>';
//                        } else if (item.FieldType == "User") {
//                            if (item.Required == "true") {
//                                vControls += "<select id=" + item.FieldName + " multiple='multiple' class='form-contro f_inpt width90 chosenmulti validuser' name=" + item.FieldName + " title='" + item.FieldDisplayName + "' data-placeholder='--Select--'>"
//                            } else {
//                                vControls += "<select id=" + item.FieldName + " multiple='multiple' class='form-contro f_inpt width90 chosenmulti' name=" + item.FieldName + " title='" + item.FieldDisplayName + "' data-placeholder='--Select--'>"
//                            }

//                            if (vUserList == "") {
//                                vUserList = GetUserList();
//                            }
//                            vControls += vUserList;
//                            vControls += '</select>';
//                            vControls += '<label class="p-text">' + item.Description + '</label>';
//                            if (item.FieldHelp == "true") {
//                                vControls += '<span class="p-text help"> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
//                            }
//                            vUser = item.FieldName;
//                            vControls += '</div></li>';
//                        }

//                        $("#counterpartyDynamicItems").append(vControls);
//                        if (vDate != "") {

//                            if (localStorage.AppDateFormat == null || localStorage.AppDateFormat == "" || localStorage.AppDateFormat == 'undefined') {
//                                $("#" + vDate + "").datepicker({
//                                    changeMonth: true,
//                                    changeYear: true
//                                });
//                            }
//                            else {
//                                var dateformate = localStorage.AppDateFormat.toLowerCase().slice(0, -2);

//                                $("#" + vDate + "").datepicker({
//                                    changeMonth: true,
//                                    changeYear: true,
//                                    dateFormat: dateformate
//                                });

//                            }
//                            vDate = "";
//                        }
//                        if (vNumber != "") {
//                            allowOnlyNumberInInputBox(vNumber);
//                            vNumber == "";
//                        }
//                        //Added By Jay  27 Aug 2018
//                        if (vNumberD != "") {
//                            allowOnlyDecimalNumberInInputBox(vNumberD);
//                            vNumberD == "";
//                        }
//                        if (vNumberP != "") {
//                            allowOnlyNumberInInputBox(vNumberP);
//                            vNumberP == "";
//                        }
//                        if (vNumberPD != "") {
//                            allowOnlyDecimalNumberInInputBox(vNumberPD);
//                            vNumberPD == "";
//                        }
//                        if (vPhoneNumber != "") {
//                            bindPhoneNumber(PhoneID, PhoneCountry);
//                            vPhoneNumber = "";
//                        }

//                        if (vMultiDDL != "") {
//                            $("#" + vMultiDDL + "").chosen().trigger("chosen:updated");
//                            $('.chosenmulti').on('chosen:showing_dropdown', function (evt, params) {
//                                $('.result-selected').css('display', 'none');
//                            });
//                            vMultiDDL = "";
//                        }

//                        if (vUser != "") {
//                            $("#" + vUser + "").chosen().trigger("chosen:updated");
//                            $('.chosenmulti').on('chosen:showing_dropdown', function (evt, params) {
//                                $('.result-selected').css('display', 'none');
//                            });
//                            if (vUser == "ContractManagers") {
//                                if (localStorage.UserName != "") {
//                                    GetValuesAndAutoPopulate("ContractManagers", localStorage.UserName);
//                                }
//                            }
//                            vUser = "";
//                        }
//                    }
//                }
//            });
//            $("#loadingPage").fadeOut();
//        },
//        error: function (metadataFields) {
//            vCounterpartyFields = [];
//            $("#loadingPage").fadeOut();
//        }

//    });
//}

function ViewCounterpartyRelated(obj) {
    var baname = "";
    //if (typeof localStorage.GlobalBusinessAreaLocation != "undefined" && localStorage.GlobalBusinessAreaLocation != "" && localStorage.GlobalBusinessAreaLocation != "All") {
    //    baname = encodeURIComponent(localStorage.GlobalBusinessAreaLocation);
    //}
    if ($('#ddlRelationshipTypeCounterparties').hasClass('error')) {
        $('#ddlRelationshipTypeCounterparties').removeClass('error')
    }
    if ($('#ddlRelationshipTypeParentcounterparties').hasClass('error')) {
        $('#ddlRelationshipTypeParentcounterparties').removeClass('error')
    }
    vGlobalObjForGeneric = obj;
    $("#lblRelatedPopup_Counterparties").text("Select Relationship for " + $("#txtCounterpartyName").val())
    $("#loadingPage").fadeIn();
    $('#loadCounterparties').html('<img src="../Content/Images/icon/loading.gif"> Working on it...');
    $('#tblPopupCounterparties').empty();
    $("#txtSearchBoxCounterparties").val("");
    if ($('#tblPopupCounterparties tr').length <= 0) {
        var relatedCounterpartiesTag = [];
        $("#txtSearchBoxCounterparties").val("");
        var arrcounterpartyIDarry = [];
        var arrcounterpartyNamearry = [];
        var arrcounterpartyRelationshipTypearr = [];

        //manoj
        var strBusinessAreaOwnerof = "";
        if ($('input[type="radio"][name=IsGlobal]:checked').val() == "No") {
            if ($("#txtOwnerofBusinessArea").val() != "") {
                if ($("#txtOwnerofBusinessArea").val() != "") {
                    for (var i = 0; i < selectedBusinessAreaID11.length; i++) {

                        var rowKPath = jQuery.grep(BusinessAreaPathRowKey, function (a) {
                            return a[1] === selectedBusinessAreaID11[i][1];
                        });
                        if (rowKPath != null && typeof (rowKPath) != "undefined" && rowKPath.length != 0)
                            strBusinessAreaOwnerof += rowKPath[0][0] + "; ";
                    }

                    strBusinessAreaOwnerof = strBusinessAreaOwnerof.slice(0, -1)
                }
            } else {

                strBusinessAreaOwnerof = "";
            }
        }
        else {
            $("#txtOwnerofBusinessArea").val('');
            strBusinessAreaOwnerof = "";
        }
        //manoj
        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty/relatedcounterpartypicker',
            type: 'GET',
            dataType: 'json',
            "Content-Type": "application/json",
            headers: {
                'eContracts-ApiKey': localStorage.APIKey, UserID: localStorage.UserID, BusinessAreaLocation: strBusinessAreaOwnerof
            },
            cache: false,
            success: function (data) {
                $('#loadCounterparties').empty();
                $("#hdnRelatedCounterparties").append(getParameterByName("ContractID"))
                //manoj
                curRelatedCounterparities = PrvRelatedCounterparities.slice();
                //manoj
                var arr = [];
                var counterpartyTags = [];
                var prevSelected = $("#RelatedCounterparties").val();
                $.each(prevSelected.split(";"), function () {
                    arr.push($.trim(this));
                });
                var vCounterpartyList = '';
                $(data).each(function (i, item) {
                    if ($("#txtCounterpartyID").val().indexOf(item.RowKey) > -1) {
                    }
                    else {
                        if (arr.length > 0) {
                            if (arrRelatedCounterparities.length > 0) {
                                $.each(arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RelatedCounterpartyID.split(";"), function () {
                                    arrcounterpartyIDarry.push($.trim(this));
                                });
                                $.each(arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RelatedCounterpartyTitle.split(";"), function () {
                                    arrcounterpartyNamearry.push($.trim(this));
                                });
                                $.each(arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RelatedRelationshipType.split(";"), function () {
                                    arrcounterpartyRelationshipTypearr.push($.trim(this));
                                });
                                if (arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RootRelationshipType != "") {
                                    //$("#ddlRelationshipTypeCounterparties").val(arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RootRelationshipType);
                                    //manoj
                                    $("#ddlRelationshipTypeCounterparties option:selected").text(arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RootRelationshipType);
                                    //manoj
                                }
                                if (arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RelationshipType != "") {
                                    $("#ddlRelationshipTypeParentcounterparties").val(arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RelationshipType);
                                }
                            }
                        }
                        if (arr.indexOf(item.CounterpartyName.trim()) >= 0) {
                            var article = '<tr><td>';
                            article += '<input id="rel' + item.RowKey + '" type="checkbox" name="RelatedCounterparty" checked class="css1-checkbox" value="' + escape(item.CounterpartyName) + '" onchange="javascript:currentrelatedcounterparty(this);"  />';
                            article += '<label for="' + item.RowKey + '" class="css1-label">' + item.CounterpartyName + '</label>';
                            article += '</td>';
                            article += '<td class="ddl"><select class="f_inpt width90" onchange="showallspans(this)">';
                            var jsLang = $("#ddlRelationshipTypeParentcounterparties option:selected").val();
                            switch (jsLang) {
                                case 'Parent':
                                    article += '<option value="Subsidiary" selected>Subsidiary</option>';
                                    break;
                                case 'Subsidiary':
                                    article += '<option value="Parent" selected>Parent</option>';
                                    break;
                                case 'Supplier':
                                    article += '<option value="Customer" selected>Customer</option>';
                                    break;
                                case 'Customer':
                                    article += '<option value="Supplier" selected>Supplier</option>';
                                    break;
                                case 'Prime Contractor':
                                    article += '<option value="Sub Contractor" selected>Sub Contractor</option>';
                                    break;
                                case 'Sub Contractor':
                                    article += '<option value="Prime Contractor" selected>Prime Contractor</option>';
                                    break;
                                case 'Dissolved on Merger':
                                    article += '<option value="Merged into" selected>Merged into</option>';
                                    break;
                                case 'Merged into':
                                    article += '<option value="Dissolved on Merger" selected>Dissolved on Merger</option>';
                                    break;
                                case 'Other':
                                    article += '<option value="Other" selected>Other</option>';
                                    break;
                            }
                            article += '</select><td></tr>'
                            //$("#tblPopupCounterparties").append(article);
                            vCounterpartyList += article;
                            relatedCounterpartiesTag.push(item.CounterpartyName);
                        } else {
                            var article = '<tr><td>';
                            article += '<input id="rel' + item.RowKey + '" type="checkbox" name="RelatedCounterparty" class="css1-checkbox" value="' + escape(item.CounterpartyName) + '" onchange="javascript:currentrelatedcounterparty(this);" />';
                            article += '<label for="' + item.RowKey + '" class="css1-label">' + item.CounterpartyName + '</label>';
                            article += '</td>';
                            article += '<td class="ddl"><td></tr>'
                            //$("#tblPopupCounterparties").append(article);
                            vCounterpartyList += article;
                            relatedCounterpartiesTag.push(item.CounterpartyName);
                        }

                        //$("#rel" + item.RowKey).click(function () {
                        //$("input[id='rel" + item.RowKey + "'][name='RelatedCounterparty']:checkbox").click(function () {
                        //    if (this.checked) {
                        //        if ($(this).parent().parent().children(".ddl").find('option').length == 0) {
                        //            var vOptions = "<select class='f_inpt width90' onchange='showallspans(this)'>";
                        //            var jsLang = $("#ddlRelationshipTypeParentcounterparties option:selected").val();
                        //            switch (jsLang) {
                        //                case 'Parent':
                        //                    vOptions += '<option value="Subsidiary">Subsidiary</option>';
                        //                    break;
                        //                case 'Subsidiary':
                        //                    vOptions += '<option value="Parent">Parent</option>';
                        //                    break;
                        //                case 'Supplier':
                        //                    vOptions += '<option value="Customer">Customer</option>';
                        //                    break;
                        //                case 'Customer':
                        //                    vOptions += '<option value="Supplier">Supplier</option>';
                        //                    break;
                        //                case 'Prime Contractor':
                        //                    vOptions += '<option value="Sub Contractor">Sub Contractor</option>';
                        //                    break;
                        //                case 'Sub Contractor':
                        //                    vOptions += '<option value="Prime Contractor">Prime Contractor</option>';
                        //                    break;
                        //                case 'Dissolved on Merger':
                        //                    vOptions += '<option value="Merged into">Merged into</option>';
                        //                    break;
                        //                case 'Merged into':
                        //                    vOptions += '<option value="Dissolved on Merger">Dissolved on Merger</option>';
                        //                    break;
                        //                case 'Other':
                        //                    vOptions += '<option value="Other">Other</option>';
                        //                    break;
                        //            }

                        //            vOptions += '</select>';
                        //            $(this).parent().parent().children(".ddl").append(vOptions);
                        //        }
                        //    } else {
                        //        $(this).parent().parent().children(".ddl").empty();
                        //    }
                        //    showallspans(this);

                        //});
                    }
                });

                $("#tblPopupCounterparties").append(vCounterpartyList);
                $("input[id^='rel'][name='RelatedCounterparty']:checkbox").click(function () {
                    if (this.checked) {
                        if ($(this).parent().parent().children(".ddl").find('option').length == 0) {
                            var vOptions = "<select class='f_inpt width90' onchange='showallspans(this)'>";
                            var jsLang = $("#ddlRelationshipTypeParentcounterparties option:selected").val();
                            switch (jsLang) {
                                case 'Parent':
                                    vOptions += '<option value="Subsidiary">Subsidiary</option>';
                                    break;
                                case 'Subsidiary':
                                    vOptions += '<option value="Parent">Parent</option>';
                                    break;
                                case 'Supplier':
                                    vOptions += '<option value="Customer">Customer</option>';
                                    break;
                                case 'Customer':
                                    vOptions += '<option value="Supplier">Supplier</option>';
                                    break;
                                case 'Prime Contractor':
                                    vOptions += '<option value="Sub Contractor">Sub Contractor</option>';
                                    break;
                                case 'Sub Contractor':
                                    vOptions += '<option value="Prime Contractor">Prime Contractor</option>';
                                    break;
                                case 'Dissolved on Merger':
                                    vOptions += '<option value="Merged into">Merged into</option>';
                                    break;
                                case 'Merged into':
                                    vOptions += '<option value="Dissolved on Merger">Dissolved on Merger</option>';
                                    break;
                                case 'Other':
                                    vOptions += '<option value="Other">Other</option>';
                                    break;
                            }

                            vOptions += '</select>';
                            $(this).parent().parent().children(".ddl").append(vOptions);
                        }
                    } else {
                        $(this).parent().parent().children(".ddl").empty();
                    }
                    showallspans(this);

                });

                var vCount = $("#tblPopupCounterparties tr").length;
                if (vCount != 0) {
                    $('#compact-paginationRelatedCounterparties').pagination({
                        items: vCount,
                        itemsOnPage: 10,
                        currentPage: 1,
                        cssStyle: 'compact-theme',
                        type: 'tdbody',
                        row: 'tr',
                        typeID: 'tblPopupCounterparties'
                        //items: vCount,
                        //itemsOnPage: 10,
                        //typeID: 'tblPopupCounterparties',
                        //cssStyle: 'compact-theme'
                    });
                } else {
                    $('#loadCounterparties').html('<p style="margin-left: 20px;">No items found.</p>')
                }

                $("#txtSearchBoxCounterparties").autocomplete({
                    source: relatedCounterpartiesTag,
                    minLength: 2,
                    focus: function (event, ui) {
                        return false;
                    },
                    select: function (evn, uidetails) {
                        $("#txtSearchBoxCounterparties").val(uidetails.item.label);
                        ViewCounterparties();
                    }
                });
                addselectedcounterparties();
                $("#popupCounterparties").dialog("option", "title", "Related Counterparties");
                $("#popupCounterparties").dialog("open");
                $("#loadingPage").fadeOut();
            },
            error: function () {
                addselectedcounterparties();
                $('#loadMA').empty();
                $('#loadCounterparties').html('No items found.');
                $("#tblPopupCounterparties").html('');
                $("#popupCounterparties").dialog("option", "title", "Related Counterparties");
                $("#popupCounterparties").dialog("open");
                $("#loadingPage").fadeOut();
            }
        });
    } else {
        addselectedcounterparties();
        $('#loadMA').empty();
        $("#popupCounterparties").dialog("option", "title", "Related Contract Record(s)");
        $("#popupCounterparties").dialog("open");
        $("#loadingPage").fadeOut();
    }
}

$("#ddlRelationshipTypeCounterparties").change(function () {
    $("#ddlRelationshipTypeParentcounterparties").empty();

    var jsLang = this.value;
    switch (jsLang) {
        case 'Parent':
            $("#ddlRelationshipTypeParentcounterparties").append("<option value='Parent'>Parent</option>");
            $("#ddlRelationshipTypeParentcounterparties").append("<option value='Subsidiary'>Subsidiary</option>");
            break;
        case 'Supplier':
            $("#ddlRelationshipTypeParentcounterparties").append("<option value='Supplier'>Supplier</option>");
            $("#ddlRelationshipTypeParentcounterparties").append("<option value='Customer'>Customer</option>");
            break;
        case 'Prime Contractor':
            $("#ddlRelationshipTypeParentcounterparties").append("<option value='Prime Contractor'>Prime Contractor</option>");
            $("#ddlRelationshipTypeParentcounterparties").append("<option value='Sub Contractor'>Sub Contractor</option>");
            break;
        case 'Dissolved on Merger':
            $("#ddlRelationshipTypeParentcounterparties").append("<option value='Dissolved on Merger'>Dissolved on Merger</option>");
            $("#ddlRelationshipTypeParentcounterparties").append("<option value='Merged into'>Merged into</option>");
            break;
        case 'Other':
            $("#ddlRelationshipTypeParentcounterparties").append("<option value='Other'>Other</option>");
            break;
    }
    var Action = 0;
    $('input:checkbox[name="RelatedCounterparty"]:checked').each(function () {
        $(this).parent().parent().children(".ddl").empty();
        var vOptions = "<select class='f_inpt width90' onchange='showallspans(this)'>";
        var jsLang = $("#ddlRelationshipTypeParentcounterparties option:selected").val();
        switch (jsLang) {
            case 'Parent':
                vOptions += '<option value="Subsidiary">Subsidiary</option>';
                break;
            case 'Subsidiary':
                vOptions += '<option value="Parent">Parent</option>';
                break;
            case 'Supplier':
                vOptions += '<option value="Customer">Customer</option>';
                break;
            case 'Customer':
                vOptions += '<option value="Supplier">Supplier</option>';
                break;
            case 'Prime Contractor':
                vOptions += '<option value="Sub Contractor">Sub Contractor</option>';
                break;
            case 'Sub Contractor':
                vOptions += '<option value="Prime Contractor">Prime Contractor</option>';
                break;
            case 'Dissolved on Merger':
                vOptions += '<option value="Merged into">Merged into</option>';
                break;
            case 'Merged into':
                vOptions += '<option value="Dissolved on Merger">Dissolved on Merger</option>';
                break;
            case 'Other':
                vOptions += '<option value="Other">Other</option>';
                break;
        }

        vOptions += '</select>';
        $(this).parent().parent().children(".ddl").append(vOptions);
        if (Action == 0) {
            changecounterpartychildrelationship($(this).parent().parent().children(".ddl").find('option:selected').text());
            Action = 1;
        }
    });
});

$("#ddlRelationshipTypeParentcounterparties").change(function () {
    var Action = 0;
    $('input:checkbox[name="RelatedCounterparty"]:checked').each(function () {
        $(this).parent().parent().children(".ddl").empty();
        var vOptions = "<select class='f_inpt width90' onchange='showallspans(this)'>";
        var jsLang = $("#ddlRelationshipTypeParentcounterparties option:selected").val();
        switch (jsLang) {
            case 'Parent':
                vOptions += '<option value="Subsidiary">Subsidiary</option>';
                break;
            case 'Subsidiary':
                vOptions += '<option value="Parent">Parent</option>';
                break;
            case 'Supplier':
                vOptions += '<option value="Customer">Customer</option>';
                break;
            case 'Customer':
                vOptions += '<option value="Supplier">Supplier</option>';
                break;
            case 'Prime Contractor':
                vOptions += '<option value="Sub Contractor">Sub Contractor</option>';
                break;
            case 'Sub Contractor':
                vOptions += '<option value="Prime Contractor">Prime Contractor</option>';
                break;
            case 'Dissolved on Merger':
                vOptions += '<option value="Merged into">Merged into</option>';
                break;
            case 'Merged into':
                vOptions += '<option value="Dissolved on Merger">Dissolved on Merger</option>';
                break;
            case 'Other':
                vOptions += '<option value="Other">Other</option>';
                break;
        }

        vOptions += '</select>';
        $(this).parent().parent().children(".ddl").append(vOptions);
        if (Action == 0) {
            changecounterpartychildrelationship($(this).parent().parent().children(".ddl").find('option:selected').text());
            Action = 1;
        }
    });
});

var vCounterpartyFields = [];

function getCounterpartyprimaryFields() {

    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty/primaryfields',
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (metadataFields) {
            vCounterpartyFields = [];
            $(metadataFields).each(function (i, item) {
                if (item != null && item.FieldName != null) {
                    if ((item.FieldName == "CounterpartyName") || (item.FieldName == "CounterpartyType") || (item.FieldName == "Status")) {
                        if (item.FieldName == "CounterpartyType") {
                            vCounterpartyFields.push(item.FieldName)
                        }
                    }
                    else {
                        vCounterpartyFields.push(item.FieldName)
                    }
                }
            });

        },
        error: function (metadataFields) {
            vCounterpartyFields = [];
        }
    });
}

function funselectallCounterParty(obj) {
    if (obj.checked) { // check select status  
        $('input:checkbox[name=Counterparty]').attr('checked', true);
    } else {
        $('input:checkbox[name=Counterparty]').attr('checked', false);
    }
    checkMultipleDocumentsCounterParty("");
}

function checkMultipleDocumentsCounterParty(object) {
    //manoj
    var arrselectedcunterparty = [];
    $.each($('#liSelectedCounterParty').children(), function () {
        if (arrselectedcunterparty.indexOf($.trim(this.textContent)) == -1)
            arrselectedcunterparty.push($.trim(this.textContent));
    });
    $('#liSelectedCounterParty').empty();

    var tablebind = $('#tblCounterparties').DataTable();
    //$.each($('input:checkbox[name="Counterparty"]', tablebind.rows().nodes()), function () {
    $.each($('#tblCounterparties input:checkbox[name="Counterparty"]'), function () {
        if (typeof ($.trim(this)) != 'undefined' && $.trim(this) != null) {
            if ($.trim(this.value) != "") {
                if (this.checked) {
                    if (arrselectedcunterparty.indexOf(unescape($.trim(this.value))) == -1) {
                        arrselectedcunterparty.push(unescape($.trim(this.value)))
                    }
                } else if (arrselectedcunterparty.indexOf(unescape($.trim(this.value))) > -1) {
                    arrselectedcunterparty.splice(arrselectedcunterparty.indexOf(unescape($.trim(this.value))), 1);
                }
            }
        }
    });
    arrselectedcunterparty.sort();
    $.each(arrselectedcunterparty, function () {
        $('#liSelectedCounterParty').append('<span style="font-size:13px;">' + $.trim(this) + '<img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveSelectedCouterParty(this);" style="float:right" /></span>');
    });
    arrselectedcunterparty = [];

    if ($('input:checkbox[name="Counterparty"]:checked').length == $('input:checkbox[name="Counterparty"]').length && $('input:checkbox[name="Counterparty"]:checked').length != 0) {
        $("#selectallCounterParty").prop('checked', true);
    } else {
        $("#selectallCounterParty").prop('checked', false);
    }
    //manoj

    try {
        hideAllMenuAndStopPro(event);
    }
    catch (ex) {

    }
}

var vCounterpartyFields = [];

function getCounterpartyprimaryFields() {

    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty/primaryfields',
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (metadataFields) {
            vCounterpartyFields = [];
            $(metadataFields).each(function (i, item) {
                if (item != null && item.FieldName != null) {
                    if ((item.FieldName == "CounterpartyName") || (item.FieldName == "CounterpartyType") || (item.FieldName == "Status")) {
                        if (item.FieldName == "CounterpartyType") {
                            vCounterpartyFields.push(item.FieldName)
                        }
                    }
                    else {
                        vCounterpartyFields.push(item.FieldName)
                    }
                }
            });

        },
        error: function (metadataFields) {
            vCounterpartyFields = [];
        }
    });
}

function CreateCounterPartyListUnit(page) {
    $("#tblCounterparties").css("display", "");
    var startIndex = page * 10;
    var endIndex = startIndex + 10;
    $('#tblCounterparties').empty();
    if (endIndex > myCounterPartyArray.length) endIndex = myCounterPartyArray.length;
    $("#spResult").html((startIndex + 1) + '&nbsp;to&nbsp;' + endIndex + '&nbsp;of&nbsp;' + myCounterPartyArray.length);
    var resultfound = false;
    var checkboxchecking = true;
    if (startIndex == endIndex) {
        var art = "No items found.";
        $("#tblCounterparties").html(art);
        checkboxchecking = false;
        $('#loadGenCounterParty').empty();
    }
    else {
        $("#tblCounterparties").html('');
        var spltarrprevRUstr = CounterPartyArrayprev.toString();
        if (spltarrprevRUstr.indexOf(";") > -1) {
            var spltarrprevRU = spltarrprevRUstr.split(';');
            CounterPartyArrayprev = [];
            for (var arrli = 0; arrli < spltarrprevRU.length; arrli++) {
                if (spltarrprevRU[arrli].trim() != "") {
                    CounterPartyArrayprev.push(spltarrprevRU[arrli].trim());
                }
            }
        }
        var article = "";
        for (var i = startIndex; i < endIndex; i++) {

            if (i == startIndex) {
                article += '<tr><th style="width:35%;"><input id="selectallCounterParty" onclick="funselectallCounterParty(this);" type="checkbox"/> Select/Deselect All</th><th style="width:20%;">Counterparty Type</th><th>Global or Regional</th></tr>';
            }

            article += '<tr><td>';
            if (CounterPartyArrayprev != null && multipleChecksDocumentIDd.length > 0) {
                if (CounterPartyArrayprev.indexOf(myCounterPartyArray[i].CounterpartyName.trim()) >= 0 && multipleChecksDocumentIDd.indexOf(myCounterPartyArray[i].CounterpartyName.trim()) > -1) {
                    article += '<input id="CP' + myCounterPartyArray[i].RowKey + '" type="checkbox" name="Counterparty" onclick="checkMultipleDocumentsCounterParty(this);" checked class="css1-checkbox" value="' + escape(myCounterPartyArray[i].CounterpartyName.trim()) + '" />';
                }
                else if (multipleChecksDocumentIDd.indexOf(myCounterPartyArray[i].CounterpartyName.trim()) > -1) {
                    article += '<input id="' + myCounterPartyArray[i].RowKey + '" type="checkbox" name="Counterparty" onclick="checkMultipleDocumentsCounterParty(this);" checked class="css1-checkbox" value="' + escape(myCounterPartyArray[i].CounterpartyName.trim()) + '" />';
                }
                else {
                    article += '<input id="' + myCounterPartyArray[i].RowKey + '" type="checkbox" name="Counterparty" onclick="checkMultipleDocumentsCounterParty(this);"  class="css1-checkbox" value="' + escape(myCounterPartyArray[i].CounterpartyName.trim()) + '" />';
                    checkboxchecking = false;
                }
            }
            else if (CounterPartyArrayprev.indexOf(myCounterPartyArray[i].CounterpartyName.trim()) >= 0 && multipleChecksDocumentIDd.length == 0) {
                article += '<input id="' + myCounterPartyArray[i].RowKey + '" type="checkbox" name="Counterparty" onclick="checkMultipleDocumentsCounterParty(this);" checked class="css1-checkbox" value="' + escape(myCounterPartyArray[i].CounterpartyName.trim()) + '" />';
            }
            else if (multipleChecksDocumentIDd.indexOf(myCounterPartyArray[i].CounterpartyName.trim()) > -1) {
                article += '<input id="' + myCounterPartyArray[i].RowKey + '" type="checkbox" name="Counterparty" onclick="checkMultipleDocumentsCounterParty(this);" checked class="css1-checkbox" value="' + escape(myCounterPartyArray[i].CounterpartyName.trim()) + '" />';
            }
            else {
                article += '<input id="' + myCounterPartyArray[i].RowKey + '" type="checkbox" name="Counterparty" onclick="checkMultipleDocumentsCounterParty(this);"  class="css1-checkbox" value="' + escape(myCounterPartyArray[i].CounterpartyName.trim()) + '" />';
                checkboxchecking = false;
            }
            article += '<label for="CP' + myCounterPartyArray[i].RowKey + '" class="css1-label"  style="display: inline;">' + myCounterPartyArray[i].CounterpartyName.trim() + '</label></td>';
            article += '<td>' + myCounterPartyArray[i].CounterpartyType + '';
            article += '</td>';
            article += '<td>' + (myCounterPartyArray[i].IsGlobal == "Yes" ? "Global" : myCounterPartyArray[i].BusinessAreas) + '';
            article += '</td></tr>';
            resultfound = true;
        }
        $("#tblCounterparties").html(article);
        article = '';
        $('#loading').empty();
    }
    if (checkboxchecking == true) {
        $("#selectallCounterParty").attr('checked', true);
    }
    else {
        $("#selectallCounterParty").attr('checked', false);
    }
    var checkingsdivchild = document.getElementById("liSelectedCounterParty").hasChildNodes();
    if (!checkingsdivchild) {
        if (multipleChecksDocumentIDd.length > 0) {
            for (var spl = 0; spl < multipleChecksDocumentIDd.length; spl++) {
                if (multipleChecksDocumentIDd[spl].trim() != "") {
                    $('#liSelectedCounterParty').append('<span style="font-size:13px;">' + multipleChecksDocumentIDd[spl].trim() + '<img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveSelectedCouterParty(this);" style="float:right" /></span>');
                }
            }
        }
        else {
            var textvalid = "";
            if (strSelCounterPartyField != "") {
                $("#" + strSelCounterPartyField + "").val()
            }
            else {
                $("#Counterparty").val()
            }
            if (typeof textvalid != 'undefined' && textvalid != "") {
                var splitmulicheckforbind = textvalid.split(';');
                for (var spl = 0; spl < splitmulicheckforbind.length; spl++) {
                    if (splitmulicheckforbind[spl].trim() != "") {
                        $('#liSelectedCounterParty').append('<span style="font-size:13px;">' + splitmulicheckforbind[spl] + '<img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveSelectedCouterParty(this);" style="float:right" /></span>');
                        multipleChecksDocumentIDd.push(splitmulicheckforbind[spl].trim());
                    }
                }
            }
            else {
                checkMultipleDocumentsCounterParty("");
            }
        }
    }
    $('#loadGenCounterParty').empty();
}


function SearchCounterparty() {
    var baname = "";
    if (typeof localStorage.GlobalBusinessAreaLocation != "undefined" && localStorage.GlobalBusinessAreaLocation != "" && localStorage.GlobalBusinessAreaLocation != "All") {
        baname = encodeURIComponent(localStorage.GlobalBusinessAreaLocation);
    }
    $("#tblCounterparties").html('<img src="../Content/Images/icon/loading.gif">');
    $("#liSelectedCounterParty").empty();
    multipleChecksDocumentIDd = [];
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty/getrelatedcounterparty?searchkeyword=' + encodeURIComponent($("#txtSearchBox").val()) + '&customquery=&sortbyfield=CounterpartyName&orderby=ASC',
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, BusinessAreaLocation: localStorage.GlobalBusinessAreaLocation
        },
        cache: false,
        success: function (data) {
            $("#tblCounterparties").empty();
            $("#liSelectedCounterParty").empty();
            CounterPartyArrayprev = [];
            if (strSelCounterPartyField != "") {
                $.each($('#' + strSelCounterPartyField + '').val().split(";"), function () {
                    CounterPartyArrayprev.push($.trim(this));
                });
            }
            else {
                $.each($('#Counterparty').val().split(";"), function () {
                    CounterPartyArrayprev.push($.trim(this));
                });
            }

            myCounterPartyArray = [];
            var obj1 = {
            };
            //manoj
            for (var i = 0; i < data.length; i++) {
                if (!(data[i].CounterpartyName in obj1)) {
                    if (data[i].CounterpartyName.trim() != "") {
                        if (data[i].IsGlobal == "Yes")
                            myCounterPartyArray.push(data[i]);
                        else {
                            if (typeof (data[i].BusinessAreasPath) != "undefined" && data[i].BusinessAreasPath != "") {
                                var contractarea = "";
                                var Businesssarea = "";
                                var splitbusinessPath = data[i].BusinessAreasPath.split(';');
                                $(splitbusinessPath).each(function (index) {
                                    if (this != null && this.toString() != "") {
                                        var contBusi = this.split('>');
                                        if (typeof (contBusi) != "undefined") {
                                            if (contBusi.length > 0) {
                                                contractarea = contBusi[0].trim();
                                                Businesssarea = contBusi[contBusi.length - 1].trim();
                                                if (thisBusinessAreaNameC == Businesssarea && thisContractAreaNameC == contractarea)
                                                    myCounterPartyArray.push(data[i]);
                                            }
                                        }
                                    }
                                })

                            }
                        }
                    }
                }
                obj1[data[i].CounterpartyName] = true;
            }
            //manoj
            //for (var i = 0; i < data.length; i++) {
            //    if (!(data[i].CounterpartyName in obj1)) {
            //        if (data[i].CounterpartyName.trim() != "") {
            //            myCounterPartyArray.push(data[i]);
            //        }
            //    }
            //    obj1[data[i].CounterpartyName] = true;
            //}
            var resultfound = true;
            var myArraylength = myCounterPartyArray.length;
            CreateCounterPartyListUnit(0);
            var vCount = myArraylength;
            var columncounterparty = [];
            $('#compact-paginationCounterparties').css("display", "");
            $(myCounterPartyArray).each(function (imyCounterPartyArray, itmmyCounterPartyArray) {
                columncounterparty.push(itmmyCounterPartyArray.CounterpartyName);
            });
            //for (var ci = 0; ci < myCounterPartyArray.length; ci++) {
            //    columncounterparty.push(myCounterPartyArray[ci].CounterpartyName);
            //}
            $("#txtSearchBox").autocomplete({
                source: columncounterparty,
                minLength: 1,
                focus: function (event, ui) {
                    return false;
                },
                select: function (evn, uidetails) {
                    $("#txtSearchBox").val(uidetails.item.label);
                    SearchCounterparty();
                }
            });
            $('#compact-paginationCounterparties').pagination({
                items: vCount,
                itemsOnPage: 10,
                typeID: 'tblCounterparties',
                cssStyle: 'compact-theme',
                listname: 'CounterPartyListUnit'
            });
            $("#loadingPage").fadeOut();
            $("#browseCounterparty").dialog("option", "title", "Counterparty Picker");
            $("#browseCounterparty").dialog("open");
        },
        error:
            function (data) {
                $('#compact-paginationCounterparties').css("display", "none");
                $("#liSelectedCounterParty").empty();
                $("#tblCounterparties").html('No items found.');
                $("#browseCounterparty").dialog("option", "title", "Counterparty Picker");
                $("#browseCounterparty").dialog("open");
                $("#loadingPage").fadeOut();
            }
    });
}


//function funselectall(obj) {
//    if (obj.checked) { // check select status  
//        $('input:checkbox[name=Generic]').attr('checked', true);
//        checkGeneric("");
//    } else {
//        $('input:checkbox[name=Generic]').attr('checked', false);

//        checkGeneric("");
//    }
//}

function CreateReportUnitList(page) {
    $("#tblGeneric").css("display", "");
    var startIndex = page * 10;
    var endIndex = startIndex + 10;
    $('#tblGeneric').empty();
    if (endIndex > myArrayRU.length) endIndex = myArrayRU.length;
    $("#spResult").html((startIndex + 1) + '&nbsp;to&nbsp;' + endIndex + '&nbsp;of&nbsp;' + myArrayRU.length);
    var resultfound = false;
    var checkboxchecking = true;
    if (startIndex == endIndex) {
        var art = "No items found.";
        $("#tblGeneric").html(art);
        checkboxchecking = false;
        $('#loadGen').empty();
    }
    else {
        $("#tblGeneric").html('');
        var spltarrprevRUstr = arrprevRU.toString();
        if (spltarrprevRUstr.indexOf(";") > -1) {
            var spltarrprevRU = spltarrprevRUstr.split(';');
            arrprevRU = [];
            for (var arrli = 0; arrli < spltarrprevRU.length; arrli++) {
                if (spltarrprevRU[arrli].trim() != "") {
                    arrprevRU.push(spltarrprevRU[arrli]);
                }
            }
        }
        for (var i = startIndex; i < endIndex; i++) {
            var article = "";
            if (i == startIndex) {
                article += '<tr><th><input id="selectall" onclick="funselectall(this);" type="checkbox"/> Select/Deselect All</th></tr>';
            }

            article += '<tr><td>';
            if (arrprevRU != null && multipleChecksDocumentIDd.length > 0) {
                if (arrprevRU.indexOf(myArrayRU[i]) >= 0 && multipleChecksDocumentIDd.indexOf(myArrayRU[i].trim()) > -1) {
                    article += '<input id="' + myArrayRU[i] + '" type="checkbox" name="Generic" onclick="checkGeneric(this);" checked class="css1-checkbox" value="' + myArrayRU[i] + '" />';
                }
                else if (multipleChecksDocumentIDd.indexOf(myArrayRU[i].trim()) > -1) {
                    article += '<input id="' + myArrayRU[i] + '" type="checkbox" name="Generic" onclick="checkGeneric(this);" checked class="css1-checkbox" value="' + myArrayRU[i] + '" />';
                }
                else {
                    article += '<input id="' + myArrayRU[i] + '" type="checkbox" name="Generic" onclick="checkGeneric(this);"  class="css1-checkbox" value="' + myArrayRU[i] + '" />';
                    checkboxchecking = false;
                }
            }
            else if (arrprevRU.indexOf(myArrayRU[i]) >= 0 && multipleChecksDocumentIDd.length == 0) {
                article += '<input id="' + myArrayRU[i] + '" type="checkbox" name="Generic" onclick="checkGeneric(this);" checked class="css1-checkbox" value="' + myArrayRU[i] + '" />';
            }
            else if (multipleChecksDocumentIDd.indexOf(myArrayRU[i].trim()) > -1) {
                article += '<input id="' + myArrayRU[i] + '" type="checkbox" name="Generic" onclick="checkGeneric(this);" checked class="css1-checkbox" value="' + myArrayRU[i] + '" />';
            }
            else {
                article += '<input id="' + myArrayRU[i] + '" type="checkbox" name="Generic" onclick="checkGeneric(this);"  class="css1-checkbox" value="' + myArrayRU[i] + '" />';
                checkboxchecking = false;
            }
            article += '<label for="' + myArrayRU[i] + '" class="css1-label">' + myArrayRU[i] + '</label>';
            article += '</td></tr>';
            $("#tblGeneric").append(article);
            $('#loading').empty();
            resultfound = true;

        }
    }
    if (checkboxchecking == true) {
        $("#selectall").prop('checked', true);
    }
    else {
        $("#selectall").prop('checked', false);
    }
    var checkingsdivchild = document.getElementById("liSelectedRU").hasChildNodes();
    if (!checkingsdivchild) {
        if (multipleChecksDocumentIDd.length > 0) {
            for (var spl = 0; spl < multipleChecksDocumentIDd.length; spl++) {
                if (multipleChecksDocumentIDd[spl].trim() != "") {
                    $('#liSelectedRU').append('<span style="font-size:13px;">' + multipleChecksDocumentIDd[spl].trim() + '<img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveSelectedRU(this);" style="float:right" /></span>');
                }
            }
        }
        else {
            var idtext = $("#browseGeneric").data('param_1');
            if (typeof idtext != 'undefined') {
                var textvalid = $('#' + idtext).val();
                if (typeof textvalid != 'undefined' && textvalid != "") {
                    var splitmulicheckforbind = textvalid.split(';');
                    for (var spl = 0; spl < splitmulicheckforbind.length; spl++) {
                        if (splitmulicheckforbind[spl].trim() != "") {
                            $('#liSelectedRU').append('<span style="font-size:13px;">' + splitmulicheckforbind[spl] + '<img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveSelectedRU(this);" style="float:right" /></span>');
                            multipleChecksDocumentIDd.push(splitmulicheckforbind[spl].trim());
                        }
                    }
                }
                else {
                    checkGeneric("");
                }
            }
            else {
                checkGeneric("");
            }
        }
    }
    $('#loadGen').empty();
}

function GetValuesAndAutoPopulate(controlname, values) {
    var multiarr = [];
    var res = values != null ? values.split(";") : [];
    var reslength = res.length;
    var resValue = "";
    for (var i = 0; i < reslength; i++) {
        //   multiarr.push(res[i].trim());
        resValue = res[i].trim();
        if (resValue != "") {
            if ($('#' + controlname + ' option[value="' + resValue + '"]').length > 0 && multiarr.indexOf(resValue) == -1)
                multiarr.push(resValue);
        }
    }
    //manoj
    if ($('.ContractRoleType#' + controlname).length > 0) {
        ChosenOrder.setSelectionOrder($("." + controlname + '#' + controlname), multiarr, true);
        ChosenOrder.setSelectionOrder($('.ContractRoleType#' + controlname), multiarr, true);
    }
    //manoj

    ChosenOrder.setSelectionOrder($('#' + controlname), multiarr, true);

}

function HideOptionsNotRequiredExcept(controlname, values) {

    var multiarr = [];
    var res = values != null ? values.split(";") : [];
    var reslength = res.length;
    var resValue = "";
    $("#" + controlname).children('option').hide();
    $('#' + controlname).chosen().trigger("chosen:updated");

    for (var i = 0; i < reslength; i++) {
        //   multiarr.push(res[i].trim());
        resValue = res[i].trim();
        if (resValue != "") {
            if ($('#' + controlname).children('option').filter(function () { return $(this).text() == resValue; }).length > 0 && multiarr.indexOf(resValue) == -1) {
                $('#' + controlname).children('option').filter(function () {
                    return $(this).text() == resValue;
                }).show();
                multiarr.push(resValue);
            }
        }
    }
    if (multiarr.length == 0) {
        $('#' + controlname).attr("data-placeholder", "No users available").chosen();
    }
    else {
        $('#' + controlname).attr("data-placeholder", "Select User(s)").chosen();
    }
    $('#' + controlname).chosen().trigger("chosen:updated");
}

function ViewRelatedRequest() {
    $('#loadProContract').html('<img src="../Content/Images/icon/loading.gif"> Working on it...');
    if ($('#tblRequests tr').length <= 0) {
        RelatedRequestCollection();
    } else {
        $('#loadProContract').empty();
        $("#browseRequest").dialog("option", "title", "Request Picker");
        $("#browseRequest").dialog("open");
    }
}

function RelatedRequestCollection() {
    $("#tblRequests").empty();
    $("#loadingPage").fadeIn();
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Requests/relatedrequestsearch?businessarea=' + $("#txtBusinessArea").val() + '&sortbyfield=RequestTitle&orderby=ASC',
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, UserID: localStorage.UserID
        },
        cache: false,
        success: function (data) {
            $('#loadProRequest').empty();
            var arr = [];
            var RequestTileTag = [];
            $.each($('#RelatedRequests').val().split(";"), function () {
                arr.push($.trim(this));
            });
            var datalength = data.length;
            if (datalength > 0) {
                for (var i = 0; i < datalength; i++) {
                    var item = data[i];
                    var article = "";
                    if (i == 0) {
                        article += '<tr><th>Request Title</th></tr>';
                    }
                    article += '<tr><td>';
                    if (arr.indexOf(item.RequestTitle) >= 0) {
                        article += '<input id="Pro' + item.RowKey + '" type="checkbox" name="RelatedRequest" class="css1-checkbox" checked value="' + item.RequestTitle + '" />';
                    } else {
                        article += '<input id="Pro' + item.RowKey + '" type="checkbox" name="RelatedRequest" class="css1-checkbox" value="' + item.RequestTitle + '" />';
                    }
                    article += '<label for="Pro' + item.RowKey + '" class="css1-label">' + item.RequestTitle + '</label>';
                    article += '</td></tr>';
                    RequestTileTag.push(item.RequestTitle);
                    $("#tblRequests").append(article);
                }
                $("#txtSearchBoxRequest").autocomplete({
                    source: RequestTileTag,
                    minLength: 1,
                    focus: function (event, ui) {
                        return false;
                    },
                    select: function (evn, uidetails) {
                        $("#txtSearchBoxRequest").val(uidetails.item.label);
                        SearchRequest();
                    }
                });

                var vCount = $("#tblRequests tr").length;
                $('#compact-paginationContracts').pagination({
                    items: vCount,
                    itemsOnPage: 10,
                    typeID: 'tblRequests',
                    cssStyle: 'compact-theme'
                });
                try {
                    $("#browseRequest").dialog("option", "title", "Request Picker");
                    $("#browseRequest").dialog("open");
                }
                catch (ex) {
                }
                $("#loadingPage").fadeOut();
            } else {
                $('#loadProRequest').empty();
                $('#loadProRequest').html('<p style="color: red; margin-top: 50px; margin-bottom: 10px; margin-left: 10px;">No items found.</p>')
                $("#browseRequest").dialog("option", "title", "Request Picker");
                $("#browseRequest").dialog("open");
                $("#loadingPage").fadeOut();
            }
        },
        error: function () {
            $('#loadProRequest').empty();
            $('#loadProRequest').html('<p style="color: red; margin-top: 50px; margin-bottom: 10px; margin-left: 10px;">No items found.</p>')
            $("#browseRequest").dialog("option", "title", "Request Picker");
            $("#browseRequest").dialog("open");
            $("#loadingPage").fadeOut();

        }
    });

}

function SearchRequest() {
    $("#tblRequests").empty();
    $('#loadProRequest').html('<img src="../Content/Images/icon/loading.gif"> Searching...');
    var vURL = vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Requests?searchkeyword=' + encodeURIComponent($("#txtSearchBoxRequest").val()) + '&customquery=BusinessArea:' + $("#txtBusinessArea").val() + '&sortbyfield=RequestTitle&orderby=ASC';
    $.ajax({
        url: vURL,
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (data) {
            var arr = [];
            $.each($('#RelatedRequests').val().split(";"), function () {
                arr.push($.trim(this));
            });
            var datalength = data.length;
            var article = '';
            for (var i = 0; i < datalength; i++) {
                var item = data[i];
                if (i == 0) {
                    article += '<tr><th>Request Title</th></tr>';
                }
                article += '<tr><td>';
                if (arr.indexOf(item.RequestTitle) >= 0) {
                    article += '<input id="Pro' + item.RowKey + '" type="checkbox" name="RelatedRequest" class="css1-checkbox" checked value="' + item.RequestTitle + '" />';
                } else {
                    article += '<input id="Pro' + item.RowKey + '" type="checkbox" name="RelatedRequest" class="css1-checkbox" value="' + item.RequestTitle + '" />';
                }
                article += '<label for="' + item.RowKey + '" class="css1-label">' + item.RequestTitle + '</label>';
                article += '</td></tr>';

            }
            $('#loadProRequest').empty();
            $("#tblRequests").html(article);;
            article = '';
            var vCount = $("#tblRequests tr").length;
            if (vCount != 0) {
                $('#loadProRequest').html('');
                $('#compact-paginationContracts').css('display', '');
                $('#compact-paginationContracts').pagination({
                    items: vCount,
                    itemsOnPage: 10,
                    typeID: 'tblRequests',
                    cssStyle: 'compact-theme'
                });
            } else {
                $('#loadProRequest').html('<p style="color: red; margin-top: 50px; margin-bottom: 10px; margin-left: 10px;">No items found.</p>')
                $('#compact-paginationContracts').css('display', 'none');
            }
        },
        error: function () {
            $('#compact-paginationContracts').css('display', 'none');
            $('#loadProRequest').html('<p style="color: red; margin-top: 50px; margin-bottom: 10px; margin-left: 10px;">No items found.</p>')
        }
    });

}

function AddRequest() {
    var vRequest = "";
    var vRequestName = "";
    $('input:checkbox[name="RelatedRequest"]:checked').each(function () {
        vRequestName = this.value;
        if (vRequest == "") {
            vRequest = this.value;
        }
        else {
            vRequest += "; " + this.value;
        }
    });

    if (vRequest != "") {
        $('#RelatedRequests').val(vRequest);
        return true;
    } else {
        swal("", "No request has been selected.");
        return false;
    }

}

function getpaymenttype(obj) {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/paymenttypes',
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (data) {
            $(data).each(function (i, item) {
                if (item.TypeName == obj) {
                    $("#PaymentType").append("<option value='" + item.TypeName + "' selected='selected'>" + item.TypeName + "</option>")
                } else {
                    $("#PaymentType").append("<option value='" + item.TypeName + "'>" + item.TypeName + "</option>")
                }
            });

        }
    });
}
function getlicencetype(obj) {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/licencetypes',
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (data) {
            $(data).each(function (i, item) {
                if (item.TypeName == obj) {
                    $("#LicenceType").append("<option value='" + item.TypeName + "' selected='selected'>" + item.TypeName + "</option>")
                } else {
                    $("#LicenceType").append("<option value='" + item.TypeName + "'>" + item.TypeName + "</option>")
                }
            });

        }
    });
}

function showallspans(obj) {
    if (obj == "") {
        var reltypeselected = $("#ddlRelationshipType").find('option:selected').val();
        if (reltypeselected != 0 && $(this).parent().parent().children(".ddl").find('option:selected').text() != "") {
            $('#liSelectedRelatedContract').empty();
            $('input:checkbox[name="RelatedContract"]:checked').each(function () {
                $('#liSelectedRelatedContract').append('<span style="font-size:11px;" id=' + this.id + '>' + this.value + ' (' + $(this).parent().parent().children(".ddl").find('option:selected').text() + ') <img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveRelationshipselected(this);" style="float:right" /></span>');

                if (arrRelatedContractsSelected.length > 0) {
                    var rtypeindex = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID.split(";").indexOf(this.id);
                    var rtypetoremove = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedRelationshipType.split(";");
                    var reltypetoremove = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelationshipType.split(";");
                    rtypetoremove[rtypeindex] = $(this).parent().parent().children(".ddl").find('option:selected').text();
                    reltypetoremove[rtypeindex] = $("#ddlRelationshipTypeParent").find('option:selected').text();
                    arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedRelationshipType = rtypetoremove.join(";");
                    arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelationshipType = reltypetoremove.join(";");
                }
            });
        }

    }
    else {
        var spanid = $(obj).parent().parent().children().find("input[type=checkbox]")[0].id;
        if (spanid != "") {
            var chkObj = $("#" + spanid)[0];
            $("#liSelectedRelatedContract #" + spanid).remove();
            if ($(chkObj).parent().parent().children(".ddl").find('option:selected').text() != "") {
                $('#liSelectedRelatedContract').append('<span style="font-size:11px;" id=' + chkObj.id + '>' + chkObj.value + ' (' + $(chkObj).parent().parent().children(".ddl").find('option:selected').text() + ') <img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveRelationshipselected(this);" style="float:right" /></span>');
            }
            if (arrRelatedContractsSelected.length > 0) {
                var rtypeindex = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID.split(";").indexOf(chkObj.id);
                var rtypetoremove = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedRelationshipType.split(";");
                var reltypetoremove = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelationshipType.split(";");
                rtypetoremove[rtypeindex] = $(chkObj).parent().parent().children(".ddl").find('option:selected').text();
                reltypetoremove[rtypeindex] = $("#ddlRelationshipTypeParent").find('option:selected').text();
                arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedRelationshipType = rtypetoremove.join(";");
                arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelationshipType = reltypetoremove.join(";");
            }
        }
    }

}

function showallspansNew() {
    $('input[type="checkbox"][name="RelatedContract"]:checked').parent().parent().each(function () {
        var obj = $(this).find('select')[0];
        var spanid = $(obj).parent().parent().children().find("input[type=checkbox]")[0].id;
        if (spanid != "") {
            var chkObj = $("#" + spanid)[0];
            $("#liSelectedRelatedContract #" + spanid).remove();
            if ($(chkObj).parent().parent().children(".ddl").find('option:selected').text() != "") {
                $('#liSelectedRelatedContract').append('<span style="font-size:11px;" id=' + chkObj.id + '>' + chkObj.value + ' (' + $(chkObj).parent().parent().children(".ddl").find('option:selected').text() + ') <img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveRelationshipselected(this);" style="float:right" /></span>');
            }
            if (arrRelatedContractsSelected.length > 0) {
                var rtypeindex = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID.split(";").indexOf(chkObj.id);
                var rtypetoremove = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedRelationshipType.split(";");
                var reltypetoremove = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelationshipType.split(";");
                rtypetoremove[rtypeindex] = $(chkObj).parent().parent().children(".ddl").find('option:selected').text();
                reltypetoremove[rtypeindex] = $("#ddlRelationshipTypeParent").find('option:selected').text();
                arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedRelationshipType = rtypetoremove.join(";");
                arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelationshipType = reltypetoremove.join(";");
            }
        }

    })
}


//Check document sent for automation and once document automation is done call BindDocument()
function collectrelatedcontractrowkey(obj) {
    if (requiredValidator('popupContracts', false)) {
        if ($(obj).parent().parent().children().eq(4).text() == "Expired" && obj != "" && obj.checked == true) {

            swal({
                title: '',
                text: "This Contract has been Expired. Do you want to relate this contract?",
                type: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes',
                cancelButtonText: 'No',
                html: true
            },
            function (confirmed) {
                if (confirmed) {


                    //$('#liSelectedRelatedContract').empty();
                    //$('input:checkbox[name="RelatedContract"]:checked').each(function () {
                    if (arrRelatedcontractRowkey.length > 0) {
                        arrRelatedcontractRowkey = $.grep(arrRelatedcontractRowkey, function (n) {
                            return n.trim() != obj.id;
                        });
                    }
                    if (obj != "" && obj.checked == true) {
                        //manoj
                        $("#liSelectedRelatedContract #" + obj.id).remove();
                        //manoj
                        //$("#" + obj.id).trigger("click");
                        $('#liSelectedRelatedContract').append('<span style="font-size:11px;" id=' + obj.id + '>' + obj.value + ' (' + $(obj).parent().parent().children(".ddl").find('option:selected').text() + ') <img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveRelationshipselected(this);" style="float:right" /></span>');
                        arrRelatedcontractRowkey.push(obj.id);
                    }

                    //});
                    var SelectedRelConID = [];
                    SelectedRelConID = [];
                    $('input:checkbox[name="RelatedContract"]:checked').each(function () {
                        SelectedRelConID.push(this.id);
                    });
                    if (SelectedRelConID.length > 0) {
                        $("#relatedrole").css('display', '');
                        $("#relatedrole").html("Relationship");
                    } else {
                        $("#relatedrole").html("");
                        $("#relatedrole").css('display', 'none');
                    }

                    if (obj != "" && obj.checked == true) {
                        if (arrRelatedContractsSelected.length > 0) {
                            arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID += ";" + obj.id;
                            arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedStatus += ";" + $(obj).parent().parent().children().eq(4).text();
                            arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractTitle += ";" + obj.value;
                            arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedRelationshipType += ";" + $(obj).parent().parent().children(".ddl").find('option:selected').text();
                            arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelationshipType += ";" + $("#ddlRelationshipTypeParent").find('option:selected').text();
                        }
                        else {
                            arrRelatedContractsSelected.push({
                                ContractID: "",
                                ContractTitle: "",
                                RelatedContractID: obj.id,
                                RelatedStatus: $(obj).parent().parent().children().eq(4).text(),
                                RelatedContractTitle: obj.value,
                                RelationshipType: $("#ddlRelationshipTypeParent").find('option:selected').text(),
                                RelatedRelationshipType: $(obj).parent().parent().children(".ddl").find('option:selected').text(),
                                CreatedBy: localStorage.UserName,
                                ModifiedBy: localStorage.UserName
                            });
                        }
                    }
                    else if (obj != "" && obj.checked == false) {
                        var rtypeindex = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID.split(";").indexOf(obj.id);
                        var rtindex = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID.split(";");
                        var rtitle = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractTitle.split(";");
                        var rstatus = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedStatus.split(";");
                        var rtypetoremove = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedRelationshipType.split(";");
                        var reltypetoremove = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelationshipType.split(";");
                        rtindex[rtypeindex] = "";
                        rtitle[rtypeindex] = "";
                        rstatus[rtypeindex] = "";
                        rtypetoremove[rtypeindex] = "";
                        reltypetoremove[rtypeindex] = "";
                        arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID = rtindex.join(";").replace(";;", "");
                        arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractTitle = rtitle.join(";").replace(";;", "");
                        arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedStatus = rstatus.join(";").replace(";;", "");
                        arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedRelationshipType = rtypetoremove.join(";").replace(";;", "");
                        arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelationshipType = reltypetoremove.join(";").replace(";;", "");
                        $("#liSelectedRelatedContract").find('span#' + obj.id).remove();
                    }
                    RelatedContractRelationShipTypeparent = $("#ddlRelationshipTypeParent option:selected").val();



                } else {
                    $("#" + obj.id).prop('checked', false);
                    $("#" + obj.id).parent().parent().children(".ddl").empty();
                    $("#liSelectedRelatedContract").find('span#' + obj.id).remove();
                }
            });
        }
        else {

            //$('#liSelectedRelatedContract').empty();
            //$('input:checkbox[name="RelatedContract"]:checked').each(function () {
            if (arrRelatedcontractRowkey.length > 0) {
                arrRelatedcontractRowkey = $.grep(arrRelatedcontractRowkey, function (n) {
                    return n.trim() != obj.id;
                });
            }
            if (obj != "" && obj.checked == true) {
                //manoj
                $("#liSelectedRelatedContract #" + obj.id).remove();
                //manoj
                //$("#" + obj.id).trigger("click");
                $('#liSelectedRelatedContract').append('<span style="font-size:11px;" id=' + obj.id + '>' + obj.value + ' (' + $(obj).parent().parent().children(".ddl").find('option:selected').text() + ') <img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveRelationshipselected(this);" style="float:right" /></span>');
                arrRelatedcontractRowkey.push(obj.id);
            }

            //});
            var SelectedRelConID = [];
            SelectedRelConID = [];
            $('input:checkbox[name="RelatedContract"]:checked').each(function () {
                SelectedRelConID.push(this.id);
            });
            if (SelectedRelConID.length > 0) {
                $("#relatedrole").css('display', '');
                $("#relatedrole").html("Relationship");
            } else {
                $("#relatedrole").html("");
                $("#relatedrole").css('display', 'none');
            }

            if (obj != "" && obj.checked == true) {
                if (arrRelatedContractsSelected.length > 0) {
                    arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID += ";" + obj.id;
                    arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedStatus += ";" + $(obj).parent().parent().children().eq(4).text();
                    arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractTitle += ";" + obj.value;
                    arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedRelationshipType += ";" + $(obj).parent().parent().children(".ddl").find('option:selected').text();
                    arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelationshipType += ";" + $("#ddlRelationshipTypeParent").find('option:selected').text();
                }
                else {
                    arrRelatedContractsSelected.push({
                        ContractID: "",
                        ContractTitle: "",
                        RelatedContractID: obj.id,
                        RelatedContractTitle: obj.value,
                        RelatedStatus: $(obj).parent().parent().children().eq(4).text(),
                        RelationshipType: $("#ddlRelationshipTypeParent").find('option:selected').text(),
                        RelatedRelationshipType: $(obj).parent().parent().children(".ddl").find('option:selected').text(),
                        CreatedBy: localStorage.UserName,
                        ModifiedBy: localStorage.UserName
                    });
                }
            }
            else if (obj != "" && obj.checked == false) {
                var rtypeindex = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID.split(";").indexOf(obj.id);
                var rtindex = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID.split(";");
                var rtitle = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractTitle.split(";");
                var rstatus = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedStatus.split(";");
                var rtypetoremove = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedRelationshipType.split(";");
                var reltypetoremove = arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelationshipType.split(";");
                rtindex[rtypeindex] = "";
                rtitle[rtypeindex] = "";
                rstatus[rtypeindex] = "";
                rtypetoremove[rtypeindex] = "";
                reltypetoremove[rtypeindex] = "";
                arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractID = rtindex.filter(function (v) { return v !== '' && v !== null }).join(";");
                arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedContractTitle = rtitle.filter(function (v) { return v !== '' && v !== null }).join(";");
                arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedStatus = rstatus.filter(function (v) { return v !== '' && v !== null }).join(";");
                arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelatedRelationshipType = rtypetoremove.filter(function (v) { return v !== '' && v !== null }).join(";");
                arrRelatedContractsSelected[arrRelatedContractsSelected.length - 1].RelationshipType = reltypetoremove.filter(function (v) { return v !== '' && v !== null }).join(";");
                $("#liSelectedRelatedContract").find('span#' + obj.id).remove();
            }
            RelatedContractRelationShipTypeparent = $("#ddlRelationshipTypeParent option:selected").val();


        }
    }
    else {
        //$("#relatedrole").html("");
        $("#" + obj.id).prop('checked', false);
        $("#" + obj.id).parent().parent().children(".ddl").empty();
    }

}



//deleting document automation entry


function SelectExistingCounterparty() {
    $('#dvCPExistingCounterparty').css("display", "");
    $('#dvCPAddCounterparty').css("display", "none");
    $('#chkCounterpartyNotInList').prop('checked', false);
}

function SelectAddCounterparty() {
    $('#dvCPExistingCounterparty').css("display", "none");
    $('#dvCPAddCounterparty').css("display", "");
    if (!$('#chkCounterpartyNotInList').prop('checked')) {
        $('#chkCounterpartyNotInList').trigger('click');
    }
}
function ClearAddCounterparty() {
    $("#txtSearchBox").val("");
    $("#txtCounterpartyID").val("");
    $("#txtCounterpartyName").val("");
    $('#ddlCounterpartyType').val('0');
    $("#txtOwnerofBusinessArea").val('');
    $('input[type="radio"][name=IsGlobal][value="Yes"]').prop('checked', true);
    $("#trcp-RgBusi").hide();
    $("#txtOwnerofBusinessArea").removeClass("validelement");
    $("#txtAddressLine1").val("");
    $("#txtAddressLine2").val("");
    $("#txtCity").val("");
    $("#txtState").val("");
    $("#txtZip").val("");
    $('#ddlCountry').val('0');
    $("#txtContactNo").val("");
    $("#txtEmailID").val("");
    $("#ddlStatus").val("Active");
    $("#chkCounterpartyNotInList").attr("checked", false);
    $('.CP_Det').css('display', 'none');
    $('.CP_Det1').css('display', 'none');
    $("#ddlCounterpartyType").removeClass('validelement');
    $("#txtEmailID").removeClass('validemail');
    $(".validelement").each(function (index, element) {
        $(element).removeClass("error");
        $("#errormsg_" + element.id).remove();
    });
}
$('#chkCounterpartyNotInList').click(function () {
    if ($("#chkCounterpartyNotInList").is(':checked')) {
        //if ($("#txtCounterpartyName").val() != "") {
        //    if ($("#txtCounterpartyName").val().trim() != "") {
        //        $('.CP_Det').css('display', '');
        //        $('.CP_Det1').css('display', '');
        //        $("#ddlCounterpartyType").addClass('validelement');
        //        $("#txtEmailID").addClass('validemail');
        //        getCounterpartyFields();
        //    }
        //    else {
        //        swal("", "Enter counterparty name.");
        //        $("#chkCounterpartyNotInList").prop('checked', false);
        //        $("#txtCounterpartyName").val("");
        //        $("#txtCounterpartyName").focus();
        //    }
        //} else {
        //    swal("", "Enter counterparty name.");
        //    $("#chkCounterpartyNotInList").prop('checked', false);
        //    $("#txtCounterpartyName").val("");
        //    $("#txtCounterpartyName").focus();
        //}
        if ($("#counterpartyDynamicItems li").length == 0) {
            $('.CP_Det').css('display', '');
            $('.CP_Det1').css('display', '');
            $("#txtCounterpartyName").addClass('validelement');
            $("#ddlCounterpartyType").addClass('validelement');
            $("#txtEmailID").addClass('validemail');
            getCounterpartyFields();
        }
    } else {
        $('.CP_Det').remove();
        $('.CP_Det1').css('display', 'none');
        $("#ddlCounterpartyType").removeClass('validelement');
        $("#txtEmailID").removeClass('validemail');
        $("#txtOwnerofBusinessArea").val('');
        $('input[type="radio"][name=IsGlobal][value="Yes"]').prop('checked', true);
        $("#trcp-RgBusi").hide();
        $("#txtOwnerofBusinessArea").removeClass("validelement");
    }
});

//$("#txtCounterpartyName").blur(function () {

//    fillCounterpartyDetails();
//})


//function fillCounterpartyDetails() {

//    if ($("#txtCounterpartyName").val().trim() != "" && !($("#chkCounterpartyNotInList").prop('checked'))) {
//        $("#chkCounterpartyNotInList").prop('checked', true);
//        $('.CP_Det').css('display', '');
//        $('.CP_Det1').css('display', '');
//        $("#ddlCounterpartyType").addClass('validelement');
//        $("#txtEmailID").addClass('validemail');
//        getCounterpartyFields();
//    }
//}

//$('#txtCounterpartyName').keypress(function (e) {
//    if ($('#txtCounterpartyName').val() != "" && !($("#chkCounterpartyNotInList").prop('checked'))) {
//        if (e.keyCode == 13) {
//            e.preventDefault();
//            fillCounterpartyDetails();
//        }
//    }
//});

function getCounterpartyFields() {
    $("#loadingPage").fadeIn();
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty/primaryfields',
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (metadataFields) {
            vCounterpartyFields = [];
            $(metadataFields).each(function (i, item) {
                if (item != null && item.FieldName != null) {
                    if ((item.FieldName == "CounterpartyName") || (item.FieldName == "CounterpartyType") || (item.FieldName == "Status")) {
                        if (item.FieldName == "CounterpartyType") {
                            vCounterpartyFields.push(item.FieldName);
                        }
                    }
                    else {
                        vCounterpartyFields.push(item.FieldName);
                        if (item.ShowInCreateForm == "true") {
                            var vControls = "";
                            var vDate = "";
                            var vNumber = "";
                            var vPhoneNumber = "";
                            var PhoneID = "";
                            var PhoneCountry = "";
                            var vEmail = "";
                            var vMultiDDL = "";
                            var vUser = "";
                            var vUserList = "";
                            //manoj
                            var vCurrency = "";
                            var vNumberD = "";
                            var vNumberP = "";
                            var vNumberPD = "";
                            //manoj
                            if (item.Required == "true") {
                                vControls += '<li class="removableCounterpartyField CP_Det"><p><b>' + item.FieldDisplayName + '</b><small>*</small>';
                            } else {
                                vControls += '<li class="removableCounterpartyField CP_Det"><p><b>' + item.FieldDisplayName + '</b>';
                            }
                            if (item.FieldHelp == "true") {
                                vControls += '<span class="p-text help"> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
                            }
                            vControls += '</p><div>';
                            if (item.FieldType == "Single Line Text") {
                                if (item.FieldName == "Country") {
                                    if (item.Required == "true") {
                                        vControls += "<select id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "'  class='validelement'>";

                                    } else {
                                        vControls += "<select id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "'>";
                                    }
                                    vControls += "<option value='0'>--Select--</option>";
                                    $.ajax({
                                        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/countrynames',
                                        type: 'GET',
                                        dataType: 'json',
                                        'Content-Type': 'application/json',
                                        cache: false,
                                        async: false,
                                        headers: {
                                            'eContracts-ApiKey': localStorage.APIKey
                                        },
                                        success: function (data) {
                                            $(data).each(function (i, item) {
                                                vControls += '<option value="' + item + '">' + item + '</option>';
                                            });
                                        },
                                        error:
                                            function (data) {

                                            }
                                    });

                                    vControls += '</select>';
                                    vControls += '<label style="text-align:left" class="p-text">' + item.Description + '</label>';
                                } else {
                                    if (item.Required == "true") {
                                        vControls += "<input type='text' id=" + item.FieldName + " maxlength='100' name=" + item.FieldName + " class='validelement'>";
                                    } else {
                                        vControls += "<input type='text' id=" + item.FieldName + " maxlength='100' name=" + item.FieldName + ">";
                                    }
                                    vControls += '<label style="text-align:left" class="p-text">' + item.Description + '</label>';
                                }
                                vControls += '</div></li>';
                            }
                            else if (item.FieldType == "Multi Line Text") {
                                if (item.Required == "true") {
                                    vControls += "<textarea name=" + item.FieldName + " maxlength='300' id=" + item.FieldName + " title='" + item.FieldDisplayName + "' cols='25' rows='3' class=' validelement'></textarea>";
                                } else {
                                    vControls += "<textarea name=" + item.FieldName + " maxlength='300' id=" + item.FieldName + " title='" + item.FieldDisplayName + "' cols='25' rows='3'></textarea>";
                                }
                                vControls += '<label style="text-align:left" class="p-text">' + item.Description + '</label>';
                                vControls += '</div></li>';
                            }
                            else if (item.FieldType == "Hyperlink") {
                                //manoj
                                //for Hyperlink
                                var Hyperlinkvalue = item.DefaultURL;
                                if (item.Required == "true") {
                                    vControls += "<input type='text' id=CP" + item.FieldName + " maxlength='2083' name=" + item.FieldName + " placeholder='http://www.' value = '" + Hyperlinkvalue + "' class='validelement validwebsite'>";
                                } else {
                                    vControls += "<input type='text' id=CP" + item.FieldName + " maxlength='2083' name=" + item.FieldName + " placeholder='http://www.' value = '" + Hyperlinkvalue + "' class='validwebsite'>";
                                }
                                vControls += '<a href="javascript:void(0)" class="linkText" title="' + item.FieldDisplayName + '" onclick="navigateurl(\'CP' + item.FieldName + '\')"> Navigate</a>';
                                vControls += '</div></li>';
                                //for Hyperlink
                                //manoj
                            }
                            else if (item.FieldType == "Date") {

                                if (item.Required == "true") {
                                    vControls += "<input type='text' id=" + item.FieldName + " title='" + item.FieldDisplayName + "'  class='validelement validdate fielddatecontrol " + item.FieldName + "'/>";
                                } else {
                                    vControls += "<input type='text' id=" + item.FieldName + "  title='" + item.FieldDisplayName + "' class='validdate fielddatecontrol " + item.FieldName + "'/>";
                                }
                                vControls += '<label style="text-align:left" class="p-text">' + item.Description + '</label>';
                                vControls += '</div></li>';

                                vDate = item.FieldName;
                            }
                            else if (item.FieldType == "Choice") {
                                if (item.Required == "true") {
                                    vControls += "<select id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "'  class='validelement'>";

                                } else {
                                    vControls += "<select id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "'>";
                                }
                                vControls += "<option value='0'>--Select--</option>";
                                var myArray = [];
                                myArray = item.ChoiceValues.split("\n")
                                var myArraylength = myArray.length;

                                for (var i = 0; i < myArraylength; i = i + 1) {
                                    do {
                                        myArray[i] = myArray[i].replace("&amp;", "&");
                                    } while (myArray[i].indexOf("&amp;") > -1)
                                    vControls += "<option value='" + myArray[i] + "'>" + myArray[i] + "</option>";
                                }

                                vControls += '</select>';
                                vControls += '<label style="text-align:left" class="p-text">' + item.Description + '</label>';
                                vControls += '</div></li>';
                            } else if (item.FieldType == "Lookup") {
                                if (item.FieldName == "RelatedCounterparties") {
                                    if (item.Required == "true") {
                                        vControls += "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement' readonly='readonly' type='text' />";
                                    } else {
                                        vControls += "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' readonly='readonly' type='text' />";
                                    }
                                    vControls += '<label style="text-align:left" class="p-text">' + item.Description + '</label>';
                                    vControls += "<br/>" + "<a href='javascript:void(0)' class='linkText' id='" + item.FieldDisplayName + "' title='" + item.FieldName + "' onclick='ViewCounterpartyRelated(this)'> Browse</a>";
                                    vControls += '</div></li>';
                                } else {
                                    if (item.Required == "true") {
                                        vControls += "<select id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement'>";
                                    } else {
                                        vControls += "<select id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "'>";
                                    }
                                    vControls += "<option value='0'>--Select--</option>";

                                    $.ajax({
                                        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/customlookupvaluedetails?lookupname=' + item.ChoiceValues,
                                        type: 'GET',
                                        dataType: 'json',
                                        "Content-Type": "application/json",
                                        headers: {
                                            'eContracts-ApiKey': localStorage.APIKey
                                        },
                                        cache: false,
                                        success: function (data) {
                                            var datalength1 = data.LookupFields.split(';');
                                            datalength1 = datalength1.sort();
                                            datalength1 = sortArrOfObjectsByParam(datalength1);
                                            var datalength = datalength1.length;
                                            for (var i = 0; i < datalength; i++) {
                                                var itemname = datalength1[i];
                                                $("#" + item.FieldName).append("<option value='" + itemname + "'>" + itemname + "</option>")
                                            }
                                        }
                                    });
                                    vControls += '</select>';
                                    vControls += '<label style="text-align:left" class="p-text">' + item.Description + '</label>';
                                    vControls += '</div></li>';
                                }
                            }
                            else if (item.FieldType.indexOf("Dropdown") > -1 || item.FieldType.indexOf("Multi Select") > -1) {
                                if (item.Required == "true") {
                                    vControls += "<select id=" + item.FieldName + " multiple='multiple' class='width90 chosenmulti validuser' name=" + item.FieldName + " title='" + item.FieldDisplayName + "' data-placeholder='--Select--'>"
                                } else {
                                    vControls += "<select id=" + item.FieldName + " multiple='multiple' class='width90 chosenmulti' name=" + item.FieldName + " title='" + item.FieldDisplayName + "' data-placeholder='--Select--'>"
                                }
                                if (item.FieldType.indexOf("Dropdown") > -1) {
                                    var vMultiDDL1 = "";
                                    if (vMultiDDL1 == '') {
                                        var myArray = [];
                                        myArray = item.ChoiceValues.split("\n")
                                        var myArraylength = myArray.length;
                                        for (var i = 0; i < myArraylength; i = i + 1) {
                                            vMultiDDL1 += "<option value='" + myArray[i] + "'>" + myArray[i] + "</option>";
                                        }
                                    }
                                    vControls += vMultiDDL1;
                                } else {
                                    var vMultiDDL1 = "";
                                    if (vMultiDDL1 == '') {
                                        $.ajax({
                                            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/customlookupvaluedetails?lookupname=' + item.ChoiceValues,
                                            type: 'GET',
                                            dataType: 'json',
                                            "Content-Type": "application/json",
                                            headers: {
                                                'eContracts-ApiKey': localStorage.APIKey
                                            },
                                            cache: false,
                                            async: false,
                                            success: function (data) {
                                                var datalength1 = data.LookupFields.split(';');
                                                datalength1 = datalength1.sort();
                                                datalength1 = sortArrOfObjectsByParam(datalength1);
                                                var datalength = datalength1.length;
                                                for (var i = 0; i < datalength; i++) {
                                                    var itemname = datalength1[i];
                                                    vMultiDDL1 += "<option value='" + itemname + "'>" + itemname + "</option>";
                                                }
                                            }
                                        });
                                    }
                                    vControls += vMultiDDL1;
                                }

                                vControls += '</select>';
                                vControls += '<label style="text-align:left" class="p-text">' + item.Description + '</label>';
                                vControls += '</div></li>';
                                vMultiDDL = item.FieldName;
                            }
                            else if (item.FieldType == "Number") {
                                if (item.Required == "true") {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement form_input' />";
                                } else {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='form_input' />";
                                }
                                vControls += '<label style="text-align:left" class="p-text">' + item.Description + '</label>';
                                vControls += '</div></li>';
                                vNumber = item.FieldName;
                            }
                            else if (item.FieldType == "Number-D") {
                                if (item.Required == "true") {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement form_input' />";
                                } else {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='form_input' />";
                                }
                                vControls += '<label style="text-align:left" class="p-text">' + item.Description + '</label>';
                                vControls += '</div></li>';
                                vNumberD = item.FieldName;
                            }
                                //Percent
                            else if (item.FieldType == "Number-P") {
                                if (item.Required == "true") {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement form_input' />";
                                } else {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='form_input' />";
                                }
                                vControls += '<label class="margin-top-8" style="float: right;position: absolute;font-size:12px;" >' + '%' + '</label>';
                                vControls += '<label  class="p-text" style="float: left">' + item.Description + '</label>';
                                vControls += '</div></li>';
                                vNumberP = item.FieldName;
                            }
                                //Percent Decimal
                            else if (item.FieldType == "Number-PD") {
                                if (item.Required == "true") {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement form_input' />";
                                } else {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='form_input' />";
                                }
                                vControls += '<label class="margin-top-8" style="float: right;position: absolute;font-size:12px;" >' + '%' + '</label>';
                                vControls += '<label  class="p-text" style="float: left">' + item.Description + '</label>';
                                vControls += '</div></li>';
                                vNumberPD = item.FieldName;
                            }
                            else if (item.FieldType == "Phone Number") {
                                if (item.Required == "true") {
                                    vControls += "<input type='text' id='" + item.FieldName + "_CP' title='" + item.FieldDisplayName + "'  class='form-contro validelement validPhone fieldphonecontrol' />";
                                } else {
                                    vControls += "<input type='text' id='" + item.FieldName + "_CP' title='" + item.FieldDisplayName + "'  class='form-contro validPhone fieldphonecontrol' />";
                                }
                                vControls += '<label style="text-align:left" class="p-text">' + item.Description + '</label>';
                                vControls += '</div></li>';


                                vPhoneNumber = vControls;
                                PhoneID = item.FieldName + "_CP";
                                PhoneCountry = item.Country;
                            }
                            else if (item.FieldType == "Yes/No") {
                                vControls += "	<div style='width: auto; margin-right: 15px;'><input style='float: left; width: auto;' type='radio' name=" + item.FieldName + " id='Yes" + item.FieldName + "' value='Yes' onchange='CounterpartychangeYesNoField(this);'><span style='float: left; margin: 7px 0px 0px 5px;'>Yes </span></div>";
                                vControls += "	<div style='width: auto; margin-right: 15px;'><input style='float: left; width: auto;' type='radio' name=" + item.FieldName + " checked id='No" + item.FieldName + "' value='No' onchange='CounterpartychangeYesNoField(this);'><span style='float: left; margin: 7px 0px 0px 5px;'>No </span></div>";

                                vControls += "	<input type='hidden' id='hdnYes" + item.FieldName + "' value=" + item.CommentYes + " />";
                                vControls += "	<input type='hidden' id='hdnNo" + item.FieldName + "' value=" + item.CommentNo + " />";
                                vControls += "	<input type='hidden' id='hdnRequired" + item.FieldName + "' value=" + item.CommentRequired + " />";
                                vControls += "	<input type='hidden' id='hdnHelpText" + item.FieldName + "' value=" + item.HelpText + " />";
                                vControls += '  <label style="width:auto;margin:7px 0px 0px 5px;" class="col12 p-text text-left help">' + item.Description + '</label>';
                                vControls += '</div></li>';

                                if (item.CommentNo == "true") {

                                    if (item.CommentRequired == "true") {
                                        vControls += '<li class="removableCounterpartyField CP_Det"><p><b>Add a Comment </b><small>*</small>';
                                    } else {
                                        vControls += '<li class="removableCounterpartyField CP_Det"><p><b>Add a Comment </b>';
                                    }
                                    if (item.FieldHelp == "true") {
                                        vControls += '<span class="p-text help"> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
                                    }
                                    vControls += "<div>";
                                    if (item.CommentRequired == "true") {
                                        vControls += "<textarea id='CustomCMD" + item.FieldName + "' name='CustomCMD" + item.FieldName + "' maxlength='300' title='" + item.FieldName + "' cols='25' rows='3' class='validelement'></textarea>";
                                    } else {
                                        vControls += "<textarea id='CustomCMD" + item.FieldName + "' name='CustomCMD" + item.FieldName + "' maxlength='300' title='" + item.FieldName + "' cols='25' rows='3' ></textarea>";
                                    }
                                    vControls += '</div></li>';
                                }

                            } else if (item.FieldType == "Email") {
                                if (item.Required == "true") {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validemail validelement' />";
                                } else {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validemail' />";
                                }
                                vControls += '<label style="text-align:left" class="p-text">' + item.Description + '</label>';
                                vControls += '</div></li>';
                            } else if (item.FieldType.indexOf("Browse") > -1) {
                                if (item.Required == "true") {
                                    vControls += "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement' readonly='readonly' type='text' />";
                                } else {
                                    vControls += "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' readonly='readonly' type='text' />";
                                }
                                vControls += '<label style="text-align:left" class="p-text">' + item.Description + '</label>';
                                vControls += "<br/>" + "<a href='javascript:void(0)' class='linkText' id='" + item.FieldDisplayName + "' title='" + item.FieldName + "' onclick='ViewGenericCounterparty(this)'> Browse</a>";
                                vControls += '</div></li>';
                            } else if (item.FieldType == "File Upload") {
                                if (item.Required == "true") {
                                    vControls += "<input type='file' id=" + item.FieldName + " name='docAttachment' title='" + item.FieldDisplayName + "' class='form-contro validelement browse-file-doc' onchange='javascript:changeinupload(this);' />";
                                } else {
                                    vControls += "<input type='file' id=" + item.FieldName + " name='docAttachment' title='" + item.FieldDisplayName + "' class='form-contro browse-file-doc' onchange='javascript:changeinupload(this);' />";
                                }
                                vControls += '<label style="text-align:left" class="p-text">' + item.Description + '</label>';
                                vControls += '</div></li>';
                            } else if (item.FieldType == "Currency" || item.FieldType == "Value / Financials") {
                                if (item.Required == "true") {
                                    //vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement' />";
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement validcontractvalue' />";
                                } else {
                                    //vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' />";
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validcontractvalue' />";
                                }
                                vControls += '<label style="text-align:left" class="p-text">' + item.Description + '</label>';
                                vControls += '</div></li>';
                                vCurrency = item.FieldName;
                            } else if (item.FieldType == "User") {
                                if (item.Required == "true") {
                                    vControls += "<select id=" + item.FieldName + " multiple='multiple' class='form-contro f_inpt width90 chosenmulti validuser' name=" + item.FieldName + " title='" + item.FieldDisplayName + "' data-placeholder='--Select--'>"
                                } else {
                                    vControls += "<select id=" + item.FieldName + " multiple='multiple' class='form-contro f_inpt width90 chosenmulti' name=" + item.FieldName + " title='" + item.FieldDisplayName + "' data-placeholder='--Select--'>"
                                }

                                if (vUserList == "") {
                                    vUserList = GetUserList();
                                }

                                //eO310594
                                //$.each(vUserList, function () {
                                //    vControls += $(this)[0].outerHTML;
                                //});
                                vControls += vUserList;

                                vControls += '</select>';
                                vControls += '<label style="text-align:left" class="p-text">' + item.Description + '</label>';
                                vUser = item.FieldName;
                                vControls += '</div></li>';
                            }

                            $("#counterpartyItems").append(vControls);
                            if (vDate != "") {

                                if (localStorage.AppDateFormat == null || localStorage.AppDateFormat == "" || localStorage.AppDateFormat == 'undefined') {
                                    $("#" + vDate + "").datepicker({
                                        changeMonth: true,
                                        changeYear: true
                                    });
                                }
                                else {
                                    var dateformate = localStorage.AppDateFormat.toLowerCase().slice(0, -2);

                                    $("#" + vDate + "").datepicker({
                                        changeMonth: true,
                                        changeYear: true,
                                        dateFormat: dateformate
                                    });

                                }
                                vDate = "";
                            }
                            if (vNumber != "") {
                                allowOnlyNumberInInputBox(vNumber);
                                vNumber == "";
                            }
                            if (vNumberD != "") {
                                allowOnlyDecimalNumberInInputBox(vNumberD);
                                vNumberD == "";
                            }
                            if (vNumberP != "") {
                                allowOnlyNumberInInputBox(vNumberP);
                                vNumberP == "";
                            }
                            if (vNumberPD != "") {
                                allowOnlyDecimalNumberInInputBox(vNumberPD);
                                vNumberPD == "";
                            }
                            if (vPhoneNumber != "") {
                                bindPhoneNumber(PhoneID, PhoneCountry);
                                vPhoneNumber = "";
                            }
                            if (vMultiDDL != "") {
                                $("#" + vMultiDDL + "").chosen().trigger("chosen:updated");
                                $('.chosenmulti').on('chosen:showing_dropdown', function (evt, params) {
                                    $('.result-selected').css('display', 'none');
                                });
                                vMultiDDL = "";
                            }

                            if (vUser != "") {
                                $("#" + vUser + "").chosen().trigger("chosen:updated");
                                $('.chosenmulti').on('chosen:showing_dropdown', function (evt, params) {
                                    $('.result-selected').css('display', 'none');
                                });
                                if (vUser == "ContractManagers") {
                                    if (localStorage.UserName != "") {
                                        GetValuesAndAutoPopulate("ContractManagers", localStorage.UserName);
                                    }
                                }
                                vUser = "";
                            }
                            //manoj
                            if (vCurrency != "") {
                                if (vCurrencyDisplayStyle == "UK") {
                                    $('#' + vCurrency).autoNumeric();
                                } else if (vCurrencyDisplayStyle == "CAN") {
                                    $('#' + vCurrency).autoNumeric({
                                        aSep: ' ',
                                        aDec: '.',
                                    });

                                } else if (vCurrencyDisplayStyle == "EU") {
                                    $('#' + vCurrency).autoNumeric({
                                        aSep: '.',
                                        aDec: ',',
                                    });
                                } else if (vCurrencyDisplayStyle == "IND") {
                                    $('#' + vCurrency).autoNumeric({
                                        dGroup: '2',
                                    });
                                }
                                vCurrency == "";
                            }
                            //manoj
                        }
                    }
                }
            });
            $("#loadingPage").fadeOut();
        },
        error: function (metadataFields) {
            vCounterpartyFields = [];
            $("#loadingPage").fadeOut();
        }

    });
}
function BindCounterpartyType() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterpartytypes',
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            $(data).each(function (i, item) {
                //var find = " ";
                //var re = new RegExp(find, 'g');

                //var str = item.TypeName.replace(re, '');
                $("#ddlCounterpartyType").append('<option value="' + item.TypeName + '">' + item.TypeName + '</option>');
                $("#ddlCounterpartyTypeadd").append('<option value="' + item.TypeName + '">' + item.TypeName + '</option>');
            });
        },
        error:
            function (data) {
            }
    });
}
function MilestoneNewEndOccurence() {
    $("#txtMilestoneOccurrenceCount").removeClass('validelement');
}

function MilestoneNewEndOccurenceUser() {
    $("#txtMilestoneOccurrenceCount").addClass('validelement');
}

function ObligationNewEndOccurence() {
    $("#txtOccurrenceCount").removeClass('validelement');
}

function ObligationNewEndOccurenceUser() {
    $("#txtOccurrenceCount").addClass('validelement');
}
function RelatedCounterpartiesPush() {
    if (requiredValidator('popupCounterparties', false)) {
        var vRelatedCounterpartyID = "";
        var vRelatedCounterpartyTitle = "";
        var vChildRelation = "";
        //manoj
        $(curRelatedCounterparities).each(function (i, item) {
            if (item != null) {
                vRelatedCounterpartyID += ";" + item.RowKey;
                vRelatedCounterpartyTitle += ";" + item.CounterpartyName;
                vChildRelation += ";" + item.ChildRelationship;
            }
        });
        vRelatedCounterpartyID = (vRelatedCounterpartyID.charAt(0) === ';') ? vRelatedCounterpartyID.substr(1) : vRelatedCounterpartyID;
        vRelatedCounterpartyTitle = (vRelatedCounterpartyTitle.charAt(0) === ';') ? vRelatedCounterpartyTitle.substr(1) : vRelatedCounterpartyTitle;
        vChildRelation = (vChildRelation.charAt(0) === ';') ? vChildRelation.substr(1) : vChildRelation;
        //manoj
        //$('input:checkbox[name="RelatedCounterparty"]:checked').each(function () {
        //    if (vRelatedCounterpartyID == "") {
        //        vRelatedCounterpartyID = this.id.replace("rel", "").trim();
        //        vRelatedCounterpartyTitle = unescape(this.value);
        //        vChildRelation = $(this).parent().parent().children(".ddl").find('option:selected').text();

        //    }
        //    else {
        //        vRelatedCounterpartyID += "; " + this.id.replace("rel", "").trim();
        //        vRelatedCounterpartyTitle += "; " + unescape(this.value);
        //        vChildRelation += "; " + $(this).parent().parent().children(".ddl").find('option:selected').text();
        //    }
        //});
        if (vRelatedCounterpartyID != "") {
            arrRelatedCounterparities = [];
            arrRelatedCounterparities.push({
                CounterpartyID: $("#txtCounterpartyID").val(),
                CounterpartyTitle: $("#txtCounterpartyName").val(),
                RelatedCounterpartyID: vRelatedCounterpartyID,
                RelatedCounterpartyTitle: vRelatedCounterpartyTitle,
                RelationshipType: $("#ddlRelationshipTypeParentcounterparties").find('option:selected').text(),
                RootRelationshipType: $("#ddlRelationshipTypeCounterparties").find('option:selected').text(),
                RelatedRelationshipType: vChildRelation,
                CreatedBy: localStorage.UserName,
                ModifiedBy: localStorage.UserName,
            });
            PrvRelatedCounterparities = curRelatedCounterparities.slice();
            $("#popupCounterparties").dialog("close");
            $('#RelatedCounterparties').val(vRelatedCounterpartyTitle);
            return true;
        } else {
            PrvRelatedCounterparities = [];
            arrRelatedCounterparities = [];
            curRelatedCounterparities = [];
            $('#RelatedCounterparties').val("");
            swal("", "No Counterparty has been selected.");
            $("#popupCounterparties").dialog("close");
            return false;
        }
    }
}

function CreateRelatedCounterparies(conterpartyid, counterpartyname) {
    //manoj
    //Remove "rel" in Counterparty ID
    var RelCountID = arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RelatedCounterpartyID;
    RelCountID = $.trim(RelCountID);
    var liRelCountID = "";
    $.each(RelCountID.split(";"), function (iRelCountID, itemnameRelCountID) {
        liRelCountID += ";" + itemnameRelCountID.replace("rel", "");
    });
    arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RelatedCounterpartyID = (liRelCountID.charAt(0) === ';') ? liRelCountID.substr(1) : liRelCountID;
    //Remove "rel" in Counterparty ID
    //manoj
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty/' + conterpartyid.trim() + '/relatedcounterparties',
        type: 'POST',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
        },
        data: {
            CounterpartyID: conterpartyid,
            CounterpartyTitle: counterpartyname,
            RelatedCounterpartyID: arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RelatedCounterpartyID,
            RelatedCounterpartyTitle: arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RelatedCounterpartyTitle,
            RelationshipType: arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RelationshipType,
            RelatedRelationshipType: arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RelatedRelationshipType,
            RootRelationshipType: arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RootRelationshipType,
            CreatedBy: localStorage.UserName,
            ModifiedBy: localStorage.UserName,
        },
        cache: false,
        success: function (person) {
            PrvRelatedCounterparities = [];
            arrRelatedCounterparities = [];
            curRelatedCounterparities = [];
        },
        error: function (request) {
            PrvRelatedCounterparities = [];
            arrRelatedCounterparities = [];
            curRelatedCounterparities = [];
        }
    });
}

//get the Unique Array Start
function stringArrayUnique(array) {
    return $.grep(array, function (el, index) {
        return index === $.inArray(el, array);
    });
}
//get the Unique Array End

function liRemoveRelationshipselected(obj) {
    var child = obj.parentNode;
    var removechildname = child.textContent;
    removechildname = removechildname.split('(')[0].trim();;
    child.parentNode.removeChild(child);
    if (child.id != "") {
        $("#" + child.id).attr('checked', false);
        $("#" + child.id).prop('checked', false);
        $("#" + child.id).parent().parent().children(".ddl").empty();
    }
    arrRelatedcontractRowkey = [];
    $('input:checkbox[name="RelatedContract"]:checked').each(function () {
        arrRelatedcontractRowkey.push(this.id);
    });
    if (arrRelatedcontractRowkey.length > 0) {
        $("#relatedrole").css('display', '');
        $("#relatedrole").html("Relationship");
    } else {
        $("#relatedrole").html("");
        $("#relatedrole").css('display', 'none');
    }
    var selectedrelatedcontract = [];
    if (addbuttonclick) {
        $.each($("#RelatedContracts").val().split(";"), function () {
            if (this != "") {
                if ($.trim(this) != "") {
                    selectedrelatedcontract.push($.trim(this));
                }
            }
        });
        if (selectedrelatedcontract.indexOf(removechildname) > -1) {
            selectedrelatedcontract.splice(selectedrelatedcontract.indexOf(removechildname), 1);
            $("#RelatedContracts").val(selectedrelatedcontract.join(";"))
            selectedrelatedcontract = [];
        }
    }

    if (arrRelatedContracts.length > 0) {
        var chkObj = $("#" + child.id);
        var rtypeindex = arrRelatedContracts[arrRelatedContracts.length - 1].RelatedContractID.split(";").indexOf(chkObj[0].id);
        var rtindex = arrRelatedContracts[arrRelatedContracts.length - 1].RelatedContractID.split(";");
        var rtitle = arrRelatedContracts[arrRelatedContracts.length - 1].RelatedContractTitle.split(";");
        var rstatus = arrRelatedContracts[arrRelatedContracts.length - 1].RelatedStatus.split(";");
        var rtypetoremove = arrRelatedContracts[arrRelatedContracts.length - 1].RelatedRelationshipType.split(";");
        var reltypetoremove = arrRelatedContracts[arrRelatedContracts.length - 1].RelationshipType.split(";");
        rtindex[rtypeindex] = "";
        rtitle[rtypeindex] = "";
        rstatus[rtypeindex] = "";
        rtypetoremove[rtypeindex] = "";
        reltypetoremove[rtypeindex] = "";
        arrRelatedContracts[arrRelatedContracts.length - 1].RelatedContractID = rtindex.join(";").replace(";;", "");
        arrRelatedContracts[arrRelatedContracts.length - 1].RelatedContractTitle = rtitle.join(";").replace(";;", "");
        arrRelatedContracts[arrRelatedContracts.length - 1].RelatedStatus = rstatus.join(";").replace(";;", "");
        arrRelatedContracts[arrRelatedContracts.length - 1].RelatedRelationshipType = rtypetoremove.join(";").replace(";;", "");
        arrRelatedContracts[arrRelatedContracts.length - 1].RelationshipType = reltypetoremove.join(";").replace(";;", "");
    }
}

function MarkContractAsCloseout() {
    $("#loadingPage").fadeIn();
    var requiredavalible = false;
    var vMetadatavaluetofinalize;
    var metadataFields = [];
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/IContractDetails?contractid=' + getParameterByName("ContractID"),
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        async: false,
        success: function (mainmetadataFields) {
            vMetadatavaluetofinalize = $(mainmetadataFields).find('Metadata');
        },
    });
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracttypes/metadatas?contracttypename=' + strSelectedContractType.trim(),
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        async: false,
        success: function (metadataFieldsvalue) {
            metadataFields = $.grep(metadataFieldsvalue, function (n, i) {
                return (n.Closeoutform == "Required");
            });
        },
    });
    $(metadataFields).each(function (i, item) {
        if ($(vMetadatavaluetofinalize).find(item.FieldName).text() == null || $(vMetadatavaluetofinalize).find(item.FieldName).text() == "") {
            requiredavalible = true;
        }
    });
    if (!requiredavalible) {
        swal({
            title: '',
            text: "Are you sure you want to <span style=\"font-weight:700\">mark</span> this Contract Record for <span style=\"font-weight:700\">Closeout</span>?",
            type: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes',
            cancelButtonText: 'No',
            html: true
        },
     function (confirmed) {
         if (confirmed) {
             $.ajax({
                 url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + getParameterByName("ContractID") + '/changecloseout?closeout=Yes',
                 type: 'PUT',
                 dataType: 'json',
                 headers: {
                     'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging,
                     'username': localStorage.UserName
                 },
                 cache: false,
                 success: function (data) {
                     //if ($("#spanstatus").text() != "") {
                     //    if ($("#spanstatus").text().trim() == "Archived") {
                     //        $("#spancloseout").html("");
                     //        $("#trCloseOutContract").html('<td class="labelleft padding_left_5px"><div class="mark_Con-Final"><a href="javascript:void(0);" onclick="MarkContractAsCloseout();"><span class="f_button_green">Mark Contract Record for Closeout</span></a></div></td>')
                     //        $("#rtarchived").css('display', 'none');
                     //    }
                     //}
                     contractItem = data;
                     BindObligationsNew(contractItem.RowKey, contractItem);
                     ReloadContracts();
                     var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                     var vCoverSheet = $.grep(veContractFeatures, function (n, i) {
                         return (n.RowKey == "23" && n.Status == "ON");
                     });
                     if (vCoverSheet.length > 0) {
                         if (typeof (contractItem.SummeryBlobURL) != "undefined" && contractItem.SummeryBlobURL != null && contractItem.SummeryBlobURL != "") {
                             getcontractsummerytemplate(contractItem.ContractType, contractItem.SummeryBlobURL, true);
                         } else {
                             getcontractsummerytemplate(contractItem.ContractType, contractItem.SummeryBlobURL, false);
                         }
                     } else {
                         $("#iStandardIcon").empty();
                         $("#hdnsummeryTempDocu").text("No");
                         $("#lisummarydocument").css("display", "none");
                     }
                     $("#loadingPage").fadeOut();
                     $("#dvManageContractStatus").dialog("close");
                     ////manoj
                     //$("#loadingPage").fadeOut();
                     ////$("#spancloseout").html('Yes');
                     //$("#dvCancelContract").dialog("close");
                     //$("#dvContractTerm").dialog("close");
                     //$("#dvManageContractStatus").dialog("close");
                     //contractItem = data;
                     ////manoj
                     //pendingStarted = false;
                     //GetContractPendingAction(true, "BindPeoples");
                     ////manoj
                     //ContractTopActions();
                     ////$("#trCloseOutContract").html('<td class="labelleft padding_left_5px"><div class="mark_Con-Final"><a href="javascript:void(0);" onclick="DeleteContractRecord()"><span class="f_button_green">Delete Contract Record</span></a></div></td>');
                     ////$("#rtarchived").css("display", "");
                     ////$("#loadingPage").fadeOut();
                     ////manoj
                 },
                 error: function (person) {
                     $("#loadingPage").fadeOut();
                 }
             });
         } else {
             $("#loadingPage").fadeOut();
             $("#dvManageContractStatus").dialog("close");
         }
     });

    } else {
        swal({
            title: '',
            text: "Some fields required for Contract Record Closeout are not filled. Do you want to edit now?",
            type: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes',
            cancelButtonText: 'No',
            html: true
        },
        function (confirmed) {
            if (confirmed) {
                contextMenuContractSettings("edit", "", "Closeout")
            } else {
                $("#loadingPage").fadeOut();
                $("#dvManageContractStatus").dialog("close");
            }
        });
    }
}

function DeleteContractRecord() {
    swal({
        title: '',
        text: "Are you sure you want to <span style=\"font-weight:700\">delete</span> Contract Record?",
        type: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes',
        cancelButtonText: 'No',
        html: true
    },
function (confirmed) {
    if (confirmed) {
        var contractID = getParameterByName("ContractID");
        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts?contractid=' + contractID,
            type: 'DELETE',
            dataType: 'json',
            headers: {
                'eContracts-ApiKey': localStorage.APIKey, username: localStorage.UserName
            },
            cache: false,
            success: function (data) {
                swal("", data);
                var vContractStatus = ["Ready for Signature", "Awaiting Signatures", "Signed", "Active", "Up for Renewal", "Renewed", "Extended", "On Hold", "Replaced", "Expired", "Cancelled", "Terminated", "Archived", "About to Expire"];
                if ($.inArray(contractItem.Status, vContractStatus) !== -1)
                    location = "/Contracts";
                else
                    location = "/Pipeline";
            }
        });
    }

});
}


function req() {
    window.open("https://support.office.com/en-US/client/results?Shownav=true&lcid=1033&ns=WDWAEndUser&version=15&omkt=en-US&ver=15&apps=WDWAENDUSER%2cXLWAENDUSER%2cPPWAENDUSER%2cONWAENDUSER&HelpID=OICFailure&ui=en-US&rs=en-US&ad=US", "Ratting", "width=550,height=500,0,status=0,");
}

$('#linkEditInWordOnline').click(function () {
    $("#showMSWordPopup").dialog("close");
});



$(".switch_val").change(function () {
    var obj = jQuery(this).parent();
    var input_val = obj.children('input').val();
    $(obj).removeClass('switch_enable');
    $(obj).removeClass('switch_disable');
    if ("0" == input_val || "No" == input_val) {
        $(obj).addClass('switch_disable');
    } else if ("1" == input_val || "Yes" == input_val) {
        $(obj).addClass('switch_enable');
    }

});

function randomString() {
    var chars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz";
    var string_length = 8;
    var randomstring = '';
    for (var i = 0; i < string_length; i++) {
        var rnum = Math.floor(Math.random() * chars.length);
        randomstring += chars.substring(rnum, rnum + 1);
    }
    return randomstring;
}

function getCounterpartyFieldsadd() {
    $("#loadingPage").fadeIn();
    $("#counterpartyItemsadd tbody tr.removableCounterpartyField").remove(); // remove all added removable fields before loading - Bug (eO37106)
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty/primaryfields',
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (metadataFields) {
            vCounterpartyFields = [];
            $(metadataFields).each(function (i, item) {
                if (item != null && item.FieldName != null) {
                    if ((item.FieldName == "CounterpartyName") || (item.FieldName == "CounterpartyType") || (item.FieldName == "Status")) {
                        if (item.FieldName == "CounterpartyType") {
                            vCounterpartyFields.push(item.FieldName);
                        }
                    }
                    else {
                        vCounterpartyFields.push(item.FieldName);
                        if (item.ShowInCreateForm == "true") {
                            var vControls = "";
                            var vDate = "";
                            var vNumber = "";
                            var vPhoneNumber = "";
                            var PhoneID = "";
                            var PhoneCountry = "";
                            var vEmail = "";
                            var vMultiDDL = "";
                            var vUser = "";
                            var vUserList = "";
                            var vNumberD = "";
                            var vNumberP = "";
                            var vNumberPD = "";
                            if (item.Required == "true") {
                                vControls += '<tr class="removableCounterpartyField CP_Det"><td class="f_head"><b>' + item.FieldDisplayName + '</b><small class="required">*</small>';
                            } else {
                                vControls += '<tr class="removableCounterpartyField CP_Det"><td class="f_head"><b>' + item.FieldDisplayName + '</b>';
                            }
                            if (item.FieldHelp == "true") {
                                vControls += '<span class="p-text help"> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
                            }
                            vControls += '</td><td class="labelright">';

                            if (item.FieldType == "Single Line Text") {
                                if (item.FieldName == "Country") {
                                    if (item.Required == "true") {
                                        vControls += "<select id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "'  class='validelement f_inpt width90'>";

                                    } else {
                                        vControls += "<select id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='f_inpt width90'>";
                                    }
                                    vControls += "<option value='0'>--Select--</option>";
                                    $.ajax({
                                        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/countrynames',
                                        type: 'GET',
                                        dataType: 'json',
                                        'Content-Type': 'application/json',
                                        cache: false,
                                        async: false,
                                        headers: {
                                            'eContracts-ApiKey': localStorage.APIKey
                                        },
                                        success: function (data) {
                                            $(data).each(function (i, item) {
                                                vControls += '<option value="' + item + '">' + item + '</option>';
                                            });
                                        },
                                        error:
                                            function (data) {

                                            }
                                    });

                                    vControls += '</select>';
                                    vControls += '<label class="p-text" style="text-align: left;">' + item.Description + '</label>';
                                } else {
                                    if (item.Required == "true") {
                                        vControls += "<input type='text' id=" + item.FieldName + " maxlength='100' name=" + item.FieldName + " class='validelement f_inpt width90'>";
                                    } else {
                                        vControls += "<input type='text' id=" + item.FieldName + " maxlength='100' name=" + item.FieldName + "  class='f_inpt width90'>";
                                    }
                                    vControls += '<label class="p-text" style="text-align: left;">' + item.Description + '</label>';
                                }
                                vControls += '</td></tr>';
                            }
                            else if (item.FieldType == "Multi Line Text") {
                                if (item.Required == "true") {
                                    vControls += "<textarea name=" + item.FieldName + " maxlength='500' id=" + item.FieldName + " title='" + item.FieldDisplayName + "' cols='40' rows='5' class=' validelement height70 f_inpt width90'></textarea>";
                                } else {
                                    vControls += "<textarea name=" + item.FieldName + " maxlength='500' id=" + item.FieldName + " title='" + item.FieldDisplayName + "' cols='40' rows='5' class='f_inpt height70 width90'></textarea>";
                                }
                                vControls += '<label class="p-text" style="text-align: left;">' + item.Description + '</label>';
                                vControls += '</td></tr>';
                            }
                            else if (item.FieldType == "Hyperlink") {
                                //manoj
                                //for Hyperlink
                                var Hyperlinkvalue = item.DefaultURL;
                                if (item.Required == "true") {
                                    vControls += "<input type='text' id=CP" + item.FieldName + " maxlength='2083' name=" + item.FieldName + " placeholder='http://www.' value = '" + Hyperlinkvalue + "' class='validelement validwebsite f_inpt width90'>";
                                } else {
                                    vControls += "<input type='text' id=CP" + item.FieldName + " maxlength='2083' name=" + item.FieldName + " placeholder='http://www.' value = '" + Hyperlinkvalue + "' class='validwebsite f_inpt width90'>";
                                }
                                vControls += '<label class="p-text" style="text-align: left;">' + item.Description + '</label>';
                                vControls += '<br/>' + '<a href="javascript:void(0)" class="linkText" title="' + item.FieldDisplayName + '" onclick="navigateurl(\'CP' + item.FieldName + '\')"> Navigate</a>';
                                vControls += '</div></tr>';
                                //for Hyperlink
                                //manoj
                            }
                            else if (item.FieldType == "Date") {

                                if (item.Required == "true") {
                                    vControls += "<input type='text' id=" + item.FieldName + " title='" + item.FieldDisplayName + "'  class='validelement validdate fielddatecontrol f_inpt width90'" + item.FieldName + "'/>";
                                } else {
                                    vControls += "<input type='text' id=" + item.FieldName + "  title='" + item.FieldDisplayName + "' class='validdate fielddatecontrol f_inpt width90'" + item.FieldName + "'/>";
                                }

                                vControls += '<label class="p-text" style="text-align: left;">' + item.Description + '</label>';
                                vControls += '</td></tr>';

                                vDate = item.FieldName;
                            }
                            else if (item.FieldType == "Choice") {
                                if (item.Required == "true") {
                                    vControls += "<select id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "'  class='validelement f_inpt width90'>";

                                } else {
                                    vControls += "<select id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='f_inpt width90'>";
                                }
                                vControls += "<option value='0'>--Select--</option>";
                                var myArray = [];
                                myArray = item.ChoiceValues.split("\n")
                                var myArraylength = myArray.length;

                                for (var i = 0; i < myArraylength; i = i + 1) {
                                    do {
                                        myArray[i] = myArray[i].replace("&amp;", "&");
                                    } while (myArray[i].indexOf("&amp;") > -1)
                                    vControls += "<option value='" + myArray[i] + "'>" + myArray[i] + "</option>";
                                }

                                vControls += '</select>';
                                vControls += '<label class="p-text" style="text-align: left;">' + item.Description + '</label>';
                                vControls += '</td></tr>';
                            } else if (item.FieldType == "Lookup") {
                                if (item.FieldName == "RelatedCounterparties") {
                                    if (item.Required == "true") {
                                        vControls += "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement f_inpt width90' readonly='readonly' type='text' />";
                                    } else {
                                        vControls += "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' readonly='readonly' class='f_inpt width90' type='text' />";
                                    }
                                    vControls += '<label class="p-text" style="text-align: left;">' + item.Description + '</label>';
                                    vControls += "<a href='javascript:void(0)' class='linkText' id='" + item.FieldDisplayName + "' title='" + item.FieldName + "' onclick='ViewCounterpartyRelated(this)'> Browse</a>";
                                    vControls += '</td></tr>';
                                } else {
                                    if (item.Required == "true") {
                                        vControls += "<select id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement f_inpt width90'>";
                                    } else {
                                        vControls += "<select id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='f_inpt width90'>";
                                    }
                                    vControls += "<option value='0'>--Select--</option>";

                                    $.ajax({
                                        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/customlookupvaluedetails?lookupname=' + item.ChoiceValues,
                                        type: 'GET',
                                        dataType: 'json',
                                        "Content-Type": "application/json",
                                        headers: {
                                            'eContracts-ApiKey': localStorage.APIKey
                                        },
                                        cache: false,
                                        success: function (data) {
                                            var datalength1 = data.LookupFields.split(';');
                                            datalength1 = datalength1.sort();
                                            datalength1 = sortArrOfObjectsByParam(datalength1);
                                            var datalength = datalength1.length;
                                            for (var i = 0; i < datalength; i++) {
                                                var itemname = datalength1[i];
                                                $("#" + item.FieldName).append("<option value='" + itemname + "'>" + itemname + "</option>")
                                            }
                                        }
                                    });
                                    vControls += '</select>';
                                    vControls += '<label class="p-text" style="text-align: left;">' + item.Description + '</label>';
                                    vControls += '</td></tr>';
                                }
                            }
                            else if (item.FieldType.indexOf("Dropdown") > -1 || item.FieldType.indexOf("Multi Select") > -1) {
                                if (item.Required == "true") {
                                    vControls += "<select id=" + item.FieldName + " multiple='multiple' class='width90 f_inpt chosenmulti validuser' name=" + item.FieldName + " title='" + item.FieldDisplayName + "' data-placeholder='--Select--'>"
                                } else {
                                    vControls += "<select id=" + item.FieldName + " multiple='multiple' class='width90 f_inpt chosenmulti' name=" + item.FieldName + " title='" + item.FieldDisplayName + "' data-placeholder='--Select--'>"
                                }
                                if (item.FieldType.indexOf("Dropdown") > -1) {
                                    var vMultiDDL1 = "";
                                    if (vMultiDDL1 == '') {
                                        var myArray = [];
                                        myArray = item.ChoiceValues.split("\n")
                                        var myArraylength = myArray.length;
                                        for (var i = 0; i < myArraylength; i = i + 1) {
                                            vMultiDDL1 += "<option value='" + myArray[i] + "'>" + myArray[i] + "</option>";
                                        }
                                    }
                                    vControls += vMultiDDL1;
                                } else {
                                    var vMultiDDL1 = "";
                                    if (vMultiDDL1 == '') {
                                        $.ajax({
                                            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/customlookupvaluedetails?lookupname=' + item.ChoiceValues,
                                            type: 'GET',
                                            dataType: 'json',
                                            "Content-Type": "application/json",
                                            headers: {
                                                'eContracts-ApiKey': localStorage.APIKey
                                            },
                                            cache: false,
                                            async: false,
                                            success: function (data) {
                                                var datalength1 = data.LookupFields.split(';');
                                                datalength1 = datalength1.sort();
                                                datalength1 = sortArrOfObjectsByParam(datalength1);
                                                var datalength = datalength1.length;
                                                for (var i = 0; i < datalength; i++) {
                                                    var itemname = datalength1[i];
                                                    vMultiDDL1 += "<option value='" + itemname + "'>" + itemname + "</option>";
                                                }
                                            }
                                        });
                                    }
                                    vControls += vMultiDDL1;
                                }

                                vControls += '</select>';
                                vControls += '<label class="p-text" style="text-align: left;">' + item.Description + '</label>';
                                vControls += '</td></tr>';
                                vMultiDDL = item.FieldName;
                            }
                            else if (item.FieldType == "Number") {
                                if (item.Required == "true") {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement width90 form_input f_inpt' />";
                                } else {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='width90 form_input f_inpt' />";
                                }
                                vControls += '<label class="p-text" style="text-align: left;">' + item.Description + '</label>';
                                vControls += '</td></tr>';
                                vNumber = item.FieldName;
                            }
                            else if (item.FieldType == "Number-D") {
                                if (item.Required == "true") {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement width90 form_input f_inpt' />";
                                } else {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='width90 form_input f_inpt' />";
                                }
                                vControls += '<label class="p-text" style="text-align: left;">' + item.Description + '</label>';
                                vControls += '</td></tr>';
                                vNumberD = item.FieldName;
                            }
                                //Percent
                            else if (item.FieldType == "Number-P") {
                                if (item.Required == "true") {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement width90 form_input f_inpt' />";
                                } else {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='width90 form_input f_inpt' />";
                                }
                                vControls += '<label style="text-align: left;" class="margin-top-8 p-text" >' + '%' + '</label>';
                                vControls += '<label class="p-text" style="text-align: left;">' + item.Description + '</label>';
                                vControls += '</td></tr>';
                                vNumberP = item.FieldName;
                            }
                                //Percent Decimal
                            else if (item.FieldType == "Number-PD") {
                                if (item.Required == "true") {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement width90 form_input f_inpt' />";
                                } else {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='width90 form_input f_inpt' />";
                                }
                                vControls += '<label style="text-align: left;" class="margin-top-8 p-text" >' + '%' + '</label>';
                                vControls += '<label class="p-text" style="text-align: left;">' + item.Description + '</label>';
                                vControls += '</td></tr>';
                                vNumberPD = item.FieldName;
                            }
                            else if (item.FieldType == "Phone Number") {
                                if (item.Required == "true") {
                                    vControls += "<input type='text' id='" + item.FieldName + "_CP'  title='" + item.FieldDisplayName + "'  class='validelement f_inpt width90 validPhone fieldphonecontrol'>";
                                } else {
                                    vControls += "<input type='text' id='" + item.FieldName + "_CP'  title='" + item.FieldDisplayName + "'   class='f_inpt width90 validPhone fieldphonecontrol'>";
                                }
                                vControls += '<label   style="text-align: left;font-size:12px;">' + item.Description + '</label>';
                                vControls += '</td></tr>';

                                vPhoneNumber = vControls;
                                PhoneID = item.FieldName + "_CP";
                                PhoneCountry = item.Country;
                            }
                            else if (item.FieldType == "Yes/No") {

                                vControls += "	<div style='width: auto; margin-right: 15px;'><input style='float: left; width: auto;' type='radio' class='f_inpt' name=" + item.FieldName + " id='Yes" + item.FieldName + "' value='Yes' onchange='CounterpartychangeYesNoFieldtable(this);'><span style='float: left; margin: 7px 0px 0px 5px;'>Yes </span></div>";
                                vControls += "	<div style='width: auto;'><input style='float: left; width: auto;' type='radio' name=" + item.FieldName + " class='f_inpt' checked id='No" + item.FieldName + "' value='No' onchange='CounterpartychangeYesNoFieldtable(this);'><span style='float: left; margin: 7px 0px 0px 5px;'>No </span></div>";
                                vControls += "	<input type='hidden' id='hdnYes" + item.FieldName + "' value=" + item.CommentYes + " />";
                                vControls += "	<input type='hidden' id='hdnNo" + item.FieldName + "' value=" + item.CommentNo + " />";
                                vControls += "	<input type='hidden' id='hdnRequired" + item.FieldName + "' value=" + item.CommentRequired + " />";
                                vControls += "	<input type='hidden' id='hdnHelpText" + item.FieldName + "' value=" + item.HelpText + " />";
                                vControls += '<label   style="text-align: left;font-size:12px;">' + item.Description + '</label>';
                                vControls += '</td></tr>';

                                if (item.CommentNo == "true") {
                                    if (item.CommentRequired == "true") {
                                        vControls += '<tr class="removableCounterpartyField CP_Det"><td class="f_head"><b>Add a Comment </b><small>*</small></td>';
                                    } else {
                                        vControls += '<tr class="removableCounterpartyField CP_Det"><td class="f_head"><b>Add a Comment </b></td>';
                                    }
                                    if (item.FieldHelp == "true") {
                                        vControls += '<span class="p-text help"> <img src="../Content/Images/input-help.png" title="' + item.HelpText + '"></span>'
                                    }
                                    vControls += "<td class='labelright'>";
                                    if (item.CommentRequired == "true") {
                                        vControls += "<textarea id='CustomCMD" + item.FieldName + "' name='CustomCMD" + item.FieldName + "' maxlength='500' title='" + item.FieldName + "' cols='40' rows='5' class='f_inpt width80 height70 validelement'></textarea>";
                                    } else {
                                        vControls += "<textarea id='CustomCMD" + item.FieldName + "' name='CustomCMD" + item.FieldName + "' maxlength='500' title='" + item.FieldName + "' cols='40' rows='5' class='f_inpt width80 height70' ></textarea>";
                                    }
                                    vControls += '</td></tr>';
                                }
                            } else if (item.FieldType == "Email") {
                                if (item.Required == "true") {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validemail width90 validelement f_inpt' />";
                                } else {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validemail width90 f_inpt' />";
                                }
                                vControls += '<label  class="p-text"  style="text-align: left;">' + item.Description + '</label>';
                                vControls += '</td></tr>';
                            } else if (item.FieldType.indexOf("Browse") > -1) {
                                if (item.Required == "true") {
                                    vControls += "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement width90 f_inpt' readonly='readonly' type='text' />";
                                } else {
                                    vControls += "<input id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' readonly='readonly' type='text' class='f_inpt width90'/>";
                                }
                                vControls += '<label  class="p-text" style="text-align: left;">' + item.Description + '</label>';
                                vControls += "<a href='javascript:void(0)' class='linkText' id='" + item.FieldDisplayName + "' title='" + item.FieldName + "' onclick='ViewGenericCounterparty(this)'> Browse</a>";
                                vControls += '</td></tr>';
                            } else if (item.FieldType == "File Upload") {
                                if (item.Required == "true") {
                                    vControls += "<input type='file' id=" + item.FieldName + " name='docAttachment' title='" + item.FieldDisplayName + "' class='form-contro  validelement browse-file-doc' onchange='javascript:changeinupload(this);' />";
                                } else {
                                    vControls += "<input type='file' id=" + item.FieldName + " name='docAttachment' title='" + item.FieldDisplayName + "' class='form-contro browse-file-doc' onchange='javascript:changeinupload(this);' />";
                                }
                                vControls += '<label  class="p-text" style="text-align: left;">' + item.Description + '</label>';
                                vControls += '</td></tr>';
                            } else if (item.FieldType == "Currency" || item.FieldType == "Value / Financials") {
                                if (item.Required == "true") {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "' class='validelement f_inpt width90' />";
                                } else {
                                    vControls += "<input type='text' id=" + item.FieldName + " name=" + item.FieldName + " title='" + item.FieldDisplayName + "'  class='f_inpt width90'/>";
                                }
                                vControls += '<label  class="p-text" style="text-align: left;">' + item.Description + '</label>';
                                vControls += '</td></tr>';
                            } else if (item.FieldType == "User") {
                                if (item.Required == "true") {
                                    vControls += "<select id=" + item.FieldName + " multiple='multiple' class='form-contro chosenmulti validuser f_inpt width90' name=" + item.FieldName + " title='" + item.FieldDisplayName + "' data-placeholder='--Select--'>"
                                } else {
                                    vControls += "<select id=" + item.FieldName + " multiple='multiple' class='form-contro chosenmulti f_inpt width90' name=" + item.FieldName + " title='" + item.FieldDisplayName + "' data-placeholder='--Select--'>"
                                }

                                if (vUserList == "") {
                                    vUserList = GetUserList();
                                }

                                //eO310594
                                    //$.each(vUserList, function () {
                                //    vControls += $(this)[0].outerHTML;
                                //});
                                vControls += vUserList;

                                vControls += '<label  class="p-text"  style="text-align: left;">' + item.Description + '</label>';
                                vUser = item.FieldName;
                                vControls += '</td></tr>';
                            }

                            $("#counterpartyItemsadd").append(vControls);
                            if (vDate != "") {

                                if (localStorage.AppDateFormat == null || localStorage.AppDateFormat == "" || localStorage.AppDateFormat == 'undefined') {
                                    $("#" + vDate + "").datepicker({
                                        changeMonth: true,
                                        changeYear: true
                                    });
                                }
                                else {
                                    var dateformate = localStorage.AppDateFormat.toLowerCase().slice(0, -2);

                                    $("#" + vDate + "").datepicker({
                                        changeMonth: true,
                                        changeYear: true,
                                        dateFormat: dateformate
                                    });

                                }
                                vDate = "";
                            }
                            if (vNumber != "") {
                                allowOnlyNumberInInputBox(vNumber);
                                vNumber == "";
                            }
                            if (vNumberD != "") {
                                allowOnlyDecimalNumberInInputBox(vNumberD);
                                vNumberD == "";
                            }
                            if (vNumberP != "") {
                                allowOnlyNumberInInputBox(vNumberP);
                                vNumberP == "";
                            }
                            if (vNumberPD != "") {
                                allowOnlyDecimalNumberInInputBox(vNumberPD);
                                vNumberPD == "";
                            }
                            if (vPhoneNumber != "") {
                                bindPhoneNumber(PhoneID, PhoneCountry);
                                vPhoneNumber = "";
                            }
                            if (vMultiDDL != "") {
                                $("#" + vMultiDDL + "").chosen().trigger("chosen:updated");
                                $('.chosenmulti').on('chosen:showing_dropdown', function (evt, params) {
                                    $('.result-selected').css('display', 'none');
                                });
                                vMultiDDL = "";
                            }

                            if (vUser != "") {
                                $("#" + vUser + "").chosen().trigger("chosen:updated");
                                $('.chosenmulti').on('chosen:showing_dropdown', function (evt, params) {
                                    $('.result-selected').css('display', 'none');
                                });
                                if (vUser == "ContractManagers") {
                                    if (localStorage.UserName != "") {
                                        GetValuesAndAutoPopulate("ContractManagers", localStorage.UserName);
                                    }
                                }
                                vUser = "";
                            }
                        }
                    }
                }
            });

            $(".validelement").each(function (index, element) {
                $(element).removeClass("error");
                $("#errormsg_" + element.id).remove();
            });
            $("#addEditCounterparty").dialog("option", "title", "New Counterparty");
            $("#addEditCounterparty").dialog("open");
            $("#loadingPage").fadeOut();
        },
        error: function (metadataFields) {
            vCounterpartyFields = [];
            $("#loadingPage").fadeOut();
        }

    });
}

//manoj
//Add New Folder in JQTree
function addnewnode() {
    $("#showAllFolder").html('');
    var arrCollectionDocumentFolder = [];
    var $tree = $('#treeviewFolderMoveOption');
    var nodeselected = $tree.tree('getSelectedNode');
    if (nodeselected == false) {
        nodeselected = $tree.tree('getTree');
        var parent_node = $tree.tree('getNodeById', nodeselected.children[0].id);
        $tree.tree(
         'appendNode',
         {
             name: 'New folder',
             id: nodeselected.children[0].id + '/New folder'
         },
         parent_node

     );
        var nodeexpand = $tree.tree('getNodeById', nodeselected.children[0].id);
        $tree.tree('openNode', nodeexpand);
        var nodeselect = $tree.tree('getNodeById', nodeselected.children[0].id + '/New folder');
        $tree.tree('selectNode', nodeselect);
        $("#hdnnewfolderurl").val(nodeselected.children[0].id + '/New folder');

        //manoj
        var strReplace = contractItem.ContractDocumentsUrl.substring(0, contractItem.ContractDocumentsUrl.length - 1);
        var arrDocumentFolder = nodeselected.children[0].id.replace(strReplace, ";").split(';').filter(function (vfld) {
            return vfld !== ''
        });
        if (arrDocumentFolder.length > 1) {
            arrCollectionDocumentFolder = (contractItem.ContractDocumentsUrl + arrDocumentFolder.pop()).split('/').filter(function (vflds) {
                return vflds !== ''
            });
        } else {
            arrCollectionDocumentFolder = (contractItem.ContractDocumentsUrl).split('/').filter(function (vflds) {
                return vflds !== ''
            });
        }
        //arrCollectionDocumentFolder = (contractItem.ContractDocumentsUrl + arrDocumentFolder).split('/').filter(function (vflds) { return vflds !== '' });
        arrCollectionDocumentFolder = arrCollectionDocumentFolder.slice(1);
        //manoj

    } else {
        var parent_node = $tree.tree('getNodeById', nodeselected.id);
        $tree.tree(
         'appendNode',
         {
             name: 'New folder',
             id: nodeselected.id + '/New folder'
         },
         parent_node
     );
        var nodeexpand = $tree.tree('getNodeById', nodeselected.id);
        $tree.tree('openNode', nodeexpand);
        var nodeselect = $tree.tree('getNodeById', nodeselected.id + '/New folder');
        $tree.tree('selectNode', nodeselect);
        $("#hdnnewfolderurl").val(nodeselected.id + '/New folder');

        //manoj
        var strReplace = contractItem.ContractDocumentsUrl.substring(0, contractItem.ContractDocumentsUrl.length - 1);
        var arrDocumentFolder = nodeselected.id.replace(strReplace, ";").split(';').filter(function (vfld) {
            return vfld !== ''
        });
        if (arrDocumentFolder.length > 1) {
            arrCollectionDocumentFolder = (contractItem.ContractDocumentsUrl + arrDocumentFolder.pop()).split('/').filter(function (vflds) {
                return vflds !== ''
            });
        } else {
            arrCollectionDocumentFolder = (contractItem.ContractDocumentsUrl).split('/').filter(function (vflds) {
                return vflds !== ''
            });
        }
        arrCollectionDocumentFolder = arrCollectionDocumentFolder.slice(1);
    }
    $("#hdnnewfoldercreatedfrom").val("jqtree");
    $("#txtnewfoldervalue").removeClass('error');
    $("#errormsg_txtnewfoldervalue").remove();

    //manoj
    var fldratrical = "";
    if (arrCollectionDocumentFolder.length == 1) {
        fldratrical = '<img src="../Content/Images/icon/folder_open.png" style="margin-right: 5px;"><span>' + arrCollectionDocumentFolder.toString() + '</span>';
    } else {
        for (var fldr = 0; fldr < arrCollectionDocumentFolder.length; fldr++) {
            if (arrCollectionDocumentFolder.length - 1 == fldr) {
                fldratrical += '/<img src="../Content/Images/icon/folder_open.png" style="margin-right: 5px;"><span>' + arrCollectionDocumentFolder[fldr].toString() + '</a>';
            } else {
                fldratrical += '/<img src="../Content/Images/icon/folder.png" style="margin-right: 5px;"><span>' + arrCollectionDocumentFolder[fldr].toString() + '</a>';
            }
        }
    }
    if (fldratrical.charAt(0) == '/') {
        fldratrical = fldratrical.substr(1);
    }
    $("#showAllFolder").html(fldratrical);
    $("#dvfoldercreation").dialog("option", "title", "Create Folder");
    $("#dvfoldercreation").dialog("open");
}

//manoj
function TermsAndClauseDocument(objContractIDvalue) {
    $("#ddlTemplateAndClauses").html('<option value="-1">No Document Available</option>');
    $("#docversion").css("display", "none");
    $("#ulTermsClauseBody").html("<li Style='margin-top: 10px;'>Select available document.<li>");
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/documents?contractid=' + objContractIDvalue,
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (filescount) {
            if (filescount == null) {
                $("#ddlTemplateAndClauses").html('<option value="-1">No Document Available</option>');
                $("#docversion").css("display", "none");
                $("#ulTermsClauseBody").html("<li Style='margin-top: 10px;'>Select available document.<li>");
            } else {
                $("#ddlTemplateAndClauses").html('<option value="0">--Select--</option>');
                $(filescount).each(function (i, item) {
                    if (item != null) {
                        //if (item.CreationMode == "Template" && item.IsFolder != "True") {
                        //    $("#ddlTemplateAndClauses").append('<option value="' + item.RowKey + '">' + item.DocumentName + '</option>');
                        //}
                        if (item.IsFolder != "True") {
                            $("#ddlTemplateAndClauses").append('<option value="' + item.RowKey + '">' + item.DocumentName + '</option>');
                        }
                    }
                });
            }
        },
        error:
            function (filescount) {
                $("#ddlTemplateAndClauses").html('<option value="-1">No Document Available</option>');
                $("#docversion").css("display", "none");
                $("#ulTermsClauseBody").html("<li Style='margin-top: 10px;'>Select available document.<li>");
            }
    });
}
//manoj

//sridhar
function change_date(txtBox, lblDate) {
    var lblSelected = document.getElementById(lblDate);
    if (typeof ($(txtBox).val()) != "undefined" && $(txtBox).val() != null && $(txtBox).val() != "") {
        var noofdays = parseInt($(txtBox).val());
        $(lblSelected).empty();
        $(lblSelected).html(moment(new Date()).add(noofdays, "days").format('MM/DD/YYYY'));
    } else {
        $(lblSelected).empty();
    }
}

function autoheight(a) {
    if (!$(a).prop('scrollTop')) {
        do {
            var b = $(a).prop('scrollHeight');
            var h = $(a).height();
            $(a).height(h - 5);
        }
        while (b && (b != $(a).prop('scrollHeight')));
    };
    $(a).height($(a).prop('scrollHeight'));
}

//CounterParty Businessarea
var BAOwnersselecteditems = [];
function ViewOwnerofBusinessArea() {

    if (BusinessAreaAccessCounterp.length == 0)//Performance Optimization
        BindBusinessAreaPicker11();
    $('#txtBAOwnerofPath').val("");
    $('#txtBAOwnerof').val("");


    if ($("#txtOwnerofBusinessArea").val() != "") {
        //BAOwnersselecteditems = $("#txtOwnerofBusinessArea").val().split(';');
        var selecteditemslength = BAOwnersselecteditems.length;
        selectedBusinessAreaID11Temp = [];
        $(selectedBusinessAreaID11).each(function (i, item) {
            selectedBusinessAreaID11Temp.push(item);
        })


        $('#liSelectedBAOwners').html("");
        var arrRemovedIndexs = [];
        for (var i = 0; i < selecteditemslength; i++) {
            var re = new RegExp(" ", 'g');
            var str = BAOwnersselecteditems[i].trim().replace(re, '').trim();
            str = str.substring(str.lastIndexOf(">") + 1, str.length);
            if (selectedBusinessAreaID11.length >= i + 1) {
                if (thisBusinessAreaNameRowKey == selectedBusinessAreaID11[i][1])
                    $('#liSelectedBAOwners').append('<span id="BAF_' + str + '" style="font-size:11px;">' + BAOwnersselecteditems[i].trim().substring(BAOwnersselecteditems[i].trim().lastIndexOf(">") + 1, BAOwnersselecteditems[i].trim().length).trim() + '</span>');
                else
                    $('#liSelectedBAOwners').append('<span id="BAF_' + str + '" style="font-size:11px;">' + BAOwnersselecteditems[i].trim().substring(BAOwnersselecteditems[i].trim().lastIndexOf(">") + 1, BAOwnersselecteditems[i].trim().length).trim() + '<img src="/Content/Images/close-quick.png" id=' + selectedBusinessAreaID11[i][1] + ' onclick="javascript:liRemoveBAOwnersselecteditems(this,' + BAOwnersselecteditems.indexOf(BAOwnersselecteditems[i]) + ');" style="float:right" /></span>');
            }
            else {
                arrRemovedIndexs.push(BAOwnersselecteditems[i]);
            }
        }
        if (arrRemovedIndexs.length > 0) {
            $.each(arrRemovedIndexs, function (index, value) {
                var index = BAOwnersselecteditems.indexOf(value);
                BAOwnersselecteditems.splice(index, 1);
            });
        }
    }
    else {
        $('#liSelectedBAOwners').html("");
        BAOwnersselecteditems = [];
    }

    $("#browseBAOwners").dialog("option", "title", "Browse Business Area");
    $("#browseBAOwners").dialog("open");
}

var article11 = "";
var articleBusinessAreaCounterp = "";
var BusinessAreaAccessCounterp = [];
function BindBusinessAreaPicker11() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/businessarea/entities',
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            //if (localStorage.UserType.indexOf("Global Contract Owner") >= 0) {
            //    recursiveIteration11(data)
            //    $("#tbodyBusinessArea11").append(article11);
            //    if (article11 == "") {
            //        $("#tbodyBusinessArea11").append("<tr><td><p class='f_p-error'>No items found.</p></td></tr>");
            //    }
            //}
            //else {
            BindBusinessAreMenuCounterp(data);
            //}

            //$("#example-basic-11").treetable({ expandable: true, initialState: "expanded" });
        },
        error:
            function (data) {
            }
    });
}

function recursiveIteration11(object) {
    if (object.ChildrenData.length != 0) {

        for (var i = 0; i < object.ChildrenData.length; i++) {
            var item = object.ChildrenData[i];
            // if (item.RowKey != "GenBA" && item.RowKey != "GenCA") {
            var additional = "";

            if (item.ParentBusinessAreaID == 0) {
                additional = '<span>' + item.BusinessAreaName + '</span>'
                strContractAreaName11 = item.BusinessAreaName;
                strContractAreaName11Owner = item.Owner;
                article11 += '<tr data-tt-id="tre-' + item.RowKey + '" class="branch expanded">';
                article11 += '<td class="treeHead"><span id="ParentBusinessAreaID" style="display:none;">' + item.ParentBusinessAreaID + '</span><span id="RowKey" style="display:none;">' + item.RowKey + '</span><span id="ContractAreaName" style="display:none;">' + strContractAreaName11 + '</span><span id="ContractAreaAdmin" style="display:none;">' + strContractAreaName11Owner + '</span><span class="indenter" style="padding-left: 5px;"></span><img src="/Content/Images/icon/globset.png" /><small>' + additional + '</small></td></tr>';
            } else {
                if (strContractAreaName11 == thisContractAreaNameC && item.BusinessAreaName == thisBusinessAreaNameC) {
                    thisBusinessAreaNameRowKey = item.RowKey;
                    thisContractAreaNameRowKey = strContractAreabusinesarearowkeyCounterp;
                }
                additional = '<span style="color:#3487ce; cursor:pointer;" onclick="javascript:treeviewclick11(this)">' + item.BusinessAreaName + '</span>'
                article11 += '<tr data-tt-id="tre-' + item.RowKey + '" data-tt-parent-id="tre-' + item.ParentBusinessAreaID + '" class="branch collapsed" style="display: table-row;">';
                article11 += '<td><span id="ParentBusinessAreaID" style="display:none;">' + item.ParentBusinessAreaID + '</span><span id="RowKey" style="display:none;">' + item.RowKey + '</span><span id="ContractAreaName" style="display:none;">' + strContractAreaName11 + '</span><span id="ContractAreaAdmin" style="display:none;">' + strContractAreaName11Owner + '</span><span class="indenter" style="padding-left: 5px;"></span><img src="/Content/Images/icon/gen.png" /><small>' + additional + '</small></td></tr>';
            }
        }

        recursiveIteration11(object.ChildrenData[i])
        // }
    }
}

$('input[type=radio][name=IsGlobal]').change(function () {
    if (this.value == 'Yes') {
        $("#trcp-RgBusi").hide();
        $("#txtOwnerofBusinessArea").removeClass("validelement");
        selectedBusinessAreaID11 = [];
        selectedBusinessAreaID11Temp = [];
        BAOwnersselecteditems = [];
    }
    else if (this.value == 'No') {
        $("#trcp-RgBusi").show();
        if (thisBusinessAreaNameC != "")
            addDefaultBusinessareaCounterparty();
        $("#txtOwnerofBusinessArea").addClass("validelement");
    }
    //manoj
    $("#RelatedCounterparties").val('');
    PrvRelatedCounterparities = [];
    arrRelatedCounterparities = [];
    curRelatedCounterparities = [];
    //manoj
});


function addDefaultBusinessareaCounterparty() {


    $('#txtBAOwnerofPath').val(thisContractAreaNameRowKey);
    $('#txtBAOwnerof').val(thisBusinessAreaNameC);

    // Find and remove item from an array
    var i = BAOwnersselecteditems.indexOf(thisBusinessAreaPath);
    if (i != -1) {

    } else {
        BAOwnersselecteditems.push(thisBusinessAreaPath);
        $('#liSelectedBAOwners').append('<span style="font-size:11px;">' + thisBusinessAreaNameC + '</span>');
    }
    $('#txtBAOwnerof').val(BAOwnersselecteditems);

    var found = $.grep(selectedBusinessAreaID11, function (value) {
        return value[1] == thisBusinessAreaNameRowKey;
    });

    //  var i = selectedBusinessAreaID11.indexOf(rowKey);
    if (found != null && typeof (found) != "undefined" && found.length != 0) {

    } else {
        var rowK = jQuery.grep(BusinessAreaPathRowKey, function (a) {
            return a[1] === thisBusinessAreaNameRowKey;
        });
        if (rowK != null && typeof (rowK) != "undefined" && rowK.length != 0) {
            selectedBusinessAreaID11 = $.grep(selectedBusinessAreaID11, function (value) {
                return value[1] != rowK[0][1];
            });
            selectedBusinessAreaID11.push([rowK[0][0], rowK[0][1]]);
            selectedBusinessAreaID11Temp.push([rowK[0][0], rowK[0][1]]);
        }

    }
    var strValue = "";
    $(selectedBusinessAreaID11).each(function (i, item) {
        strValue = item[0].trim().substring(item[0].trim().lastIndexOf(">") + 1, item[0].trim().length).trim() + ";";
    });
    var lastChar = strValue.slice(-1);
    if (lastChar == ";") {
        strValue = strValue.slice(0, -1);
    }
    $("#txtOwnerofBusinessArea").val(strValue);
    $("#txtNewCpBusinessArea").val(strValue);
}


var selectedBusinessAreaID11 = [];
var selectedBusinessAreaID11Temp = [];
var DeletedBusinessAreaID = [];
function treeviewclick11(obj) {
    var strBusinessAreaName = obj.textContent;
    var rowKey = obj.parentNode.parentNode.childNodes[2].textContent;
    var parentBusinessAreaID = obj.parentNode.parentNode.childNodes[1].textContent;
    var contractAreaName = obj.parentNode.parentNode.childNodes[3].textContent;
    var contractAreaNameOwner = obj.parentNode.parentNode.childNodes[4].textContent;


    $('#txtBAOwnerofPath').val(parentBusinessAreaID);
    $('#txtBAOwnerof').val(strBusinessAreaName);

    // Find and remove item from an array
    //var i = BAOwnersselecteditems.indexOf(strBusinessAreaName);
    //if (i != -1) {

    //} else {
    //    BAOwnersselecteditems.push(strBusinessAreaName);
    //    $('#liSelectedBAOwners').append('<span style="font-size:11px;">' + strBusinessAreaName + '<img src="/Content/Images/close-quick.png" id=' + rowKey + ' onclick="javascript:liRemoveBAOwnersselecteditems(this);" style="float:right" /></span>');
    //}
    //$('#txtBAOwnerof').val(BAOwnersselecteditems);

    var found = $.grep(selectedBusinessAreaID11Temp, function (value) {
        return value[1] == rowKey;
    });

    //  var i = selectedBusinessAreaID11.indexOf(rowKey);
    if (found != null && typeof (found) != "undefined" && found.length != 0) {

    } else {
        var rowK = jQuery.grep(BusinessAreaPathRowKey, function (a) {
            return a[1] === rowKey;
        });
        if (rowK != null && typeof (rowK) != "undefined" && rowK.length != 0) {
            selectedBusinessAreaID11Temp = $.grep(selectedBusinessAreaID11Temp, function (value) {
                return value[1] != rowK[0][1];
            });
            selectedBusinessAreaID11Temp.push([rowK[0][0], rowK[0][1]]);

            // Find and remove item from an array
            var i = BAOwnersselecteditems.indexOf(rowK[0][0]);
            if (i != -1) {

            } else {
                BAOwnersselecteditems.push(rowK[0][0]);
                $('#liSelectedBAOwners').append('<span style="font-size:11px;">' + strBusinessAreaName + '<img src="/Content/Images/close-quick.png" id=' + rowKey + ' onclick="javascript:liRemoveBAOwnersselecteditems(this);" style="float:right" /></span>');
            }
            $('#txtBAOwnerof').val(BAOwnersselecteditems);
        }

    }
}


function liRemoveBAOwnersselecteditems(obj) {

    var child = obj.parentNode;
    var rowK = jQuery.grep(BusinessAreaPathRowKey, function (a) {
        return a[1] === obj.id;
    });
    var i = BAOwnersselecteditems.indexOf(rowK[0][0]);
    if (i != -1) {
        BAOwnersselecteditems.splice(i, 1);
    }
    child.parentNode.removeChild(child);

    //remove id from array
    selectedBusinessAreaID11Temp = $.grep(selectedBusinessAreaID11Temp, function (value) {
        return value[1] != obj.id;
    });

}
function liRemoveBAOwnersselecteditems(obj, index) {

    var child = obj.parentNode;
    var rowK = jQuery.grep(BusinessAreaPathRowKey, function (a) {
        return a[1] === obj.id;
    });
    var innertextvale = child.textContent;
    index = BAOwnersselecteditems.indexOf(rowK[0][0]);
    child.parentNode.removeChild(child);
    if (index != -1) {
        BAOwnersselecteditems.splice(index, 1);
    }
    DeletedBusinessAreaID.push(obj.id);
    //remove id from array
    selectedBusinessAreaID11Temp = $.grep(selectedBusinessAreaID11Temp, function (value) {
        return value[1] != obj.id;
    });
}
function BindBusinessAreMenuCounterp(data) {
    if (typeof (BusinessAreaAccess) == "undefined" || BusinessAreaAccess == null || BusinessAreaAccess.length == 0) {
        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/users/' + localStorage.UserID + '/businessareapermission',
            type: 'GET',
            dataType: 'json',
            'Content-Type': 'application/json',
            cache: true,
            headers: {
                'eContracts-ApiKey': localStorage.APIKey
            },
            success: function (entity) {
                var BAreaAccess = entity.BusinessArea + ";" + entity.BusinessAreaContribute + ";" + entity.OwnerOfBusinessAreas;

                var newArray = BAreaAccess.split(';').filter(function (v) {
                    return v !== ''
                }); // remove empty
                BusinessAreaAccessCounterp = newArray;

                /* Business Area Popup Start */

                recursiveIterationCounterp("", data)
                $("#tbodyBusinessArea11").append(articleBusinessAreaCounterp);
                if (articleBusinessAreaCounterp == "") {
                    $('#tbodyBusinessArea11').empty();
                    $("#tbodyBusinessArea11").append("<tr><td><p class='f_p-error'>No items found.</p></td></tr>");
                }
                articleBusinessAreaCounterp = "";
                $("#example-basic-11").treetable({
                    expandable: true, initialState: "expanded"
                }, true);


            },
            error:
                function (data) {
                }
        });

    }
    else {
        if (typeof (BusinessAreaAccess) == "object" && BusinessAreaAccess.length > 1) {
            BusinessAreaAccessCounterp = BusinessAreaAccess;
        }
        else
            BusinessAreaAccessCounterp.push(BusinessAreaAccess);


        recursiveIterationCounterp("", data)
        $("#tbodyBusinessArea11").append(articleBusinessAreaCounterp);
        if (articleBusinessAreaCounterp == "") {
            $('#tbodyBusinessArea11').empty();
            $("#tbodyBusinessArea11").append("<tr><td><p class='f_p-error'>No items found.</p></td></tr>");
        }
        articleBusinessAreaCounterp = "";
        $("#example-basic-11").treetable({
            expandable: true, initialState: "expanded"
        }, true);

    }
}
var businessareaHeaderMenuCounterp = "";
var articleBusinessArea2Counterp = "";
var strContractAreaNameMenuCounterp = "";
var strContractAreaNameMenuOwnerCounterp = "";
var MyBusinessAreaCountCounterp = 0;
var strContractAreaAdminCounterp = "";
var strContractAreaNameCounterp = "";
var strContractAreabusinesarearowkeyCounterp = "";
var previousidCounterp = "";
var strContractAreaIDLayoutCounterp = '';
var strContractAreaName12Counterp = "";
var strContractAreaName12OwnerCounterp = "";
var previousidCounterp = "";
function recursiveIterationCounterp(path, object) {
    if (object.ChildrenData.length != 0) {
        for (var i = 0; i < object.ChildrenData.length; i++) {
            var item = object.ChildrenData[i];
            var spath = '';
            if (path == '') {
                spath = item.BusinessAreaName;
                BusinessAreaPathRowKey.push([spath, item.RowKey]);
            }
            else {
                spath = path + ' > ' + item.BusinessAreaName;
                BusinessAreaPathRowKey.push([spath, item.RowKey]);
            }
            var additional = "";
            var found = $.grep(BusinessAreaAccessCounterp, function (n, ind) {
                return (n.indexOf(spath) == 0);
            });
            //var found = _.some(BusinessAreaAccessWithRead, function (value) {
            //    return value.indexOf(spath) != -1;
            //});
            if (found.length > 0 || localStorage.UserType.indexOf("Global Contract Owner") >= 0 || item.RowKey == "GenCA" || item.RowKey == "GenBA") {

                if (item.ParentBusinessAreaID == 0) {
                    additional = '<span>' + item.BusinessAreaName + '</span>'
                    strContractAreaName12Counterp = item.BusinessAreaName;
                    strContractAreaName12OwnerCounterp = item.Owner;
                    articleBusinessAreaCounterp += '<tr data-tt-id="tre-' + item.RowKey + '" class="branch expanded">';
                    articleBusinessAreaCounterp += '<td class="treeHead"><span id="ParentBusinessAreaID" style="display:none;">' + item.ParentBusinessAreaID + '</span><span id="RowKey" style="display:none;">' + item.RowKey + '</span><span id="ContractAreaName" style="display:none;">' + strContractAreaName12Counterp + '</span><span id="ContractAreaAdmin" style="display:none;">' + strContractAreaName12OwnerCounterp + '</span><span class="indenter" style="padding-left: 5px;"></span><img src="/Content/Images/icon/globset.png" /><small>' + additional + '</small></td></tr>';
                } else {
                    if (strContractAreaName12Counterp == thisContractAreaNameC && item.BusinessAreaName == thisBusinessAreaNameC) {
                        thisBusinessAreaNameRowKey = item.RowKey;
                        thisContractAreaNameRowKey = strContractAreabusinesarearowkeyCounterp;
                    }
                    additional = '<span style="color:#3487ce; cursor:pointer;" onclick="javascript:treeviewclick11(this)">' + item.BusinessAreaName + '</span>'
                    articleBusinessAreaCounterp += '<tr data-tt-id="tre-' + item.RowKey + '" data-tt-parent-id="tre-' + item.ParentBusinessAreaID + '" class="branch collapsed" style="display: table-row;">';
                    articleBusinessAreaCounterp += '<td><span id="ParentBusinessAreaID" style="display:none;">' + item.ParentBusinessAreaID + '</span><span id="RowKey" style="display:none;">' + item.RowKey + '</span><span id="ContractAreaName" style="display:none;">' + strContractAreaName12Counterp + '</span><span id="ContractAreaAdmin" style="display:none;">' + strContractAreaName12OwnerCounterp + '</span><span class="indenter" style="padding-left: 5px;"></span><img src="/Content/Images/icon/gen.png" /><small>' + additional + '</small></td></tr>';
                }

                recursiveIterationCounterp(spath, object.ChildrenData[i])
            }
        }
    }
    //if (object.ChildrenData.length != 0) {
    //    BindRecBACounterp('', object);
    //}
}

var BusinessAreaPathRowKey = [];
var j = 1;
function BindRecBACounterp(path, object) {
    for (var i = 0; i < object.ChildrenData.length; i++) {
        var item = object.ChildrenData[i];
        var additional = "";
        var spath = '';
        if (path == '') {
            spath = item.BusinessAreaName;
            BusinessAreaPathRowKey.push([spath, item.RowKey]);
        }
        else {
            spath = path + ' > ' + item.BusinessAreaName;
            BusinessAreaPathRowKey.push([spath, item.RowKey]);
        }
        //var found = $.grep(BusinessAreaAccessWithRead, function (k,value) {
        //    return (value.indexOf(spath) != -1); 
        //});
        var found = $.grep(BusinessAreaAccessCounterp, function (n, ind) {
            return (n.indexOf(spath) == 0);
        });
        //var found = _.some(BusinessAreaAccessWithRead, function (value) {
        //    return value.indexOf(spath) != -1;
        //});
        if (found.length > 0 || localStorage.UserType.indexOf("Global Contract Owner") >= 0 || item.RowKey == "GenCA" || item.RowKey == "GenBA") {

            if (item.ParentBusinessAreaID != 0) {
                if (strContractAreaNameCounterp == thisContractAreaNameC && item.BusinessAreaName == thisBusinessAreaNameC) {
                    thisBusinessAreaNameRowKey = item.RowKey;
                    thisContractAreaNameRowKey = strContractAreabusinesarearowkeyCounterp;
                }
                if (item.Owner.trim().split(';').indexOf(localStorage.UserName.trim()) > -1) {//if business owner
                    additional = '<span style="color:#3487ce; cursor:pointer;" onclick="javascript:treeviewclick11(this)">' + item.BusinessAreaName + '</span>&nbsp; <img src="/Content/Images/icon/profile.png" style="cursor:default;" />'
                } else { //if permission in business area
                    additional = '<span style="color:#3487ce; cursor:pointer;" onclick="javascript:treeviewclick11(this)">' + item.BusinessAreaName + '</span>'
                }
            } else {
                additional = '<span>' + item.BusinessAreaName + '</span>';
            }
            if (additional != "") {
                if (item.ParentBusinessAreaID == 0) {
                    strContractAreaNameCounterp = item.BusinessAreaName;
                    strContractAreabusinesarearowkeyCounterp = item.RowKey;
                    strContractAreaAdminCounterp = item.Owner;
                    articleBusinessAreaCounterp += '<tr data-tt-id="tre-' + item.RowKey + '" class="branch expanded">';
                    articleBusinessAreaCounterp += '<td class="treeHead"><span id="ParentBusinessAreaID" style="display:none;">' + item.ParentBusinessAreaID + '</span><span id="RowKey" style="display:none;">' + item.RowKey + '</span><span id="ContractAreaName" style="display:none;">' + strContractAreaNameCounterp + '</span><span class="indenter" style="padding-left: 5px;"></span><img src="/Content/Images/icon/globset.png" /><small>' + additional + '</small></td></tr>';
                } else {

                    articleBusinessAreaCounterp += '<tr data-tt-id="tre-' + item.RowKey + '" data-tt-parent-id="tre-' + item.ParentBusinessAreaID + '" class="branch collapsed" style="display: table-row;">';

                    if (previousidCounterp == item.ParentBusinessAreaID) {
                        //find if child business area exists
                        if (object.ChildrenData.length == 0) {
                            articleBusinessAreaCounterp += '<td><span id="ParentBusinessAreaID" style="display:none;">' + item.ParentBusinessAreaID + '</span><span id="RowKey" style="display:none;">' + item.RowKey + '</span><span id="ContractAreaName" style="display:none;">' + strContractAreaNameCounterp + '</span><span class="indenter" style="padding-left: 5px;"></span><img src="/Content/Images/icon/gen.png" class="padding_left_65px" /><small>' + additional + '</small></td></tr>';
                        } else {
                            var spandis = object.ChildrenData.length * 2 * 5 * j;
                            articleBusinessAreaCounterp += '<td><span id="ParentBusinessAreaID" style="display:none;">' + item.ParentBusinessAreaID + '</span><span id="RowKey" style="display:none;">' + item.RowKey + '</span><span id="ContractAreaName" style="display:none;">' + strContractAreaNameCounterp + '</span><span class="indenter" style="padding-left: ' + spandis + 'px;"></span><img src="/Content/Images/icon/gen.png" /><small>' + additional + '</small></td></tr>';
                        }
                        //$.ajax({
                        //    url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/businessarea/childbusinessareas?businessareaid=' + item.RowKey,
                        //    type: 'GET',
                        //    dataType: 'json',
                        //    'Content-Type': 'application/json',
                        //    headers: { 'eContracts-ApiKey': localStorage.APIKey },
                        //    async: false,
                        //    success: function (data) {
                        //        if (data.length == 0) {
                        //            articleBusinessArea += '<td><span id="ParentBusinessAreaID" style="display:none;">' + item.ParentBusinessAreaID + '</span><span id="RowKey" style="display:none;">' + item.RowKey + '</span><span id="ContractAreaName" style="display:none;">' + strContractAreaName + '</span><span class="indenter" style="padding-left: 5px;"></span><img src="/Content/Images/icon/gen.png" class="padding_left_65px" /><small>' + additional + '</small></td></tr>';
                        //        } else {
                        //            articleBusinessArea += '<td><span id="ParentBusinessAreaID" style="display:none;">' + item.ParentBusinessAreaID + '</span><span id="RowKey" style="display:none;">' + item.RowKey + '</span><span id="ContractAreaName" style="display:none;">' + strContractAreaName + '</span><span class="indenter" style="padding-left: 5px;"></span><img src="/Content/Images/icon/gen.png" /><small>' + additional + '</small></td></tr>';
                        //        }
                        //    },
                        //    error:
                        //        function (data) {

                        //        }
                        //});
                    } else {
                        articleBusinessAreaCounterp += '<td><span id="ParentBusinessAreaID" style="display:none;">' + item.ParentBusinessAreaID + '</span><span id="RowKey" style="display:none;">' + item.RowKey + '</span><span id="ContractAreaName" style="display:none;">' + strContractAreaNameCounterp + '</span><span class="indenter" style="padding-left: 5px;"></span><img src="/Content/Images/icon/gen.png" /><small>' + additional + '</small></td></tr>';
                    }
                    if (previousidCounterp != item.ParentBusinessAreaID)
                        previousidCounterp = item.RowKey;
                }
            }
            //    recursiveIteration(object.ChildrenData[i])

            //if (object.ChildrenData.length > 0)
            //    recursiveIteration(object.ChildrenData[i])

            if (object.ChildrenData.length > 1) {
                j += 1;
                BindRecBACounterp(spath, object.ChildrenData[i]);

                if (j > 1)
                    j = j - 1;
                else
                    j = 1;
            }
            else if (object.ChildrenData.length == 1) {
                j += 1;
                BindRecBACounterp(spath, object.ChildrenData[i]);
                j = 1;
            }
        }
    }
}


function getShareNameandEmailIdInternal(scontrid, popUpModalName) {
    if (contractItem != "") {
        var UsersToShow = contractItem.ContractManagers + ";" + contractItem.BusinessOwners + ";" + contractItem.CreatedBy + ";" + contractItem.Approvers + ";" + contractItem.Reviewers + ";" + contractItem.Signees + ";" + contractItem.Requestor;
        var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
        var vAccFeat = $.grep(veContractFeatures, function (n, i) {
            return (n.RowKey == "11" && n.Status == "ON");
        });
        if (vAccFeat.length > 0) {
            try {
                if (contractItem.ProjectManager == null || contractItem.ProjectManager == "") {
                    UsersToShow += ";" + contractItem.ProjectManager;
                }
            }
            catch (ex) {

            }
        }
        HideOptionsNotRequiredExcept(popUpModalName, UsersToShow);
    }
    else {
        HideOptionsNotRequiredExcept(popUpModalName, "");
    }
}
function HideOptionsNotRequiredExcept(controlname, values) {

    var multiarr = [];
    var res = values != null ? values.split(";") : [];
    var reslength = res.length;
    var resValue = "";
    $("#" + controlname).children('option').hide();
    $('#' + controlname).chosen().trigger("chosen:updated");

    for (var i = 0; i < reslength; i++) {
        //   multiarr.push(res[i].trim());
        resValue = res[i].trim();
        if (resValue != "") {
            if ($('#' + controlname).children('option').filter(function () { return $(this).text() == resValue; }).length > 0 && multiarr.indexOf(resValue) == -1) {
                $('#' + controlname).children('option').filter(function () {
                    return $(this).text() == resValue;
                }).show();
                multiarr.push(resValue);
            }
        }
    }
    if (multiarr.length == 0) {
        $('#' + controlname).attr("data-placeholder", "No users available").chosen();
    }
    else {
        $('#' + controlname).attr("data-placeholder", "Select User(s)").chosen();
    }
    $('#' + controlname).chosen().trigger("chosen:updated");
}
function GetTextAndAutoPopulateNotHidden(controlname, values) {

    var multiarr = [];
    var res = values != null ? values.split(";") : [];
    var reslength = res.length;
    var resValue = "";
    for (var i = 0; i < reslength; i++) {
        //   multiarr.push(res[i].trim());
        resValue = res[i].trim();
        if (resValue != "") {
            if ($('#' + controlname + ' option[value="' + resValue + '"]').length > 0 && multiarr.indexOf(resValue) == -1 && $('#' + controlname + ' option[value="' + resValue + '"]').css("display") != "none") {
                multiarr.push(resValue);
            }
        }
    }


    ChosenOrder.setSelectionOrder($('#' + controlname), multiarr, true);
}

function BindContractRoles(item) {
    //RoleNames
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contractrolesbytype?type=' + item.ContractType,
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (data) {
            if (data != null && data.length != 0) {
                if (vUserListG == '') {
                    vUserListG = GetUserList();
                }
                //  var rolesetting = data[0].ContractRoleSetting;
                var html = '';
                var html_view = '';
                //if (rolesetting !== "") {

                //    var rolesetting = data[0].ContractRoleSetting.split(';');
                var ddllt = [];
                ContractRoles = [];
                $(data).each(function (i, item) {
                    if (item != null) {
                        var Fieldname = item.ContractRoleName;
                        var FieldDisplay = item.ContractRoleDisplayName;
                        var FieldPermi = item.PermissionLabel;
                        var FieldisDeleted = item.isDeleted;

                        //Remove Existing
                        if ($("#view_" + Fieldname).length > 0)
                            $("#view_" + Fieldname).parent().remove();
                        if ($("select#" + Fieldname).length > 0)
                            $("select#" + Fieldname).parent().parent().parent().remove();

                        //For New People
                        if (!FieldisDeleted) {
                            html += ' <tr>';
                            html += '   <td class="f_head">' + FieldDisplay + '</td>';
                            html += '  <td class="labelleft width60">';
                            html += '   <div class="invite-Peop-mul-sel">';
                            html += '       <select id="' + Fieldname + '" multiple="multiple" title="" data-permission="' + FieldPermi + '" class="chosenmulti ContractRoleType" data-placeholder="Select User(s)" style="width:49.5%;"></select>';
                            html += '    </div>';
                            html += '  </td>';
                            ddllt.push(Fieldname);
                        }
                        ContractRoles.push([Fieldname, FieldPermi, FieldDisplay, FieldisDeleted]);
                        //For New People View
                        html_view += ' <tr>';
                        if (FieldisDeleted) {
                            html_view += '   <td height="10" align="left" valign="top" class="content-text clr999" style="color:#f54444;" title="This Contract Role is no longer available.">' + FieldDisplay + '</td>';
                            html_view += '  <td height="10" align="left" valign="top" class="content-text" id="view_' + Fieldname + '"  style="color:#f54444;" title="This Contract Role is no longer available.">';
                        }
                        else {
                            html_view += '   <td height="10" align="left" valign="top" class="content-text clr999">' + FieldDisplay + '</td>';
                            html_view += '  <td height="10" align="left" valign="top" class="content-text" id="view_' + Fieldname + '">';
                        }
                        html_view += '  </td>';
                    }
                });

                $('#tblPeople > tbody > tr').eq(6).after(html);
                $('#tblAddNewPeopleView > tbody > tr').eq(6).after(html_view);
                $(ddllt).each(function () {
                    var item = this.toString();
                    $("#" + item).append(vUserListG);
                    $("#" + item).chosen();
                });
                BindContractRolesMetadata();
                // }

            }
        }
    });
}
var RecvMetadatavaluetofinalize = '';
function BindContractRolesMetadata() {
    var vMetadatavaluetofinalize;
    var metadataFields = [];
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/IContractDetails?contractid=' + getParameterByName("ContractID"),
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        //async: false,
        success: function (mainmetadataFields) {
            vMetadatavaluetofinalize = $(mainmetadataFields).find('Metadata');
            RecvMetadatavaluetofinalize = $(mainmetadataFields).find('Metadata');
            var control = '';
            var control_view = '';
            $(ContractRoles).each(function () {
                $('.CRole').remove();
                var itemfield = $(this)[0];
                var itemfieldDisplay = $(this)[2];
                var itemfieldPermission = $(this)[1];
                var itemisdeleted = $(this)[3];
                FullContractroleUser = [];
                ReadContractroleUser = [];
                ReadWriteContractroleUser = [];
                if ($(vMetadatavaluetofinalize).find(itemfield).text() != "undefined" && $(vMetadatavaluetofinalize).find(itemfield).text() != null && $(vMetadatavaluetofinalize).find(itemfield).text() != "") {
                    if (itemisdeleted) {
                        control += '<tr class="CRole" title="This Contract Role is no longer available.">';
                        control += '<td height="10" align="left" valign="top" class="content-text width40" style="color:#f54444;">' + itemfieldDisplay + '</td>';
                        control += '<td height="10" align="left" valign="top" class="content-text width58 contractroles" data-name="' + itemfield + '" style="color:#f54444;">';
                    }
                    else {
                        control += '<tr class="CRole">';
                        control += '<td height="10" align="left" valign="top" class="content-text clr999 width40">' + itemfieldDisplay + '</td>';
                        control += '<td height="10" align="left" valign="top" class="content-text width58 contractroles" data-name="' + itemfield + '">';
                    }

                    // control += '<td height="10" align="left" valign="top" class="content-text width58">' + $(vMetadatavaluetofinalize).find(itemfield).text() + '</td>';
                    var eachus = $(vMetadatavaluetofinalize).find(itemfield).text().split(';');
                    $(eachus).each(function () {
                        //manoj
                        if ($.trim(this.toString()) != "") {
                            //manoj
                            if (itemfieldPermission == "Full Control") {
                                if ($.inArray(this.toString().trim(), FullContractroleUser) == -1) {
                                    FullContractroleUser.push(this.toString().trim());
                                }
                            }
                            else if (itemfieldPermission == "Read Only") {
                                if ($.inArray(this.toString().trim(), ReadContractroleUser) == -1) {
                                    ReadContractroleUser.push(this.toString().trim());
                                }
                            }
                            else if (itemfieldPermission == "Read/Write") {
                                if ($.inArray(this.toString().trim(), ReadWriteContractroleUser) == -1) {
                                    ReadWriteContractroleUser.push(this.toString().trim());
                                }
                            }
                            if (itemisdeleted) {
                                control += ' <span class="Link_UserProfile">' + this.toString().trim() + '</span>; ';

                                //For New People View
                                control_view += '<span class="Link_UserProfile">' + this.toString().trim() + '</span>; ';
                                $("#view_" + itemfield).empty();
                                $("#view_" + itemfield).append(control_view);
                            }
                            else {
                                if (vActiveUsers.length > 0 && vActiveUsers.indexOf(this.toString().trim()) < 0) {
                                    control += ' <a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(this.toString().trim()) + '\')" class="Link_UserProfile disabled_item_link" title="This user is no longer available.">' + this.toString().trim() + '</a>; ';

                                    //For New People View
                                    control_view += '<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(this.toString().trim()) + '\')" class="Link_UserProfile disabled_item_link" title="This user is no longer available.">' + this.toString().trim() + '</a>; ';
                                    $("#view_" + itemfield).empty();
                                    $("#view_" + itemfield).append(control_view);
                                }
                                else {
                                    control += '<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(this.toString().trim()) + '\')" class="Link_UserProfile">' + this.toString().trim() + '</a>; ';

                                    //For New People View
                                    control_view += '<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + escape(this.toString().trim()) + '\')" class="Link_UserProfile">' + this.toString().trim() + '</a>; ';
                                    $("#view_" + itemfield).empty();
                                    $("#view_" + itemfield).append(control_view);
                                }
                            }
                        }
                    });
                    control += ' </td>';
                    control += '</tr>';
                }
                else {
                    if (itemisdeleted) {
                        $("#view_" + itemfield).parent().remove();
                        //control += '<tr class="CRole" title="This Contract Role is no longer available.">';
                        //control += '<td height="10" align="left" valign="top" class="content-text width40" style="color:#f54444;">' + itemfieldDisplay + '</td>';
                        //control += '<td height="10" align="left" valign="top" class="content-text width58" style="color:#f54444;">Not Available</td>';
                        //control += '</tr>';
                    }
                    else {
                        control += '<tr class="CRole">';
                        control += '<td height="10" align="left" valign="top" class="content-text clr999 width40">' + itemfieldDisplay + '</td>';
                        control += '<td height="10" align="left" valign="top" class="content-text width58">Not Available</td>';
                        control += '</tr>';

                        //For New People View
                        $("#view_" + itemfield).empty();
                        $("#view_" + itemfield).append("Not Available");
                    }

                }
                control_view = '';
            });

            $('#PeopleTable').append(control);
        },
    });
}

function ChangeLableCheck(item) {
    var LabelTitle = item.value;
    var CategoryName = $(item).attr('data-category');
    //manoj
    //var classList = $(item).attr('data-category');
    //$(LinkURL).attr('data-value')
    //manoj
    //var classList = item.className.split(' ');
    //$(classList).each(function (i, item) {
    //    if ($.trim(item) != "autodisabledlabel" && CategoryName == "") {
    //        CategoryName = $.trim(item);
    //    }
    //});
    //manoj
    var FilterdCategory = $.grep(LabelsCategories, function (nCategory, iCategory) {
        return (nCategory.LabelCategory == CategoryName && nCategory.Restrict == "Yes");
    });
    //manoj
    if ($(item).is(':checked')) {
        if ($.inArray(LabelTitle, ContractLabels) == -1) {
            ContractLabels.push(LabelTitle);
            var FinalizeDiable = $.grep(arrLabelCollection, function (ndisable, idisable) {
                return (ndisable.Category == CategoryName && ndisable.Label == LabelTitle);
            });
            if (FinalizeDiable.length == 0) {
                var LabelDetails = {
                    Category: CategoryName, Label: LabelTitle, Auto: false
                };
                arrLabelCollection.push(LabelDetails);
            }
        }
        if (FilterdCategory.length > 0) {
            if ($('input:checkbox[data-category="' + CategoryName + '"]:checked').length <= 1) {
                enbledisablelabel(LabelTitle, CategoryName, true);
            }
        }
    }
    else {
        ContractLabels = jQuery.grep(ContractLabels, function (value) {
            return value != LabelTitle;
        });
        arrLabelCollection = $.grep(arrLabelCollection, function (ndisable, idisable) {
            return ndisable.Label != LabelTitle;
        });
        if (FilterdCategory.length > 0) {
            if ($('input:checkbox[data-category="' + CategoryName + '"]:checked').length <= 1) {
                if ($('input:checkbox[data-category="' + CategoryName + '"]:checked').length == 1) {
                    var chaeckedlabel = "";
                    $('input:checkbox[data-category="' + CategoryName + '"]:checked').each(function () {
                        chaeckedlabel = this.value;
                    });
                    if (chaeckedlabel == LabelTitle) {
                        enbledisablelabel(LabelTitle, CategoryName, false);
                    } else {
                        enbledisablelabel(chaeckedlabel, CategoryName, true);
                    }
                } else if ($('input:checkbox[data-category="' + CategoryName + '"]:checked').length > 0) {
                    $(item).attr("disabled", "disabled");
                } else {
                    enbledisablelabel(chaeckedlabel, CategoryName, false);
                }
                //manoj
            } else {
                $('input:checkbox[data-category="' + CategoryName + '"]:not(:checked) ').attr("disabled", "disabled");
                $(".autodisabledlabel").attr("disabled", "disabled");
            }
        }
    }
}

function disablelabelbysearch() {
    var CategoriesCollection = [];
    $.each(arrLabelCollection, function (arrLabel) {
        if (arrLabel != null) {
            if ($.trim(arrLabelCollection[arrLabel].Category) != "") {
                CategoriesCollection.push($.trim(arrLabelCollection[arrLabel].Category));
            }
        }
    });
    var obj1 = {
    };
    //manoj
    var CategoriesList = [];
    $(CategoriesCollection).each(function (iCategories, itemCategories) {
        if (!(itemCategories in obj1)) {
            if ($.trim(itemCategories) != "") {
                CategoriesList.push($.trim(itemCategories));
            }
        }
        obj1[itemCategories] = true;
    });

    //manoj
    if (CategoriesList.length > 0) {
        $(CategoriesList).each(function (iCategoriesList, itemCategoriesList) {
            var SameCategoriesAutoLabel = $.grep(arrLabelCollection, function (narrSameLabel, iarrSameLabel) {
                return (narrSameLabel.Category == itemCategoriesList && narrSameLabel.Auto == true);
            });
            var SameCategoriesLabel = $.grep(arrLabelCollection, function (narrSameAutoLabel, iarrSameAutoLabel) {
                return (narrSameAutoLabel.Category == itemCategoriesList && narrSameAutoLabel.Auto == false);
            });
            if (SameCategoriesAutoLabel.length > 0 || SameCategoriesLabel.length > 0) {
                //if ((SameCategoriesLabel.length - SameCategoriesAutoLabel.length) >= 1) {
                //manoj
                var FilterdCategory = $.grep(LabelsCategories, function (nCategory, iCategory) {
                    return (nCategory.LabelCategory == itemCategoriesList && nCategory.Restrict == "Yes");
                });
                //manoj
                if (FilterdCategory.length > 0) {
                    //manoj
                    //$('input:checkbox[class=' + itemCategoriesList + ']').each(function () {
                    //manoj
                    $('input:checkbox[data-category="' + itemCategoriesList + '"]').each(function () {
                        //manoj
                        var selectedlabelvalue = this;
                        var enablelabeldetails = $.grep(arrLabelCollection, function (nenablelabel, ienablelabel) {
                            return (nenablelabel.Category == itemCategoriesList && nenablelabel.Auto == false && nenablelabel.Label == $.trim(selectedlabelvalue.value));
                        });
                        if (enablelabeldetails.length == 0) {
                            if (!this.checked) {
                                $(this).attr("disabled", "disabled");
                            }
                        } else if (SameCategoriesAutoLabel.length > 0) {
                            if (!this.checked)
                                $(this).attr("disabled", "disabled");
                        }
                    });
                    //manoj
                }
            }
        });
    }
    //manoj
}

//manoj
function enbledisablelabel(labelvalue, CategoryName, action) {
    if (action) {
        //manoj
        $('input:checkbox[data-category="' + CategoryName + '"]').each(function () {
            //manoj
            if (labelvalue != $.trim(this.value)) {
                $(this).attr("disabled", "disabled");
            }
        });
    } else {
        //manoj
        $('input:checkbox[data-category="' + CategoryName + '"]').each(function () {
            $(this).removeAttr("disabled");
        });
        //manoj
        //$("." + CategoryName).removeAttr("disabled");
        $(".autodisabledlabel").attr("disabled", "disabled");
    }
}
//manoj



function SetBADashboard(BAPath, BA) {
    $("#dashmain").attr("src", "/Content/images/icon/gen.png");
    $(".business-area").css('display', 'none');

    $("#bNavDashboard").html("Dashboard");
    $("#bNavActivities").html("Activities");
    $("#bNavContracts").html("Contracts");
    $("#bNavPipeline").html("Pipeline");
    $("#bNavRequests").html("Requests");
    $("#liNavInsights").css('display', '');
    $("#bNavDashboardMob").html("Dashboard");
    $("#bNavActivitiesMob").html("Activities");
    $("#bNavContractsMob").html("Contracts");
    $("#bNavPipelineMob").html("Pipeline");
    $("#bNavRequestsMob").html("Requests");
    $("#liNavInsightsMob").css('display', '');
    localStorage.setItem("GlobalBusinessArea", BA);
    localStorage.setItem("GlobalBusinessAreaLocation", BAPath);
    localStorage.setItem("IsGeneralBusinessArea", "");
}
//Sridhar
function BindTermTypes(objvalue) {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracttermtypesenabled',
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        async: false,
        success: function (data) {
            //var datalength = data.length;
            //TermTypeBinded = true;
            $(data).each(function (iType, itemType) {
                TermTypeDisplayName[itemType.ContractTermName] = itemType.ContractTermDisplayName;
            });
            //if(typeof (objvalue) != "undefined" && objvalue != null && objvalue != ""){
            //    BindMetaData(contractItem, false);
            //}
            //for (var i = 0; i < datalength; i++) {
            //}
        },
        error: function (data) {
            //TermTypeBinded = false;
        }
    });
}

function BindContractRelationships() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contractrelationships',
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            var options = "";
            if (data == null || data == "") {
                var relationshipType = "Master Agreement-Sub-Agreement/SOW;Prime Contractor Agreement-Sub Contractor Agreement;Blanket Agreement-Order/Invoice;Original-Duplicate/Copy;Past Contract-Renegotiated Contract;Primary Contract-Amendment/Modification;Other";
                var relationship1 = "Master Agreement;Prime Contractor Agreement;Blanket Agreement;Original;Past Contract;Primary Contract;Other";
                var relationship2 = "Sub-Agreement/SOW;Sub Contractor Agreement;Order/Invoice;Duplicate/Copy;Renegotiated Contract;Amendment/Modification;Other";
                $.ajax({
                    url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/addrelationshipsettings?relationshiptypes=' + relationshipType + '&rel1=' + relationship1 + '&rel2=' + relationship2,
                    type: 'PUT',
                    dataType: 'json',
                    headers: {
                        'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                    },
                    cache: false,
                    success: function (data) {
                        $(data).each(function (i, item) {

                            var Relationship2 = [];
                            //Get all the relationship2 names
                            $(item.Relationship2).find('RelationshipName').each(function () {
                                var Relationship2each = $(this).text();
                                if (Relationship2each != null && typeof (Relationship2each) != "undefined" && Relationship2each != "")
                                    Relationship2.push(Relationship2each)
                            });
                            RelationshipTypes.push([item.RelationshipType, item.Relationship1, Relationship2]);
                            options += '<option value="' + item.RelationshipType + '">' + item.RelationshipType + '</option>';
                        });
                        $("#ddlRelationshipType").append(options);
                    },
                    error: function (person) {
                        RelationshipTypes = [];
                    }
                });
            }
            else {
                $(data).each(function (i, item) {

                    var Relationship2 = [];
                    //Get all the relationship2 names
                    $(item.Relationship2).find('RelationshipName').each(function () {
                        var Relationship2each = $(this).text();
                        if (Relationship2each != null && typeof (Relationship2each) != "undefined" && Relationship2each != "")
                            Relationship2.push(Relationship2each)
                    });
                    RelationshipTypes.push([item.RelationshipType, item.Relationship1, Relationship2]);
                    options += '<option value="' + item.RelationshipType + '">' + item.RelationshipType + '</option>';
                });
                $("#ddlRelationshipType").append(options);
            }
        },
        error: function (data) {
            var options = "";
            var relationshipType = "Master Agreement-Sub-Agreement/SOW;Prime Contractor Agreement-Sub Contractor Agreement;Blanket Agreement-Order/Invoice;Original-Duplicate/Copy;Past Contract-Renegotiated Contract;Primary Contract-Amendment/Modification;Other";
            var relationship1 = "Master Agreement;Prime Contractor Agreement;Blanket Agreement;Original;Past Contract;Primary Contract;Other";
            var relationship2 = "Sub-Agreement/SOW;Sub Contractor Agreement;Order/Invoice;Duplicate/Copy;Renegotiated Contract;Amendment/Modification;Other";
            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/addrelationshipsettings?relationshiptypes=' + relationshipType + '&rel1=' + relationship1 + '&rel2=' + relationship2,
                type: 'PUT',
                dataType: 'json',
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                },
                cache: false,
                success: function (data) {
                    $(data).each(function (i, item) {

                        var Relationship2 = [];
                        //Get all the relationship2 names
                        $(item.Relationship2).find('RelationshipName').each(function () {
                            var Relationship2each = $(this).text();
                            if (Relationship2each != null && typeof (Relationship2each) != "undefined" && Relationship2each != "")
                                Relationship2.push(Relationship2each)
                        });
                        RelationshipTypes.push([item.RelationshipType, item.Relationship1, Relationship2]);
                        options += '<option value="' + item.RelationshipType + '">' + item.RelationshipType + '</option>';
                    });
                    $("#ddlRelationshipType").append(options);
                },
                error: function (person) {
                    RelationshipTypes = [];
                }
            });
        }
    });
}

function BindGeneralSettings() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/settings',
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            if (data.EnableMilestonesPipeline == "Yes") {
                $("#MilestoneEnable").show();
                if ((contractItem.ReadOnlyPermissions.indexOf(localStorage.UserName) > -1) && (!localStorage.UserType.indexOf("Global Contract Owner") >= 0)) {
                    $(".MilestoneEnableF").hide();
                }
                else {
                    $(".MilestoneEnableF").show();
                }
                //if (!isPermissionView) {

                //}
                //else {
                //    $(".MilestoneEnableF").hide();
                //    $("#MilestoneEnable").hide();
                //}
            }
            else {
                $(".MilestoneEnableF").hide();
                $("#MilestoneEnable").hide();
                if (contractItem.Status == "New") {
                    $("#topAction2").css("display", "none");
                }
            }
            if (data.EnableObligationsPipeline == "Yes") {
                //$(".FL_Obligations").show();
                var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
                vAccFeat = $.grep(veContractFeatures, function (n, i) {
                    return (n.RowKey == "2" && n.Status == "ON");
                });
                if (vAccFeat.length > 0) {
                    $(".FL_Obligations").css('display', '');

                }
                else {
                    $(".FL_Obligations").css('display', 'none');
                }
            }
            else {
                $(".FL_Obligations").css('display', 'none');
            }

        },
        error:
            function (data) {
            },
        complete: function (status) {

        }
    });
}

//manoj
function Getvaluebynameattr(nameattr) {
    var selectedmilestoneid = '';
    $.each($('input:checkbox[name="' + nameattr + '"]:checked'), function () {
        if (typeof (this) != 'undefined' && $.trim(this) != null) {
            if ($.trim(this.id) != "") {
                selectedmilestoneid += ";" + $.trim(this.id)
            }
        }
    });
    selectedmilestoneid = selectedmilestoneid != "" ? selectedmilestoneid.trim() : selectedmilestoneid;
    selectedmilestoneid = selectedmilestoneid.charAt(0) == ";" ? selectedmilestoneid.substr(1) : selectedmilestoneid;
    selectedmilestoneid = selectedmilestoneid != "" ? selectedmilestoneid.trim() : selectedmilestoneid;
    return selectedmilestoneid;
}

//Browse generic method(s) for multi choice field(s) in counterparty
function ViewGenericCounterparty(obj) {
    vGlobalObjForGeneric = obj;
    $("#loadingPage").fadeIn();
    $("#tblGeneric").empty();
    $("#tblGenericheader").empty();
    $("#liSelectedRU").empty();
    var art = '<tr><td><article style="width:100%; text-align:center;">';
    art += '<input id="txtSearchBoxGeneric" class="f_inpt cl width80" type="text" style="text-wrap:none" placeholder="Type to Search" />';
    art += '<img title="Search" style="cursor: pointer; position: relative; left: -40px; top:-2px;" onclick="javascript: SearchGenericCounterparty();" src="../Content/Images/search_over.png" />';
    art += "<a href='javascript:void(0)' class='linkPickerClear' onclick='ClearGenericCounterparty();'>Clear</a>";
    art += '</article></td></tr>';
    $("#tblGenericheader").html(art);
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterpartyfieldbydisplayname?fielddisplayname=' + obj.id,
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            var prevSelected = $("#" + obj.title).val();
            arrprevRU = [];
            $.each(prevSelected.split(";"), function () {
                arrprevRU.push($.trim(this));
            });
            var arrayChoiceValues = data[0].ChoiceValues.split("\n");
            myArrayRU = [];
            var obj1 = {
            };
            //manoj
            $(arrayChoiceValues).each(function (iChoiceValue, itemChoiceValue) {
                //manoj
                //for (var i = 0; i < arraysplitRU.length; i++) {
                if (!(itemChoiceValue in obj1)) {
                    if ($.trim(itemChoiceValue) != "") {
                        myArrayRU.push($.trim(itemChoiceValue));
                    }
                }
                obj1[$.trim(itemChoiceValue)] = true;
            });
            var resultfound = true;
            var myArraylength = myArrayRU.length;
            $("#browseGeneric").data('param_1', obj.title).dialog("option", "title", obj.id + " Picker");
            CreateReportUnitList(0);
            var vCount = myArraylength;

            $('#compact-paginationGeneric').pagination({
                items: vCount,
                itemsOnPage: 10,
                typeID: 'tblGeneric',
                cssStyle: 'compact-theme',
                listname: 'CounterPartyUnit'
            });
            $('#compact-paginationGeneric').css("display", "");
            $("#txtSearchBoxGeneric").autocomplete({
                source: myArrayRU,
                minLength: 1,
                focus: function (event, ui) {
                    return false;
                },
                select: function (evn, uidetails) {
                    $("#txtSearchBoxGeneric").val(uidetails.item.label);
                    SearchGenericCounterparty();
                }
            });
            $("#browseGeneric").dialog("open");
            $("#loadingPage").fadeOut();
        },
        error:
            function (data) {
                $("#tblGeneric").html('No item found.');
                $("#browseGeneric").data('param_1', obj.title).dialog("option", "title", obj.id + " Picker");
                $("#browseGeneric").dialog("open");
                $("#loadingPage").fadeOut();
            }
    });

    $('#txtSearchBoxGeneric').keypress(function (e) {
        if ($('#txtSearchBoxGeneric').val() != "") {
            if (e.keyCode == 13) {
                $(".ui-autocomplete").css('display', 'none');
                SearchGenericCounterparty();
            }
        }
    });
}
function ClearGenericCounterparty() {

    $('#loadGen').html('<img src="../Content/Images/icon/loading.gif">');
    $("#tblGeneric").find("tr:gt(0)").remove();
    $("#txtSearchBoxGeneric").val("")
    var searchKeyword = "";
    filtergenericCounterparty(searchKeyword);
}
function SearchGenericCounterparty() {

    $('#loadGen').html('<img src="../Content/Images/icon/loading.gif">Searching...');
    $("#tblGeneric").find("tr:gt(0)").remove();
    var searchKeyword = $("#txtSearchBoxGeneric").val();
    filtergenericCounterparty(searchKeyword);
}
function filtergenericCounterparty(searchKeyword) {
    $("#tblGeneric").empty();
    $("#liSelectedRU").empty();
    multipleChecksDocumentID = [];
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterpartyfieldbydisplayname?fielddisplayname=' + vGlobalObjForGeneric.id,
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            var prevSelected = $("#" + vGlobalObjForGeneric.title).val();
            arrprevRU = [];
            $.each(prevSelected.split(";"), function () {
                arrprevRU.push($.trim(this));
            });

            var arraysplitRU = [];
            myArrayRU = [];
            arraysplitRU = data[0].ChoiceValues.split("\n")
            var obj1 = {
            };
            for (var i = 0; i < arraysplitRU.length; i++) {
                if (!(arraysplitRU[i] in obj1)) {
                    if (arraysplitRU[i].trim() != "") {
                        if (arraysplitRU[i].toLowerCase().indexOf(searchKeyword.toLowerCase()) > -1 || searchKeyword == "") {
                            myArrayRU.push(arraysplitRU[i]);
                        }
                        obj1[arraysplitRU[i]] = true;
                    }
                }
            }
            var resultfound = true;
            var myArraylength = myArrayRU.length;
            CreateReportUnitList(0);
            var vCount = myArraylength;
            var vCount = $("#tblGeneric tr").length;
            $('#compact-paginationGeneric').pagination({
                items: vCount,
                itemsOnPage: 10,
                typeID: 'tblGeneric',
                cssStyle: 'compact-theme',
                listname: 'CounterPartyUnit'
            });
            $("#txtSearchBoxGeneric").autocomplete({
                source: arraysplitRU,
                minLength: 1,
                focus: function (event, ui) {
                    return false;
                },
                select: function (evn, uidetails) {
                    $("#txtSearchBoxGeneric").val(uidetails.item.label);
                    SearchGeneric();
                }
            });
            $('#loadGen').empty();
        },
        error:
            function (data) {

            }
    });
}
//Browse generic method(s) for multi choice field(s) in counterparty

function DisplayRequiredTab(tabname) {
    var passdispalyid = "";
    $(".cltabrequired").removeClass('pop_up__Acti');
    $('.cltblrequired').css("display", "none");
    if (typeof (tabname) != "undefined" && tabname != null && tabname != "") {
        $("#li" + tabname).addClass('pop_up__Acti');
        $("#tbl" + tabname).css("display", "");
        passdispalyid = 'tbl' + tabname;
    } else {
        $("#liRequired").addClass('pop_up__Acti');
        $("#tblRequired").css("display", "");
        passdispalyid = 'tblRequired';
    }
    allowtoupdate(passdispalyid);
}

function allowtoupdate(displayid) {
    if (displayid != "tblActivity") {
        var tbldata = document.getElementById(displayid).textContent;
        if (typeof (tbldata) != "undefined" && tbldata != null && tbldata != "" && tbldata != "No Required Metadata is missing." && tbldata != "No Required People(s) are missing." && tbldata != "No Required Document Template(s) and Document Type(s) are missing." && tbldata != "No Required Milestone(s) is missing." && tbldata != "No Pending Tasks.") {
            if (displayid == "tblPeoples") {
                if ($("#hdnPermission").val() == "Manage") {
                    $("#btnPendingUpdate").show();
                } else {
                    $("#btnPendingUpdate").hide();
                }
            }
            else if (displayid == "tblMilestones") {
                if (contractItem.IsDraft == "Yes") {
                    $("#btnPendingUpdate").hide();
                }
                else {
                    if ($("#hdnPermission").val() == "Manage" || $("#hdnPermission").val() == "Contribute") {
                        $("#btnPendingUpdate").show();
                    } else {
                        $("#btnPendingUpdate").hide();
                    }
                }
            }
            else {
                if ($("#hdnPermission").val() == "Manage" || $("#hdnPermission").val() == "Contribute") {
                    $("#btnPendingUpdate").show();
                } else {
                    $("#btnPendingUpdate").hide();
                }
            }
        } else {
            $("#btnPendingUpdate").hide();
        }
    } else {
        $("#btnPendingUpdate").hide();
    }
}

//$("#btnsumdocu").click(function () {
function generatecoversheet(objvalue) {
    $("#loadingPage").fadeIn();
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/summerytemplate?contractid=' + contractItem.RowKey + '&contracttype=' + encodeURIComponent(contractItem.ContractType),
        type: 'POST',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging, username: localStorage.UserName
        },
        cache: false,
        success: function (SumDocu) {
            //manoj
            coversheet_trigger(objvalue);
            //manoj
        },
        error: function (SumDocu) {
            $("#loadingPage").fadeOut();
        }
    });
}
//});

//for Hyperlink
function navigateurl(obj) {
    if (typeof obj != 'undefined' && obj != null && obj != "") {
        var objvalue = $("#" + obj).val();
        var navigationresult = "";
        if (typeof objvalue != 'undefined' && objvalue != null && objvalue != "") {
            if (objvalue.trim() != "") {
                var reqularexprn = /^(http:\/\/|https:\/\/)[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$/i
                if (reqularexprn.test(objvalue)) {
                    navigationresult = "Valid"
                } else {
                    navigationresult = "Notvalid"
                }
            } else {
                navigationresult = "WhiteSpace";
            }
        } else {
            navigationresult = "Empty";
        }
        switch (navigationresult) {
            case "Valid": {
                window.open(objvalue);
                break;
            }
            case "Notvalid": {
                swal("", "Enter valid URL.");
                break;
            }
            case "WhiteSpace": {
                swal("", "URL should not contain whitespace.");
                break;
            }
            case "Empty": {
                swal("", "URL should not be empty.");
                break;
            }
        }
    }
}
//for Hyperlink
//manoj

var currentNav = "";
var currentHref = "";
function openmismatched(obj) {
    //If support for large volume document feature is enabled
    //manoj
    var MisParentNode = obj.parentNode;
    //manoj
    if ($("#hdnnewdocumentfeature").text() == "Yes") {
        if ($("#tabSummary").hasClass("active")) {
            if ($(MisParentNode).find("a")[0].attributes["href"].value == "#") {
                currentNav = $(MisParentNode).find("a")[0].attributes["seqe"].value
            } else {
                currentHref = EditMismatchMetadata($(MisParentNode).find("a")[0].attributes["data-value"].value);
            }
        } else {
            if ($(MisParentNode).find("a")[0].attributes["href"].value == "#") {
                currentNav = $(MisParentNode).find("a")[0].attributes["seqe"].value
            } else {
                currentHref = EditMismatchMetadata($(MisParentNode).find("a")[0].attributes["data-value"].value);
            }
        }
    } else {
        if ($(MisParentNode).find("a")[0].attributes["href"].value == "#") {
            currentNav = $(MisParentNode).find("a")[0].attributes["seqe"].value
        } else {
            currentHref = EditMismatchMetadata($(MisParentNode).find("a")[0].attributes["data-value"].value);
        }
    }
    $.ajax({
        url: '/Documents/PostByteArrayToString',
        type: 'Post',
        cache: false,
        dataType: 'json',
        headers: {
            'AntiReqVerificationToken': $("#forgeryToken").val(), 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
        },
        data: {
            'byteArray': obj.attributes["data"].value
        },
        success: function (data) {
            var dataCollection = [];
            $(data).find('contentcontrol').each(function () {
                var vMetadata = $(this).find('metadata').text();
                var vContractValue = $(this).find('contractvalue').text();
                var vDocumentValue = $(this).find('documentvalue').text();
                var vIsIdentical = $(this).find('isidentical').text();
                var dataObject = {
                    Metadata: vMetadata, ContractValue: vContractValue,
                    DocumentValue: vDocumentValue, IsIdentical: vIsIdentical
                };
                dataCollection.push(dataObject);
            });

            var article = "";
            $('#mismatchedMetadatas').empty();
            $(dataCollection).each(function (idata, mismatchedData) {

                article += '<tr style="display: table-row;">';
                article += '<td><span>' + mismatchedData.Metadata + '</span></td>';
                if (mismatchedData.DocumentValue == "Click or tap here to enter text.") {
                    article += '<td><span></span></td>';
                }
                else {
                    article += '<td><span>' + mismatchedData.DocumentValue.replace(/Z25lSorv/g, "<br>") + '</span></td>';
                }

                article += '<td><b>' + mismatchedData.ContractValue.replace(/Z25lSorv/g, "<br>") + '</b></td>';
                if (mismatchedData.IsIdentical == "yes")
                    article += '<td><img src="/Content/Images/matched_yes.png" style="cursor:default;"></td>';
                else
                    article += '<td><img src="/Content/Images/matched_no.png" style="cursor:default;"></td>';
                article += '</tr>';

            });
            $('#mismatchedMetadatas').append(article);
            $('#dialogMismatched').dialog('open');
        },
        error: function (data) {
        }
    });
}

function BindRelatedContractsFilters() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/getcontracttypesforrelatedcontracts',
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, BusinessAreaLocation: $("#lblBusinessAreaPath").text(), UserID: localStorage.UserID
        },
        cache: false,
        success: function (ContractTypes) {
            $("#ddlRelConFilterContractType").empty();
            var control = "";
            var datalenght = ContractTypes.length;
            for (var i = 0; i < datalenght; i++) {
                var item = ContractTypes[i];
                control += "<option value=" + encodeURI(item.ContractType) + ">" + item.ContractType + "</option>";
            }

            $("#ddlRelConFilterContractType").append(control);
            $("#ddlRelConFilterContractType").chosen().trigger("chosen:updated");
        },
        error: function (ContractTypes) {

        }
    });
    //Performance Optimization
    //$.ajax({
    //    url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/settings',
    //    type: 'GET',
    //    dataType: 'json',
    //    headers: {
    //        'eContracts-ApiKey': localStorage.APIKey
    //    },
    //    cache: false,
    //    success: function (Settings) {
    //        var IsSystem = false;
    //        if (Settings.CounterpartyRelationshipScope.trim() == "System Level") {
    //            IsSystem = true;
    //        }
    //        $.ajax({
    //            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty',
    //            type: 'GET',
    //            dataType: 'json',
    //            "Content-Type": "application/json",
    //            headers: {
    //                'eContracts-ApiKey': localStorage.APIKey
    //            },
    //            cache: false,
    //            success: function (Counterparties) {
    //                $("#ddlRelConFilterCounterparty").empty();
    //                var control = "";
    //                var datalenght = Counterparties.length;
    //                for (var i = 0; i < datalenght; i++) {
    //                    var item = Counterparties[i];
    //                    if (item.Status == "Active") {
    //                        if (IsSystem) {
    //                            control += "<option value=" + encodeURI(item.CounterpartyName) + ">" + item.CounterpartyName + "</option>";
    //                        }
    //                        else {
    //                            if (typeof item.BusinessAreasPath != 'undefined' && item.BusinessAreasPath != null && item.BusinessAreasPath != "") {
    //                                if (item.IsGlobal == "No") {
    //                                    if (businessAreaPath != "") {
    //                                        var isRelCounterpartyFilterAdd = false;
    //                                        $.each(item.BusinessAreasPath.split(";"), function () {
    //                                            if (businessAreaPath == $.trim(this)) {
    //                                                isRelCounterpartyFilterAdd = true;
    //                                            }
    //                                        });
    //                                        if (isRelCounterpartyFilterAdd) {
    //                                            control += "<option value=" + encodeURI(item.CounterpartyName) + ">" + item.CounterpartyName + "</option>";
    //                                        }
    //                                    }
    //                                }
    //                                else {
    //                                    control += "<option value=" + encodeURI(item.CounterpartyName) + ">" + item.CounterpartyName + "</option>";
    //                                }
    //                            }
    //                            else {
    //                                control += "<option value=" + encodeURI(item.CounterpartyName) + ">" + item.CounterpartyName + "</option>";
    //                            }

    //                        }
    //                    }
    //                }

    //                $("#ddlRelConFilterCounterparty").append(control);
    //                $("#ddlRelConFilterCounterparty").chosen().trigger("chosen:updated");
    //            },
    //            error: function (Counterparties) {

    //            }
    //        });


    //    },
    //    error: function (Settings) {
    //        var IsSystem = true;
    //        $.ajax({
    //            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty',
    //            type: 'GET',
    //            dataType: 'json',
    //            "Content-Type": "application/json",
    //            headers: {
    //                'eContracts-ApiKey': localStorage.APIKey
    //            },
    //            cache: false,
    //            success: function (Counterparties) {
    //                $("#ddlRelConFilterCounterparty").empty();
    //                var control = "";
    //                var datalenght = Counterparties.length;
    //                for (var i = 0; i < datalenght; i++) {
    //                    var item = Counterparties[i];
    //                    if (item.Status == "Active") {
    //                        if (IsSystem) {
    //                            control += "<option value=" + encodeURI(item.CounterpartyName) + ">" + item.CounterpartyName + "</option>";
    //                        }
    //                        else {
    //                            if (typeof item.BusinessAreasPath != 'undefined' && item.BusinessAreasPath != null && item.BusinessAreasPath != "") {
    //                                if (item.IsGlobal == "No") {
    //                                    if (businessAreaPath != "") {
    //                                        var isRelCounterpartyFilterAdd = false;
    //                                        $.each(item.BusinessAreasPath.split(";"), function () {
    //                                            if (businessAreaPath == $.trim(this)) {
    //                                                isRelCounterpartyFilterAdd = true;
    //                                            }
    //                                        });
    //                                        if (isRelCounterpartyFilterAdd) {
    //                                            control += "<option value=" + encodeURI(item.CounterpartyName) + ">" + item.CounterpartyName + "</option>";
    //                                        }
    //                                    }
    //                                }
    //                                else {
    //                                    control += "<option value=" + encodeURI(item.CounterpartyName) + ">" + item.CounterpartyName + "</option>";
    //                                }
    //                            }
    //                            else {
    //                                control += "<option value=" + encodeURI(item.CounterpartyName) + ">" + item.CounterpartyName + "</option>";
    //                            }

    //                        }
    //                    }
    //                }

    //                $("#ddlRelConFilterCounterparty").append(control);
    //                $("#ddlRelConFilterCounterparty").chosen().trigger("chosen:updated");
    //            },
    //            error: function (Counterparties) {

    //            }
    //        });

    //    }
    //});
    //Performance Optimization
}

function clearRelConSelection() {
    $("#ddlRelConFilterContractType option:selected").prop('selected', false).trigger('chosen:updated');
    $("#ddlRelConFilterCounterparty option:selected").prop('selected', false).trigger('chosen:updated');
    ViewContracts();
}

function getGlobalContractOwners() {
    var gloablconowners = "";
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/usersbyusertype?usertype=Global Contract Owner',
        type: 'GET',
        dataType: 'json',
        cache: false,
        async: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (userdetails) {
            $(userdetails).each(function (i, item) {
                if (gloablconowners == "")
                    gloablconowners = item.UserName;
                else
                    gloablconowners += ";" + item.UserName;
            });
        },
        error:
            function (userdetails) {
            }
    });
    return gloablconowners;
}

function ViewLegalEntity() {
    LegalEntityFunc();
    $('#loadCP').html('<img src="../Content/Images/icon/loading.gif"> Working on it...');
}

function LegalEntityFunc() {
    $("#loadingPage").fadeIn();
    $("#liSelectedLegalEntity").empty();
    $('#loadGenLegalEntity').html('')
    var SelectedLEList = [];
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/legalentities',
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (data) {
            LeagalEntity = data;
            //   CounterPartyArrayprev = [];
            $.each($('#CompanyProfile').val().replace("; ", ";").split(";"), function () {
                if (SelectedLEList.indexOf($.trim(this)) == -1)
                    SelectedLEList.push($.trim(this));
            });

            var myLEArrayList = [];
            var obj1 = {
            };

            $(data).each(function (idata, itemdata) {
                myLEArrayList.push(itemdata);
            });
            //manoj

            var article = '<thead><tr><th style="height:24px"><input id="selectallLE" onclick="funselectallLE(this);" type="checkbox"/> Legal Entity</th><th style="height:24px">Default Currency</th><th>Authorized Signatory(ies)</th></tr></thead><tbody>';
            //manoj 
            var countryvalue = ''
            $(myLEArrayList).each(function (iArray, itemArray) {
                article += '<tr><td>';
                if (SelectedLEList.length > 0) {
                    if (SelectedLEList.indexOf(itemArray.LegalEntityName.trim()) > -1) {
                        article += '<input id="' + itemArray.RowKey + '" type="checkbox" name="CompanyProfile" onclick="checkMultipleDocumentsLE(this);" checked class="css1-checkbox" value="' + escape(itemArray.LegalEntityName.trim()) + '" />';
                    }
                    else {
                        article += '<input id="' + itemArray.RowKey + '" type="checkbox" name="CompanyProfile" onclick="checkMultipleDocumentsLE(this);"  class="css1-checkbox" value="' + escape(itemArray.LegalEntityName.trim()) + '" />';
                    }
                }
                else {
                    article += '<input id="' + itemArray.RowKey + '" type="checkbox" name="CompanyProfile" onclick="checkMultipleDocumentsLE(this);"  class="css1-checkbox" value="' + escape(itemArray.LegalEntityName.trim()) + '" />';
                }
                article += '<label for="CP' + itemArray.RowKey + '" class="css1-label" title="' + escape(itemArray.LegalEntityName.trim()) + '"  onmouseover="UnescapeNameMouseOver(this)" style="display: inline;">' + itemArray.LegalEntityName.trim() + '</label></td>';
                article += '<td>' + itemArray.DefaultCurrency + '</td>';
                AuthorizedSignatory = itemArray.AuthorizedSignatory != "" ? itemArray.AuthorizedSignatory : "-"
                article += '<td>' + AuthorizedSignatory + '</td>';
                article += '</tr>';
            });
            //manoj
            $("#listLEWrapper").html('<table id="tblLE" class="f_list"></table>');
            $("#tblLE").html(article);

            _alphabetSearch = '';
            $("#tblLE").DataTable({
                "columnDefs": [
                                { "orderable": false, 'targets': "_all" }
                ],
                "fnDrawCallback": function () {
                    eventFired('CompanyProfile', 'selectallLE', 'tblLE');
                },
                "iDisplayLength": 20,
                "searchHighlight": true,
                "pagingType": "full_numbers",
                //"scrollY": "420px",
                //"scrollCollapse": true,
            });
            alphabeticselection('tblLE');
            article = '';
            //manoj
            if ($('input:checkbox[name="CompanyProfile"]:checked').length == $('input:checkbox[name="CompanyProfile"]').length && $('input:checkbox[name="CompanyProfile"]:checked').length != 0) {
                $("#selectallLE").attr('checked', true);
            } else {
                $("#selectallLE").attr('checked', false);
            }
            $.each(SelectedLEList, function () {
                if (typeof ($.trim(this)) != 'undefined' && $.trim(this) != null && $.trim(this) != "") {
                    $('#liSelectedLegalEntity').append('<span style="font-size:13px;">' + $.trim(this) + '<img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveSelectedLE(this);" style="float:right" /></span>');
                }
            });
            // Find and remove item from an array
            $("#browseLegalEntity").dialog("option", "title", "Legal Entity Picker");
            $("#browseLegalEntity").dialog("open");
            $("#loadingPage").fadeOut();
        },
        error: function () {
            $("#listLEWrapper").html('<p style="color: red; margin-top: 50px; margin-bottom: 10px; margin-left: 10px;">No items found.</p>');
            $("#browseLegalEntity").dialog("option", "title", "Legal Entity Picker");
            $("#browseLegalEntity").dialog("open");
            $("#loadingPage").fadeOut();
        }
    });
}

function funselectallLE(obj) {
    if (obj.checked) { // check select status  
        $('input:checkbox[name=CompanyProfile]').attr('checked', true);
    } else {
        $('input:checkbox[name=CompanyProfile]').attr('checked', false);
    }
    checkMultipleDocumentsLE("");
}

function checkMultipleDocumentsLE(object) {
    //manoj
    var arrselectedLE = [];
    $.each($('#liSelectedLegalEntity').children(), function () {
        if (arrselectedLE.indexOf($.trim(this.textContent)) == -1)
            arrselectedLE.push($.trim(this.textContent));
    });
    $('#liSelectedLegalEntity').empty();

    var tablebind = $('#tblLE').DataTable();
    $.each($('input:checkbox[name="CompanyProfile"]', tablebind.rows().nodes()), function () {
        if (typeof ($.trim(this)) != 'undefined' && $.trim(this) != null) {
            if ($.trim(this.value) != "") {
                if (this.checked) {
                    if (arrselectedLE.indexOf(unescape($.trim(this.value))) == -1) {
                        arrselectedLE.push(unescape($.trim(this.value)))
                    }
                } else if (arrselectedLE.indexOf(unescape($.trim(this.value))) > -1) {
                    arrselectedLE.splice(arrselectedLE.indexOf(unescape($.trim(this.value))), 1);
                }
            }
        }
    });
    arrselectedLE.sort();
    $.each(arrselectedLE, function () {
        $('#liSelectedLegalEntity').append('<span style="font-size:13px;">' + $.trim(this) + '<img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveSelectedLE(this);" style="float:right" /></span>');
    });
    arrselectedLE = [];

    //manoj
    if ($('input:checkbox[name="CompanyProfile"]:checked').length == $('input:checkbox[name="CompanyProfile"]').length && $('input:checkbox[name="CompanyProfile"]:checked').length != 0) {
        $("#selectallLE").attr('checked', true);
    } else {
        $("#selectallLE").attr('checked', false);
    }

    try {
        hideAllMenuAndStopPro(event);
    }
    catch (ex) {

    }
}

function liRemoveSelectedLE(obj) {
    var child = obj.parentNode;
    var tablebind = $('#tblLE').DataTable();
    $.each($('input:checkbox[name="CompanyProfile"]:checked', tablebind.rows().nodes()), function () {
        if (typeof ($.trim(this)) != 'undefined' && $.trim(this) != null) {
            if (unescape($.trim(this.value)) == child.textContent) {
                this.checked = false;
            }
        }
    });
    child.parentNode.removeChild(child);

    if ($('input:checkbox[name="CompanyProfile"]:checked').length == $('input:checkbox[name="CompanyProfile"]').length && $('input:checkbox[name="CompanyProfile"]:checked').length != 0) {
        $("#selectallLE").attr('checked', true);
    } else {
        $("#selectallLE").attr('checked', false);
    }

}

function AddLE() {
    var arrselectedLE = [];
    $.each($('#liSelectedLegalEntity').children(), function () {
        if (typeof ($.trim(this)) != 'undefined' && $.trim(this) != null && $.trim(this.textContent) != "") {
            if (arrselectedLE.indexOf($.trim(this.textContent)) == -1)
                arrselectedLE.push($.trim(this.textContent));
        }
    });
    if (arrselectedLE.length > 0) {
        $("#CompanyProfile").val(arrselectedLE.join("; "));
        // Removetextvalues();

    } else {
        $("#CompanyProfile").val('');
        // Removetextvalues();

    }
    arrselectedLE = [];
    $("#browseLegalEntity").dialog("close");
    // ClearAddCounterparty();
    //  $('#chkCounterpartyNotInList').prop('checked', false);

    $('#dvCPExistingLegalEntity').css("display", "");
}

function GetFeaturesInDetailPage() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/feature',
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        async: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            localStorage.setItem("eContractFeatures", JSON.stringify(data));
            var vAccFeat = $.grep(data, function (n, i) {
                return (n.RowKey == "29" && n.Status == "ON");
            });
            if (vAccFeat.length > 0) {
                if (typeof localStorage.CompanyBrandingLogo === "undefined") {
                    $.ajax({
                        url: '/Accounts/GetAccountSetting?accountid=' + localStorage.AccountID,
                        type: 'GET',
                        dataType: 'json',
                        cache: false,
                        success: function (AccountSetting) {
                            if (AccountSetting.CompanyLogo != "") {
                                localStorage.setItem("CompanyBrandingLogo", AccountSetting.CompanyLogo);
                                $(".FL_CompanyBrandingLogo").attr("src", AccountSetting.CompanyLogo);
                                $(".FL_CompanyBrandingLogo").css('display', '');
                            }
                            else {
                                $(".FL_CompanyBrandingLogo").css('display', '');
                                localStorage.setItem("CompanyBrandingLogo", '/Content/Images/logo.png');
                            }
                        }
                    });
                }
                else {
                    if (localStorage.CompanyBrandingLogo != "/Content/Images/logo.png") {
                        $(".FL_CompanyBrandingLogo").attr("src", localStorage.CompanyBrandingLogo);
                        $(".FL_CompanyBrandingLogo").css('display', '');
                    }
                    else {
                        $(".FL_CompanyBrandingLogo").css('display', '');
                    }

                }
            }
            else {
                $(".FL_CompanyBrandingLogo").css('display', '');
            }
        },
        error: function (data) {

        }
    });
}



function ViewCounterparties() {
    var baname = "";

    //if (typeof localStorage.GlobalBusinessAreaLocation != "undefined" && localStorage.GlobalBusinessAreaLocation != "" && localStorage.GlobalBusinessAreaLocation != "All") {
    //    baname = localStorage.GlobalBusinessAreaLocation;
    //}
    $("#tblPopupCounterparties").html('');
    if ($.trim($("#txtSearchBoxCounterparties").val()) != "") {
        $('#loadCounterparties').html('<img src="../Content/Images/icon/loading.gif"> Searching...');
    } else {
        $('#loadCounterparties').html('<img src="../Content/Images/icon/loading.gif">');
    }
    var arrcounterpartyIDarry = [];
    var arrcounterpartyNamearry = [];
    var arrcounterpartyRelationshipTypearr = [];
    var relatedCounterpartiesTag = [];
    //manoj
    var strBusinessAreaOwnerof = "";
    if ($('input[type="radio"][name=IsGlobal]:checked').val() == "No") {
        if ($("#txtOwnerofBusinessArea").val() != "") {
            if ($("#txtOwnerofBusinessArea").val() != "") {
                for (var i = 0; i < selectedBusinessAreaID11.length; i++) {

                    var rowKPath = jQuery.grep(BusinessAreaPathRowKey, function (a) {
                        return a[1] === selectedBusinessAreaID11[i][1];
                    });
                    if (rowKPath != null && typeof (rowKPath) != "undefined" && rowKPath.length != 0)
                        strBusinessAreaOwnerof += rowKPath[0][0] + "; ";
                }

                strBusinessAreaOwnerof = strBusinessAreaOwnerof.slice(0, -1)
            }
        } else {

            strBusinessAreaOwnerof = "";
        }
    }
    else {
        $("#txtOwnerofBusinessArea").val('');
        strBusinessAreaOwnerof = "";
    }
    //manoj

    var vURL = vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty/relatedcounterpartypicker?searchkeyword=' + encodeURIComponent($("#txtSearchBoxCounterparties").val()) + '&customquery=&sortbyfield=Timestamp&orderby=DESC';
    $.ajax({
        url: vURL,
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, BusinessAreaLocation: strBusinessAreaOwnerof
        },
        cache: false,
        success: function (data) {
            $("#tblPopupCounterparties").html('');
            var datalenght = data.length;
            var counterpartyTags = [];
            //var prevSelected = $("#RelatedCounterparties").val();
            //manoj
            var prevSelected = [];
            $.each(curRelatedCounterparities, function (ipvr, itempvr) {
                prevSelected.push($.trim(itempvr.CounterpartyName));
            });
            var arr = prevSelected;
            //manoj
            //$.each(prevSelected, function () {
            //    arr.push($.trim(this));
            //});
            for (var i = 0; i < datalenght - 1; i++) {
                var item = data[i];
                if ($("#txtCounterpartyID").val().indexOf(item.RowKey) > -1) { }
                else {

                    //if (arr.length > 0) {
                    //    if (arrRelatedCounterparities.length > 0) {
                    //        $.each(arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RelatedCounterpartyID.split(";"), function () {
                    //            arrcounterpartyIDarry.push($.trim(this));
                    //        });
                    //        $.each(arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RelatedCounterpartyTitle.split(";"), function () {
                    //            arrcounterpartyNamearry.push($.trim(this));
                    //        });
                    //        $.each(arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RelatedRelationshipType.split(";"), function () {
                    //            arrcounterpartyRelationshipTypearr.push($.trim(this));
                    //        });
                    //        if (arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RootRelationshipType != "") {
                    //            $("#ddlRelationshipTypeCounterparties").val(arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RootRelationshipType);
                    //        }
                    //        if (arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RelationshipType != "") {
                    //            $("#ddlRelationshipTypeParentcounterparties").val(arrRelatedCounterparities[arrRelatedCounterparities.length - 1].RelationshipType);
                    //        }
                    //    }
                    //}
                    if (arr.indexOf(item.CounterpartyName.trim()) >= 0) {
                        var article = '<tr><td>';
                        article += '<input id="rel' + item.RowKey + '" type="checkbox" name="RelatedCounterparty" checked class="css1-checkbox" value="' + escape(item.CounterpartyName) + '"  onchange="javascript:currentrelatedcounterparty(this);" />';
                        article += '<label for="' + item.RowKey + '" class="css1-label">' + item.CounterpartyName + '</label>';
                        article += '</td>';
                        article += '<td class="ddl"><select class="f_inpt width90">';
                        var jsLang = $("#ddlRelationshipTypeParentcounterparties option:selected").val();
                        switch (jsLang) {
                            case 'Parent':
                                article += '<option value="Subsidiary" selected>Subsidiary</option>';
                                break;
                            case 'Subsidiary':
                                article += '<option value="Parent" selected>Parent</option>';
                                break;
                            case 'Supplier':
                                article += '<option value="Customer" selected>Customer</option>';
                                break;
                            case 'Customer':
                                article += '<option value="Supplier" selected>Supplier</option>';
                                break;
                            case 'Prime Contractor':
                                article += '<option value="Sub Contractor" selected>Sub Contractor</option>';
                                break;
                            case 'Sub Contractor':
                                article += '<option value="Prime Contractor" selected>Prime Contractor</option>';
                                break;
                            case 'Dissolved on Merger':
                                article += '<option value="Merged into" selected>Merged into</option>';
                                break;
                            case 'Merged into':
                                article += '<option value="Dissolved on Merger" selected>Dissolved on Merger</option>';
                                break;
                            case 'Other':
                                article += '<option value="Other" selected>Other</option>';
                                break;
                        }
                        article += '</select><td></tr>'
                        $("#tblPopupCounterparties").append(article);
                        relatedCounterpartiesTag.push(item.CounterpartyName);
                    }
                    else {
                        var article = '<tr><td>';
                        article += '<input id="rel' + item.RowKey + '" type="checkbox" name="RelatedCounterparty" class="css1-checkbox" value="' + escape(item.CounterpartyName) + '"  onchange="javascript:currentrelatedcounterparty(this);" />';
                        article += '<label for="' + item.RowKey + '" class="css1-label">' + item.CounterpartyName + '</label>';
                        article += '</td>';
                        article += '<td class="ddl"><td></tr>'
                        $("#tblPopupCounterparties").append(article);
                    }

                    //$("#rel" + item.RowKey).click(function () {
                    $("input[id='rel" + item.RowKey + "'][name='RelatedCounterparty']:checkbox").click(function () {
                        if (this.checked) {
                            var vOptions = "<select class='f_inpt width90' onchange='showallspans(this)'>";
                            var jsLang = $("#ddlRelationshipTypeParentcounterparties option:selected").val();
                            switch (jsLang) {
                                case 'Parent':
                                    vOptions += '<option value="Subsidiary">Subsidiary</option>';
                                    break;
                                case 'Subsidiary':
                                    vOptions += '<option value="Parent">Parent</option>';
                                    break;
                                case 'Supplier':
                                    vOptions += '<option value="Customer">Customer</option>';
                                    break;
                                case 'Customer':
                                    vOptions += '<option value="Supplier">Supplier</option>';
                                    break;
                                case 'Prime Contractor':
                                    vOptions += '<option value="Sub Contractor">Sub Contractor</option>';
                                    break;
                                case 'Sub Contractor':
                                    vOptions += '<option value="Prime Contractor">Prime Contractor</option>';
                                    break;
                                case 'Dissolved on Merger':
                                    vOptions += '<option value="Merged into">Merged into</option>';
                                    break;
                                case 'Merged into':
                                    vOptions += '<option value="Dissolved on Merger">Dissolved on Merger</option>';
                                    break;
                                case 'Other':
                                    vOptions += '<option value="Other">Other</option>';
                                    break;
                            }

                            vOptions += '</select>';
                            $(this).parent().parent().children(".ddl").append(vOptions);

                        } else {

                            $(this).parent().parent().children(".ddl").empty();
                        }
                        showallspans(this);
                    });
                }
            }
            var vCount = $("#tblPopupCounterparties tr").length;
            if (vCount != 0) {
                $('#loadCounterparties').html('');
                $('#compact-paginationRelatedCounterparties').css('display', '');
                $('#compact-paginationRelatedCounterparties').pagination({
                    items: vCount,
                    itemsOnPage: 10,
                    currentPage: 1,
                    cssStyle: 'compact-theme',
                    type: 'tdbody',
                    row: 'tr',
                    typeID: 'tblPopupCounterparties'
                    //items: vCount,
                    //itemsOnPage: 10,
                    //typeID: 'tblPopupCounterparties',
                    //cssStyle: 'compact-theme'
                });
            } else {
                $('#loadCounterparties').html('<p style="margin-left: 20px;">No items found.</p>');
                $('#compact-paginationRelatedCounterparties').css('display', 'none');
            }
        },
        error: function () {
            $('#compact-paginationRelatedCounterparties').css('display', 'none');
            $('#loadCounterparties').html('<p style="margin-left: 20px;">No items found.</p>');
        }
    });
}

function currentrelatedcounterparty(obj) {
    if (requiredValidator('popupCounterparties', false)) {
        if (curRelatedCounterparities.length > 0) {
            var curRelCuntprty = $.grep(curRelatedCounterparities, function (ncurRelatedCounterparities, icurRelatedCounterparities) {
                return (ncurRelatedCounterparities.RowKey != obj.id);
            });
            curRelatedCounterparities = curRelCuntprty;
        }
        if (obj != "" && obj.checked == true) {
            curRelatedCounterparities.push(
                {
                    RowKey: obj.id,
                    CounterpartyName: unescape(obj.value),
                    ChildRelationship: $(obj).parent().parent().children(".ddl").find('option:selected').text()
                });
        }
        //Add the List
        addselectedcounterparties();
        //Add the List
        //}
    }
    else {
        $("#" + obj.id).prop('checked', false);
        $("#" + obj.id).parent().parent().children(".ddl").empty();
    }
}

function changecounterpartychildrelationship(obj) {
    if (curRelatedCounterparities.length > 0) {
        var curRelCuntprty = $.grep(curRelatedCounterparities, function (ncurRelatedCounterparities, icurRelatedCounterparities) {
            return (ncurRelatedCounterparities.ChildRelationship = obj);
        });
        curRelatedCounterparities = curRelCuntprty;
        //Add the List
        addselectedcounterparties();
        //Add the List
    }
}

function addselectedcounterparties() {
    var SelectedCounterpartiesHTML = "";
    $(curRelatedCounterparities).each(function (i, item) {
        SelectedCounterpartiesHTML += '<span style="font-size:11px;" id=' + item.RowKey + '>' + item.CounterpartyName + ' (' + item.ChildRelationship + ') <img src="/Content/Images/close-quick.png" onclick="javascript:liRemoveCounterPartyRelationshipselected(this);" style="float:right" /></span>'
    });
    $('#liSelectedCounterparties').html(SelectedCounterpartiesHTML);
}

//function liRemoveCounterPartyRelationshipselected(obj) {
//    var child = obj.parentNode;
//    var relatedcounterpartyidtodelete = child.id;
//    $("input[id='" + child.id + "'][name='RelatedCounterparty']:checkbox").prop('checked', false);
//    $("input[id='" + child.id + "'][name='RelatedCounterparty']:checkbox").trigger("onchange");
//}

function liRemoveCounterPartyRelationshipselected(obj) {
    var child = obj.parentNode;
    var relatedcounterpartyidtodelete = child.id;
    var allow = false;
    try {
        if (typeof ($("input[id='" + child.id + "'][name='RelatedCounterparty']:checkbox")) != 'undefined') {
            if ($("input[id='" + child.id + "'][name='RelatedCounterparty']:checkbox").length != 0) {
                $("input[id='" + child.id + "'][name='RelatedCounterparty']:checkbox").prop('checked', false);
                var dsfdsfsd = $("input[id='" + child.id + "'][name='RelatedCounterparty']:checkbox");
                $(dsfdsfsd).parent().parent().children(".ddl").empty();
                $("input[id='" + child.id + "'][name='RelatedCounterparty']:checkbox").trigger("onchange");
            } else {
                allow = true;
            }
        } else {
            allow = true;
        }
    } catch (excp) {
        allow = true;
    }
    if (allow) {
        if (curRelatedCounterparities.length > 0) {
            var curRelCuntprty = $.grep(curRelatedCounterparities, function (ncurRelatedCounterparities, icurRelatedCounterparities) {
                return (ncurRelatedCounterparities.RowKey != child.id);
            });
            curRelatedCounterparities = curRelCuntprty;
        }
        //Add the List
        addselectedcounterparties();
        //Add the List
    }
}
//manoj

function AddProject() {
    if ($('input[type="radio"][name=PickProject]:checked').val() == 'Existing') {
        var vProjects = "";
        var vProjectName = "";
        var arrTasks = [];
        $('input:checkbox[name="Project"]:checked').each(function () {
            vProjectName = this.value;
            if (vProjects == "") {
                vProjects = this.value;
                projectManager = this.nextSibling.nextSibling.value;

                $.each($('#ProjectTask').val().split(";"), function () {
                    if (vProjectName == $.trim(this).split(':')[0]) {
                        arrTasks.push($.trim(this));
                    }
                });
            }
            else {
                vProjects += "; " + this.value;
                projectManager += ";" + this.nextSibling.nextSibling.value;
                $.each($('#ProjectTask').val().split(";"), function () {
                    if (vProjectName == $.trim(this).split(':')[0]) {
                        arrTasks.push($.trim(this));
                    }
                });
            }
        });
        $('#ProjectTask').val(arrTasks.join("; "));

        if (vProjects != "") {
            $('#Project').val(vProjects);
            return true;
        } else {
            //alert('No project has been selected.');
            $('#Project').val('');
            swal("", "No project has been selected.");
            return false;
        }
    }
    // else { SaveProject(); }
}

function AddProjectTask() {
    var vProjectTasks = "";
    $('input:checkbox[name="ProjectTask"]:checked').each(function () {
        if (vProjectTasks == "") {
            vProjectTasks = this.value;
        }
        else {
            vProjectTasks += "; " + this.value;
        }
    });

    if (vProjectTasks != "") {
        $('#ProjectTask').val(vProjectTasks);
        return true;
    } else {
        //alert('No task has been selected.');
        swal("", "No task has been selected.");
        return false;
    }
}

var removeLastChar = function (value, char) {
    var lastChar = value.slice(-1);
    if (lastChar == char) {
        value = value.slice(0, -1);
    }
    return value;
}

function CreateRelatedContractsList(page) {
    $("#tblPopupContracts").empty();
    relatedContractsTag = [];
    var startIndex = page * 10;
    var endIndex = startIndex + 10;
    if (endIndex > listRelatedContracts.length) endIndex = listRelatedContracts.length;
    //$("#spResult").html((startIndex + 1) + '&nbsp;to&nbsp;' + endIndex + '&nbsp;of&nbsp;' + listRelatedContracts.length);
    for (var i = startIndex; i < endIndex; i++) {
        var item = listRelatedContracts[i];
        if ($("#hdnRelatedContracts").text().indexOf(item.RowKey) > -1) {
        }
        else {
            if (item.RowKey != getParameterByName("ContractID")) {
                var article = '<tr><td class="width65">';
                if (arrRelatedcontractRowkey.indexOf(item.RowKey.trim()) >= 0) {
                    article += '<input id="' + item.RowKey + '" type="checkbox" style="margin-left: 40px;" name="RelatedContract" onchange="javascript:collectrelatedcontractrowkey(this);" class="css1-checkbox" value="' + item.ContractTitle + '" checked />';
                } else {
                    article += '<input id="' + item.RowKey + '" type="checkbox" style="margin-left: 40px;" name="RelatedContract" onchange="javascript:collectrelatedcontractrowkey(this);" class="css1-checkbox" value="' + item.ContractTitle + '" />';
                }
                //article += '<input id="' + item.RowKey + '" type="checkbox" style="margin-left: 40px;" name="RelatedContract" onchange="javascript:collectrelatedcontractrowkey(this);" class="css1-checkbox" value="' + item.ContractTitle + '" />';
                article += '<label for="' + item.RowKey + '" class="css1-label"><a href="/Contracts/ContractDetails?ContractID=' + item.RowKey + '" target="_blank">' + item.ContractTitle + '</a></label>';    //ENH487 Customer inhanc
                article += '</td>';
                article += '<td ><label class="">' + item.ContractType + '</label></td>'
                article += '<td ><label class="">'
                if (item.Counterparty != null && item.Counterparty != "") {
                    article += item.Counterparty
                } else {
                    article += "-"
                }
                article += '</label></td><td ><label class="" style="word-break: break-all;">'
                if (item.ContractNumber != null && item.ContractNumber != "") {
                    article += item.ContractNumber
                } else {
                    article += "-"
                }
                article += '</label></td><td <label class="">' + item.Status + '</label></td>'
                //manoj
                if (arrRelatedcontractRowkey.indexOf(item.RowKey.trim()) >= 0) {
                    var indexvaluetake = vRelatedContractTitlearr.indexOf(item.ContractTitle.trim());
                    var relationtypefetch = RelatedRelationshipTypearr[indexvaluetake];
                    article += "<td class='ddl'><select class='f_inpt width90' onchange='showallspans(this)'>";
                    var jsLang = $("#ddlRelationshipTypeParent option:selected").val();
                    var jsLangType = $("#ddlRelationshipType option:selected").val();
                    var rela1 = jQuery.grep(RelationshipTypes, function (a) {
                        return (a[1] === jsLang && a[0] === jsLangType);
                    });
                    var rela2 = jQuery.grep(RelationshipTypes, function (a) {
                        return (a[2].indexOf(jsLang) > -1 && a[0] === jsLangType);
                    });
                    if (rela1 != null && typeof (rela1) != "undefined" && rela1.length != 0) {
                        var Relationship = rela1[0];
                        $.each(Relationship[2], function (index, value) {
                            var optRel2 = value.toString();
                            article += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                        })
                        if ($(Relationship[2]).length == 0) {
                            var optRel2 = Relationship[1].toString();
                            article += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                        }
                    }
                    else if (rela2 != null && typeof (rela2) != "undefined" && rela2.length != 0) {
                        var Relationship = rela2[0];
                        article += "<option value='" + Relationship[1] + "'>" + Relationship[1] + "</option>";
                    }
                    else {
                        switch (jsLang) {
                            case 'Master Agreement':
                                if (relationtypefetch == "Sub-Agreement") {
                                    article += '<option value="Sub-Agreement" selected>Sub-Agreement</option>';
                                    article += '<option value="SOW">SOW</option>';
                                }
                                else {
                                    article += '<option value="Sub-Agreement" >Sub-Agreement</option>';
                                    article += '<option value="SOW" selected>SOW</option>';
                                }
                                break;
                            case 'Sub-Agreement':
                            case 'SOW':
                                article += '<option value="Master Agreement">Master Agreement</option>';
                                break;
                            case 'Prime Contractor Agreement':
                                article += '<option value="Sub Contractor Agreement">Sub Contractor Agreement</option>';
                                break;
                            case 'Sub Contractor Agreement':
                                article += '<option value="Prime Contractor Agreement">Prime Contractor Agreement</option>';
                                break;
                            case 'Blanket Agreement':
                                if (relationtypefetch == "Order") {
                                    article += '<option value="Order" selected>Order</option>';
                                    article += '<option value="Invoice">Invoice</option>';
                                }
                                else {
                                    article += '<option value="Order">Order</option>';
                                    article += '<option value="Invoice" selected>Invoice</option>';
                                }

                                break;
                            case 'Order':
                            case 'Invoice':
                                article += '<option value="Blanket Agreement">Blanket Agreement</option>';
                                break;
                            case 'Original':
                                if (relationtypefetch == "Duplicate") {
                                    article += '<option value="Duplicate" selected>Duplicate</option>';
                                    article += '<option value="Copy">Copy</option>';
                                }
                                else {
                                    article += '<option value="Duplicate">Duplicate</option>';
                                    article += '<option value="Copy" selected>Copy</option>';
                                }
                                break;
                            case 'Duplicate':
                            case 'Copy':
                                article += '<option value="Original">Original</option>';
                                break;
                            case 'Past Contract':
                                article += '<option value="Renegotiated Contract">Renegotiated Contract</option>';
                                break;
                            case 'Renegotiated Contract':
                                article += '<option value="Past Contract">Past Contract</option>';
                                break;
                            case 'Primary Contract':
                                if (relationtypefetch == "Amendment") {
                                    article += '<option value="Amendment" selected>Amendment</option>';
                                    article += '<option value="Modification">Modification</option>';
                                }
                                else {
                                    article += '<option value="Amendment">Amendment</option>';
                                    article += '<option value="Modification" selected>Modification</option>';
                                }
                                break;
                            case 'Amendment':
                            case 'Modification':
                                article += '<option value="Primary Contract">Primary Contract</option>';
                                break;
                            case 'Other':
                                article += '<option value="Other">Other</option>';
                                break;
                        }
                    }
                    article += '</select></td></tr>';
                }
                else {
                    article += '<td class="ddl"></td></tr>'
                }
                $("#tblPopupContracts").append(article);
                relatedContractsTag.push(item.ContractTitle.trim());
                //manoj
                //article += '<td class="ddl"></td>'
                //article += '  </tr>'
                //$("#tblPopupContracts").append(article);
                //relatedContractsTag.push(item.ContractTitle.trim());
            }
        }
        $("#" + item.RowKey).click(function () {
            if (this.checked) {
                if ($(this).parent().parent().children(".ddl").find('option').length == 0) {
                    var vOptions = "<select class='f_inpt width90' onchange='showallspans(this)'>";
                    var jsLang = $("#ddlRelationshipTypeParent option:selected").val();
                    var jsLangType = $("#ddlRelationshipType option:selected").val();
                    $("#relatedrole").html("Relationship");
                    var rela1 = jQuery.grep(RelationshipTypes, function (a) {
                        return (a[1] === jsLang && a[0] === jsLangType);
                    });
                    var rela2 = jQuery.grep(RelationshipTypes, function (a) {
                        return (a[2].indexOf(jsLang) > -1 && a[0] === jsLangType);
                    });
                    if (rela1 != null && typeof (rela1) != "undefined" && rela1.length != 0) {
                        var Relationship = rela1[0];
                        $.each(Relationship[2], function (index, value) {
                            var optRel2 = value.toString();
                            vOptions += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                        })

                        if ($(Relationship[2]).length == 0) {
                            var optRel2 = Relationship[1].toString();

                            vOptions += "<option value='" + optRel2 + "'>" + optRel2 + "</option>";
                        }
                    }
                    else if (rela2 != null && typeof (rela2) != "undefined" && rela2.length != 0) {
                        var Relationship = rela2[0];
                        vOptions += "<option value='" + Relationship[1] + "'>" + Relationship[1] + "</option>";
                    }
                    else {
                        switch (jsLang) {
                            case 'Master Agreement':
                                vOptions += '<option value="Sub-Agreement">Sub-Agreement</option>';
                                vOptions += '<option value="SOW">SOW</option>';
                                break;
                            case 'Sub-Agreement':
                            case 'SOW':
                                vOptions += '<option value="Master Agreement">Master Agreement</option>';
                                break;
                            case 'Prime Contractor Agreement':
                                vOptions += '<option value="Sub Contractor Agreement">Sub Contractor Agreement</option>';
                                break;
                            case 'Sub Contractor Agreement':
                                vOptions += '<option value="Prime Contractor Agreement">Prime Contractor Agreement</option>';
                                break;
                            case 'Blanket Agreement':
                                vOptions += '<option value="Order">Order</option>';
                                vOptions += '<option value="Invoice">Invoice</option>';
                                break;
                            case 'Order':
                            case 'Invoice':
                                vOptions += '<option value="Blanket Agreement">Blanket Agreement</option>';
                                break;
                            case 'Original':
                                vOptions += '<option value="Duplicate">Duplicate</option>';
                                vOptions += '<option value="Copy">Copy</option>';
                                break;
                            case 'Duplicate':
                            case 'Copy':
                                vOptions += '<option value="Original">Original</option>';
                                break;
                            case 'Past Contract':
                                vOptions += '<option value="Renegotiated Contract">Renegotiated Contract</option>';
                                break;
                            case 'Renegotiated Contract':
                                vOptions += '<option value="Past Contract">Past Contract</option>';
                                break;
                            case 'Primary Contract':
                                vOptions += '<option value="Amendment">Amendment</option>';
                                vOptions += '<option value="Modification">Modification</option>';
                                break;
                            case 'Amendment':
                            case 'Modification':
                                vOptions += '<option value="Primary Contract">Primary Contract</option>';
                                break;
                            case 'Other':
                                vOptions += '<option value="Other">Other</option>';
                                break;
                        }
                    }
                    vOptions += '</select>';
                    $(this).parent().parent().children(".ddl").append(vOptions);
                }
            } else {

                $(this).parent().parent().children(".ddl").empty();
            }
            showallspans(this);

        });
    }
}

function Loading_View_trigger() {
    if (contractItem != null) {
        if (((contractItem.ReadOnlyPermissions.indexOf(localStorage.UserName) > -1) && (!localStorage.UserType.indexOf("Global Contract Owner") >= 0)) || !(contractItem.Permission == 'Manage' || contractItem.Permission == 'Contribute')) {
            $('#ulPinDocument li b').css({
                cursor: 'default'
            });
            $('#ulPinDocument li b img').css({
                cursor: 'default'
            });
        }
        else {
            $('#ulPinDocument li b').css({
                cursor: 'pointer'
            });
            $('#ulPinDocument li b img').css({
                cursor: 'pointer'
            });
        }
        //getcontractareasettings(contractItem.ContractArea);
        var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
        var vCoverSheet = $.grep(veContractFeatures, function (n, i) {
            return (n.RowKey == "23" && n.Status == "ON");
        });
        if (vCoverSheet.length > 0) {
            if (typeof (contractItem.SummeryBlobURL) != "undefined" && contractItem.SummeryBlobURL != null && contractItem.SummeryBlobURL != "") {
                getcontractsummerytemplate(contractItem.ContractType, contractItem.SummeryBlobURL, true);
            } else {
                getcontractsummerytemplate(contractItem.ContractType, contractItem.SummeryBlobURL, false);
            }
        } else {
            $("#iStandardIcon").empty();
            $("#hdnsummeryTempDocu").text("No");
            $("#lisummarydocument").css("display", "none");
        }

        var vContractStatus = ["Ready for Signature", "Awaiting Signatures", "Signed", "Active", "Up for Renewal", "Renewed", "Extended", "On Hold", "Replaced", "Expired", "Cancelled", "Terminated", "Archived", "About to Expire"];

        vAccFeat = $.grep(veContractFeatures, function (n, i) {
            return (n.RowKey == "2" && n.Status == "ON");
        });
        //if (vAccFeat.length > 0 && $.inArray(contractItem.Status, vContractStatus) > -1) {
        if (vAccFeat.length > 0) {
            $(".FL_Obligations").css('display', '');
            //GetObligationCatalogs();//Performance Optimization
        }
        else {
            $(".FL_Obligations").css('display', 'none');
        }
        //if (IsPipeline == true)
        //    BindGeneralSettings();
        //BindContractRoles(contractItem);//Performance Optimization
        //BindUserRoles();//Performance Optimization
        //BindRelatedContracts(vContractID);//Performance Optimization
        //GetContractPendingAction(false);//Performance Optimization

        BindO365LibrarySettings();
        BindPeople();
        //BindMilestoneTypes();//Performance Optimization
        //BindObligationTypes();//Performance Optimization
        //BindAmendmentTypes(vContractID);//Performance Optimization
        BindCurrencies();
        //BindUnitTypes();//Performance Optimization
        BindDataContractDropdownSettings(oGeneralSettings);//Performance Optimization
        //BindTermTypes();//Performance Optimization
        BindContractRelationships();
        //Performance Optimization
        //var vTab = getParameterByName("Tab");
        //if (vTab != 'Activity')
        //    GetContractActivities(vContractID);
        //if (vTab != 'TermsClause')
        //    TermsAndClauseDocument(vContractID);
        //if (vTab != 'Notes')
        //    BindNotes(vContractID);
        //Performance Optimization

        DefaultGlobalsettingsDP();
        //BindCounterpartyType();//Performance Optimization
        //BindContractTermTypeddl();//Performance Optimization
        //BindRelatedContractsFilters();
        //BindBusinessAreaPicker11();//Performance Optimization
        BindWorkflowSettings();//Performance Optimization
        setTimeout('Loading_View_trigger1()', 10000);
    } else {
        //BindUserRoles();//Performance Optimization
        //BindRelatedContracts(vContractID);//Performance Optimization
        //GetContractPendingAction(false);//Performance Optimization

        BindO365LibrarySettings();
        BindPeople();
        //BindMilestoneTypes();//Performance Optimization
        //BindObligationTypes();//Performance Optimization
        //BindAmendmentTypes(vContractID);//Performance Optimization
        BindCurrencies();
        //BindUnitTypes();//Performance Optimization
        //BindDataContractDropdownSettings();//Performance Optimization
        //BindTermTypes();//Performance Optimization
        BindContractRelationships();
        //var vTab = getParameterByName("Tab");//Performance Optimization
        //if (vTab != 'Activity') {//Performance Optimization
        //    GetContractActivities(vContractID);//Performance Optimization
        //}//Performance Optimization
        //if (vTab != 'TermsClause')//Performance Optimization
        //    TermsAndClauseDocument(vContractID);//Performance Optimization
        //if (vTab != 'Notes')//Performance Optimization
        //    BindNotes(vContractID);//Performance Optimization

        DefaultGlobalsettingsDP();
        //BindCounterpartyType();//Performance Optimization
        //BindContractTermTypeddl();//Performance Optimization
        //BindRelatedContractsFilters();
        //BindBusinessAreaPicker11();//Performance Optimization
        //if (IsPipeline == true)
        //    BindGeneralSettings();
        BindWorkflowSettings();//Performance Optimization
        setTimeout('Loading_View_trigger1()', 10000);
    }


}
function Loading_View_trigger1() {
    if (((contractItem.ReadOnlyPermissions.indexOf(localStorage.UserName) > -1) && (!localStorage.UserType.indexOf("Global Contract Owner") >= 0)) || !(contractItem.Permission == 'Manage' || contractItem.Permission == 'Contribute')) {
        $('#ulPinDocument li b').css({
            cursor: 'default'
        });
        $('#ulPinDocument li b img').css({
            cursor: 'default'
        });
    }
    else {
        $('#ulPinDocument li b').css({
            cursor: 'pointer'
        });
        $('#ulPinDocument li b img').css({
            cursor: 'pointer'
        });
    }
    if ((contractItem.FullControlPermissions.indexOf(localStorage.UserName) > -1) || (localStorage.UserType.indexOf("Global Contract Owner") >= 0) || (contractItem.BusinessAreaOwners.indexOf(localStorage.UserName) > -1)) {
        $('#fullControlLink').css({
            cursor: 'pointer'
        });

    }
    else {
        $('#fullControlLink').css({
            cursor: 'default'
        });

    }

    //getcontractareasettings(contractItem.ContractArea);
    var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
    var vCoverSheet = $.grep(veContractFeatures, function (n, i) {
        return (n.RowKey == "23" && n.Status == "ON");
    });
    if (vCoverSheet.length > 0) {
        if (typeof (contractItem.SummeryBlobURL) != "undefined" && contractItem.SummeryBlobURL != null && contractItem.SummeryBlobURL != "") {
            getcontractsummerytemplate(contractItem.ContractType, contractItem.SummeryBlobURL, true);
        } else {
            getcontractsummerytemplate(contractItem.ContractType, contractItem.SummeryBlobURL, false);
        }
    } else {
        $("#iStandardIcon").empty();
        $("#hdnsummeryTempDocu").text("No");
        $("#lisummarydocument").css("display", "none");
    }

    var vContractStatus = ["Ready for Signature", "Awaiting Signatures", "Signed", "Active", "Up for Renewal", "Renewed", "Extended", "On Hold", "Replaced", "Expired", "Cancelled", "Terminated", "Archived", "About to Expire"];
    vAccFeat = $.grep(veContractFeatures, function (n, i) {
        return (n.RowKey == "2" && n.Status == "ON");
    });
    //if (vAccFeat.length > 0 && $.inArray(contractItem.Status, vContractStatus) > -1) {
    if (vAccFeat.length > 0) {
        $(".FL_Obligations").css('display', '');
        //GetObligationCatalogs();//Performance Optimization
    }
    else {
        $(".FL_Obligations").css('display', 'none');
    }
    bindAuthoriseUsers(contractItem);//Performance Optimization
    BindContractRoles(contractItem);
    //suren//Performance Optimization
    BindWorkflow(); //bug fixing for slider inhancment 
    //suren//Performance Optimization
}

//manoj
function checkcontractisactive() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts?contractid=' + getParameterByName("ContractID"),
        type: 'GET',
        cache: false,
        contentType: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, UserID: localStorage.UserID
        },
        processData: false,
        success: function (item) {
            if (item != null) {
                if (item.IsActive == "" || item.IsActive == "Yes") {
                    //$("#general-notification").html("");
                    //$("#general-notification").css("visibility", "hidden");
                    //ReloadContracts();
                    //manoj
                    //RefershReqandDoc(item);
                    //manoj
                    $("#hdnContractDocumentsUrl").text(item.ContractDocumentsUrl);
                    $("#hdnContractDocumentsUrlFixed").text(item.ContractDocumentsUrl);
                    //manoj

                    ReloadDocumentTap();
                    //manoj                    
                } else {
                    var Displaymsg = "Contract is created succesfully.";
                    if (typeof (contractItem.RelatedRequestID) != "undefined" && contractItem.RelatedRequestID != null && contractItem.RelatedRequestID != "") {
                        Displaymsg += " Request|Folder(s)|Document(s) creation is in progress.";
                    } else {
                        Displaymsg += " Folder(s)|Document(s) creation is in progress.";
                    }
                    $("#general-notification").html(Displaymsg);
                    //$("#general-notification").html("Folder|Document|Request|Project action(s) inprogress.Please wait for other actions.");
                    $("#general-notification").css("visibility", "visible");
                    $("#btnaddnewsubfolder").css('pointer-events', 'none');
                    $("#btnAddContractDocument").css('pointer-events', 'none');
                    $("#holder").css('pointer-events', 'none');
                    $(".restricamnd").css('pointer-events', 'none');
                    var innervalue = document.getElementById("topAction1").textContent;
                    if (innervalue == "Add Amendment" || innervalue == "Add Document") {
                        $("#topAction1").css('pointer-events', 'none');
                    }
                    clearTimeout(cleartimevalue);
                    cleartimevalue = setTimeout('checkcontractisactive()', 10000);
                }
            } else {
                $("#general-notification").html("");
                $("#general-notification").css("visibility", "hidden");
                $("#btnaddnewsubfolder").css('pointer-events', 'none');
                $("#btnAddContractDocument").css('pointer-events', 'none');
                $("#holder").css('pointer-events', 'none');
                $(".restricamnd").css('pointer-events', 'none');
                var innervalue = document.getElementById("topAction1").textContent;
                if (innervalue == "Add Amendment" || innervalue == "Add Document") {
                    $("#topAction1").css('pointer-events', 'none');
                }
            }
        },
        error: function () {
            $("#general-notification").html("");
            $("#general-notification").css("visibility", "hidden");
            $("#btnaddnewsubfolder").css('pointer-events', 'none');
            $("#btnAddContractDocument").css('pointer-events', 'none');
            $("#holder").css('pointer-events', 'none');
            $(".restricamnd").css('pointer-events', 'none');
            var innervalue = document.getElementById("topAction1").textContent;
            if (innervalue == "Add Amendment" || innervalue == "Add Document") {
                $("#topAction1").css('pointer-events', 'none');
            }
        }
    });
}

function RefershReqandDoc(item) {
    contractItem = item;
    var strmsg = "Folder|Document creation is Completed.";
    if (typeof (contractItem.RelatedRequestID) != "undefined" && contractItem.RelatedRequestID != null && contractItem.RelatedRequestID != "") {
        strmsg = "Request|" + strmsg;
    }
    swal({
        title: '',
        text: strmsg,
        type: 'warning',
        showCancelButton: false,
        confirmButtonText: 'Yes',
        //cancelButtonText: 'No',
        html: true
    },
    function (confirmed) {
        ReloadDocumentTap();
    });
}


function ReloadDocumentTap() {
    $("#btnaddnewsubfolder").css('pointer-events', 'auto');
    $("#btnAddContractDocument").css('pointer-events', 'auto');
    $("#holder").css('pointer-events', 'auto');
    $(".restricamnd").css('pointer-events', 'auto');
    var innervalue = document.getElementById("topAction1").textContent;
    if (innervalue == "Add Amendment" || innervalue == "Add Document") {
        $("#topAction1").css('pointer-events', 'auto');
    }
    if (typeof (contractItem.RelatedRequestID) != "undefined" && contractItem.RelatedRequestID != null && contractItem.RelatedRequestID != "") {
        $("#trRelatedRequest").css('display', '');
        BindRequestDetails(contractItem.RelatedRequestID);
    }
    $("#general-notification").html("");
    $("#general-notification").css("visibility", "hidden");
    //setTimeout(function () { $("#general-notification").css("visibility", "hidden"); }, 10000);
    $("#ulDocument").empty();
    //$("#ulDocument").html('<img src="../Content/Images/icon/loading.gif"> Please wait...');
    //manoj
    if (documentview == null || documentview == "" || documentview == 'folder') {
        GetdocumentIsStandard(vContractID);
    } else {
        DisplayDocument(documentview);
    }
    pendingStarted = false;
    // GetContractPendingAction(true, "BindPeoples");
    $("#hdnFolderDocumentView").text('');
    $("#hdnShowAllTextValue").html('');
    PrvFolderselection = '';
    //Bind primary and pined document based on new feature
    if ($("#hdnnewdocumentfeature").text() == "Yes") {
        CreateDocumentListPinView(vContractID);
    }
}
//manoj

//Added 2.4final to 2.4


function GetRenewalChecklistAndNotes(contractid, checkFromStart) {
    if (contractid == null || contractid == "") {
        contractid = vContractID;
    }

    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + contractid + '/contractrenewalhistory',
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            vContractRenewalHistory = data;
            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts?contractid=' + contractid,
                type: 'GET',
                cache: false,
                contentType: false,
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey, UserID: localStorage.UserID
                },
                processData: false,
                success: function (vItemContract) {
                    checkUpcoming(vItemContract, checkFromStart);
                    $(data).each(function (i, item) {
                        if (vItemContract.NextTermStartDate != null && vItemContract.NextTermEndDate != null && item.RenewedDate != null && item.TermEndDate != null) {
                            if (item.RenewedDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1') == vItemContract.NextTermStartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1') && item.TermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1') == vItemContract.NextTermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1')) {
                                UpComingNotes = item.RenewalNotes;
                                UpcomingChecklist = item.RenewalChecklist;
                                TermName = item.RenewableTermName;
                            }
                        }
                    });
                },
            });

        },
        error:
            function (data) {

            }
    });
}
function checkUpcoming(contractItem, checkFromStart) {
    var vtodaydate = moment(new Date()).format("YYYY-MM-DD")
    var vRenewStatus = null;
    var vTermStatus = null;
    var vRenewDate = null;
    var vRenewText = "";
    var vFromDate = moment(new Date());
    var vDiff = "";
    var vDiffAuth = "";
    var vMetaAuth = "";
    var vMetaRenew = "";
    vRenewalConfirmParticipantsXML = "";

    if (contractItem.ContractTermType == "Renewable") {
        var vMetadata = "";
        if (contractItem.NextTermStartDate != null && contractItem.NextTermStartDate != null) {
            $(vContractRenewalHistory).each(function (i, item) {
                if (item.RenewedDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1') == contractItem.NextTermStartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1') && item.TermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1') == contractItem.NextTermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1')) {
                    vRenewDate = item.RenewedOn;
                    vRenewStatus = item.Status;
                    vTermStatus = item.TermStatus;
                    vRenewalConfirmParticipantsXML = item.RenewalConfirmParticipantsXML;
                }
            });
        }
        ConfirmParticipationCollection = [];
        if (vRenewalConfirmParticipantsXML != null) {
            $(vRenewalConfirmParticipantsXML).find('participant').each(function () {
                var authName = $(this).find('name').text();
                var authStatus = $(this).find('status').text();
                var person = {
                    Participation: authName, status: authStatus
                };
                ConfirmParticipationCollection.push(person);
            });
        }

        var ConfirmDate = moment(new Date()).format("YYYY-MM-DD");
        if (contractItem.ContractConfirmSendDate != null) {
            ConfirmDate = moment(new Date(contractItem.ContractConfirmSendDate)).format("YYYY-MM-DD");
        }
        var authorizationStatus = "";
        if (ConfirmParticipationCollection != null) {
            $(ConfirmParticipationCollection).each(function (i, item) {
                if (item.Participation.trim() == localStorage.UserName) {
                    authorizationStatus = item.status;
                }
            });
        }


        //suren bug fixing slider
        var RenewalConfirmDate = moment(new Date()).format("YYYY-MM-DD");
        if (contractItem.CounterpartyNoticesRenewalDate != null) {
            RenewalConfirmDate = moment(new Date(contractItem.CounterpartyNoticesRenewalDate)).format("YYYY-MM-DD");
        }
        if ((contractItem.FullControlPermissions.indexOf(localStorage.UserName) > -1) && contractItem.AutoRenew != "Yes" && contractItem.CounterpartyNoticesRenewalDate !== "undefined" && contractItem.CounterpartyNoticesRenewalDate !== null && contractItem.NextTermStartDate != null && contractItem.NextTermStartDate != null && vRenewDate == null && (vRenewStatus == null || vRenewStatus == "") && (RenewalConfirmDate <= vtodaydate) && authorizationStatus != "Rejected" && vTermStatus != "Expired") {

            vMetadata += '<small>';
            if (contractItem.NextTermStartDate != null)
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    vMetadata += contractItem.NextTermStartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                }
                else {
                    if (localStorage.AppDateFormat == 'DD/MM/YYYY') { vMetadata += contractItem.NextTermStartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1'); }
                    else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                        vMetadata += contractItem.NextTermStartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                    }
                }
            vMetadata += '</small>';
            vMetadata += '<small>-</small>';
            vMetadata += '<small>';
            if (contractItem.NextTermEndDate != null)
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    vMetadata += contractItem.NextTermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                }
                else {
                    if (localStorage.AppDateFormat == 'DD/MM/YYYY') { vMetadata += contractItem.NextTermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1'); }
                    else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                        vMetadata += contractItem.NextTermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                    }
                }
            vMetadata += '</small>';


            vMetaRenew = vMetadata;

            vDiff = DiffBetDate(vFromDate, contractItem.CounterpartyNoticesRenewalDate);
            if (vDiff != '') {
                vMetaRenew += "(" + vDiff + " Left )"
            }
            if ($("ul#UpcomingTaskSlider").has("li#RenewLI").length === 0) {
                var renewLI = '<li id="RenewLI">' +
                       '<div class="renewal-new-sec" id="Renew" style="display:none">' +
                           '<div class="renewal-new-text"> <a href="javascript:void(0);" onclick="OpenManageTerm();">Renewal Upcoming Term </a> <span id="UpcomingText"></span></div>' +
                           '<div class="renewal-new-button">' +
                           '<button class="authorize" type="button" onclick="checkAwaiting();" value="">Renew Now</button>' +
                           '<button class="authorize" type="button" onclick="expireRenewalTerm();" value="" style="background-color: #d72303;">Expire</button>' +
                           '</div>' +
                       '</div>' +
                   '</li>';
                $('#UpcomingTaskSlider').append(renewLI);
                $('#UpcomingText').html(vMetaRenew);
                $("#RenewLI").css("display", "");
                $('#Renew').css("display", "");
                $("#SliderCount").html(++vSliderCounter);
                CheckSlider();
            }
            if (checkFromStart == "PageLoad") {
                $('#UpcomingText').html(vMetaRenew);
                $("#RenewLI").css("display", "");
                $('#Renew').css("display", "");
                $("#SliderCount").html(++vSliderCounter);
                CheckSlider();
            }


        }
        else {
            if (checkFromStart == "PageLoad") {
                $("#RenewLI").remove();
            }
            else {
                if ($("ul#UpcomingTaskSlider").has("li#RenewLI").length != 0) {
                    $("#RenewLI").remove();
                    if (vSliderCounter != 0) {
                        --vSliderCounter;
                        $("#SliderCount").html(vSliderCounter);
                    }
                }
            }

            CheckSlider();
        }

        if (contractItem.ContractConfirmSendDate !== "undefined" && contractItem.ContractConfirmSendDate !== null && contractItem.NextTermStartDate != null && contractItem.RequiresAuth == "Yes" && contractItem.RenewalConfirmParticipants.indexOf(localStorage.UserName) > -1 && (authorizationStatus != "Renewed" && authorizationStatus != "Rejected") && (ConfirmDate <= vtodaydate) && vRenewDate == null && (vRenewStatus != "Renewed" || vRenewStatus != "Renewed")) {
            vMetaAuth += '<small>';
            if (contractItem.NextTermStartDate != null)
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    vMetaAuth += contractItem.NextTermStartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                }
                else {
                    if (localStorage.AppDateFormat == 'DD/MM/YYYY') { vMetaAuth += contractItem.NextTermStartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1'); }
                    else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                        vMetaAuth += contractItem.NextTermStartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                    }
                }
            vMetaAuth += '</small>';
            vMetaAuth += '<small>-</small>';
            vMetaAuth += '<small>';
            if (contractItem.NextTermEndDate != null)
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    vMetaAuth += contractItem.NextTermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                }
                else {
                    if (localStorage.AppDateFormat == 'DD/MM/YYYY') { vMetaAuth += contractItem.NextTermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1'); }
                    else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                        vMetaAuth += contractItem.NextTermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                    }
                }
            vMetaAuth += '</small>';

            vDiffAuth = DiffBetDate(vFromDate, contractItem.ContractConfirmSendDate);
            if (vDiffAuth != '') {
                vMetaAuth += "(" + vDiffAuth + " Left )"
            }
            if ($("ul#UpcomingTaskSlider").has("li#AuthoriseLI").length === 0) {
                var authoriseLI = '<li id="AuthoriseLI">' +
                        '<div class="renewal-new-sec" id="Authorize" style="display:none">' +
                        '<div class="renewal-new-text"> <a id="fullControlLink" href="javascript:void(0);" onclick="OpenManage();">Authorize upcoming term</a> <span id="AuthorizeTermText"></span> </div>' +
                        '<div class="renewal-new-button">' +
                            '<button class="authorize" type="button" onclick="sliderAuthorize(Authorize);" value="">Authorize</button>' +
                            '<button class="stop_renewal" type="button" onclick="sliderAuthorize(Reject);" value="">Stop Renewal</button>' +
                        '</div>' +
                    '</div>' +
                    '</li>';
                $('#UpcomingTaskSlider').append(authoriseLI);
                $('#Authorize').css("display", "");
                $('#AuthorizeTermText').html(vMetaAuth);
                $("#SliderCount").html(++vSliderCounter);
                CheckSlider();
            }
            if (checkFromStart == "PageLoad") {
                $('#Authorize').css("display", "");
                $('#AuthorizeTermText').html(vMetaAuth);
                $("#SliderCount").html(++vSliderCounter);
                CheckSlider();
            }
        }
        else {
            if (checkFromStart == "PageLoad") {
                $("#AuthoriseLI").remove();
            }
            else {
                if ($("ul#UpcomingTaskSlider").has("li#AuthoriseLI").length != 0) {
                    $("#AuthoriseLI").remove();
                    if (vSliderCounter != 0) {
                        --vSliderCounter;
                        $("#SliderCount").html(vSliderCounter);
                    }
                }
            }
            CheckSlider();
        }

    }
    else {
        if ($("ul#UpcomingTaskSlider").has("li#RenewLI").length != 0) {
            if (checkFromStart == "PageLoad") {
                $("#RenewLI").remove();
            }
            else {
                $("#RenewLI").remove();
                if (vSliderCounter != 0) {
                    --vSliderCounter;
                    $("#SliderCount").html(vSliderCounter);
                }
            }
        }
        if ($("ul#UpcomingTaskSlider").has("li#AuthoriseLI").length != 0) {
            if (checkFromStart == "PageLoad") {
                $("#AuthoriseLI").remove();
            }
            else {
                $("#AuthoriseLI").remove();
                if (vSliderCounter != 0) {
                    --vSliderCounter;
                    $("#SliderCount").html(vSliderCounter);
                }
            }

        }
        CheckSlider();
    }
    if (checkFromStart == "0") {
        CheckSlider();
    }

}

function OpenManageTerm() {
    OpenManageContractTerm(contractItem);
}
function BindWorkflow(actionvalue) {
    var Contracts = "Contracts";

    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Workflow/WorkflowByObject?strObject=' + Contracts + '&objectID=' + contractItem.RowKey,
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        //async: false,//Performance Optimization

        success: function (data) {
            vWorkflowItem = data;
            UpcomingApprovalTaskSlider(data, actionvalue);
        },
        error: function (data) {
            if (actionvalue == "Yes") {
                $('#SliderCount').html("0");
                $('#UpcomingTaskSlider').html('');
                CheckSlider(actionvalue);
                $("#loadingPage").fadeOut();
            }
        }
    });
}

function GetTaskDetail(vWorkflowID) {
    vTaskID = "";
    var vConApprInprogress = false;
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Workflow/taskdetail?taskid=' + vTaskID + "&workflowid=" + vWorkflowID,
        type: 'GET',
        cache: false,
        contentType: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {

            var vWorkflowTasks = data.WorkflowTasks;
            var vFilterTask = $.grep(vWorkflowTasks, function (n, i) {
                return (n.Status == "In Progress" && n.AssignTo == localStorage.UserName);
            });
            if (vFilterTask.length > 0) {
                vTaskID = vFilterTask[0].RowKey;
                vConApprInprogress = true;
            }
            if (vConApprInprogress == true) {
                vDoudate = moment(new Date(vStartDate)).add(vDurationTask, "days").format('MM/DD/YYYY');
                if ($("ul#UpcomingTaskSlider").has("li#ContractApprovalLI").length === 0) {
                    vMetadata = '<li id="ContractApprovalLI"> <div class="renewal-new-sec" id="ContractApproval">' +
                                  '<div class="renewal-new-text"> <a href="/Activity/TaskDetails?TaskID=&WorkflowID=' + WorkflowID + '">' + contractItem.ContractTitle + ' is assigned to you for approval by ' + Intiator + '</a> <span> Due date ' + vDoudate + '</span> </div><div class="renewal-new-button">' +
                                  '<button class="authorize" type="button" id="btnApprove" value="" onclick="Approve();">Approve</button><button class="stop_renewal" type="button" id="btnReject" value="" onclick="Reject();">Reject</button>' +
                                  '</div></div></li>';
                    $("#SliderCount").html(++vSliderCounter);
                    $('#UpcomingTaskSlider').append(vMetadata);
                    CheckSlider(actionvalue);
                }
            } else if (actionvalue == "Yes") {
                $('#SliderCount').html("0");
                $('#UpcomingTaskSlider').html('');
                CheckSlider(actionvalue);
            }

        }
    });
}




function Approve() {
    if (contractItem.Status != 'Cancelled' && contractItem.Status != 'Expired') {
        $("#hdTaskStatus").val("Approved");
        if ((RequiredComment.indexOf("Approve") > -1 && $("#hdTaskStatus").val() == "Approved")) {
            $("#completeTask .commReq").show();
            $("#txtTaskComment").addClass("validNicEdit");
        }
        else {
            $("#completeTask .commReq").hide();
            $("#txtTaskComment").removeClass("validNicEdit");
        }
        var nicInstance = nicEditors.findEditor('txtTaskComment');
        nicInstance.setContent('');
        $("#CompletePlaceHolder").text("You've selected '" + $("#hdTaskStatus").val() + "' as the task outcome.");
        $("#completeTask").dialog("open");
    }
}



function Reject() {
    if (contractItem.Status != 'Cancelled' && contractItem.Status != 'Expired') {
        $("#hdTaskStatus").val("Rejected");
        if (RequiredComment.indexOf("Reject") > -1) {
            $("#completeTask .commReq").show();
            $("#txtTaskComment").addClass("validNicEdit");
        }
        else {
            $("#completeTask .commReq").hide();
            $("#txtTaskComment").removeClass("validNicEdit");
        }
        var nicInstance = nicEditors.findEditor('txtTaskComment');
        nicInstance.setContent('');

        $("#CompletePlaceHolder").text("You've selected '" + $("#hdTaskStatus").val() + "' as the task outcome.");
        $("#completeTask").dialog("open");
    }
}


function UpcomingApprovalTaskSlider(data, actionvalue) {
    var Intiator = "";
    var vDurationTask = "";
    var vMetadata = '';
    var WorkflowID = "";
    var vStartDate = "";
    var vDoudate = "";
    vTaskID = "";
    var dataSlider = $.grep(data, function (item, i) {
        return item.Status == "In Progress"
    })[0];
    if (dataSlider != null && (dataSlider.Participants.indexOf(localStorage.UserName) > -1)) {
        $(vWorkflowItem).each(function (i, vItem) {
            if (vItem.ObjectID == contractItem.RowKey) {
                if (vItem.Object == "Contracts" && vItem.Status == "In Progress") {
                    Intiator = vItem.Initiator;
                    vDurationTask = vItem.DurationPerTask;
                    WorkflowID = vItem.RowKey;
                    vStartDate = vItem.StartDate;
                }
            }
        });
        if (WorkflowID != "") {
            var vConApprInprogress = false;
            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Workflow/taskdetail?taskid=' + vTaskID + "&workflowid=" + WorkflowID,
                type: 'GET',
                cache: false,
                contentType: false,
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey
                },
                success: function (data) {

                    var vWorkflowTasks = data.WorkflowTasks;
                    var vFilterTask = $.grep(vWorkflowTasks, function (n, i) {
                        return (n.Status == "In Progress" && n.AssignTo == localStorage.UserName && n.TaskType != "Change Request");
                    });
                    if (vFilterTask.length > 0) {
                        vTaskID = vFilterTask[0].RowKey;
                        vConApprInprogress = true;
                    }
                    if (vConApprInprogress == true) {
                        vDoudate = moment(new Date(vStartDate)).add(vDurationTask, "days").format('MM/DD/YYYY');
                        if ($("ul#UpcomingTaskSlider").has("li#ContractApprovalLI").length === 0) {
                            vMetadata = '<li id="ContractApprovalLI"> <div class="renewal-new-sec" id="ContractApproval">' +
                                          '<div class="renewal-new-text"> <a href="/Activity/TaskDetails?TaskID=&WorkflowID=' + WorkflowID + '">' + contractItem.ContractTitle + ' is assigned to you for approval by ' + Intiator + '</a> <span> Due date ' + vDoudate + '</span> </div><div class="renewal-new-button">' +
                                          '<button class="authorize" type="button" id="btnApprove" value="" onclick="Approve();">Approve</button><button class="stop_renewal" type="button" id="btnReject" value="" onclick="Reject();">Reject</button>' +
                                          '</div></div></li>';
                            $("#SliderCount").html(++vSliderCounter);
                            $('#UpcomingTaskSlider').append(vMetadata);
                            CheckSlider(actionvalue);
                        }
                    } else if (actionvalue == "Yes") {
                        $('#SliderCount').html("0");
                        $('#UpcomingTaskSlider').html('');
                        CheckSlider(actionvalue);
                    }

                }
            });
        }
    }

}

function CompleteTask() {
    var vIsPasss = true;
    var status = $("#hdTaskStatus").val();
    //if (status == "Rejected")
    vIsPasss = requiredValidator('completeTask', false);
    if (vIsPasss) {
        $("#loadingPage").fadeIn();

        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Workflow/tasks?taskid=' + vTaskID,
            type: 'GET',
            dataType: 'json',
            headers: {
                'eContracts-ApiKey': localStorage.APIKey
            },
            cache: false,
            success: function (taskDet) {
                if (taskDet.Status == "In Progress") {
                    var nicInstance = nicEditors.findEditor('txtTaskComment');
                    var vComment = CleanWordFormatFromHTML(nicInstance.getContent());
                    var vNoteTextCount = vComment.replace(/<\/?[^>]+(>|$)/g, "");
                    if (vNoteTextCount.length <= 26500) {
                        vComment = $.trim(vComment);
                        vComment = $('<div/>').text(vComment).html();

                        var comments = vComment;
                        var reassignto = "";
                        var changerequestto = "";
                        $.ajax({
                            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Workflow/tasks?taskid=' + vTaskID + '&reassignto=' + reassignto + '&changerequestto=' + changerequestto,
                            type: 'PUT',
                            dataType: 'json',
                            data: {
                                "Status": status,
                                "Comment": comments,
                            },
                            headers: {
                                'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                            },
                            cache: false,
                            success: function (status) {
                                swal("", "Task Completed");
                                //manoj
                                //BindWorkflow("Yes");
                                //manoj
                                //$("#loadingPage").fadeOut();
                                $("#txtCompleteComment").removeClass('validNicEdit');
                                $("#completeTask").dialog("close");
                                if ($("ul#UpcomingTaskSlider").has("li#ContractApprovalLI").length !== 0) {
                                    $("#ContractApprovalLI").remove();
                                    if (vSliderCounter != 0) {
                                        --vSliderCounter;
                                        $("#SliderCount").html(vSliderCounter);
                                        CheckSlider();
                                    }
                                }
                                GetContractActivities(vContractID);
                                BindContractItem("workflow");
                                $("#loadingPage").fadeOut();
                            },
                            error: function (status) {
                                $("#loadingPage").fadeOut();
                            }
                        });
                    }
                    else {
                        $("#loadingPage").fadeOut();
                        swal("", "Note can not exceed 26500 characters");
                    }
                }
                else {
                    $("#loadingPage").fadeOut();
                    swal("", "Task you are working is currently " + taskDet.Status);
                }
            },
            error: function () {
                $("#loadingPage").fadeOut();
                swal("", "Task you are working is not available.");
            }
        });
    }
}

function sliderAuthorize(Status) {
    $("#dvChecklistRenewal").css('display', 'none');
    if (Status == "Authorize") {
        $("#btnRenewTerm").html('<span class="pop_up_Content_Green">Authorize</span>');
        $("#txtExpireRenewSlider").val('Authorize');
        $("#dvRenewalExpire").dialog("option", "title", "Authorize Term");
    }
    else if (Status == "Reject") {
        $("#btnRenewTerm").html('<span class="pop_up_Content_Green">Reject</span>');
        $("#txtExpireRenewSlider").val('Reject');
        $("#dvRenewalExpire").dialog("option", "title", "Stop Renewal");
    }
    
    $("#dvRenewalExpire").dialog("open");
}

function Authorize() {
    var ParticipantsXMl = "";
    var item = [];
    var itemN = $.grep(vContractRenewalHistory, function (itemR, i) {
        return itemR.RenewableTermName == TermName
    });

    if (itemN.length > 0) {
        item = itemN[0];
        $("#loadingPage").fadeIn();
        //Comments activities
        var sendTo = '', note = '';
        note = $("#txtNote").val().replace(/\n/g, " ").trim();
        sendTo = '';
        $("#ddlOwnersRenew option:selected").each(function () {
            sendTo += $(this).text() + "; ";
        });
        sendTo = sendTo.slice(0, -1);
        var existingXML = '';
        existingXML += '<RenewalComments>';
        if (item.RenewalCommentsXML != null && item.RenewalCommentsXML != '') {
            $(item.RenewalCommentsXML).find('RenewalComment').each(function () {
                var activity = $(this).find('Activity').text();
                var comment = $(this).find('Comments').text();
                var sendton = $(this).find('SendTo').text();
                var created = $(this).find('Created').text();
                existingXML += '<RenewalComment>';
                existingXML += '<Activity>';
                existingXML += activity;
                existingXML += '</Activity>';

                existingXML += '<Comments>';
                existingXML += comment;
                existingXML += '</Comments>';

                existingXML += '<SendTo>';
                existingXML += sendton;
                existingXML += '</SendTo>';

                existingXML += '<Created>';
                existingXML += created;
                existingXML += '</Created>';

                existingXML += '</RenewalComment>';

            });
        }
        existingXML += '<RenewalComment>';
        existingXML += '<Activity>';
        var time = moment(new Date()).format('MMMM Do YYYY, h:mm A');
        existingXML += localStorage.UserName + ' has authorized the term ' + item.RenewableTermName + ' on ' + time;
        existingXML += '</Activity>';

        existingXML += '<Comments>';
        existingXML += note;
        existingXML += '</Comments>';

        existingXML += '<SendTo>';
        existingXML += sendTo;
        existingXML += '</SendTo>';

        existingXML += '<Created>';
        existingXML += new Date();
        existingXML += '</Created>';

        existingXML += '</RenewalComment>';
        existingXML += '</RenewalComments>';

        if (vRenewalConfirmParticipantsXML == "") {
            //Start Ajax

            if (contractItem.RenewalConfirmParticipants != null) {

                ParticipantsXMl += "<participants>";
                if (contractItem.RenewalConfirmParticipants.indexOf(';') > -1) {
                    var slpit = contractItem.RenewalConfirmParticipants.split(';');
                    $(slpit).each(function (i, item) {
                        if (item.trim() != "")
                            ParticipantsXMl += "<participant><name>" + item.trim() + "</name><status>In Progress</status></participant>";
                    });
                    ParticipantsXMl += "</participants>";
                }
                else {
                    var Item = contractItem.RenewalConfirmParticipants;
                    if (Item.trim() != "")
                        ParticipantsXMl += "<participant><name>" + Item.trim() + "</name><status>In Progress</status></participant>";
                    ParticipantsXMl += "</participants>";
                }

            }
            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + vContractID + '/renewalhistory',
                type: 'Post',
                dataType: 'json',
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                },
                data: {
                    ContractID: item.ContractID,
                    RenewableTermName: item.RenewableTermName,
                    RenewedFor: item.RenewedFor,
                    RenewedBy: item.RenewedBy,
                    RenewedOn: item.RenewedOn,
                    RenewedDate: item.RenewedDate,
                    NextRenewalDate: item.NextRenewalDate,
                    TermEndDate: item.TermEndDate,
                    Status: item.Status,
                    TermStatus: item.TermStatus,
                    Created: item.Created,
                    CreatedBy: item.CreatedBy,
                    Modified: item.Modified,
                    ModifiedBy: item.ModifiedBy,
                    RenewalType: item.RenewalType,
                    RenewalNotes: item.RenewalNotes,
                    RenewalChecklist: item.RenewalChecklist,
                    RenewalNotificationInternal: item.RenewalNotificationInternal,
                    ContractTermEach: item.ContractTermEach,
                    ContractTermChoicesEach: item.ContractTermChoicesEach,
                    RenewalConfirmParticipantsXML: ParticipantsXMl,
                    RenewalConfirmParticipants: contractItem.RenewalConfirmParticipants,
                    RenewalConfirmParticipantsCC: contractItem.RenewalConfirmParticipantsCC,
                    RenewalConfirmSendDate: contractItem.ContractConfirmSendDate,
                    ContractConfirmSendTerm: contractItem.ContractConfirmSendTerm,
                    RowKey: item.RowKey,
                    RenewalCommentsXML: existingXML
                },
                cache: false,
                success: function (data) {

                    $.ajax({
                        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + vContractID + '/contractrenewalhistoryupdate?TermName=' + TermName + '&Status=Renewed&User=' + localStorage.UserName,
                        type: 'POST',
                        dataType: 'json',
                        headers: {
                            'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging, 'UserName': localStorage.UserName, 'Comments': note
                        },
                        data: {
                            "Comment": "",
                        },
                        cache: false,
                        success: function (Conrec) {
                            $("#txtExpireRenewSlider").val('');
                            $('input[type="checkbox"][name="checkboxNotifyNewSlide"]').prop('checked', false);
                            BindContractItem();
                            $("#loadingPage").fadeOut();
                            swal("", "Authorize Completed");
                            if ($("ul#UpcomingTaskSlider").has("li#AuthoriseLI").length !== 0) {
                                $("#AuthoriseLI").remove();
                                if (vSliderCounter != 0) {
                                    --vSliderCounter;
                                    $("#SliderCount").html(vSliderCounter);
                                    CheckSlider();
                                }
                            }
                            if ($('#trOwnerAuth').css('display') != 'none') {
                                $('#trOwnerAuth').css("display", "none")
                            }
                        },
                        error: function (status) {

                            $("#loadingPage").fadeOut();
                        }
                    });
                }
            });


        }
        else {

            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + vContractID + '/contractrenewalhistoryupdate?TermName=' + TermName + '&Status=Renewed&User=' + localStorage.UserName,
                type: 'POST',
                dataType: 'json',
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging, 'UserName': localStorage.UserName, 'Comments': note
                },
                data: {
                    "Comment": existingXML,
                },
                cache: false,
                success: function (Conrec) {
                    $("#txtExpireRenewSlider").val('');
                    $('input[type="checkbox"][name="checkboxNotifyNewSlide"]').prop('checked', false);
                    BindContractItem();
                    $("#loadingPage").fadeOut();
                    swal("", "Authorize Completed");
                    if ($("ul#UpcomingTaskSlider").has("li#AuthoriseLI").length !== 0) {
                        $("#AuthoriseLI").remove();
                        if (vSliderCounter != 0) {
                            --vSliderCounter;
                            $("#SliderCount").html(vSliderCounter);
                            CheckSlider();
                        }
                    }
                    if ($('#trOwnerAuth').css('display') != 'none') {
                        $('#trOwnerAuth').css("display", "none")
                    }
                },
                error: function (status) {
                    $("#loadingPage").fadeOut();
                }
            });

        }
        return true;
    }
}

function StopRenew() {
    var ParticipantsXMl = "";
    var item = [];
    var itemN = $.grep(vContractRenewalHistory, function (itemR, i) {
        return itemR.RenewableTermName == TermName
    });

    if (itemN.length > 0) {
        item = itemN[0];
        $("#loadingPage").fadeIn();
        //Comments activities
        var sendTo = '', note = '';
        note = $("#txtNote").val().replace(/\n/g, " ").trim();
        sendTo = '';
        $("#ddlOwnersRenew option:selected").each(function () {
            sendTo += $(this).text() + "; ";
        });
        sendTo = sendTo.slice(0, -1);
        var existingXML = '';
        existingXML += '<RenewalComments>';
        if (item.RenewalCommentsXML != null && item.RenewalCommentsXML != '') {
            $(item.RenewalCommentsXML).find('RenewalComment').each(function () {
                var activity = $(this).find('Activity').text();
                var comment = $(this).find('Comments').text();
                var sendton = $(this).find('SendTo').text();
                var created = $(this).find('Created').text();
                existingXML += '<RenewalComment>';
                existingXML += '<Activity>';
                existingXML += activity;
                existingXML += '</Activity>';

                existingXML += '<Comments>';
                existingXML += comment;
                existingXML += '</Comments>';

                existingXML += '<SendTo>';
                existingXML += sendton;
                existingXML += '</SendTo>';

                existingXML += '<Created>';
                existingXML += created;
                existingXML += '</Created>';

                existingXML += '</RenewalComment>';

            });
        }
        existingXML += '<RenewalComment>';
        existingXML += '<Activity>';
        var time = moment(new Date()).format('MMMM Do YYYY, h:mm A');
        existingXML += localStorage.UserName + ' has rejected the term ' + item.RenewableTermName + ' on ' + time;
        existingXML += '</Activity>';

        existingXML += '<Comments>';
        existingXML += note;
        existingXML += '</Comments>';

        existingXML += '<SendTo>';
        existingXML += sendTo;
        existingXML += '</SendTo>';

        existingXML += '<Created>';
        existingXML += new Date();
        existingXML += '</Created>';

        existingXML += '</RenewalComment>';
        existingXML += '</RenewalComments>';
        if (vRenewalConfirmParticipantsXML == "") {
            $(vContractRenewalHistory).each(function (i, item) {
                if (item.RenewableTermName == TermName) {
                    //Start Ajax

                    if (contractItem.RenewalConfirmParticipants != null) {

                        ParticipantsXMl += "<participants>";
                        if (contractItem.RenewalConfirmParticipants.indexOf(';') > -1) {
                            var slpit = contractItem.RenewalConfirmParticipants.split(';');
                            $(slpit).each(function (i, item) {
                                if (item.trim() != "")
                                    ParticipantsXMl += "<participant><name>" + item.trim() + "</name><status>In Progress</status></participant>";
                            });
                            ParticipantsXMl += "</participants>";
                        }
                        else {
                            var Item = contractItem.RenewalConfirmParticipants;
                            if (Item.trim() != "")
                                ParticipantsXMl += "<participant><name>" + Item.trim() + "</name><status>In Progress</status></participant>";
                            ParticipantsXMl += "</participants>";
                        }

                    }

                    $.ajax({
                        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + vContractID + '/renewalhistory',
                        type: 'Post',
                        dataType: 'json',
                        headers: {
                            'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
                        },
                        data: {
                            ContractID: item.ContractID,
                            RenewableTermName: item.RenewableTermName,
                            RenewedFor: item.RenewedFor,
                            RenewedBy: item.RenewedBy,
                            RenewedOn: item.RenewedOn,
                            RenewedDate: item.RenewedDate,
                            NextRenewalDate: item.NextRenewalDate,
                            TermEndDate: item.TermEndDate,
                            Status: item.Status,
                            TermStatus: item.TermStatus,
                            Created: item.Created,
                            CreatedBy: item.CreatedBy,
                            Modified: item.Modified,
                            ModifiedBy: item.ModifiedBy,
                            RenewalType: item.RenewalType,
                            RenewalNotes: item.RenewalNotes,
                            RenewalChecklist: item.RenewalChecklist,
                            RenewalNotificationInternal: item.RenewalNotificationInternal,
                            ContractTermEach: item.ContractTermEach,
                            ContractTermChoicesEach: item.ContractTermChoicesEach,
                            RenewalConfirmParticipantsXML: ParticipantsXMl,
                            RenewalConfirmParticipants: contractItem.RenewalConfirmParticipants,
                            RenewalConfirmParticipantsCC: contractItem.RenewalConfirmParticipantsCC,
                            RenewalConfirmSendDate: contractItem.ContractConfirmSendDate,
                            ContractConfirmSendTerm: contractItem.ContractConfirmSendTerm,
                            RowKey: item.RowKey,
                            RenewalCommentsXML: existingXML
                        },
                        cache: false,
                        success: function (data) {

                            $.ajax({
                                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + vContractID + '/contractrenewalhistoryupdate?TermName=' + TermName + '&Status=Rejected&User=' + localStorage.UserName,
                                type: 'POST',
                                dataType: 'json',
                                headers: {
                                    'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging, 'UserName': localStorage.UserName, 'Comments': note.replace(/\n/g, " ")
                                },
                                data: {
                                    "Comment": "",
                                },
                                cache: false,
                                success: function (Conrec) {
                                    $("#txtExpireRenewSlider").val('');
                                    $('input[type="checkbox"][name="checkboxNotifyNewSlide"]').prop('checked', false);
                                    BindContractItem();
                                    $("#loadingPage").fadeOut();
                                    swal("", "Renew Stopped");
                                    if ($("ul#UpcomingTaskSlider").has("li#AuthoriseLI").length !== 0) {
                                        $("#AuthoriseLI").remove();
                                        if (vSliderCounter != 0) {
                                            --vSliderCounter;
                                            $("#SliderCount").html(vSliderCounter);
                                            CheckSlider();
                                        }
                                        if ($('#trOwnerAuth').css('display') != 'none') {
                                            $('#trOwnerAuth').css("display", "none")
                                        }
                                    }
                                },
                                error: function (status) {

                                    $("#loadingPage").fadeOut();
                                }
                            });
                        }
                    });
                }
            });
        }
        else {

            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + vContractID + '/contractrenewalhistoryupdate?TermName=' + TermName + '&Status=Rejected&User=' + localStorage.UserName,
                type: 'POST',
                dataType: 'json',
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging, 'UserName': localStorage.UserName, 'Comments': note.replace(/\n/g, " ")
                },
                data: {
                    "Comment": existingXML,
                },
                cache: false,
                success: function (Conrec) {
                    $("#txtExpireRenewSlider").val('');
                    $('input[type="checkbox"][name="checkboxNotifyNewSlide"]').prop('checked', false);
                    BindContractItem();
                    $("#loadingPage").fadeOut();
                    swal("", "Renew Stopped");
                    if ($("ul#UpcomingTaskSlider").has("li#AuthoriseLI").length !== 0) {
                        $("#AuthoriseLI").remove();
                        if (vSliderCounter != 0) {
                            --vSliderCounter;
                            $("#SliderCount").html(vSliderCounter);
                            CheckSlider();
                        }
                        if ($('#trOwnerAuth').css('display') != 'none') {
                            $('#trOwnerAuth').css("display", "none")
                        }
                    }
                },
                error: function (status) {

                    $("#loadingPage").fadeOut();
                }
            });

        }
        return true;
    }
}


function Renew(vStatus) {
    var vRenewalChecklist = "";
    if (vStatus == "Renewed") {
        if ($("#chkRenewalModificationsNewSlide").is(':checked')) {
            if (vRenewalChecklist == '') {
                vRenewalChecklist = "Renewal without any modifications";
            }
            else {
                vRenewalChecklist += "; Renewal without any modifications";
            }
        }
        if ($("#chkRenewalPriceAdjustmentsNewSlide").is(':checked')) {
            if (vRenewalChecklist == '') {
                vRenewalChecklist = "Renewal with Price Adjustments (minor)";
            }
            else {
                vRenewalChecklist += "; Renewal with Price Adjustments (minor)";
            }
        }
        if ($("#chkRenewalRepricingNewSlide").is(':checked')) {
            if (vRenewalChecklist == '') {
                vRenewalChecklist = "Renewal with Repricing (major)";
            }
            else {
                vRenewalChecklist += "; Renewal with Repricing (major)";
            }
        }
        if ($("#chkRenewalOtherNewSlide").is(':checked')) {
            if (vRenewalChecklist == '') {
                vRenewalChecklist = "Other Amendments";
            }
            else {
                vRenewalChecklist += "; Other Amendments";
            }
        }

        if (vRenewalChecklist == "") {
            swal("", "Select Renewal Checklist.");
            return false;
        }
    }

    var item = [];
    //$(vContractRenewalHistory).each(function (i, itemC) {
    //    if (contractItem.NextTermStartDate != null && contractItem.NextTermEndDate != null && itemC.RenewedDate != null && itemC.TermEndDate != null) {
    //        if (itemC.RenewedDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1') == contractItem.NextTermStartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1') && itemC.TermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1') == contractItem.NextTermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1')) {
    //            item = itemC;
    //        }
    //    }
    //});

    var itemN = $.grep(vContractRenewalHistory, function (itemR, i) {
        return itemR.RenewableTermName == TermName
    });

    if (itemN.length > 0) {
        item = itemN[0];
        var sendTo = '', note = '';

        note = $("#txtNote").val().replace(/\n/g, " ").trim();
        sendTo = '';
        $("#ddlOwnersRenew option:selected").each(function () {
            sendTo += $(this).text() + "; ";
        });
        sendTo = sendTo.slice(0, -1);

        var existingXML = '';
        existingXML += '<RenewalComments>';
        if (item.RenewalCommentsXML != null && item.RenewalCommentsXML != '') {
            $(item.RenewalCommentsXML).find('RenewalComment').each(function () {
                var activity = $(this).find('Activity').text();
                var comment = $(this).find('Comments').text();
                var sendton = $(this).find('SendTo').text();
                var created = $(this).find('Created').text();
                existingXML += '<RenewalComment>';
                existingXML += '<Activity>';
                existingXML += activity;
                existingXML += '</Activity>';

                existingXML += '<Comments>';
                existingXML += comment;
                existingXML += '</Comments>';

                existingXML += '<SendTo>';
                existingXML += sendton;
                existingXML += '</SendTo>';

                existingXML += '<Created>';
                existingXML += created;
                existingXML += '</Created>';

                existingXML += '</RenewalComment>';

            });
        }
        existingXML += '<RenewalComment>';
        existingXML += '<Activity>';
        if (vStatus == "Renewed") {
            var time = moment(new Date()).format('MMMM Do YYYY, h:mm A');
            existingXML += localStorage.UserName + ' has renewed the term' + item.RenewableTermName + ' on ' + time;

        }
        else if (vStatus == "Expired") {
            var time = moment(new Date()).format('MMMM Do YYYY, h:mm A');
            existingXML += localStorage.UserName + ' has expired the term' + item.RenewableTermName + ' on ' + time;
        }
        existingXML += '</Activity>';

        existingXML += '<Comments>';
        existingXML += note;
        existingXML += '</Comments>';

        existingXML += '<SendTo>';
        existingXML += sendTo;
        existingXML += '</SendTo>';

        existingXML += '<Created>';
        existingXML += new Date();
        existingXML += '</Created>';

        existingXML += '</RenewalComment>';
        existingXML += '</RenewalComments>';


        item.RenewalCommentsXML = existingXML;



        var vRenewedBy = localStorage.UserName;
        var vRenewalType = "Manual";
        var vRenewedOn = $.datepicker.formatDate('mm/dd/yy', new Date())
        var vRenewedOnDisplay = "";
        var vfRenewedDisplay = "";
        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
            fRenewedDisplay = moment(new Date()).format('MM/DD/YYYY');
        }
        else {
            fRenewedDisplay = moment(new Date()).format(localStorage.AppDateFormat);
        }
        vfRenewedDisplay = fRenewedDisplay;
        var vModified = $.datepicker.formatDate('mm/dd/yy', new Date());
        var vModifiedBy = localStorage.UserName;


        if (vStatus == "Renewed") {
            vRenewalChecklist = vRenewalChecklist != "" ? vRenewalChecklist : item.RenewalChecklist;
            $("#loadingPage").fadeIn();
            //Start Ajax
            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + vContractID + '/renewalhistory',
                type: 'POST',
                dataType: 'json',
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging, 'UserName': localStorage.UserName, 'Comments': note.replace(/\n/g, " ")
                },
                data: {
                    ContractID: item.ContractID,
                    RenewableTermName: item.RenewableTermName,
                    RenewedFor: item.RenewedFor,
                    RenewedBy: vRenewedBy,
                    RenewedOn: vRenewedOn,
                    RenewedDate: item.RenewedDate,
                    NextRenewalDate: item.NextRenewalDate,
                    TermEndDate: item.TermEndDate,
                    Status: vStatus,
                    TermStatus: item.TermStatus,
                    Created: item.Created,
                    CreatedBy: item.CreatedBy,
                    Modified: vModified,
                    ModifiedBy: vModifiedBy,
                    RenewalType: vRenewalType,
                    RenewalNotes: item.RenewalNotes,
                    RenewalChecklist: vRenewalChecklist,
                    RenewalNotificationInternal: item.RenewalNotificationInternal,
                    ContractTermEach: item.ContractTermEach,
                    ContractTermChoicesEach: item.ContractTermChoicesEach,
                    RenewalConfirmParticipantsXML: item.RenewalConfirmParticipantsXML,
                    RenewalConfirmParticipants: item.RenewalConfirmParticipants,
                    RenewalConfirmParticipantsCC: item.RenewalConfirmParticipantsCC,
                    RenewalConfirmSendDate: item.ContractConfirmSendDate,
                    ContractConfirmSendTerm: item.ContractConfirmSendTerm,
                    RowKey: item.RowKey,
                    RenewalCommentsXML: item.RenewalCommentsXML
                },
                cache: false,
                success: function (data) {
                    $("#txtExpireRenewSlider").val('');
                    $('input[type="checkbox"][name="checkboxNotifyNewSlide"]').prop('checked', false);
                    BindContractItem();
                    $("#loadingPage").fadeOut();
                    swal("", "Renew Completed");
                    if ($("ul#UpcomingTaskSlider").has("li#RenewLI").length !== 0) {
                        $("#RenewLI").remove();
                        if (vSliderCounter != 0) {
                            --vSliderCounter;
                        }
                        $("#SliderCount").html(vSliderCounter);
                        CheckSlider();
                    }
                    //location.reload();
                },
                error: function (data) {
                    $("#txtExpireRenewSlider").val('');
                    $('input[type="checkbox"][name="checkboxNotifyNewSlide"]').prop('checked', false);
                    $("#loadingPage").fadeOut();
                    swal("", data);
                },
                complete: function () {
                    $("#loadingPage").fadeOut();
                }
            });
            //End Ajax
        }
        else if (vStatus == "Expired") {
            $("#loadingPage").fadeIn();
            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + vContractID + '/ContractTermEmailTaskExpire?TermName=' + item.RenewableTermName,
                type: 'POST',
                dataType: 'json',
                data: {
                    ContractID: vContractID,
                    TermCommentsXML: existingXML
                },
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging, 'UserName': localStorage.UserName, 'Comments': note.replace(/\n/g, " ")
                },
                cache: false,
                success: function (data) {
                    $("#txtExpireRenewSlider").val('');
                    $('input[type="checkbox"][name="checkboxNotifyNewSlide"]').prop('checked', false);
                    BindContractItem();
                    $("#loadingPage").fadeOut();
                    swal("", "Term Expired.");
                    if ($("ul#UpcomingTaskSlider").has("li#RenewLI").length !== 0) {
                        $("#RenewLI").remove();
                        if (vSliderCounter != 0) {
                            --vSliderCounter;
                        }
                        $("#SliderCount").html(vSliderCounter);
                        CheckSlider();
                    }
                    $("#loadingPage").fadeOut();
                },
                error: function (data) {
                    $("#txtExpireRenewSlider").val('');
                    $('input[type="checkbox"][name="checkboxNotifyNewSlide"]').prop('checked', false);
                    $("#loadingPage").fadeOut();
                },
            });
        }
        return true;
    }


}

function CheckSlider(actionvalue) {
    if (contractItem.Status == "Expired" || contractItem.Status == "Cancelled" || contractItem.Status == "Replaced" || contractItem.Status == "Archived") {
        $('#clickme').css("display", "none");
        $(".mydiv").css("display", "none");
    }
    else {
        if ($('#SliderCount').html() == "0") {
            $('#clickme').css("display", "none");
            $(".mydiv").css("display", "none");
        }
        else {
            $('#clickme').css("display", "");
            $(".mydiv").css("display", "");
            if (!($('#UpcomingTaskSlider').children().length > 1)) {
                $('#UpcomingTaskSlider').css({
                    marginLeft: "0px"
                });
                $('.mydiv').css("left", "-0");
                $(".notification-arrow").toggleClass("addArrow");
            }

            if ($('#UpcomingTaskSlider').children().length == 1) {
                $('.control_prev').css("display", "none");
                $('.control_next').css("display", "none");
            }
            else {
                $('.control_prev').css("display", "");
                $('.control_next').css("display", "");
            }
            var classExist = false;
            if ($('#UpcomingTaskSlider').children().length > 1) {
                $('#UpcomingTaskSlider li').each(function (i) {
                    if ($(this).attr('class') == 'firstLI') {
                        classExist = true;
                    }

                });
            }
            if (!classExist)
                $("#UpcomingTaskSlider li:first").addClass("firstLI");

        }
        if (actionvalue == "Yes") {
            $(".mydiv").css("display", "none");
            $("#loadingPage").fadeOut();
        }
    }

}

//ENH485  Featured metadata
function showMetadataWithFeaturedMeta() {
    var str = "";
    var value = "";
    var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
    var vDocLibFeat = $.grep(veContractFeatures, function (n, i) {
        return (n.RowKey == "19" && n.Status == "ON");
    });
    $('#MetadataAll').html('');
    if (GetallMetadataWithCT != null && GetallMetadataWithCT != []) {
        $(GetallMetadataWithCT).each(function (i, item) {
            if (item.FieldName != "BusinessArea" && item.FieldName != "ContractType" && item.FieldName != "ContractTitle" && item.FieldName != "Counterparty" && item.FieldName != "ContractNumber" &&
            item.FieldName != "SharedwithInternal" && item.FieldName != "Approvers" && item.FieldName != "ContractManagers" && item.FieldName != "Reviewers" && item.FieldName != "ExternalSignees" &&
                item.FieldName != "RelatedContracts" && item.FieldType != "File Upload" && item.FieldName != "Signees" && item.FieldName != "CompanyProfile") { //Bug id:eO37576
                //if (item.FeaturedMetadata == "true") {
                if (item.FieldName == "ContractValue") {
                    value = $(icontractItem).find(item.FieldName).text();
                    str = '<tr>' +
                           '<td height="10" align="left" valign="top" class="content-text clr999 width40" style="word-break: break-word;">' + item.FieldDisplayName + '</td>';
                    if (value != "") {
                        str += '<td height="10" align="left" valign="top" class="content-text width58">' + '<span class="content-text" id=' + item.FieldName + '_formatted' + '>' + value + '</span>' + '<span> ' + $("#hdnContractCurrency").text() + '</span>' + '</td>';
                    }
                    else {
                        str += '<td height="10" align="left" valign="top" class="content-text width58"> Not Available</td>';
                    }
                    str += '</tr>';
                }
                else if (item.FieldName == "BaseContractValue") {
                    value = $(icontractItem).find(item.FieldName).text();
                    str = '<tr>' +
                           '<td height="10" align="left" valign="top" class="content-text clr999 width40" style="word-break: break-word;">' + item.FieldDisplayName + '</td>';
                    if (value != "") {
                        str += '<td height="10" align="left" valign="top" class="content-text width58">' + '<span class="content-text" id=' + item.FieldName + '_formatted' + '>' + value + '</span>' + '<span> ' + $("#hdnBaseContractCurrency").text() + '</span>' + '</td>';
                    }
                    else {
                        str += '<td height="10" align="left" valign="top" class="content-text width58"> Not Available</td>';
                    }
                    str += '</tr>';

                }
                else if (item.FieldType == 'Date') {
                    var date = $(icontractItem).find(item.FieldName).text();
                    if (date != null) {
                        var onlydate = "";
                        onlydate = date.substring(0, date.length - 19);
                    }
                    if (onlydate != "") {
                        if (localStorage.AppDateFormat == null || localStorage.AppDateFormat == "" || localStorage.AppDateFormat == 'undefined') {
                            onlydate = moment(new Date(onlydate)).format('MM/DD/YYYY');
                        }
                        else {
                            onlydate = moment(new Date(onlydate)).format(localStorage.AppDateFormat);
                        }
                    }
                    str = '<tr>' +
                           '<td height="10" align="left" valign="top" class="content-text clr999 width40" style="word-break: break-word;">' + item.FieldDisplayName + '</td>';
                    if (onlydate != "") {
                        str += '<td height="10" align="left" valign="top" class="content-text width58">' + onlydate + '</td>';
                    }
                    else {
                        str += '<td height="10" align="left" valign="top" class="content-text width58"> Not Available</td>';
                    }

                    str += '</tr>';
                } else if (item.FieldType.indexOf("Value / Financials") >= 0) {
                    value = $(icontractItem).find(item.FieldName).text();
                    str = '<tr>' +
                           '<td height="10" align="left" valign="top" class="content-text clr999 width40" style="word-break: break-word;">' + item.FieldDisplayName + '</td>';
                    if (value != "" && value != ".") {
                        str += '<td height="10" align="left" valign="top" class="content-text width58">' + '<span class="content-text" id=' + item.FieldName + '_formatted' + '>' + value + '</span>' + '<span> ' + $("#hdnContractCurrency").text() + '</span>' + '</td>';
                    }
                    else {
                        str += '<td height="10" align="left" valign="top" class="content-text width58"> Not Available</td>';
                    }

                    str += '</tr>';

                }
                else if (item.FieldType.indexOf("Phone Number") >= 0) {
                    if (typeof ($(icontractItem).find(item.FieldName).text()) != "undefined" && $(icontractItem).find(item.FieldName).text() != null && $(icontractItem).find(item.FieldName).text() != "") {
                        if (typeof ($(icontractItem).find(item.FieldName).text().split(',')[2]) != "undefined" && $(icontractItem).find(item.FieldName).text().split(',')[2] != null && $(icontractItem).find(item.FieldName).text().split(',')[2] != "") {
                            value = '+' + $(icontractItem).find(item.FieldName).text().split(',')[2].trim();
                        }
                        else {
                            value = ' Not Available';
                        }
                    }
                    else {
                        value = ' Not Available';
                    }
                    str = '<tr>' +
                           '<td height="10" align="left" valign="top" class="content-text clr999 width40" style="word-break: break-word;">' + item.FieldDisplayName + '</td>';
                    if (value != "") {
                        str += '<td height="10" align="left" valign="top" class="content-text width58">' + value + '</td>';
                    }
                    else {
                        str += '<td height="10" align="left" valign="top" class="content-text width58"> Not Available</td>';
                    }

                    str += '</tr>';

                }
                else if (item.FieldType.indexOf("Yes/No") >= 0) {
                    str = '<tr>' +
                       '<td height="10" align="left" valign="top" class="content-text clr999 width40" style="word-break: break-word;">' + item.FieldDisplayName + '</td>';
                    if (typeof ($(icontractItem).find(item.FieldName).text()) != "undefined" && $(icontractItem).find(item.FieldName).text() != null && $(icontractItem).find(item.FieldName).text() != "") {
                        str += '<td height="10" align="left" valign="top" class="content-text width58" style="word-break: break-word;">' + $(icontractItem).find(item.FieldName).text();

                        //Comment Field
                        if ($(icontractItem).find(item.FieldName).text() == "Yes") {
                            if (item.CommentYes == "true") {
                                if (typeof ($(icontractItem).find('CustomCMD' + item.FieldName).text()) != "undefined") {
                                    if ($(icontractItem).find('CustomCMD' + item.FieldName).text() != "" && $(icontractItem).find('CustomCMD' + item.FieldName).text() != null) {
                                        str += '<br />' + $(icontractItem).find('CustomCMD' + item.FieldName).text();
                                    }
                                    else {
                                        str += '<br /> Not Available';
                                    }
                                }
                            }
                            else {
                                //str += '<br />-';
                            }
                        }
                        else {
                            if (item.CommentNo == "true") {
                                if (typeof ($(icontractItem).find('CustomCMD' + item.FieldName).text()) != "undefined") {
                                    if ($(icontractItem).find('CustomCMD' + item.FieldName).text() != "" && $(icontractItem).find('CustomCMD' + item.FieldName).text() != null) {
                                        str += '<br />' + $(icontractItem).find('CustomCMD' + item.FieldName).text();
                                    }
                                    else {
                                        str += '<br /> Not Available';
                                    }
                                }
                            }
                            else {
                                //str += '<br />-';
                            }
                        }

                        str += '</td>';
                    }
                    else {
                        str += '<td height="10" align="left" valign="top" class="content-text width58"> Not Available</td>';
                    }
                    str += '</tr>';

                    //if (typeof ($(icontractItem).find('CustomCMD' + item.FieldName).text()) != "undefined" && $(icontractItem).find('CustomCMD' + item.FieldName).text() != null && $(icontractItem).find('CustomCMD' + item.FieldName).text() != "") {
                    //    str += '<tr>' +
                    //       '<td height="10" align="left" valign="top" class="content-text clr999 width40" style="word-break: break-word;"></td>';
                    //    str += '<td height="10" align="left" valign="top" class="content-text width58" style="word-break: break-word;">' + $(icontractItem).find('CustomCMD' + item.FieldName).text() + '</td>';

                    //    str += '</tr>';
                    //}
                }
                    //Added by Jay
                else if (item.FieldType == 'Number-P' || item.FieldType == 'Number-PD') {
                    str = '<tr>' +
                         '<td height="10" align="left" valign="top" class="content-text clr999 width40" style="word-break: break-word;">' + item.FieldDisplayName + '</td>';
                    if (typeof ($(icontractItem).find(item.FieldName).text()) != "undefined" && $(icontractItem).find(item.FieldName).text() != null && $(icontractItem).find(item.FieldName).text() != "") {
                        str += '<td height="10" align="left" valign="top" class="content-text width58">' + $(icontractItem).find(item.FieldName).text() + ' %</td>';
                    }
                    else {
                        str += '<td height="10" align="left" valign="top" class="content-text width58"> Not Available</td>';
                    }
                }
                else {
                    str = '<tr>' +
                       '<td height="10" align="left" valign="top" class="content-text clr999 width40" style="word-break: break-word;">' + item.FieldDisplayName + '</td>';
                    if (typeof ($(icontractItem).find(item.FieldName).text()) != "undefined" && $(icontractItem).find(item.FieldName).text() != null && $(icontractItem).find(item.FieldName).text() != "") {
                        //Rahul
                        if (item.FieldType == 'Hyperlink') {
                            var link = $(icontractItem).find(item.FieldName).text();
                            str += '<td height="10" align="left" valign="top" class="width58 labelleft">' + '<a href="' + link + '" target="_blank"><p title="' + link + '" style="width:190px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;font-size:13px">' + link + '</p></a>' + '</td>';
                        }
                            //Rahul    
                        else if ($(icontractItem).find(item.FieldName).text() != '0' || $(icontractItem).find(item.FieldName).text() != 0)
                            str += '<td height="10" align="left" valign="top" class="content-text width58" style="word-break: break-word;">' + $(icontractItem).find(item.FieldName).text() + '</td>';
                        else
                            str += '<td height="10" align="left" valign="top" class="content-text width58" style="word-break: break-word;"> Not Available </td>';
                    }
                    else {
                        str += '<td height="10" align="left" valign="top" class="content-text width58"> Not Available</td>';
                    }

                    str += '</tr>';
                }
                //}
            }
            $('#MetadataAll').append(str);
            str = "";
            //if (item.FieldType.indexOf("Value / Financials") >= 0 || item.FieldName == "ContractValue" || item.FieldName == "BaseContractValue") {
            //    if (vDocLibFeat.length > 0 && value != "") {
            //        if ($.isNumeric($('#' + item.FieldName + '_formatted').html())) {
            //            if (vCurrencyDisplayStyle == "UK") {
            //                $('#' + item.FieldName + '_formatted').autoNumeric();
            //            } else if (vCurrencyDisplayStyle == "CAN") {
            //                $('#' + item.FieldName + '_formatted').autoNumeric({
            //                    aSep: ' ', aDec: '.'
            //                });
            //            } else if (vCurrencyDisplayStyle == "EU") {
            //                $('#' + item.FieldName + '_formatted').autoNumeric({
            //                    aSep: '.', aDec: ','
            //                });
            //            } else if (vCurrencyDisplayStyle == "IND") {
            //                $('#' + item.FieldName + '_formatted').autoNumeric({
            //                    dGroup: '2',
            //                });
            //            } else {
            //                $('#' + item.FieldName + '_formatted').autoNumeric('init');
            //            }
            //        }
            //    }
            //}
        });
    }
    FinancialMetadata();
}
function FinancialMetadata() {
    $('#tblcontractvaluepopup tr.financeclass').remove();
    var str = "";
    var MyPipeline = $("#aNavPipeline").hasClass("actNav");
    var MyContracts = $("#aNavContracts").hasClass("actNav");
    var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));

    var vAccFeatObligation = $.grep(veContractFeatures, function (n, i) {
        return (n.RowKey == "19" && n.Status == "ON");
    });

    if (vAccFeatObligation.length > 0) {
        var datalength = GetallFinancialMetadataWithCT.length;
        $("#tblFinancialMetadata").html('');
        //Binding Financial Metadata
        str += '<tbody>';
        for (var i = 0; i < GetallFinancialMetadataWithCT.length; i++) {
            var data = GetallFinancialMetadataWithCT[i];
            if (data.FieldName != "BusinessArea" && data.FieldName != "ContractType" && data.FieldName != "ContractTitle" && data.FieldName != "Counterparty") {

                if (data.FieldType == 'Date') {
                    var date = $(icontractItem).find(data.FieldName).text();
                    onlydate = "";
                    if (date != null) {
                        onlydate = date.substring(0, date.length - 19);

                    }
                    if (onlydate != "") {
                        if (localStorage.AppDateFormat == null || localStorage.AppDateFormat == "" || localStorage.AppDateFormat == 'undefined') {
                            onlydate = moment(new Date(onlydate)).format('MM/DD/YYYY');
                        }
                        else {
                            onlydate = moment(new Date(onlydate)).format(localStorage.AppDateFormat);
                        }
                    }
                    str += '<tr>' +
                               '<td height="10" align="left" valign="top" class="content-text clr999 width40" style="word-break: break-word;">' + data.FieldDisplayName + '</td>';
                    if (onlydate != "") {
                        str += '<td height="10" align="left" valign="top" class="content-text width58">' + onlydate + '</td>';
                    }
                    else {
                        str += '<td height="10" align="left" valign="top" class="content-text width58"> Not Available</td>';
                    }
                    str += '</tr>';
                }
                else if (data.FieldType == 'Number-P' || data.FieldType == 'Number-PD') {
                    str += '<tr>' +
                            '<td height="10" align="left" valign="top" class="content-text clr999 width40" style="word-break: break-word;">' + data.FieldDisplayName + '</td>';
                    if (typeof ($(icontractItem).find(data.FieldName).text()) != "undefined" && $(icontractItem).find(data.FieldName).text() != null && $(icontractItem).find(data.FieldName).text() != "") {
                        str += '<td height="10" align="left" valign="top" class="content-text width58">' + $(icontractItem).find(data.FieldName).text() + ' %</td>';
                    }
                    else {
                        str += '<td height="10" align="left" valign="top" class="content-text width58"> Not Available</td>';
                    }
                    str += '</tr>';
                }
                else {
                    str += '<tr>' +
                               '<td height="10" align="left" valign="top" class="content-text clr999 width40" style="word-break: break-word;">' + data.FieldDisplayName + '</td>';
                    if (typeof ($(icontractItem).find(data.FieldName).text()) != "undefined" && $(icontractItem).find(data.FieldName).text() != null && $(icontractItem).find(data.FieldName).text() != "") {
                        str += '<td height="10" align="left" valign="top" class="content-text width58">' + $(icontractItem).find(data.FieldName).text() + '</td>';
                    }
                    else {
                        str += '<td height="10" align="left" valign="top" class="content-text width58"> Not Available</td>';
                    }
                    str += '</tr>';
                }
            }
        }
        str += '</tbody>';
        $("#tblFinancialMetadata").append(str);
        str = '';
        //To Edit Financial Metadata
        for (var i = 0; i < datalength; i++) {
            var data = GetallFinancialMetadataWithCT[i];
            var inpstr = "";
            var onlydate = "";
            var vMultiDDL1 = "";
            var resValue = "";
            var multiarr = [];
            var vDate = "";

            if (data.FieldType == 'Single Line Text' || data.FieldType == 'Number' || data.FieldType == 'Number-D') {
                //if (MyPipeline || MyContracts) {
                str += '<tr class="financeclass">';
                str += '<td class="f_head"  style="height:35px;">' + data.FieldDisplayName + '</td>';
                if ($(icontractItem).find(data.FieldName).text() !== "") {
                    inpstr = '<input id="' + data.FieldName + '" name="' + data.FieldName + '" title="' + data.FieldDisplayName + '" maxlength="100" type="text" class="f_inpt width90" value="' + $(icontractItem).find(data.FieldName).text() + '" />';
                    str += '<td  class="labelright f_list financials">' + inpstr + '';
                }
                else {
                    inpstr = '<input id="' + data.FieldName + '" name="' + data.FieldName + '" title="' + data.FieldDisplayName + '" maxlength="100" type="text" class="f_inpt width90" />';
                    str += '<td  class="labelright f_list financials">' + inpstr + '';
                }
                str += '</td></tr>';
                // }
            }
            if (data.FieldType == 'Number-P' || data.FieldType == 'Number-PD') {

                str += '<tr class="financeclass">';
                str += '<td class="f_head"  style="height:35px;">' + data.FieldDisplayName + '</td>';
                if ($(icontractItem).find(data.FieldName).text() !== "") {
                    inpstr = '<input id="' + data.FieldName + '" name="' + data.FieldName + '" title="' + data.FieldDisplayName + '" maxlength="100" type="text" class="f_inpt width90" value="' + $(icontractItem).find(data.FieldName).text() + '" />';
                    str += '<td  class="labelright f_list financials">' + inpstr + '';
                    str += '<label class="margin-top-8" >' + '%' + '</label>';
                }
                else {
                    inpstr = '<input id="' + data.FieldName + '" name="' + data.FieldName + '" title="' + data.FieldDisplayName + '" maxlength="100" type="text" class="f_inpt width90" />';
                    str += '<td  class="labelright f_list financials">' + inpstr + '';
                    str += '<label class="margin-top-8" >' + '%' + '</label>';
                }
                str += '</td></tr>';

            }
            else if (data.FieldType == 'Multi Line Text') {
                str += '<tr class="financeclass">';
                str += '<td class="f_head" style="height:35px;margin-top:-15%;">' + data.FieldDisplayName + '</td>';
                if ($(icontractItem).find(data.FieldName).text() !== "") {
                    inpstr = "<textarea name=" + data.FieldName + " id=" + data.FieldName + " maxlength='500' cols='50' rows='4' style='border:1px solid #ccc;height: 70px; font-size: 13px;color: #6c6c6c;' title='" + data.FieldDisplayName + "' class='width90 clsMultilineText'>" + $(icontractItem).find(data.FieldName).text() + "</textarea>";
                    str += '<td class="labelright f_list financials">' + inpstr + '';
                }
                else {
                    inpstr = "<textarea name=" + data.FieldName + " id=" + data.FieldName + " maxlength='500' cols='50' rows='4' style='border:1px solid #ccc;height: 70px; font-size: 13px;color: #6c6c6c;' class='width90 clsMultilineText' title='" + data.FieldDisplayName + "'></textarea>";
                    str += '<td class="labelright f_list financials">' + inpstr + '';
                }
                str += '</td></tr>';
            }
            else if (data.FieldType == 'Date') {
                var vv = $(icontractItem).find(data.FieldName).text();
                if (vv != null) {
                    onlydate = vv.substring(0, vv.length - 19);
                }
                if (onlydate != "") {
                    if (localStorage.AppDateFormat == null || localStorage.AppDateFormat == "" || localStorage.AppDateFormat == 'undefined') {
                        onlydate = moment(new Date(onlydate)).format('MM/DD/YYYY');
                    }
                    else {
                        onlydate = moment(new Date(onlydate)).format(localStorage.AppDateFormat);
                    }
                }
                str += '<tr class="financeclass">';
                str += '<td class="f_head" style="height:35px;">' + data.FieldDisplayName + '</td>';
                if (onlydate !== "") {
                    inpstr = "<input type='text' id='" + data.FieldName + "' name='" + data.FieldName + "' class='f_inpt width60 fielddatecontrol removeText' value='" + onlydate + "' title='" + data.FieldName + "'/>";
                    str += '<td class="labelright f_list fielddatecontrol">' + inpstr + '';

                }
                else {
                    inpstr = '<input id="' + data.FieldName + '" name="' + data.FieldName + '" title="' + data.FieldDisplayName + '" maxlength="15" type="text" class="f_inpt width60 fielddatecontrol removeText" />';
                    str += '<td class="labelright f_list fielddatecontrol">' + inpstr + '';
                }
                str += '</td></tr>';
                //vDate = data.FieldName;

            }
            else if (data.FieldType == 'Multi- Choice (Dropdown)') {
                if (MyContracts || MyPipeline) {
                    str += '<tr class="financeclass">';
                    str += '<td class="f_head"  style="height:35px;">' + data.FieldDisplayName + '</td>';
                    inpstr = "<select id=" + data.FieldName + " multiple='multiple' class='f_inpt width90' name=" + data.FieldName + " title='" + data.FieldName + "' data-placeholder='--Select--'>";
                    str += '<td class="labelright f_list chosenmulti chosen-choices" style="padding-right:35px;">' + inpstr + '';
                    if (vMultiDDL1 == '') {
                        var myArray = [];
                        myArray = data.ChoiceValues.split("\n");
                        for (var j = 0; j < myArray.length; j = j + 1) {
                            vMultiDDL1 += "<option value='" + myArray[j] + "'>" + myArray[j] + "</option>";
                        }
                    }
                    str += vMultiDDL1;
                    str += '</select></td></tr>';
                    vMultiDDL1 = data.FieldName;
                }
            }
            else if (data.FieldType == 'Multi- Choice (Browse)') {
                str += '<tr class="financeclass">';
                str += '<td class="f_head"  style="height:35px;">' + data.FieldDisplayName + '</td>';
                if ($(icontractItem).find(data.FieldName).text() !== "") {
                    inpstr = '<input id="' + data.FieldName + i + '" readonly="readonly" name="' + data.FieldName + '" title="' + data.FieldDisplayName + i + '" maxlength="100" type="text" class="f_inpt width90" value="' + $(icontractItem).find(data.FieldName).text() + '" />';
                    str += '<td  class="labelright f_list financials">' + inpstr + '';
                }
                else {
                    inpstr = '<input id="' + data.FieldName + i + '" readonly="readonly" name="' + data.FieldName + '" title="' + data.FieldDisplayName + i + '" maxlength="100" type="text" class="f_inpt width90" />';
                    str += '<td  class="labelright f_list financials">' + inpstr + '';
                }
                //str += '</td></tr>';
                str += '</td>';
                str += '<td class="col3 m1">';
                str += "<a href='javascript:void(0)' class='font12' style='margin-left:-30px !important;color: #3F91CC !important;' id='" + data.FieldDisplayName + "' title='" + data.FieldName + i + "' onclick='ViewGeneric(this)'> Browse</a>";
                str + "</td></tr>";
            }
            else if (data.FieldType == 'Choice') {
                //if (MyContracts || MyPipeline) {
                str += '<tr class="financeclass">';
                str += '<td class="f_head" style="height:35px;">' + data.FieldDisplayName + '</td>';
                inpstr = "<select id='" + data.FieldName + "' name=" + data.FieldName + " class='f_inpt width90 choicevaluecheck' title='" + data.FieldName + "' data-placeholder='--Select--'>";
                str += '<td class="labelright f_list financials">' + inpstr + '';
                str += "<option value=''>--Select--</option>";
                var myArray1 = [];
                myArray1 = data.ChoiceValues.split("\n");
                for (var l = 0; l < myArray1.length; l = l + 1) {
                    do {
                        myArray1[l] = myArray1[l].replace("&amp;", "&");
                    } while (myArray1[l].indexOf("&amp;") > -1)
                    if ($(icontractItem).find(data.FieldName).text() == myArray1[l]) {
                        str += "<option value='" + myArray1[l] + "' selected>" + myArray1[l] + "</option>";
                    } else {
                        str += "<option value='" + myArray1[l] + "'>" + myArray1[l] + "</option>";
                    }
                }
                str += '</select></td></tr>';

                //}
            }
            if (str !== "") {
                $("#tblcontractvaluepopup").append(str);
                //Apply Datepicker Jquery
                if (data.FieldType == "Date") {
                    var dateformate = localStorage.AppDateFormat.toLowerCase().slice(0, -2);
                    $("#" + data.FieldName + "").datepicker({
                        changemonth: true,
                        changeyear: true,
                        dateFormat: dateformate
                    });
                }
                if (data.FieldType == 'Number') {
                    allowOnlyNumberInInputBox(data.FieldName);
                }
                if (data.FieldType == 'Number-P') {
                    allowOnlyNumberInInputBox(data.FieldName);
                }
                if (data.FieldType == 'Number-D') {
                    allowOnlyDecimalNumberInInputBox(data.FieldName);
                }
                if (data.FieldType == 'Number-PD') {
                    allowOnlyDecimalNumberInInputBox(data.FieldName);
                }

                if (vMultiDDL1 != "") {
                    $("#" + vMultiDDL1 + "").chosen().trigger("chosen:updated");
                    var values = $(icontractItem).find(vMultiDDL1).text();
                    if (values != "") {
                        //HideOptionsNotRequiredExcept(vMultiDDL1, values);
                        var res = values != null ? values.split(";") : [];
                        var reslength = res.length;
                        for (var k = 0; k < reslength; k++) {
                            resValue = res[k].trim();
                            if (resValue != "") {
                                if ($('#' + vMultiDDL1 + ' option[value="' + resValue + '"]').length > 0 && multiarr.indexOf(resValue) == -1)
                                    multiarr.push(resValue);
                            }
                        }
                        if (multiarr.length > 0)
                            ChosenOrder.setSelectionOrder($('#' + vMultiDDL1), multiarr, true);
                    }
                    resValue = "";
                    vMultiDDL1 = "";
                    multiarr = [];
                }
                str = "";

            }
        }
    }
}

//ENH485  Featured metadata
function icontractdetails() {
    icontractItem = "";
    MethodCount += 1;
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/IContractDetails?contractid=' + getParameterByName("ContractID"),
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (mainmetadataFields) {
            icontractItem = $(mainmetadataFields).find('Metadata');
            showMetadataWithFeaturedMeta();
        },
        error: function (mainmetadataFields) {
        }
    });
}


//ENH492 - Workflow Cycle time Report & default naming of stages.
function getworkflowrules() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Workflow/WorkflowRules',
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            var vCount = data.WorkflowRules.length;
            for (var j = 0; j < vCount; j++) {
                var item = data.WorkflowRules[j];
                var participantsInXML = item.ParticipantsInXML;
                $(participantsInXML).find('WorkflowPaticipant').each(function () {
                    var StageTitle = $(this).find('StageTitle').text();
                    if (StageName.indexOf(StageTitle) === -1) {
                        StageName.push(StageTitle);
                    }
                });
            }
        },
    });
}
//ENH476- Related Contracts - UI Change  start
function getRelatedContractDetails(relatedContrID) {
    $("#loadingPage").fadeIn();
    var contrRecord = "";
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts?contractid=' + relatedContrID,
        type: 'GET',
        cache: false,
        contentType: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, UserID: localStorage.UserID
        },
        processData: false,
        success: function (data) {
            contrRecord = data;
            var contractRecordLink = "/Contracts/ContractDetails?ContractID=" + relatedContrID + "";
            $("#dialogSummaryForRelatedContract").dialog("option", "title", contrRecord.ContractTitle)
            $("#tdSumContractNumberRelatedContract").html((contrRecord.ContractNumber != null && contrRecord.ContractNumber != "") ? contrRecord.ContractNumber : '-');
            $("#tdSumContractTypeRelatedContract").html(contrRecord.ContractType);
            $("#relatedContractHref").prop("href", contractRecordLink);
            $("#relatedContractHref").attr("target", "_blank");
            getRelaContrDetails(contrRecord);
            getRelatedContractTerm(contrRecord);
            $('#tblContractTermHistoryActivityDetails').css("display", "none");
            SummaryDetails();
        },
        error: function (data) {
            swal("", "No data are present for this related contract...");
        }
    });

}
function getRelaContrDetails(contrRecord) {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/IContractDetails?contractid=' + contrRecord.RowKey,
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (mainmetadataFields) {
            var vMetadata = $(mainmetadataFields).find('Metadata');
            var vMetadataHTML = vMetadata[0].innerHTML;
            $.ajax({
                url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contracttypes/metadatas?contracttypename=' + encodeURIComponent(contrRecord.ContractType),
                type: 'GET',
                dataType: 'json',
                headers: {
                    'eContracts-ApiKey': localStorage.APIKey
                },
                cache: false,
                success: function (metadataFields) {
                    showDocumentsForRelatedContracts(contrRecord.RowKey, contrRecord);
                    $("#tblSummaryMetadataForRelatedContract").html('');
                    var datalenght = metadataFields.length;
                    for (var i = 0; i < datalenght; i++) {
                        var item = metadataFields[i];
                        var fieldtext = $(vMetadata).find(item.FieldName).text();

                        if ((item.FieldName != "ContractTitle") && (item.FieldName != "ContractNumber") && (item.FieldName != "ContractType") && (name != "STATUSCHANGEDALERT")) {
                            var vCurrency = "";
                            var vControls = '<tr>';

                            if (item.FieldDisplayName.trim().toLowerCase().indexOf("related contract (s)") >= 0)
                                vControls += '<td class="f_head width60">Related Contract Record(s)</td>';
                            else
                                vControls += '<td class="f_head width90">' + item.FieldDisplayName + '</td>';

                            // }
                            var valuetobindinfield = "";
                            if (item.FieldType == "Date") {
                                var vv = $(vMetadata).find(item.FieldName).text();
                                var onlydate = "";
                                if (vv != null) {
                                    onlydate = vv.substring(0, vv.length - 19);
                                    if (onlydate != "") {
                                        if (localStorage.AppDateFormat == null || localStorage.AppDateFormat == "" || localStorage.AppDateFormat == 'undefined') {
                                            onlydate = moment(new Date(onlydate)).format('MM/DD/YYYY');
                                        }
                                        else {
                                            onlydate = moment(new Date(onlydate)).format(localStorage.AppDateFormat);
                                        }
                                    }
                                    vControls += '<td class="labelleft width60" style="word-break: break-all;">' + onlydate + '</td>';
                                }
                            } else if (item.FieldName == "ContractValue" || item.FieldType == "Currency") {
                                vCurrency = item.FieldName;
                                valuetobindinfield = ($(vMetadata).find(item.FieldName).text() != null && $(vMetadata).find(item.FieldName).text() != "") ? $(vMetadata).find(item.FieldName).text() : "0.00";
                                vControls += '<td class="labelleft width60" style="word-break: break-all;"><label id="' + item.FieldName + '">' + valuetobindinfield + '</label> ' + $("#hdnContractCurrency").text() + '</td>';
                                valuetobindinfield = "";

                            }
                            else if (item.FieldType == "Phone Number") {
                                if (typeof ($(vMetadata).find(item.FieldName).text()) != "undefined" && $(vMetadata).find(item.FieldName).text() != null && $(vMetadata).find(item.FieldName).text() != "") {
                                    if (typeof ($(vMetadata).find(item.FieldName).text().split(',')[2]) != "undefined" && $(vMetadata).find(item.FieldName).text().split(',')[2] != null && $(vMetadata).find(item.FieldName).text().split(',')[2] != "") {
                                        vControls += '<td class="labelleft width60" style="word-break: break-all;"> +' + $(vMetadata).find(item.FieldName).text().split(',')[2].trim() + '</td>';
                                    }
                                    else {
                                        vControls += '<td class="labelleft width60" style="word-break: break-all;">-</td>';
                                    }
                                }
                                else {
                                    vControls += '<td class="labelleft width60" style="word-break: break-all;">-</td>';
                                }
                            }
                            else if (item.FieldType == "Number-P" || item.FieldType == "Number-PD") {
                                if (typeof ($(vMetadata).find(item.FieldName).text()) != "undefined" && $(vMetadata).find(item.FieldName).text() != null && $(vMetadata).find(item.FieldName).text() != "") {
                                    vControls += '<td class="labelleft width60" style="word-break: break-all;">' + $(vMetadata).find(item.FieldName).text() + '%</td>';
                                }
                                else {
                                    vControls += '<td class="labelleft width60" style="word-break: break-all;">-</td>';
                                }
                            }
                            else {
                                if (item.FieldName == "ContractTermType") {
                                    valuetobindinfield = ($(vMetadata).find(item.FieldName).text() != null && $(vMetadata).find(item.FieldName).text() != "" && $(vMetadata).find(item.FieldName).text() != "undefined" && $(vMetadata).find(item.FieldName).text() != "0") ? TermTypeDisplayName[$(vMetadata).find(item.FieldName).text()] : "-";
                                    vControls += '<td class="labelleft width60" style="word-break: break-all;">' + valuetobindinfield + '</td>';
                                    valuetobindinfield = "";
                                }
                                else if (item.FieldType == "Yes/No") {
                                    valuetobindinfield = ($(vMetadata).find(item.FieldName).text() != null && $(vMetadata).find(item.FieldName).text() != "") ? $(vMetadata).find(item.FieldName).text() : "-";
                                    vControls += '<td class="labelleft width60" style="word-break: break-all;">' + valuetobindinfield;
                                    if (typeof ($(vMetadata).find('CustomCMD' + item.FieldName).text()) != 'undefined') {
                                        if ($(vMetadata).find(item.FieldName).text() == "Yes") {
                                            if (item.CommentYes == "true") {
                                                if (typeof ($(vMetadata).find('CustomCMD' + item.FieldName).text()) != "undefined") {
                                                    if ($(vMetadata).find('CustomCMD' + item.FieldName).text() != "" && $(vMetadata).find('CustomCMD' + item.FieldName).text() != null) {
                                                        vControls += '<br />' + $(vMetadata).find('CustomCMD' + item.FieldName).text();
                                                    }
                                                    else {
                                                        vControls += '<br />-';
                                                    }
                                                }
                                            }
                                            else {
                                                //str += '<br />-';
                                            }
                                        }
                                        else {
                                            if (item.CommentNo == "true") {
                                                if (typeof ($(vMetadata).find('CustomCMD' + item.FieldName).text()) != "undefined") {
                                                    if ($(vMetadata).find('CustomCMD' + item.FieldName).text() != "" && $(vMetadata).find('CustomCMD' + item.FieldName).text() != null) {
                                                        vControls += '<br />' + $(vMetadata).find('CustomCMD' + item.FieldName).text();
                                                    }
                                                    else {
                                                        vControls += '<br />-';
                                                    }
                                                }
                                            }
                                            else {
                                                //str += '<br />-';
                                            }
                                        }
                                    }
                                    vControls += '</td>';
                                    valuetobindinfield = "";
                                }
                                else {
                                    valuetobindinfield = ($(vMetadata).find(item.FieldName).text() != null && $(vMetadata).find(item.FieldName).text() != "") ? $(vMetadata).find(item.FieldName).text() : "-";
                                    vControls += '<td class="labelleft width60" style="word-break: break-all;">' + valuetobindinfield + '</td>';
                                    valuetobindinfield = "";
                                }
                            }

                            vControls += '</tr>';
                            $("#tblSummaryMetadataForRelatedContract").append(vControls);
                        }

                    }
                },

            });

        },
    });
}


function BindContractItem(string)  //bug id -  eO37427
{
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts?contractid=' + vContractID,
        type: 'GET',
        cache: false,
        contentType: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, UserID: localStorage.UserID
        },
        processData: false,
        success: function (item) {
            contractItem = item;
            if (typeof (string) != "undefined" && string != null && string != "") {
                if (string == "workflow")
                    $("#lblApprovalWorkflow").text(item.ApprovalWorkflow);
            }

        },
        error: function (item) {
        }
    });
}
function SummaryDetails() {
    $('#tblSummaryRelatedContract').css("display", "");
    $('#tblSummaryMetadataForRelatedContract').css("display", "");
    $('#tblDetailsMetadataRelatedContract').css("display", "none");
    $("#SummaryLI").addClass('pop_up__Acti');
    $("#DocumentLI").removeClass('pop_up__Acti');

    $('#tblContractTermDetails').css("display", "none");
    $("#ContractTermLI").removeClass('pop_up__Acti');
    $('#tblContractTermHistoryActivityDetails').css("display", "none");
}
function DocumentDetails() {
    $('#tblSummaryRelatedContract').css("display", "none");
    $('#tblSummaryMetadataForRelatedContract').css("display", "none");
    $('#tblDetailsMetadataRelatedContract').css("display", "");
    $("#SummaryLI").removeClass('pop_up__Acti');
    $("#DocumentLI").addClass('pop_up__Acti');

    $('#tblContractTermDetails').css("display", "none");
    $("#ContractTermLI").removeClass('pop_up__Acti');
    $('#tblContractTermHistoryActivityDetails').css("display", "none");

}


//ENH476- Related Contracts - UI Change  end


function SelectExistingProject() {

    $('#dvexistingProject').css("display", "");
    $('#dvAddProject').css("display", "none");
}

function SelectAddProject() {

    $('#dvexistingProject').css("display", "none");
    $('#dvAddProject').css("display", "");
}
function checkAwaiting() {
    IsRenewfromTerm = false;
    var participant = "";
    var article = "";
    var status = "";
    $('#AwaitingAuthorisationUL').html('');
    if (contractItem.RenewalConfirmParticipants != "") {
        if (vRenewalConfirmParticipantsXML !== "") {


            if (contractItem.RenewalConfirmParticipants.indexOf(';') > -1) {
                participant = contractItem.RenewalConfirmParticipants.split(';');
                $(participant).each(function (i, arritem) {
                    if (ConfirmParticipationCollection != null) {
                        $(ConfirmParticipationCollection).each(function (i, item) {
                            if (item.Participation.trim() == arritem.trim()) {
                                status = item.status;
                                if (status != "Renewed" && status != "Rejected") {
                                    article += '<li style="padding-left: 10px;padding-top: 5px;color:#000000"><img src="/Content/Images/icon/profile.png" style="cursor:default;padding-right: 5px;">  ' + arritem + '</li>';
                                }
                            }
                        });
                    }

                });
            }
            else {
                if (!(contractItem.RenewalConfirmParticipantsXML.indexOf(contractItem.RenewalConfirmParticipants) > -1)) {
                    article += '<li style="padding-left: 10px;padding-top: 5px;color:#000000"><img src="/Content/Images/icon/profile.png" style="cursor:default;padding-right: 5px;">  ' + contractItem.RenewalConfirmParticipants + '</li>';
                }
            }
        }
        else {
            if (contractItem.RenewalConfirmParticipants.indexOf(';') > -1) {
                var Conparticipant = contractItem.RenewalConfirmParticipants.split(';');
                $(Conparticipant).each(function (i, arritem) {
                    article += '<li style="padding-left: 10px;padding-top: 5px;color:#000000"><img src="/Content/Images/icon/profile.png" style="cursor:default;padding-right: 5px;">  ' + arritem + '</li>';
                });
            }
            else {
                article += '<li style="padding-left: 10px;padding-top: 5px;color:#000000"><img src="/Content/Images/icon/profile.png" style="cursor:default;padding-right: 5px;">  ' + contractItem.RenewalConfirmParticipants + '</li>';
            }
        }
        if (article == "") {
            $("#btnRenewTerm").html('<span class="pop_up_Content_Green">Renew</span>');
            $("#txtExpireRenewSlider").val('Renew');
            $("#dvChecklistRenewal").css('display', '');
            $("#dvRenewalExpire").dialog("option", "title", "Renew Term");
            $("#dvRenewalExpire").dialog("open");
        }
        else {
            $("#btnRenewTerm").html('<span class="pop_up_Content_Green">Renew</span>');
            $("#dvChecklistRenewal").css('display', '');
            $('#AwaitingAuthorisationUL').append(article);
            $("#browseAwaitingAuthorisation").dialog("option", "title", "Alert");
            $("#browseAwaitingAuthorisation").dialog("open");
        }

    }
    else {
        $("#btnRenewTerm").html('<span class="pop_up_Content_Green">Renew</span>');
        $("#txtExpireRenewSlider").val('Renew');
        $("#dvChecklistRenewal").css('display', '');
        $("#dvRenewalExpire").dialog("option", "title", "Renew Term");
        $("#dvRenewalExpire").dialog("open");
        //Renew();
    }

}

function expireRenewalTerm() {
    $("#dvChecklistRenewal").css('display', 'none');
    $("#btnRenewTerm").html('<span class="pop_up_Content_Green">Expire</span>');
    $("#txtExpireRenewSlider").val('Expire');
    $("#dvRenewalExpire").dialog("option", "title", "Expire Term");
    $("#dvRenewalExpire").dialog("open");
}

function continueRenewal() {
    if (IsRenewfromTerm) {
        openTermForRenew(renewAuthName);
        //RenewInTermPopup();
    }
    else {
        $("#dvRenewalExpire").dialog("option", "title", "Renew Term");
        $("#dvRenewalExpire").dialog("open");
        //Renew("Renewed");
    }
}

//For Manage Bulk Document
function ManageBulkDocumentUpload() {
    holderManagebulk = document.getElementById('holderManagebulk');
    holderManagebulk.ondragover = function (e) {
        //if (document.getElementById("btnAddContractDocument").style.display != "none") {
        e.preventDefault();
        document.getElementById("holderManagebulk").style.border = "2px dashed blue ";
        //$("#holderManagebulk").css("min-height", "100px");
        document.getElementById("holderManagebulk").style.opacity = "0.5";
        e.dataTransfer.setData('text/html', "You dragged the image!");
        //document.getElementById("idManagedropfile").style.display = "block";
        // }
    };
    holderManagebulk.ondragend = function () {
        this.className = ''; return false;
    };
    holderManagebulk.ondragleave = function () {
        document.getElementById("holderManagebulk").style.border = "2px dashed #ccc";
        //$("#holderManagebulk").css("min-height", "0px");
        $('#holderManagebulk').css("opacity", "1");
        $('#holderManagebulk').css("pointer-events", "auto");
        //document.getElementById("idManagedropfile").style.display = "none";
    };
    var totalfiles = "";
    holderManagebulk.ondrop = function (e) {
        if (contractItem.Permission != 'View' && contractItem.Permission != '' && contractItem.Permission != null) {
            $("#loadingPage").fadeIn();
            this.className = '';
            e.preventDefault();
            var files = e.dataTransfer.files;
            var fileslength = files.length;
            //if (document.getElementById("tbBulkControls").rows.length < 6) {
            //    if (fileslength <= 5) {
            for (var i = 0; i < fileslength; i++) {
                Managedroppedfiles.push(files[i]);
            }
            totalfiles = files;
            ManageremovedItems = [];
            readManagefiles(files);
            //readfiles(files);
            if (Managedroppedfiles.length > 0) {
                $(".cldraganddrop").css('display', '');
                //$('#btnBulkUploadSave').css('display', '');
                //$('#btnBulkUploadCancel').css('display', '');
                //$("#bulkuploaddoc").dialog("option", "title", "Bulk Document Upload");
                //$("#bulkuploaddoc").dialog("open");
                //$("#bulkuploaddoc").height("auto");
                //applybulkdocumetdraganddrop();
            }
            else {
                document.getElementById("holderManagebulk").style.border = "2px dashed #ccc";
                //$("#holderManagebulk").css("min-height", "0px");
                $('#holderManagebulk').css("opacity", "1");
                $('#holderManagebulk').css("pointer-events", "auto");
                //document.getElementById("idManagedropfile").style.display = "none";
            }
            $("#loadingPage").fadeOut();
            //    }
            //    else {
            //        $("#loadingPage").fadeOut();
            //        swal("", "Maximum 5 file(s) only allowed at a time....!");
            //        document.getElementById("holder").style.border = "1px solid white";
            //        $('#holder').css("opacity", "1");
            //        $('#holder').css("pointer-events", "auto");
            //    }
            //}
            //else {
            //    $("#loadingPage").fadeOut();
            //    swal("", "Maximum 5 file(s) only allowed at a time....!");
            //    document.getElementById("holder").style.border = "1px solid white";
            //    $('#holder').css("opacity", "1");
            //    $('#holder').css("pointer-events", "auto");
            //}
        }
    }
}
//For Manage Bulk Document


//For Manage Folder
function Managenewnode(objvalue) {
    $("#showAllManageFolder").html('');
    var arrCollectionDocumentFolder = [];
    var $tree = $('#treeviewManageFolderOption');
    var nodeselected = $tree.tree('getSelectedNode');
    if (nodeselected == false) {
        nodeselected = $tree.tree('getTree');
        var parent_node = $tree.tree('getNodeById', nodeselected.children[0].id);

        $tree.tree(
         'appendNode',
         {
             name: 'New folder',
             id: nodeselected.children[0].id + '/New folder'
         },
         parent_node

     );
        var nodeexpand = $tree.tree('getNodeById', nodeselected.children[0].id);
        $tree.tree('openNode', nodeexpand);
        var nodeselect = $tree.tree('getNodeById', nodeselected.children[0].id + '/New folder');
        $tree.tree('selectNode', nodeselect);
        $("#hdnManagefolderurl").val(nodeselected.children[0].id + '/New folder');

        //manoj
        var strReplace = contractItem.ContractDocumentsUrl.substring(0, contractItem.ContractDocumentsUrl.length - 1);
        var arrDocumentFolder = nodeselected.children[0].id.replace(strReplace, ";").split(';').filter(function (vfld) {
            return vfld !== ''
        });
        if (arrDocumentFolder.length > 1) {
            arrCollectionDocumentFolder = (contractItem.ContractDocumentsUrl + arrDocumentFolder.pop()).split('/').filter(function (vflds) {
                return vflds !== ''
            });
        } else {
            arrCollectionDocumentFolder = (contractItem.ContractDocumentsUrl).split('/').filter(function (vflds) {
                return vflds !== ''
            });
        }
        arrCollectionDocumentFolder = arrCollectionDocumentFolder.slice(1);
        //manoj

    } else {
        var parent_node = $tree.tree('getNodeById', nodeselected.id);
        $tree.tree(
         'appendNode',
         {
             name: 'New folder',
             id: nodeselected.id + '/New folder'
         },
         parent_node
     );
        var nodeexpand = $tree.tree('getNodeById', nodeselected.id);
        $tree.tree('openNode', nodeexpand);
        var nodeselect = $tree.tree('getNodeById', nodeselected.id + '/New folder');
        $tree.tree('selectNode', nodeselect);
        $("#hdnManagefolderurl").val(nodeselected.id + '/New folder');

        //manoj
        var strReplace = contractItem.ContractDocumentsUrl.substring(0, contractItem.ContractDocumentsUrl.length - 1);
        var arrDocumentFolder = nodeselected.id.replace(strReplace, ";").split(';').filter(function (vfld) {
            return vfld !== ''
        });
        if (arrDocumentFolder.length > 1) {
            arrCollectionDocumentFolder = (contractItem.ContractDocumentsUrl + arrDocumentFolder.pop()).split('/').filter(function (vflds) {
                return vflds !== ''
            });
        } else {
            arrCollectionDocumentFolder = (contractItem.ContractDocumentsUrl).split('/').filter(function (vflds) {
                return vflds !== ''
            });
        }
        arrCollectionDocumentFolder = arrCollectionDocumentFolder.slice(1);
    }

    //manoj
    var fldratrical = "";
    if (arrCollectionDocumentFolder.length == 1) {
        fldratrical = '<img src="../Content/Images/icon/folder_open.png" style="margin-right: 5px;"><span>' + arrCollectionDocumentFolder.toString() + '</span>';
    } else {
        for (var fldr = 0; fldr < arrCollectionDocumentFolder.length; fldr++) {
            if (arrCollectionDocumentFolder.length - 1 == fldr) {
                fldratrical += '/<img src="../Content/Images/icon/folder_open.png" style="margin-right: 5px;"><span>' + arrCollectionDocumentFolder[fldr].toString() + '</a>';
            } else {
                fldratrical += '/<img src="../Content/Images/icon/folder.png" style="margin-right: 5px;"><span>' + arrCollectionDocumentFolder[fldr].toString() + '</a>';
            }
        }
    }
    if (fldratrical.charAt(0) == '/') {
        fldratrical = fldratrical.substr(1);
    }
    $("#showAllManageFolder").html(fldratrical);

    $("#txtManagefoldervalue").removeClass('error');
    $("#errormsg_txtManagefoldervalue").remove();
    $("#dvManagefoldercreation").dialog("option", "title", "Create sub-folder");
    $("#dvManagefoldercreation").dialog("open");
}

var ManagedroppedControls = 0;
var Managedropcontrolifdelete = 0;
function readManagefiles(files) {
    var documentidcount = "";
    var filelistexit = "";
    var unvalidfile = "";
    var FileList = "";
    var rejectedfile = '';
    var vControl = "";
    var controluploadsetion = "";
    var uploingsectionid = 1;
    var lesscharfilename = "";
    var dropexitfilenamevalue = "";
    var fileslength = files.length;
    if (document.getElementById("tblManageBulkControls").rows.length > 0) {
        droppedControls = document.getElementById("tbBulkControls").rows.length - 1;
        uploingsectionid = document.getElementById("tbBulkControls").rows.length;
    }

    //manoj
    //var headerid = $("#lblContractTitle").text();
    //headerid = headerid.replace(/[`~!@#$%^&*()_|+\-=?;:'",.<>\{\}\[\]\\\/]/gi, '').replace(/[\*\|\,\"\:\<\>\[\}\{\}\'\(\)\&\#\%\.\-\!]/g, '').replace(/\//g, '').replace(/\s\s+/g, " ").trim();
    //var finalurl = "";
    //finalurl = ($('#hdContAreaDocLibName').val() != null && $('#hdContAreaDocLibName').val() != "") ? $('#hdContAreaDocLibName').val() : '/Contract Documents/';
    //finalurl = (finalurl.charAt(0) != '/') ? '/' + finalurl : finalurl;
    //finalurl = ((finalurl.substr(finalurl.length - 1)) != "/") ? finalurl + "/" : finalurl;
    //finalurl = ($('#showAll').text().replace(/ \/ /g, '/') != null && $('#showAll').text().replace(/ \/ /g, '/') != "") ? finalurl + $('#showAll').text().replace(/ \/ /g, '/') + '/' : finalurl + headerid + '/';

    //manoj
    for (var i = 0; i < fileslength; i++) {
        var file = files[i];
        var acceptExtension = ['pdf', 'png', 'jpg', 'gif', 'bmp', 'doc', 'xls', 'ppt', 'docx', 'xlsx', 'txt', 'pptx', 'dotx', 'xps', 'rtf', 'odt', 'dotm', 'docm', 'msg', 'tif', 'tiff', 'TIF', 'TIFF', 'zip', 'ZIP'];
        var ext = file.name.split('.').pop().toString();
        if (acceptExtension.indexOf(ext.trim().toLowerCase()) > -1) {
            if ('size' in file) {
                var Filelengthcol = Math.round((file.size / 1048576));
                if (Filelengthcol > (Math.round(parseInt(localStorage.MaxRequestLength) / 1000))) {
                    //swal("", "The maximum permissible size is " + Math.round(((localStorage.MaxRequestLength / 1024) / 1024) * 10) / 10 + " MB, Please upload a file which is less than " + Math.round(((localStorage.MaxRequestLength / 1024) / 1024) * 10) / 10 + " MB");
                    if (FileList == "") {
                        FileList = files[i].name;
                    } else {
                        FileList += "," + files[i].name;
                    }
                    var index = Managedroppedfiles.indexOf(files[i]);
                    if (index > -1) {
                        Managedroppedfiles.splice(index, 1);
                    }
                } else if (Managedropexitfilename.indexOf(files[i].name) > -1) {
                    if (dropexitfilenamevalue == "") {
                        dropexitfilenamevalue = files[i].name;
                    } else {
                        dropexitfilenamevalue += "," + files[i].name;
                    }
                    var index = Managedroppedfiles.lastIndexOf(files[i]);
                    if (index > -1) {
                        Managedroppedfiles.splice(index, 1);
                    }
                }
                else {
                    if (IsFileValid(files[i].name)) {
                        var ValidateFileName = files[i].name.substr(0, files[i].name.lastIndexOf('.'));
                        var isNameValid = isSpecialCharacterFileName(files[i].name.substr(0, files[i].name.lastIndexOf('.')));
                        var isExists = true;
                        if (isNameValid == true) {
                            isExists = CheckDocumentExist("#spnDocFolderURL", files[i].name)
                        }
                        if (!isExists && isNameValid && (isContainsThreeAlphabets(files[i].name.substr(0, files[i].name.lastIndexOf('.'))))) {
                            if (ManagedroppedControls == 0) {
                                vControl += "<thead><tr class='bulknocolor'>";
                                vControl += "<th style='width:250px'> Document Name";
                                vControl += "</th>";
                                vControl += "<th style='width:150px'> Document Type";
                                vControl += "</th>";
                                vControl += "<th style='width:150px'> Document Status";
                                vControl += "</th>";
                                if (OCRDocEnabled) {
                                    vControl += "<th style='width: 100px; text-align: center!important'> Enable OCR";
                                    vControl += "</th>";
                                } else {
                                    vControl += "<th style='width: 100px; text-align: center!important;display:none'> Enable OCR";
                                    vControl += "</th>";
                                }
                                vControl += "<th  width='25%' style='display:none;'> Document Path";
                                vControl += "</th>";
                                vControl += "<th  style='width:200px'>Upload Status";
                                vControl += "</th>";
                                vControl += "<th style='width:50px'> Action";
                                vControl += "</th>";
                                //vControl += "<th style='display:none;'></th></tr></thead>";
                                vControl += "</thead>";
                            }
                            if (ManagedroppedControls == Managedropcontrolifdelete) {
                                var trid = 'tr_' + ManagedroppedControls;
                                var vContractTitle = 'ContractTitle_' + ManagedroppedControls;
                                var docid = 'ddlDocumentType_' + ManagedroppedControls;
                                var vDocumentPath = 'PathContractTitle_' + ManagedroppedControls;
                                var vDocumentPathLabel = 'LabelPathContractTitle_' + ManagedroppedControls;
                                var checkboxid = 'chkbx_' + ManagedroppedControls;
                                var checkboxidocr = 'chkbkocr_' + ManagedroppedControls;

                                if (isExists) {
                                    vControl += "<tr id='" + trid + "' style='color:red'>";
                                } else {
                                    vControl += "<tr id=" + trid + ">";
                                }

                                vControl += "<td width='30%'><span title='" + files[i].name.replace(/'/g, "") + "' class='upload_lab'>" + files[i].name + "</span>";
                                vControl += "</td>";
                                vControl += "<td width='30%'>";
                                vControl += "<select id=" + docid + " name=" + docid + " class='f_inpt width60' style='padding: 2px !important'>";
                                vControl += "<option value='0'>--Select--</option></td>";
                                vControl += "<td width='30%'><select id='ddlDocumentStatus" + ManagedroppedControls + "' name='ddlDocumentStatus" + ManagedroppedControls + "' class='f_inpt width60 validelement' style='padding: 2px !important'>";
                                vControl += "<option value='0'>--Select--</option>";
                                vControl += "<option value='New' selected='selected'>New</option>";
                                vControl += "<option value='Awaiting Review'>Awaiting Review</option>";
                                vControl += "<option value='Reviewed'>Reviewed</option>";
                                vControl += "<option value='In Negotiation'>In Negotiation</option>";
                                vControl += "<option value='Negotiation Complete'>Negotiation Complete</option>";
                                vControl += "<option value='Ready for Signature'>Ready for Signature</option>";
                                vControl += "<option value='Awaiting Signatures'>Awaiting Signatures</option>";
                                vControl += "<option value='Signed'>Signed</option>";
                                vControl += "<option value='Active'>Active</option>";
                                vControl += "<option value='Expired'>Expired</option>";
                                vControl += "</select></td>";
                                if (OCRDocEnabled) {
                                    vControl += "<td style='text-align: center!important;'>";
                                } else {
                                    vControl += "<td style='text-align: center!important; display:none'>";
                                }
                                //manoj
                                var FileExt = files[i].name.split('.').pop().toString();
                                if (FileExt == 'PDF'|| FileExt == 'pdf'||  FileExt == 'tif' || FileExt == 'TIF' || FileExt == 'tiff' || FileExt == 'TIFF') {
                                    vControl += "<p style='margin-top: 8px; font-size:13px;'><input type='checkbox' name='convert' id=" + checkboxidocr + " onchange='ChangeDocumentBulkMange(this)'><p>";
                                } else {
                                    vControl += "<p style='margin-top: 8px; font-size:13px;'><input type='checkbox' name='convert' id=" + checkboxidocr + " disabled ><p>";
                                }
                                vControl += "</td>";
                                //manoj
                                vControl += "<td width='25%' style='display:none;'>";
                                vControl += "<input id=" + vDocumentPath + " style='display:none;' class='width60' readonly type='text' value='" + $("#spnDocFolderURL").text() + "' name=" + vDocumentPath + ">";
                                vControl += "<label id=" + vDocumentPathLabel + "> " + $("#spnDocFolderURL").text() + " </label>";
                                vControl += "</td>";
                                vControl += '<td><label id="uploadprogresslbl' + ManagedroppedControls + '"></label><span id="idLoading' + ManagedroppedControls + '" style="font-size:14px; margin-right:10px;display:none;"><img src="../Content/Images/loading.gif" /> Uploading Documents...</span><span id="idLoadingstart' + ManagedroppedControls + '" style="font-size:14px; margin-right:10px;">Start</span><span id="idLoadingcomplete' + ManagedroppedControls + '" style="font-size:14px; margin-right:10px;display:none;">Uploaded</span></td>';
                                vControl += "<td><img src='../Content/Images/Manage_close_red.png' title='Remove' onclick='deleteManageDoc(\"" + trid + "\");' style='float:right; padding-top:7px; cursor:pointer;'></td></tr>"
                                documentidcount += ";" + docid;
                                Managedropcontrolifdelete++;
                                ManagedroppedControls++;
                                Managedropexitfilename.push(files[i].name);
                            }


                            else {
                                var trid = 'tr_' + Managedropcontrolifdelete;
                                var vContractTitle = 'ContractTitle_' + Managedropcontrolifdelete;
                                var docid = 'ddlDocumentType_' + Managedropcontrolifdelete;
                                var vDocumentPath = 'PathContractTitle_' + Managedropcontrolifdelete;
                                var vDocumentPathLabel = 'LabelPathContractTitle_' + Managedropcontrolifdelete;
                                var checkboxid = 'chkbx_' + Managedropcontrolifdelete;
                                var checkboxidocr = 'chkbkocr_' + Managedropcontrolifdelete;

                                if (isExists) {
                                    vControl += "<tr id='" + trid + "' style='color:red'>";
                                } else {
                                    vControl += "<tr id=" + trid + ">";
                                }

                                //vControl += "<tr id=" + trid + ">";
                                vControl += "<td width='30%'><span title='" + files[i].name.replace(/'/g, "") + "' class='upload_lab'>" + files[i].name + "</span>";
                                vControl += "</td>";
                                vControl += "<td width='30%'>";
                                vControl += "<select id=" + docid + " name=" + docid + " class='f_inpt width60' style='padding: 2px !important'>";
                                vControl += "<option value='0'>--Select--</option></td>";
                                vControl += "<td width='30%'><select id='ddlDocumentStatus" + Managedropcontrolifdelete + "' name='ddlDocumentStatus" + Managedropcontrolifdelete + "' class='f_inpt width60 validelement' style='padding: 2px !important'>";
                                vControl += "<option value='0'>--Select--</option>";
                                vControl += "<option value='New' selected='selected'>New</option>";
                                vControl += "<option value='Awaiting Review'>Awaiting Review</option>";
                                vControl += "<option value='Reviewed'>Reviewed</option>";
                                vControl += "<option value='In Negotiation'>In Negotiation</option>";
                                vControl += "<option value='Negotiation Complete'>Negotiation Complete</option>";
                                vControl += "<option value='Ready for Signature'>Ready for Signature</option>";
                                vControl += "<option value='Awaiting Signatures'>Awaiting Signatures</option>";
                                vControl += "<option value='Signed'>Signed</option>";
                                vControl += "<option value='Active'>Active</option>";
                                vControl += "<option value='Expired'>Expired</option>";
                                vControl += "</select></td>";
                                if (OCRDocEnabled) {
                                    vControl += "<td style='text-align: center!important;'>";
                                } else {
                                    vControl += "<td style='text-align: center!important; display:none'>";
                                }
                                //manoj
                                var FileExt = files[i].name.split('.').pop().toString();
                                if (FileExt == 'PDF' || FileExt == 'pdf' || FileExt == 'tif' || FileExt == 'TIF' || FileExt == 'tiff' || FileExt == 'TIFF') {
                                    vControl += "<p style='margin-top: 8px; font-size:13px;'><input type='checkbox' name='convert' id=" + checkboxidocr + "  onchange='ChangeDocumentBulkMange(this)'><p>";
                                } else {
                                    vControl += "<p style='margin-top: 8px; font-size:13px;'><input type='checkbox' name='convert' id=" + checkboxidocr + " disabled ><p>";
                                }
                                vControl += "</td>";
                                //manoj
                                vControl += "<td width='25%' style='display:none;'>";
                                vControl += "<input id=" + vDocumentPath + " style='display:none;' class='width60' readonly type='text' value='" + $("#spnDocFolderURL").text() + "' name=" + vDocumentPath + ">";
                                vControl += "<label id=" + vDocumentPathLabel + "> " + $("#spnDocFolderURL").text() + " </label>";
                                vControl += "</td>";
                                vControl += '<td><label id="uploadprogresslbl' + Managedropcontrolifdelete + '"></label><span id="idLoading' + Managedropcontrolifdelete + '" style="font-size:14px; margin-right:10px;display:none;"><img src="../Content/Images/loading.gif" /> Uploading Documents...</span><span id="idLoadingstart' + Managedropcontrolifdelete + '" style="font-size:14px; margin-right:10px;">Start</span><span id="idLoadingcomplete' + Managedropcontrolifdelete + '" style="font-size:14px; margin-right:10px;display:none;">Uploaded</span></td>';
                                vControl += "<td><img src='../Content/Images/Manage_close_red.png' title='Remove' onclick='deleteManageDoc(\"" + trid + "\");' style='float:right; padding-top:7px; cursor:pointer;'></td></tr>"
                                documentidcount += ";" + docid;
                                ManagedroppedControls++;
                                Managedropcontrolifdelete++;
                                Managedropexitfilename.push(files[i].name);
                            }
                        }
                        else {
                            if (!isNameValid) {
                                if (unvalidfile == "") {
                                    unvalidfile = files[i].name;
                                }
                                else {
                                    unvalidfile += "," + files[i].name;
                                }
                            }
                            else if (isExists) {
                                if (filelistexit == "") {
                                    filelistexit = files[i].name;
                                }
                                else {
                                    filelistexit += "," + files[i].name;
                                }
                            } else {
                                if (lesscharfilename == "") {
                                    lesscharfilename = files[i].name;
                                } else {
                                    lesscharfilename += "," + files[i].name;
                                }
                            }
                            var index = Managedroppedfiles.indexOf(files[i]);
                            if (index > -1) {
                                Managedroppedfiles.splice(index, 1);
                            }
                        }
                    }
                }
            }
        }
        else {
            if (rejectedfile == "") {
                rejectedfile = files[i].name;
            } else {
                rejectedfile += "," + files[i].name;
            }
            var index = Managedroppedfiles.indexOf(files[i]);
            if (index > -1) {
                Managedroppedfiles.splice(index, 1);
            }
        }
    }
    //Collectcontractdocument = true;
    //ContractDocumentDetails = [];
    if (FileList != null && FileList != "") {
        //swal("", "The maximum permissible size is 50MB, Please upload files which is less than 50MB");
        //swal("", "The maximum permissible size is " + Math.round(parseInt(localStorage.MaxRequestLength) / 1024) + " MB, Please upload a file which is less than " + Math.round(parseInt(localStorage.MaxRequestLength) / 1024) + " MB");
        swal("", "File exceeds " + Math.round((parseInt(localStorage.MaxRequestLength) / 1000)) + "MB size limit.");
        if (Managedroppedfiles.length <= 0) {
            $("#tblManageBulkControls").empty();
            $("#docManageBulk").empty();
            Managedroppedfiles = [];
            Managedropexitfilename = [];
            //opmlFile = null;
            ManagedroppedControls = 0;
            $("#lblManageFilesCount").text("0 file selected.")
            //loadinffdfdsf = 1;
        }
        FileList = "";
    } else {
        var alertvalue = "";
        if (filelistexit != null && filelistexit != "") {
            alertvalue = filelistexit + " already exists";
        }
        if (unvalidfile != null && unvalidfile != "") {
            if ((rejectedfile == null || rejectedfile == "") && (lesscharfilename == null || lesscharfilename == "") && (dropexitfilenamevalue == null && dropexitfilenamevalue == "") && (alertvalue == null || alertvalue == ""))
                alertvalue = unvalidfile + " File(s) names can't contain the following characters /:*\\?\"<>|#%";
            else if ((rejectedfile == null || rejectedfile == "") && (lesscharfilename == null || lesscharfilename == "") && (dropexitfilenamevalue == null && dropexitfilenamevalue == "")) {
                alertvalue += " and " + unvalidfile + " File(s) names can't contain the following characters /:*\\?\"<>|#%";
            } else {
                alertvalue += ", " + unvalidfile + " File(s) names can't contain the following characters /:*\\?\"<>|#%";
            }
        }

        if (rejectedfile != null && rejectedfile != "") {
            if ((lesscharfilename == null || lesscharfilename == "") && (dropexitfilenamevalue == null && dropexitfilenamevalue == "") && (alertvalue == null || alertvalue == ""))
                alertvalue = rejectedfile + " File(s) are not allowed";
            else if ((lesscharfilename == null || lesscharfilename == "") && (dropexitfilenamevalue == null && dropexitfilenamevalue == "")) {
                alertvalue += " and " + rejectedfile + " File(s) are not allowed";
            } else {
                alertvalue += ", " + rejectedfile + " File(s) are not allowed";
            }
        }

        if (lesscharfilename != null && lesscharfilename != "") {
            if ((dropexitfilenamevalue == null && dropexitfilenamevalue == "") && (alertvalue == null || alertvalue == ""))
                alertvalue = lesscharfilename + " File(s) names should contain the minimum of 3 alphabets";
            else if ((dropexitfilenamevalue == null && dropexitfilenamevalue == "")) {
                alertvalue += " and " + lesscharfilename + " File(s) names should contain the minimum of 3 alphabets";
            } else {
                alertvalue += "File(s) names should contain the minimum of 3 alphabets";
            }
        }

        if (dropexitfilenamevalue != null && dropexitfilenamevalue != "") {
            if ((alertvalue == null || alertvalue == ""))
                alertvalue = dropexitfilenamevalue + " File(s)  are already selected";
            else {
                alertvalue += " and " + dropexitfilenamevalue + " File(s) are already selected";
            }
        }

        if (alertvalue != null && alertvalue != "") {
            if (alertvalue.trim().indexOf('and') == 0) {
                alertvalue = alertvalue.replace('and', "");
                alertvalue = alertvalue.trim();
            }

            if (alertvalue.indexOf(',') == 0) {
                alertvalue = alertvalue.replace(',', "");
                alertvalue = alertvalue.trim();
            }
            alertvalue = alertvalue + ".";
            swal("", "" + alertvalue.trim() + "");
        }
        alertvalue = "";
    }
    $("#tblManageBulkControls").append(vControl);
    var tblfilecount = $("#tblManageBulkControls tbody").find("tr").length;
    if (tblfilecount == 0) {
        document.getElementById('docManageBulk').addEventListener('change', handleFileSelect, false);
        $("#tblManageBulkControls").empty();
        $("#lblManageFilesCount").text((tblfilecount) + " file(s) selected.");
        $(".clManageDrop").css("display", "none");
        $(".clManageDrag").css("display", "");
    } else {
        $("#lblManageFilesCount").text(ManagedroppedControls + " file(s) selected.")
        getdocumenttypes(documentidcount);
        document.getElementById("holderManagebulk").style.border = "2px dashed #ccc";
        $('#holderManagebulk').css("opacity", "1");
        $('#holderManagebulk').css("pointer-events", "auto");
        $(".clManageDrop").css("display", "");
        $(".clManageDropFldr").css("display", "");
        $(".clManageDrag").css("display", "none");
    }
    //document.getElementById("iddropfile").style.display = "none";
}

document.getElementById('docManageBulk').addEventListener('change', handleFileSelect, false);

document.getElementById('files_New').addEventListener('change', handleFileSelect_New, false);

function ChangeDocumentBulkMange(obj) {
    var ChangedRowValue = obj.id.split(/[_ ]+/).pop();
    var seletedfilename = $("#tr_" + ChangedRowValue).children('td').first()[0].textContent;
    var ResultToAction = false;
    if (obj.checked) {
        var seletedfile_newname = seletedfilename.split('.').slice(0, -1).join(".") + ".pdf";
        ResultToAction = CheckDocumentExist($("#spnDocFolderURL").text(), seletedfile_newname);
    } else {
        ResultToAction = CheckDocumentExist($("#spnDocFolderURL").text(), seletedfilename);
    }
    if (ResultToAction) {
        $("#tr_" + ChangedRowValue).css("color", "red");
    } else {
        $("#tr_" + ChangedRowValue).css("color", "");
    }
}


function ChangeDocumentBulk_New(obj) {
    var ChangedRowValue = obj.id.split(/[_ ]+/).pop();
    var seletedfilename = $("#tr_" + ChangedRowValue).children('td').first()[0].textContent;
    var ResultToAction = false;
    if (obj.checked) {
        var seletedfile_newname = seletedfilename.split('.').slice(0, -1).join(".") + ".pdf";
        ResultToAction = CheckDocumentExist($("#spnDocFolderURL_New").text(), seletedfile_newname);
    } else {
        ResultToAction = CheckDocumentExist($("#spnDocFolderURL_New").text(), seletedfilename);
    }
    if (ResultToAction) {
        $("#tr_" + ChangedRowValue).css("color", "red");
    } else {
        $("#tr_" + ChangedRowValue).css("color", "");
    }
}

function deleteManageDoc(obj) {
    //var deletedfilename = document.getElementById(obj).nextSibling.innerHTML;
    var deletedfilename = $("#" + obj).children('td').first()[0].textContent;
    var deletedfilenameindex_exist = Managedropexitfilename.indexOf(deletedfilename);
    var deletedfilenameindex = Managedroppedfiles.indexOf(deletedfilename);
    Managedropexitfilename.splice(deletedfilenameindex_exist, 1);
    Managedroppedfiles.splice(deletedfilenameindex, 1);
    $("#" + obj).remove();
    ManageremovedItems.push(obj.split(/[_ ]+/).pop());
    ManagedroppedControls--;
    document.getElementById('docManageBulk').addEventListener('change', handleFileSelect, false);
    var x = $("#tblManageBulkControls tbody").find("tr").length;

    if (x == 0) {
        document.getElementById('docManageBulk').addEventListener('change', handleFileSelect, false);
        $("#tblManageBulkControls").empty();
        //$("#lblManageFilesCount").empty();
        $("#lblManageFilesCount").text((x) + " file(s) selected.");
        $(".clManageDrop").css("display", "none");
        $(".clManageDrag").css("display", "");
        //$("#btnMultipleAction").css('display', 'none');
    }
    else {
        $("#lblManageFilesCount").text((x) + " file(s) selected.");
    }
}

function deleteDoc(obj) {
    //var deletedfilename = document.getElementById(obj).nextSibling.innerHTML;
    var deletedfilename = $("#" + obj).children('td').first()[0].textContent;
    var deletedfilenameindex_exist = dropexitfilename.indexOf(deletedfilename);
    var deletedfilenameindex = droppedfiles.indexOf(deletedfilename);

    dropexitfilename.splice(deletedfilenameindex_exist, 1);
    droppedfiles.splice(deletedfilenameindex, 1);
    $("#" + obj).remove();
    removedItems.push(obj.split(/[_ ]+/).pop());
    droppedControls--;
    document.getElementById('files_New').addEventListener('change', handleFileSelect_New, false);
    var x = $("#tbBulkControls tbody").find("tr").length;

    if (x == 0) {
        $("#tbBulkControls").empty();
        //$("#lblManageFilesCount").empty();
        $("#lblFilesCount").text((x) + " file(s) selected.");
        $(".clManageDrop_New").css("display", "none");
        $(".clManageDrag_New").css("display", "");
        //$("#btnMultipleAction").css('display', 'none');
    }
    else {
        $("#lblFilesCount").text((x) + " file(s) selected.");
    }
}

function handleFileSelect(evt) {
    var files = evt.target.files; // FileList object
    var fileslength = files.length;
    for (var i = 0; i < fileslength; i++) {
        Managedroppedfiles.push(files[i]);
    }
    readManagefiles(files);
}

function handleFileSelect_New(evt) {
    var files = evt.target.files; // FileList object
    var fileslength = files.length;
    for (var i = 0; i < fileslength; i++) {
        droppedfiles.push(files[i]);
    }
    readfiles(files);
}

function ClearManageDoc(obj) {
    $("#tblManageBulkControls").empty();
    $("#docManageBulk").empty();
    Managedroppedfiles = [];
    Managedropexitfilename = [];
    //opmlFile = null;
    ManagedroppedControls = 0;
    Managedropcontrolifdelete = 0;
    Collectcontractdocument = false;
    ContractDocumentDetails = [];
    $("#lblManageFilesCount").text("");
    $('#tblManageBulkControls').css("pointer-events", "auto");
    ManageBulkDocumentUpload();
    parentfolderidtopass = "";
    if (obj != true) {
        ReturnFolderSelection();
        $(".clManageDrop").css("display", "none");
        $(".clManageDropFldr").css("display", "none");
        $(".clManageDrag").css("display", "");
    } else {

    }
}

function ManagemoreDoc_New() {
    //$(".clManageDrag").css("display", "");
    if (document.getElementById("dvmanageholder_New").style.display == "none") {
        $("#holderManagebulk").addClass('uplaod_box');
        $(".clManageDrag_New").css("display", "");
    } else {
        $(".clManageDrag_New").css("display", "none");
    }
}

function ManagemoreDoc() {
    //$(".clManageDrag").css("display", "");
    if (document.getElementById("dvmanageholder").style.display == "none") {
        $("#holderManagebulk").addClass('uplaod_box');
        $(".clManageDrag").css("display", "");

    } else {
        $(".clManageDrag").css("display", "none");
    }
}

function ReturnFolderSelection() {
    var arrShowallTesxt = [];
    var fldratrical = "";
    var spnfldratrical = "";
    if (typeof ($('#showAll').text()) != "undefined" && $('#showAll').text().replace(/ \/ /g, '/') != null && $('#showAll').text().replace(/ \/ /g, '/') != "") {
        //manoj
        arrShowallTesxt = $.map($('#showAll').text().split('/'), $.trim);
        arrShowallTesxt = arrShowallTesxt.filter(function (vFolder) {
            return vFolder !== ''
        });
        var finalurl = ($('#hdContAreaDocLibName').val() != null && $('#hdContAreaDocLibName').val() != "") ? $('#hdContAreaDocLibName').val() : '/Contract Documents/';
        finalurl = (finalurl.charAt(0) != '/') ? '/' + finalurl : finalurl;
        finalurl = ((finalurl.substr(finalurl.length - 1)) != "/") ? finalurl + "/" : finalurl;
        $("#spnDocFolderURL").text(finalurl + arrShowallTesxt.join('/') + '/');
        $("#spnmanagebtn").css("display", "");
        //manoj
    } else {
        if (typeof (contractItem) != "undefined" && contractItem != null && contractItem != "" && contractItem.ContractDocumentsUrl != null && contractItem.ContractDocumentsUrl != "") {
            arrShowallTesxt = $.map(contractItem.ContractDocumentsUrl.split('/'), $.trim);
            arrShowallTesxt = arrShowallTesxt.filter(function (vFolder) {
                return vFolder !== ''
            });
            arrShowallTesxt = arrShowallTesxt.slice(1);
            $("#spnDocFolderURL").text(contractItem.ContractDocumentsUrl);
            $("#spnmanagebtn").css("display", "");
        } else {
            //arrShowallTesxt = [];
            var headerid = $("#lblContractTitle").text();
            headerid = headerid.replace(/[`~!@#$%^&*()_|+\-=?;:'",.<>\{\}\[\]\\\/]/gi, '').replace(/[\*\|\,\"\:\<\>\[\}\{\}\'\(\)\&\#\%\.\-\!]/g, '').replace(/\//g, '').replace(/\s\s+/g, " ").trim();
            var finalurl = "";
            finalurl = ($('#hdContAreaDocLibName').val() != null && $('#hdContAreaDocLibName').val() != "") ? $('#hdContAreaDocLibName').val() : '/Contract Documents/';
            finalurl = (finalurl.charAt(0) != '/') ? '/' + finalurl : finalurl;
            finalurl = ((finalurl.substr(finalurl.length - 1)) != "/") ? finalurl + "/" : finalurl;
            finalurl = finalurl + headerid + '/';
            $("#spnDocFolderURL").text(finalurl);
            $("#spnmanagebtn").css("display", "none");
            arrShowallTesxt = $.map(headerid.split('/'), $.trim);
            arrShowallTesxt = arrShowallTesxt.filter(function (vFolder) {
                return vFolder !== ''
            });
        }
    }
    if (arrShowallTesxt.length == 0) {

    }
    else if (arrShowallTesxt.length == 1) {
        fldratrical = '<img src="../Content/Images/icon/folder_open.png" style="margin-right: 5px;"><span>' + arrShowallTesxt.toString() + '</span>';
        spnfldratrical = "/" + arrShowallTesxt.toString() + "/";
    } else {
        for (var fldr = 0; fldr < arrShowallTesxt.length; fldr++) {
            if (arrShowallTesxt.length - 1 == fldr) {
                fldratrical += '/<img src="../Content/Images/icon/folder_open.png" style="margin-right: 5px;"><span>' + arrShowallTesxt[fldr].toString() + '</a>';
            } else {
                fldratrical += '/<img src="../Content/Images/icon/folder.png" style="margin-right: 5px;"><span>' + arrShowallTesxt[fldr].toString() + '</a>';
            }
            spnfldratrical += "/" + arrShowallTesxt[fldr].toString();
        }
        spnfldratrical += "/";
    }
    if (fldratrical != "" && fldratrical.charAt(0) == '/') {
        fldratrical = fldratrical.substr(1);
    }
    $("#dvDocFolderURL").html(fldratrical);
}

$("#btnManageSubFolders").click(function () {
    ManageFolderAction = "Bulk";
    //MangeContractFolder(contractItem.ContractDocumentsUrl.substring(1));
    //CreateFolder(contractItem.ContractDocumentsUrl.substring(1));
    CreateFolder($("#hdnContractDocumentsUrl").text().substring(1));
    $("#treeviewFolder").dialog("option", "title", "Select Folder");
    $("#treeviewFolder").dialog("open");
});

$("#btnManageSubFolders_New").click(function () {
    ManageFolderAction = "New";
    //MangeContractFolder(contractItem.ContractDocumentsUrl.substring(1));
    //CreateFolder(contractItem.ContractDocumentsUrl.substring(1));
    CreateFolder($("#hdnContractDocumentsUrl").text().substring(1));
    $("#treeviewFolder").dialog("option", "title", "Select Folder");
    $("#treeviewFolder").dialog("open");
});

function ChnageFolderExistDoc() {
    var x = $("#tblManageBulkControls tbody").find("tr").length;
    if (x != 0) {
        $("#tblManageBulkControls tbody").find("tr").each(function (tblmanage) {
            var Row_id = this.id.split(/[_ ]+/).pop();
            var Document_Manage_Name = $(this).children('td').first()[0].textContent;
            var StatusChange_Doc = false;
            if (Document_Manage_Name.split('.').pop().toString().toLowerCase().indexOf('tif') > -1) {
                if ($("#chkbkocr_" + Row_id).is(":checked")) {
                    Document_Manage_Name = Document_Manage_Name.split('.').slice(0, -1).join(".") + ".pdf";
                    StatusChange_Doc = CheckDocumentExist($("#spnDocFolderURL").text(), Document_Manage_Name);
                } else {
                    StatusChange_Doc = CheckDocumentExist($("#spnDocFolderURL").text(), Document_Manage_Name);
                }
            } else {
                StatusChange_Doc = CheckDocumentExist($("#spnDocFolderURL").text(), Document_Manage_Name);
            }
            if (StatusChange_Doc) {
                $(this).css("color", "red");
            } else {
                $(this).css("color", "");
            }

        });
        //manoj

    }
}

function ChnageFolderExistDoc_New() {
    var x = $("#tbBulkControls tbody").find("tr").length;
    if (x != 0) {
        $("#tbBulkControls tbody").find("tr").each(function (tblmanage) {
            var Row_id = this.id.split(/[_ ]+/).pop();
            var Document_Manage_Name = $(this).children('td').first()[0].textContent;
            var StatusChange_Doc = false;
            if (Document_Manage_Name.split('.').pop().toString().toLowerCase().indexOf('tif') > -1) {
                if ($("#chkbkocr_" + Row_id).is(":checked")) {
                    Document_Manage_Name = Document_Manage_Name.split('.').slice(0, -1).join(".") + ".pdf";
                    StatusChange_Doc = CheckDocumentExist($("#spnDocFolderURL_New").text(), Document_Manage_Name);
                } else {
                    StatusChange_Doc = CheckDocumentExist($("#spnDocFolderURL_New").text(), Document_Manage_Name);
                }
            } else {
                StatusChange_Doc = CheckDocumentExist($("#spnDocFolderURL_New").text(), Document_Manage_Name);
            }
            if (StatusChange_Doc) {
                $(this).css("color", "red");
            } else {
                $(this).css("color", "");
            }
        });
        //manoj
    }
}

function ReturnFolderSelection_New() {
    var arrShowallTesxt = [];
    var fldratrical = "";
    var spnfldratrical = "";
    if (typeof ($('#showAll').text()) != "undefined" && $('#showAll').text().replace(/ \/ /g, '/') != null && $('#showAll').text().replace(/ \/ /g, '/') != "") {
        //manoj
        arrShowallTesxt = $.map($('#showAll').text().split('/'), $.trim);
        arrShowallTesxt = arrShowallTesxt.filter(function (vFolder) {
            return vFolder !== ''
        });
        var finalurl = ($('#hdContAreaDocLibName').val() != null && $('#hdContAreaDocLibName').val() != "") ? $('#hdContAreaDocLibName').val() : '/Contract Documents/';
        finalurl = (finalurl.charAt(0) != '/') ? '/' + finalurl : finalurl;
        finalurl = ((finalurl.substr(finalurl.length - 1)) != "/") ? finalurl + "/" : finalurl;
        $("#spnDocFolderURL_New").text(finalurl + arrShowallTesxt.join('/') + '/');
        $("#spnmanagebtn_New").css("display", "");
        //manoj
    } else {
        if (typeof (contractItem) != "undefined" && contractItem != null && contractItem != "" && contractItem.ContractDocumentsUrl != null && contractItem.ContractDocumentsUrl != "") {
            arrShowallTesxt = $.map(contractItem.ContractDocumentsUrl.split('/'), $.trim);
            arrShowallTesxt = arrShowallTesxt.filter(function (vFolder) {
                return vFolder !== ''
            });
            arrShowallTesxt = arrShowallTesxt.slice(1);
            $("#spnDocFolderURL_New").text(contractItem.ContractDocumentsUrl);
            $("#spnmanagebtn_New").css("display", "");
        } else {
            //arrShowallTesxt = [];
            var headerid = $("#lblContractTitle").text();
            headerid = headerid.replace(/[`~!@#$%^&*()_|+\-=?;:'",.<>\{\}\[\]\\\/]/gi, '').replace(/[\*\|\,\"\:\<\>\[\}\{\}\'\(\)\&\#\%\.\-\!]/g, '').replace(/\//g, '').replace(/\s\s+/g, " ").trim();
            var finalurl = "";
            finalurl = ($('#hdContAreaDocLibName').val() != null && $('#hdContAreaDocLibName').val() != "") ? $('#hdContAreaDocLibName').val() : '/Contract Documents/';
            finalurl = (finalurl.charAt(0) != '/') ? '/' + finalurl : finalurl;
            finalurl = ((finalurl.substr(finalurl.length - 1)) != "/") ? finalurl + "/" : finalurl;
            finalurl = finalurl + headerid + '/';
            $("#spnDocFolderURL_New").text(finalurl);
            $("#spnmanagebtn_New").css("display", "none");
            arrShowallTesxt = $.map(headerid.split('/'), $.trim);
            arrShowallTesxt = arrShowallTesxt.filter(function (vFolder) {
                return vFolder !== ''
            });
        }
    }
    if (arrShowallTesxt.length == 0) {

    }
    else if (arrShowallTesxt.length == 1) {
        fldratrical = '<img src="../Content/Images/icon/folder_open.png" style="margin-right: 5px;"><span>' + arrShowallTesxt.toString() + '</span>';
        spnfldratrical = "/" + arrShowallTesxt.toString() + "/";
    } else {
        for (var fldr = 0; fldr < arrShowallTesxt.length; fldr++) {
            if (arrShowallTesxt.length - 1 == fldr) {
                fldratrical += '/<img src="../Content/Images/icon/folder_open.png" style="margin-right: 5px;"><span>' + arrShowallTesxt[fldr].toString() + '</a>';
            } else {
                fldratrical += '/<img src="../Content/Images/icon/folder.png" style="margin-right: 5px;"><span>' + arrShowallTesxt[fldr].toString() + '</a>';
            }
            spnfldratrical += "/" + arrShowallTesxt[fldr].toString();
        }
        spnfldratrical += "/";
    }
    if (fldratrical != "" && fldratrical.charAt(0) == '/') {
        fldratrical = fldratrical.substr(1);
    }
    $("#dvDocFolderURL_New").html(fldratrical);
}
//For Manage Folder


//manoj
//For Uploading File using Chunk
var bulkdocumentuploadchunk = function () {
    if (FromManage) {
        if (Managedroppedfiles.length > 0) {
            dropdownlength = Managedroppedfiles.length;
            var fileControl = Managedroppedfiles;
            if (fileControl.length > 0) {
                uploaders.uploaderCollection.removeAll();
                for (var i = 0; i < fileControl.length; i++) {
                    cful = Object.create(chunkedFileUploader);
                    cful.init(fileControl[i], i);
                    uploaders.uploaderCollection.push(cful);
                }
                //$(".progressBar").progressbar(0);
                uploaders.uploadAll();
            }
        }

    } else {
        if (droppedfiles.length > 0) {
            dropdownlength = droppedfiles.length;
            var fileControl = droppedfiles;
            if (fileControl.length > 0) {
                uploaders.uploaderCollection.removeAll();
                for (var i = 0; i < fileControl.length; i++) {
                    cful = Object.create(chunkedFileUploader);
                    cful.init(fileControl[i], i);
                    uploaders.uploaderCollection.push(cful);
                }
                //$(".progressBar").progressbar(0);
                uploaders.uploadAll();
            }
        }
    }
}

var uploaders = {
    uploaderCollection: ko.observableArray([]),
    uploadAll: function () {
        for (var i = 0; i < this.uploaderCollection().length; i++) {
            var cful = this.uploaderCollection()[i];
            cful.uploadMetaData();
        }
    }
}

var chunkedFileUploader =
{
    maxRetries: 3,
    //blockLength: 1048576,
    blockLength: 1048576,
    numberOfBlocks: 1,
    currentChunk: 1,
    retryAfterSeconds: 3,
    fileToBeUploaded: null,
    size: 0,
    fileIndex: 0,
    name: "",

    init: function (file, index) {
        this.fileToBeUploaded = file;
        this.size = file.size;
        this.name = file.name;
        this.fileIndex = index;
    },

    uploadMetaData: function () {
        this.numberOfBlocks = Math.ceil(this.size / this.blockLength);
        this.currentChunk = 1;
        var formData = new FormData();
        var Row_id_Value = "";
        var SelectedRow_Value = (FromManage) ? $('#tblManageBulkControls tbody tr').eq(this.fileIndex) : $('#tbBulkControls tbody tr').eq(this.fileIndex);
        if (typeof (SelectedRow_Value) != 'undefined' && SelectedRow_Value != null && SelectedRow_Value != "") {
            Row_id_Value = SelectedRow_Value[0].id.split(/[_ ]+/).pop();
        }

        formData.append("AccountID", localStorage.AccountID);
        formData.append("ContractID", getParameterByName("ContractID"));
        formData.append("ParentFoldertoPass", parentfolderidtopass);
        formData.append("CreatedBy", localStorage.UserName);
        formData.append("ModifiedBy", localStorage.UserName);
        formData.append("DocumentStatus", $("#ddlDocumentStatus" + Row_id_Value).val());
        formData.append("DocumentType", $("#ddlDocumentType_" + Row_id_Value).val());
        formData.append("IsDocumentExist", (document.getElementById("tr_" + Row_id_Value).style.color == "rgb(255, 0, 0)" || document.getElementById("tr_" + Row_id_Value).style.color == "red") ? "Yes" : "No");
        formData.append("RefreshToken", localStorage.RefreshToken);
        if (typeof ($("#chkbkocr_" + Row_id_Value)) != 'undefined' && $("#chkbkocr_" + Row_id_Value).is(':checked'))
            formData.append("IsOcrDoc", "Yes");
        else
            formData.append("IsOcrDoc", "No");

        $.ajax({
            type: "POST",
            //async: false,
            data: formData,
            dataType: 'json',
            processData: false,
            headers: {
                'AntiReqVerificationToken': $("#forgeryToken").val(), 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
            },
            contentType: false,
            url: "/Documents/SetMetadata?blocksCount=" + this.numberOfBlocks
                + "&fileName=" + this.name
                + "&fileSize=" + this.size
                + "&fileIndex=" + this.fileIndex,

        }).done(function (state) {
            if (state.success == true) {
                var cufl = uploaders.uploaderCollection()[state.index]
                //cufl.displayStatusMessage(cufl, "0%");
                cufl.sendFile(cufl);
            }
        }).fail(function () {
            dropdownlength = dropdownlength - 1;
            //this.displayStatusMessage("Failed to send MetaData");
        });
    },

    sendFile: function (uploader) {
        var start = 0,
            end = Math.min(uploader.blockLength, uploader.fileToBeUploaded.size),
            retryCount = 0,
            sendNextChunk, fileChunk;
        //this.displayStatusMessage(uploader, "");
        var cful = uploader;
        sendNextChunk = function () {
            fileChunk = new FormData();
            if (uploader.fileToBeUploaded.slice) {
                fileChunk.append('Slice', uploader.fileToBeUploaded.slice(start, end));
            }
            else if (uploader.fileToBeUploaded.webkitSlice) {
                fileChunk.append('Slice', uploader.fileToBeUploaded.webkitSlice(start, end));
            }
            else if (uploader.fileToBeUploaded.mozSlice) {
                fileChunk.append('Slice', uploader.fileToBeUploaded.mozSlice(start, end));
            }
            else {
                displayStatusMessage(cful, operationType.UNSUPPORTED_BROWSER);
                return;
            }
            jqxhr = $.ajax({
                async: true,
                url: ('/Documents/UploadChunk?id=' + uploader.currentChunk + "&fileIndex=" + uploader.fileIndex),
                data: fileChunk,
                headers: {
                    'AntiReqVerificationToken': $("#forgeryToken").val()
                },
                cache: false,
                contentType: false,
                processData: false,
                type: 'POST'
            }).fail(function (request, error) {
                if (error !== 'abort' && retryCount < maxRetries) {
                    ++retryCount;
                    setTimeout(sendNextChunk, retryAfterSeconds * 1000);
                }
                if (error === 'abort') {
                    dropdownlength = dropdownlength - 1;
                    displayStatusMessage(cful, "Aborted");
                }
                else {
                    if (retryCount === maxRetries) {
                        displayStatusMessage(cful, "Upload timed out.");
                        resetControls();
                        uploader = null;
                        dropdownlength = dropdownlength - 1;
                    }
                    else {
                        displayStatusMessage(cful, "Resuming Upload");
                    }
                }
                return;
            }).done(function (state) {
                if (state.error || state.isLastBlock) {
                    uploadedfilecount++;
                    cful.displayStatusMessage(cful, "100%");
                    //manoj
                    CreateDocumentListNewBlob(state.DocDetails);
                    var Row_id_Value = "";
                    var SelectedRow_Value = (FromManage) ? $('#tblManageBulkControls tbody tr').eq(state.index) : $('#tbBulkControls tbody tr').eq(state.index);
                    if (typeof (SelectedRow_Value) != 'undefined' && SelectedRow_Value != null && SelectedRow_Value != "") {
                        Row_id_Value = SelectedRow_Value[0].id.split(/[_ ]+/).pop();
                    }
                    $('#idLoading' + Row_id_Value).css('display', 'none');
                    $('#idLoadingstart' + Row_id_Value).css('display', 'none');
                    $('#idLoadingcomplete' + Row_id_Value).css('display', '');
                    if (uploadedfilecount == dropdownlength) {
                        //manoj
                        $("#tblManageBulkControls").empty();
                        $("#docManageBulk").empty();
                        Managedroppedfiles = [];
                        Managedropexitfilename = [];
                        //manoj
                        PrvFolderselection = '';
                        $("#tbBulkControls").empty();
                        $("#file").empty();
                        droppedfiles = [];
                        dropexitfilename = [];
                        //opmlFile = null;
                        droppedControls = 0;
                        $("#general-notification").css("visibility", "visible");
                        $("#general-notification").html("Document(s) uploaded successfully. All the options to perform action on document will be enabled once it is ready for use.");
                        setTimeout(function () {
                            $("#general-notification").css("visibility", "hidden");
                        }, 10000);
                        $("#lblFilesCount").text(droppedfiles + " file(s) uploaded.")
                        $('#tbBulkControls').css("pointer-events", "auto");
                        $("#bulkuploaddoc").dialog("close");
                        applybulkdocumetdraganddrop();
                        $("#divchunkfileupload").css("display", "none");
                        ClearManageDoc(true);
                        parentfolderidtopass = "";
                        dropdownlength = 0;
                        uploadedfilecount = 0;
                        clearTimeout(cleartimevalue);
                        cleartimevalue = setTimeout(refreshdocuemnt, 10000);
                        $("#addEditDocument").dialog("close");
                        afterPost();
                        //manoj
                        return;
                    }
                }
                ++cful.currentChunk;
                start = (cful.currentChunk - 1) * cful.blockLength;
                end = Math.min(cful.currentChunk * cful.blockLength, cful.fileToBeUploaded.size);
                retryCount = 0;
                cful.updateProgress(cful);
                if (cful.currentChunk <= cful.numberOfBlocks) {
                    sendNextChunk();
                }
            });
        }
        sendNextChunk();
    },

    displayStatusMessage: function (uploader, message) {
        if (typeof (message) != 'undefined' && message != null && message != "") {
            var updatevalue = uploader.fileIndex + 1;
            if (message == "100%") {
                message = "Completed";
            }
            $("#uploadprogresslbl" + updatevalue).text(message);
            $('#idLoading' + updatevalue).css('display', 'none');
            $('#idLoadingstart' + updatevalue).css('display', 'none');
            $('#idLoadingcomplete' + updatevalue).css('display', 'none');
        }
    },

    updateProgress: function (uploader) {
        var progress = uploader.currentChunk / uploader.numberOfBlocks * 100;
        if (progress <= 100) {
            //$("#progressBar" + uploader.fileIndex).progressbar("option", "value", parseInt(progress));
            var percentage = Math.round(progress);
            uploader.displayStatusMessage(uploader, percentage + "%");
        }
    }
}
//For Uploading File using Chunk
//manoj

function showAllActivities(item) {
    if ($("ul li.moreComments").css('display') == "none") {
        $("ul li.moreComments").css('display', '');
        $($(item)[0]).html('Show Less');
    }
    else {
        $("ul li.moreComments").css('display', 'none');
        $($(item)[0]).html('Show Older');
    }
}

function Close_ManageFolder() {
    if (typeof ($("#hdnManagefolderurl").val()) != "undefined" && $("#hdnManagefolderurl").val() != null && $("#hdnManagefolderurl").val() != "") {
        var $tree1 = $('#treeviewManageFolderOption');
        var nodeselect1 = $tree1.tree('getNodeById', $("#hdnManagefolderurl").val());
        $('#treeviewManageFolderOption').tree('removeNode', nodeselect1);
        $("#hdnManagefolderurl").val("");
        $("#txtManagefoldervalue").val("");
    }
}

function IsApprovalSheetYesClick() {
    $('#p_Approvalsheet').css("display", "");
    $('#div_Approvalsheet').css("display", "");
}

function IsApprovalSheetNoClick() {
    $('#p_Approvalsheet').css("display", "none");
    $('#div_Approvalsheet').css("display", "none");
}
function IsApprovalSheetTempYesClick() {
    $('#p_AStemplate').css("display", "");
    $('#div_AStemplate').css("display", "");
}

function IsApprovalSheetTempNoClick() {
    $('#p_AStemplate').css("display", "none");
    $('#div_AStemplate').css("display", "none");
}

function IsApprovalSheetFromTemplat() {
    //manoj
    $("#docApprovalSheetContract").replaceWith($("#docApprovalSheetContract").val('').clone(true));
    $("#ddlSummaryDocumentTemplate").val('0');
    $("#txtSummaryDocumentNameCreate").val('');
    $("#txtSummaryDescriptionDoc").val('');
    $("#txtSummaryDescriptionDocFromComputer").val('');
    //manoj
    $('#dvASFromTemp').css("display", "");
    $('#dvASFromComputer').css("display", "none");
}

function IsApprovalSheetFromComputer() {
    $('#dvASFromComputer').css("display", "");
    $('#dvASFromTemp').css("display", "none");
}



function OpenManage() {
    if ((contractItem.FullControlPermissions.indexOf(localStorage.UserName) > -1) || (localStorage.UserType.indexOf("Global Contract Owner") >= 0) || (contractItem.BusinessAreaOwners.indexOf(localStorage.UserName) > -1)) {
        OpenManageTerm();
    }

}

function BindWorkflowSettings() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Workflow/settings?accountid=' + localStorage.AccountID,
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        contentType: 'application/json',
        cache: false,
        success: function (status) {
            $.each(status.TaskCommentRequired.split(";"), function () {
                RequiredComment.push($.trim(this));
            });
        }
    });
}

function sortArrOfObjectsByParam(arrToSort) {
    arrToSort.sort(function (a, b) {
        var A = a.toUpperCase();
        var B = b.toUpperCase();
        return ((A < B) ? -1 : ((A > B) ? 1 : 0));
    });
    return arrToSort;
}

function BindContractApprovalSheets() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/contractapprovalsheets',
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            $('#ddlSummaryDocumentTemplate').empty();
            $('#ddlSummaryDocumentTemplate').append('<option value="0">--Select--</option>');
            $(data).each(function (i, item) {
                if ($.inArray(item.ContractApprovalSheet, oRelatedApprovalSheets.split(';')) !== -1) {
                    if (item.ContractApprovalSheetTemplateName != null && item.ContractApprovalSheetTemplateName != "" && typeof (item.ContractApprovalSheetTemplateName) != "undefined") {
                        $("#ddlSummaryDocumentTemplate").append('<option value="' + item.ContractApprovalSheetTemplate + '~' + item.ContractApprovalSheetTemplateName + '">' + item.ContractApprovalSheet + '</option>');
                    }
                }
            });
        },
        error: function (data) {
            $('#ddlSummaryDocumentTemplate').empty();
        }
    });
}

//manoj
function EnableDisableOCR() {
    var veContractFeatures_OCR = JSON.parse(localStorage.getItem("eContractFeatures"));
    var vDocLibFeat_OCR = $.grep(veContractFeatures_OCR, function (n_OCR, i_OCR) {
        return (n_OCR.RowKey == "25" && n_OCR.Status == "ON");
    });
    if (vDocLibFeat_OCR.length > 0) {
        OCRDocEnabled = true;
    } else {
        OCRDocEnabled = false;
    }
}

function showTermActivities() {
    $("#ulActivityComment").html('<img src="../Content/Images/icon/loading.gif">');
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/IContractDetails?contractid=' + vContractID,
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (mainmetadataFields) {
            var vMetadata = $(mainmetadataFields).find('Metadata');
            if ($(vMetadata).find("TermCommentsXML").length > 0) {
                $("#ulActivityComment").empty();
                var commentArr = [];
                var commentsxML = decodeURIComponent($(vMetadata).find("TermCommentsXML")[0].innerHTML);
                $(commentsxML).find("RenewalComment").each(function () {
                    var dateText = $(this).find("Created").text()

                    var item = {
                        activity: $(this).find('Activity').text(),
                        comment: $(this).find('Comments').text(),
                        sendto: $(this).find('SendTo').text(),
                        created: new Date(dateText)
                        /* other properties*/
                    }
                    /* push object to array*/
                    commentArr.push(item);

                });

                if (commentArr.length > 0) {
                    commentArr.sort(function (a, b) {
                        return a.created < b.created;
                    });
                    var htmlComment = '';
                    $.each(commentArr, function (index, item) {
                        if (index < 3) {
                            htmlComment += '<li><b class="color_lightgrey"><span class="color_dark" style="margin-right: 20px;">Activity: </span>' + item.activity + '</b><br><br><b class="color_dark float_left" style="margin-right: 7px;">Comment: </b><div class="taskcomment"><span> ' + item.comment + '</span></div></li>';
                        }
                        else {
                            htmlComment += '<li class="moreComments" style="display:none;"><b class="color_lightgrey"><span class="color_dark" style="margin-right: 20px;">Activity: </span>' + item.activity + '</b><br><br><b class="color_dark float_left" style="margin-right: 7px;">Comment: </b><div class="taskcomment"><span> ' + item.comment + '</span></div></li>';

                        }
                    });
                    if (commentArr.length > 3) {
                        htmlComment += '<li style="border: none;"><a href="javascript:void(0);" onclick="showAllActivities(this)" style="color: #44a6d8;">Show Older</a></li>';
                    }

                    $("#ulActivityComment").append(htmlComment);
                }

            }
            else {
                $("#ulActivityComment").empty();
                $("#ulActivityComment").append('<li style="border: none;"><b class="color_lightgrey"><span class="color_dark" style="margin-right: 20px;">No Activities found</span></b></li>');
            }
        },
        error: function (mainmetadataFields) {
            $("#ulActivityComment").empty();
            $("#ulActivityComment").append('<li style="border: none;"><b class="color_lightgrey"><span class="color_dark" style="margin-right: 20px;">No Activities found</span></b></li>');
        }
    });
}

function ContractTermDetails() {
    $('#tblSummaryRelatedContract').css("display", "none");
    $('#tblSummaryMetadataForRelatedContract').css("display", "none");
    $('#tblDetailsMetadataRelatedContract').css("display", "none");
    $('#tblContractTermDetails').css("display", "");
    $('#tblContractTermHistoryActivityDetails').css("display", "");


    $("#SummaryLI").removeClass('pop_up__Acti');
    $("#DocumentLI").removeClass('pop_up__Acti');
    $("#ContractTermLI").addClass('pop_up__Acti');
}




function getRelatedContractTerm(contrRecord) {
    if (contrRecord.ContractTermType == 0 || contrRecord.ContractTermType == "" || contrRecord.ContractTermType == null) {
        $("#tblContractTermDetails").html("No items found.");
        $("#dvRenewalTermDetails").css("display", "none");
        $("#dvTermActivities").css("display", "none");
    }
    else {
        $("#dvRenewalTermDetails").css("display", "");
        $("#dvTermActivities").css("display", "");

        var vTermType = contrRecord.ContractTermType;
        var vTermTypeDisplay = vTermType != "" ? TermTypeDisplayName[vTermType] : "-";
        var vMetadata = '<tr>';
        vMetadata += '<td class="f_head width90">Term Type</td>';
        vMetadata += '<td class="labelleft width60">' + vTermTypeDisplay + '</td>';
        vMetadata += '</tr>';
        if (vTermType == "Fixed Term") {
            var vStartdate = '';
            var vEnddate = '';

            var vCounterNotice = '';
            //Renewal / Cancellation Conditions
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Cancellation Conditions</td>';
            if (contrRecord.ContractTermNotes != null && contrRecord.ContractTermNotes != '')
                vMetadata += '<td class="labelleft width60">' + contrRecord.ContractTermNotes + '</td>';
            else
                vMetadata += '<td class="labelleft width60">-</td>';
            vMetadata += '</tr>';



            //Current Term
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Start / Effective Date</td>';
            if (contrRecord.StartDate != null && contrRecord.StartDate != '') {
                var rstartdate = '';
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    rstartdate = contrRecord.StartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                }
                else {
                    if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                        rstartdate = contrRecord.StartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                    }
                    else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                        rstartdate = contrRecord.StartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                    }

                }
                vMetadata += '<td class="labelleft width60">' + rstartdate + ' </td>';
            }
            else
                vMetadata += '<td class="labelleft width60">-</td>';

            vMetadata += '</tr>';


            //Next Evaluation Date
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Next Evaluation Date</td>';
            if (contrRecord.NextEvaluationDate != null && contrRecord.NextEvaluationDate != '') {
                var nextEvaluationDate = '';
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    nextEvaluationDate = contrRecord.NextEvaluationDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                }
                else {
                    if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                        nextEvaluationDate = contrRecord.NextEvaluationDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                    }
                    else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                        nextEvaluationDate = contrRecord.NextEvaluationDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                    }

                }
                vMetadata += '<td <td class="labelleft width60">' + nextEvaluationDate + '</td>';
            }
            else
                vMetadata += '<td class="labelleft width60">-</td>';

            vMetadata += '</tr>';

            //End Date
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">End Date</td>';
            if (contrRecord.EndDate != null && contrRecord.EndDate != '') {
                var renddate = '';
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    renddate = contrRecord.EndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                }
                else {
                    if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                        renddate = contrRecord.EndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                    }
                    else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                        renddate = contrRecord.EndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                    }

                }
                vMetadata += '<td class="labelleft width60">' + renddate + '</td>';
            }
            else
                vMetadata += '<td class="labelleft width60">-</td>';

            vMetadata += '</tr>';


            //Counterparty Contact / Address for Notice
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Counterparty Contact / Address for Notice</td>';
            if (contrRecord.CounterpartyNotices != null && contrRecord.CounterpartyNotices != '')
                vMetadata += '<td class="labelleft width60">' + contrRecord.CounterpartyNotices + '</td>';
            else
                vMetadata += '<td class="labelleft width60">-</td>';
            vMetadata += '</tr>';

            //Counterparty Cancellation Notice
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Counterparty Cancellation Notice</td>';
            if (contrRecord.CounterpartyNoticesCancel != null && contrRecord.CounterpartyNoticesCancel != '') {
                vMetadata += '<td class="labelleft width60">' + contrRecord.CounterpartyNoticesCancel + ' day(s)</td>';
            } else
                vMetadata += '<td class="labelleft width60">-</td>';
            vMetadata += '</tr>';

            $(".renewableTermDetails").css('display', 'none');

            showRelatedTermActivities(contrRecord);

        }
        else if (vTermType == "Evergreen / Perpetual") {
            //Renewal / Cancellation Conditions
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Cancellation Conditions</td>';
            if (contrRecord.ContractTermNotes != null && contrRecord.ContractTermNotes != '')
                vMetadata += '<td class="labelleft width60">' + contrRecord.ContractTermNotes + '</td>';
            else
                vMetadata += '<td class="labelleft width60">-</td>';
            vMetadata += '</tr>';

            //Current Term
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Start / Effective Date</td>';
            if (contrRecord.StartDate != null && contrRecord.StartDate != '') {
                var rstartdate = '';
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    rstartdate = contrRecord.StartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                }
                else {
                    if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                        rstartdate = contrRecord.StartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                    }
                    else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                        rstartdate = contrRecord.StartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                    }

                }
                vMetadata += '<td class="labelleft width60">' + rstartdate + ' </td>';
            }
            else
                vMetadata += '<td class="labelleft width60">-</td>';

            vMetadata += '</tr>';

            //Next Evaluation Date
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Next Evaluation Date</td>';
            if (contrRecord.NextEvaluationDate != null && contrRecord.NextEvaluationDate != '') {
                var nextEvaluationDate = '';
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    nextEvaluationDate = contrRecord.NextEvaluationDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                }
                else {
                    if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                        nextEvaluationDate = contrRecord.NextEvaluationDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                    }
                    else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                        nextEvaluationDate = contrRecord.NextEvaluationDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                    }

                }
                vMetadata += '<td class="labelleft width60">' + nextEvaluationDate + '</td>';
            }
            else
                vMetadata += '<td class="labelleft width60">-</td>';

            vMetadata += '</tr>';

            //Counterparty Contact / Address for Notice
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Counterparty Contact / Address for Notice</td>';
            if (contrRecord.CounterpartyNotices != null && contrRecord.CounterpartyNotices != '')
                vMetadata += '<td class="labelleft width60">' + contrRecord.CounterpartyNotices + '</td>';
            else
                vMetadata += '<td class="labelleft width60">-</td>';
            vMetadata += '</tr>';

            //Counterparty Cancellation Notice
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Counterparty Cancellation Notice</td>';
            if (contrRecord.CounterpartyNoticesCancel != null && contrRecord.CounterpartyNoticesCancel != '') {
                vMetadata += '<td class="labelleft width60">' + contrRecord.CounterpartyNoticesCancel + ' day(s)</td>';
            } else
                vMetadata += '<td class="labelleft width60">-</td>';
            vMetadata += '</tr>';

            $(".renewableTermDetails").css('display', 'none');
            showRelatedTermActivities(contrRecord);
        }
        else if (vTermType == "Executed / Performance") {
            //Renewal / Cancellation Conditions
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Cancellation Conditions</td>';
            if (contrRecord.ContractTermNotes != null && contrRecord.ContractTermNotes != '')
                vMetadata += '<td class="labelleft width60">' + contrRecord.ContractTermNotes + '</td>';
            else
                vMetadata += '<td class="labelleft width60">-</td>';
            vMetadata += '</tr>';



            //Date of execution
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Start / Effective Date</td>';
            if (contrRecord.StartDate != null && contrRecord.StartDate != '') {
                var rstartdate = '', renddate = '';
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    rstartdate = contrRecord.StartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                }
                else {
                    if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                        rstartdate = contrRecord.StartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                    }
                    else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                        rstartdate = contrRecord.StartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                    }

                }
                vMetadata += '<td class="labelleft width60">' + rstartdate + ' </td>';
            }
            else
                vMetadata += '<td class="labelleft width60">-</td>';

            vMetadata += '</tr>';


            //Counterparty Contact / Address for Notice
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Counterparty Contact / Address for Notice</td>';
            if (contrRecord.CounterpartyNotices != null && contrRecord.CounterpartyNotices != '')
                vMetadata += '<td class="labelleft width60">' + contrRecord.CounterpartyNotices + '</td>';
            else
                vMetadata += '<td class="labelleft width60">-</td>';
            vMetadata += '</tr>';

            //Counterparty Cancellation Notice
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Counterparty Cancellation Notice</td>';
            if (contrRecord.CounterpartyNoticesCancel != null && contrRecord.CounterpartyNoticesCancel != '') {

                vMetadata += '<td class="labelleft width60">' + contrRecord.CounterpartyNoticesCancel + ' day(s)</td>';
            } else
                vMetadata += '<td class="labelleft width60">-</td>';
            vMetadata += '</tr>';

            $(".renewableTermDetails").css('display', 'none');
            showRelatedTermActivities(contrRecord);
        }
        else if (vTermType == "Renewable") {
            var vRenewOn = '';

            //Renewal / Cancellation Conditions
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Renewal / Cancellation Conditions</td>';
            if (contrRecord.ContractTermNotes != null && contrRecord.ContractTermNotes != '')
                vMetadata += '<td class="labelleft width60">' + contrRecord.ContractTermNotes + '</td>';
            else
                vMetadata += '<td class="labelleft width60">-</td>';
            vMetadata += '</tr>';

            //Auto-Renew at the end of each term
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Auto-Renew at the end of each term</td>';
            if (contrRecord.AutoRenew != null && contrRecord.AutoRenew != '')
                vMetadata += '<td class="labelleft width60">' + contrRecord.AutoRenew + '</td>';
            else
                vMetadata += '<td class="labelleft width60">-</td>';
            vMetadata += '</tr>';

            //Requires Renewal Authorization
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Requires Renewal Authorization</td>';
            if (contrRecord.RequiresAuth != null && contrRecord.RequiresAuth != '')
                vMetadata += '<td class="labelleft">' + contrRecord.RequiresAuth + '</td>';
            else
                vMetadata += '<td class="labelleft width60">-</td>';
            vMetadata += '</tr>';

            //Renewal Notice to Counterparty
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Renewal Notice to Counterparty</td>';
            if (contrRecord.CounterpartyNoticesRenewalDate != null && contrRecord.CounterpartyNoticesRenewalDate != '') {
                var counterpartyNoticesRenewalDate = '';
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    counterpartyNoticesRenewalDate = contrRecord.CounterpartyNoticesRenewalDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                }
                else {
                    if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                        counterpartyNoticesRenewalDate = contrRecord.CounterpartyNoticesRenewalDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                    }
                    else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                        counterpartyNoticesRenewalDate = contrRecord.CounterpartyNoticesRenewalDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                    }

                }
                vMetadata += '<td class="labelleft width60">' + counterpartyNoticesRenewalDate + '</td>';
            } else
                vMetadata += '<td class="labelleft width60">-</td>';
            vMetadata += '</tr>';

            //Counterparty Cancellation Notice
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Counterparty Cancellation Notice</td>';
            if (contrRecord.CounterpartyNoticesCancelDate != null && contrRecord.CounterpartyNoticesCancelDate != '') {
                var counterpartyNoticesCancelDate = '';
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    counterpartyNoticesCancelDate = contrRecord.CounterpartyNoticesCancelDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                }
                else {
                    if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                        counterpartyNoticesCancelDate = contrRecord.CounterpartyNoticesCancelDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                    }
                    else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                        counterpartyNoticesCancelDate = contrRecord.CounterpartyNoticesCancelDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                    }

                }
                vMetadata += '<td class="labelleft width60">' + counterpartyNoticesCancelDate + '</td>';
            } else
                vMetadata += '<td class="labelleft width60">-</td>';
            vMetadata += '</tr>';

            //Counterparty Contact / Address for Notice
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Counterparty Contact / Address for Notice</td>';
            if (contrRecord.CounterpartyNotices != null && contrRecord.CounterpartyNotices != '')
                vMetadata += '<td class="labelleft width60">' + contrRecord.CounterpartyNotices + '</td>';
            else
                vMetadata += '<td class="labelleft width60">-</td>';
            vMetadata += '</tr>';

            //Current Term
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Current Term</td>';
            if (contrRecord.EffectiveDate != null && contrRecord.EffectiveDate != '') {
                var rstartdate = '', renddate = '';
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    rstartdate = contrRecord.EffectiveDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                    if (contrRecord.TermEndDate != null)
                        renddate = contrRecord.TermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                }
                else {
                    if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                        rstartdate = contrRecord.EffectiveDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                        if (contrRecord.TermEndDate != null)
                            renddate = contrRecord.TermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                    }
                    else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                        rstartdate = contrRecord.EffectiveDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                        if (contrRecord.TermEndDate != null)
                            renddate = contrRecord.TermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                    }

                }
                vMetadata += '<td class="labelleft width60">' + rstartdate + ' - ' + renddate + '</td>';
            }
            else
                vMetadata += '<td class="labelleft width60">-</td>';
            vMetadata += '</tr>';

            //Upcoming Term
            vMetadata += '<tr>';
            vMetadata += '<td class="f_head width90">Upcoming Term</td>';
            if (contrRecord.NextTermStartDate != null && contrRecord.NextTermStartDate != '') {
                var rstartdate = '', renddate = '';
                if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "") {
                    rstartdate = contrRecord.NextTermStartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                    renddate = contrRecord.NextTermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                }
                else {
                    if (localStorage.AppDateFormat == 'DD/MM/YYYY') {
                        rstartdate = contrRecord.NextTermStartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                        renddate = contrRecord.NextTermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$3/$2/$1');
                    }
                    else if (localStorage.AppDateFormat == 'MM/DD/YYYY') {
                        rstartdate = contrRecord.NextTermStartDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                        renddate = contrRecord.NextTermEndDate.replace(/^(\d{4})\-(\d{2})\-(\d{2}).*$/, '$2/$3/$1');
                    }

                }
                vMetadata += '<td class="labelleft width60">' + rstartdate + ' - ' + renddate + '</td>';
            }
            else
                vMetadata += '<td class="labelleft width60">-</td>';
            vMetadata += '</tr>';

            $(".renewableTermDetails").css('display', '');
            //showRelatedTermActivities(contrRecord);
            GetRelatedRenewalHistory(contrRecord);
        }


        $("#tblContractTermDetails").html(vMetadata);
    }
}
function GetRelatedRenewalHistory(contrRecord) {
    if (contrRecord.RowKey == null || contrRecord.RowKey == "") {
        contrRecord.RowKey = vContractID;
    }
    $("#renewalViewHistoryNew1").html('<img src="../Content/Images/icon/loading.gif">');
    $("#ulActivityComment1").html('<img src="../Content/Images/icon/loading.gif">');
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + contrRecord.RowKey + '/contractrenewalhistory',
        type: 'GET',
        dataType: 'json',
        'Content-Type': 'application/json',
        cache: false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        success: function (data) {
            $("#renewalHistory").empty();
            $("#renewalViewHistory").empty();
            $("#tblRenewalHistory").empty();
            //Sridhar
            $("#renewalViewHistoryNew1").empty();
            $("#ulActivityComment1").empty();
            var str = "";
            var strHist = "";
            var commentArr = [];
            $("#ulActivityComment").empty();
            var allTerms = [];
            var endedTerms = $.grep(data, function (itemR, i) {
                return itemR.TermStatus == "Ended"
            })

            var currentTerm = $.grep(data, function (itemR, i) {
                return itemR.TermStatus == "Current"
            })
            var expiredTerms = $.grep(data, function (itemR, i) {
                return itemR.TermStatus == "Expired" && itemR.RenewableTermName != "Initial Term"
            })

            var notStartedTerms = $.grep(data, function (itemR, i) {
                return itemR.TermStatus == "Not Started"
            })

            allTerms = allTerms.concat(endedTerms, currentTerm, expiredTerms, notStartedTerms);
            $(allTerms).each(function (i, item) {
                str += '<tr>';
                if (item.RenewableTermName != null && item.RenewableTermName != "") {
                    str += '<td style="width: 10%;">' + item.RenewableTermName + '</td>';
                }
                else {
                    str += '<td>-</td>';
                }
                if (item.RenewedDate != null) {
                    var fRenewedDate = "";
                    if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                    { fRenewedDate = moment(new Date(item.RenewedDate)).format('MM/DD/YYYY'); }
                    else {
                        fRenewedDate = moment(new Date(item.RenewedDate)).format(localStorage.AppDateFormat);
                    }
                    str += '<td>' + fRenewedDate + '</td>';
                } else {
                    str += '<td>-</td>';
                }
                if (item.TermEndDate != null) {
                    var fTermEndDate = "";
                    if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                    { fTermEndDate = moment(new Date(item.TermEndDate)).format('MM/DD/YYYY'); }
                    else {
                        fTermEndDate = moment(new Date(item.TermEndDate)).format(localStorage.AppDateFormat);
                    }
                    str += '<td>' + fTermEndDate + '</td>';
                } else {
                    str += '<td>-</td>';
                }

                if (item.TermStatus != null && item.TermStatus != "") {
                    str += '<td>' + item.TermStatus + '</td>';
                }
                else {
                    str += '<td>-</td>';
                }


                if (item.RenewedOn != null && item.RenewedOn != "") {
                    var fRenewedOn = "";
                    if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                    { fRenewedOn = moment(new Date(item.RenewedOn)).format('MM/DD/YYYY'); }
                    else {
                        fRenewedOn = moment(new Date(item.RenewedOn)).format(localStorage.AppDateFormat);
                    }
                    str += '<td>' + fRenewedOn + '</td>';
                }
                else {
                    str += '<td>-</td>';
                }

                if (item.RenewedBy != null && item.RenewedBy != "") {
                    str += '<td>' + item.RenewedBy + '</td>';
                }
                else {
                    str += '<td>-</td>';
                }

                if (item.RenewalChecklist != null && item.RenewalChecklist != "") {
                    str += '<td title="' + item.RenewalChecklist + '" style="line-height: 20px;"><span style="overflow: hidden;text-overflow: ellipsis;width: 175px;white-space: nowrap;float: left;">' + item.RenewalChecklist + '</span></td>';
                }
                else {
                    str += '<td>-</td>';
                }

                if (item.RenewalNotes != null && item.RenewalNotes != "") {
                    str += '<td title="' + item.RenewalNotes + '" style="line-height: 20px;"><span style="overflow: hidden;text-overflow: ellipsis;width: 175px;white-space: nowrap;float: left;">' + item.RenewalNotes + '</span></td>';
                }
                else {
                    str += '<td>-</td>';
                }

                str += '</tr>';

                if (item.RenewalCommentsXML == "" || item.RenewalCommentsXML == null) {
                }
                else {
                    var commentsxML = decodeURIComponent(item.RenewalCommentsXML);
                    $(commentsxML).find("RenewalComment").each(function () {
                        var dateText = $(this).find("Created").text()

                        var item = {
                            activity: $(this).find('Activity').text(),
                            comment: $(this).find('Comments').text(),
                            sendto: $(this).find('SendTo').text(),
                            created: new Date(dateText)
                            /* other properties*/
                        }
                        /* push object to array*/
                        commentArr.push(item);

                    });
                }

            });

            /* sort data*/
            if (commentArr.length > 0) {
                commentArr.sort(function (a, b) {
                    return a.created < b.created;
                });
                var htmlComment = '';
                $.each(commentArr, function (index, item) {
                    if (index < 3) {
                        htmlComment += '<li><b class="color_lightgrey"><span class="color_dark" style="float: left;width: 9%;">Activity: </span><span style="float: left;width: 88%;">' + item.activity + '</span></b><br><br><b class="color_dark float_left" style="float: left;width: 9%;">Comment: </b><div class="taskcomment"><span style="float: left;width: 88%;"> ' + item.comment + '</span></div></li>';
                    }
                    else {
                        htmlComment += '<li class="moreComments" style="display:none;"><b class="color_lightgrey"><span class="color_dark" style="float: left;width: 9%;">Activity: </span><span style="float: left;width: 88%;">' + item.activity + '</span></b><br><br><b class="color_dark float_left" style="float: left;width: 9%;">Comment: </b><div class="taskcomment"><span style="float: left;width: 88%;"> ' + item.comment + '</span></div></li>';

                    }
                });
                if (commentArr.length > 3) {
                    htmlComment += '<li style="border: none;"><a href="javascript:void(0);" onclick="showAllActivities(this)" style="color: #44a6d8;">Show Older</a></li>';
                }

                $("#ulActivityComment1").append(htmlComment);
            }
            else {
                $("#ulActivityComment1").empty();
                $("#ulActivityComment1").append('<li style="border: none;"><b class="color_lightgrey"><span class="color_dark" style="margin-right: 20px;">No Activities found</span></b></li>');
            }
            //$("#renewalHistory").append(str);
            //*Harshitha
            $("#renewalViewHistoryNew1").append(str);
            //$("#tblRenewalHistory").append(strHist);
            if (str != "") {
                $("#CurrentTermName").val('Initial Term');
                CurrentTermDetails = "";
            }
            else {
                $("#AddInitialTerm").css("display", "");
                $("#AddRenewalTerm").css("display", "none");
                var len = data.length;
                $(data).each(function (i, item) {
                    str += '<tr>';
                    if (len - 1 == i) {
                        $("#CurrentTermName").val(item.RenewableTermName);
                        CurrentTermDetails = item;
                    }
                    str += '<td>' + item.RenewableTermName + '</td>';

                    if (item.RenewedDate != null) {
                        var fRenewedDate = "";
                        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                        { fRenewedDate = moment(new Date(item.RenewedDate)).format('MM/DD/YYYY'); }
                        else {
                            fRenewedDate = moment(new Date(item.RenewedDate)).format(localStorage.AppDateFormat);
                        }
                        if (len - 1 == i)
                            str += '<td  style="width: 20%;" id="CurrentRenewalTermStart">' + fRenewedDate + '</td>';
                        else
                            str += '<td style="width: 20%;">' + fRenewedDate + '</td>';
                    } else {
                        str += '<td style="width: 20%;"></td>';
                    }
                    if (item.TermEndDate != null) {
                        var fTermEndDate = "";
                        if (localStorage.AppDateFormat == "undefined" || localStorage.AppDateFormat == null || localStorage.AppDateFormat == "")
                        { fTermEndDate = moment(new Date(item.TermEndDate)).format('MM/DD/YYYY'); }
                        else {
                            fTermEndDate = moment(new Date(item.TermEndDate)).format(localStorage.AppDateFormat);
                        }
                        if (len - 1 == i)
                            str += '<td style="width: 20%;" id="CurrentRenewalTermEnd">' + fRenewedDate + '</td>';
                        else
                            str += '<td style="width: 20%;">' + fTermEndDate + '</td>';
                    } else {
                        str += '<td style="width: 20%;"></td>';
                    }
                    str += '<td style="width: 20%;">' + item.Status + '</td>';
                    str += '<td style="width: 20%;"> <a href="javascript:void(0)" class="linkPickerClear" onclick="GetRenewalEachDetails(' + item.RenewableTermName + ')">View Details</a>';
                    str += '</tr>';
                });
                if (str != '')
                    $("#renewalViewHistoryTerm").append(str);
                else
                    $("#renewalViewHistoryTerm").append('No History found.');

            }
            //$("#loadingPage").fadeOut();
        },
        error:
            function (data) {
                //$("#loadingPage").fadeOut();
                $("#renewalViewHistoryTerm").empty();
                $("#renewalViewHistoryTerm").append('No History found.');
            }
    });
}
function showRelatedTermActivities(contrRecord) {
    $("#ulActivityComment1").html('<img src="../Content/Images/icon/loading.gif">');

    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/IContractDetails?contractid=' + contrRecord.RowKey,
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (mainmetadataFields) {
            var vMetadata = $(mainmetadataFields).find('Metadata');
            if ($(vMetadata).find("TermCommentsXML").length > 0) {
                $("#ulActivityComment1").empty();
                var commentArr = [];
                var commentsxML = decodeURIComponent($(vMetadata).find("TermCommentsXML")[0].innerHTML);
                $(commentsxML).find("RenewalComment").each(function () {
                    var dateText = $(this).find("Created").text()

                    var item = {
                        activity: $(this).find('Activity').text(),
                        comment: $(this).find('Comments').text(),
                        sendto: $(this).find('SendTo').text(),
                        created: new Date(dateText)
                        /* other properties*/
                    }
                    /* push object to array*/
                    commentArr.push(item);

                });

                if (commentArr.length > 0) {
                    commentArr.sort(function (a, b) {
                        return a.created < b.created;
                    });
                    var htmlComment = '';
                    $.each(commentArr, function (index, item) {
                        if (index < 3) {
                            htmlComment += '<li><b class="color_lightgrey"><span class="color_dark" style="margin-right: 20px;">Activity: </span>' + item.activity + '</b><br><br><b class="color_dark float_left" style="margin-right: 7px;">Comment: </b><div class="taskcomment"><span> ' + item.comment + '</span></div></li>';
                        }
                        else {
                            htmlComment += '<li class="moreComments" style="display:none;"><b class="color_lightgrey"><span class="color_dark" style="margin-right: 20px;">Activity: </span>' + item.activity + '</b><br><br><b class="color_dark float_left" style="margin-right: 7px;">Comment: </b><div class="taskcomment"><span> ' + item.comment + '</span></div></li>';

                        }
                    });
                    if (commentArr.length > 3) {
                        htmlComment += '<li style="border: none;"><a href="javascript:void(0);" onclick="showAllActivities(this)" style="color: #44a6d8;">Show Older</a></li>';
                    }

                    $("#ulActivityComment1").append(htmlComment);
                }

            }
            else {
                $("#ulActivityComment1").empty();
                $("#ulActivityComment1").append('<li style="border: none;"><b class="color_lightgrey"><span class="color_dark" style="margin-right: 20px;">No Activities found</span></b></li>');
            }
        },
        error: function (mainmetadataFields) {
            $("#ulActivityComment1").empty();
            $("#ulActivityComment1").append('<li style="border: none;"><b class="color_lightgrey"><span class="color_dark" style="margin-right: 20px;">No Activities found</span></b></li>');
        }
    });
}


function bindPhoneNumber(id, countryCode) {
    $("#" + id).intlTelInput({
        separateDialCode: true,
        utilsScript: "/Scripts/utils.js"
    });
}

function bindPhoneNumberEdit(id, countryCode) {
    $("#" + id).intlTelInput({
        initialCountry: countryCode,
        separateDialCode: true,
        utilsScript: "/Scripts/utils.js"
    });
}
function hoverFunction(id) {
    if (id != null && typeof (id) != "undefined") {
        $('#documentHover').css("display", "");
        $('a#' + id.id).hover(function (e) {
            $('div#documentHover').show()
             .css('top', e.pageY + 7)
             .css('right', 120)
            .appendTo('body');
        }, function () {
            $('div#documentHover').hide();
        });
    }
    else {
        $('#documentHover').css("display", "none");
    }
}

function GetBusinessAreaDetails() {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/businessarea/detailsbyname?businessareaname=' + encodeURIComponent(thisBusinessAreaNameC) + '&contractareaname=' + encodeURIComponent(thisContractAreaNameC),
        type: 'GET',
        dataType: 'json',
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        //async: false,
        success: function (data) {
            businessAreaDetails = data;
        },
        error: function (data) {
            businessAreaDetails = [];
        }
    });
}

$('#addEditAmendment').on('scroll', function () {
    $('#dtAmendmentFinalizedDate').datepicker('hide');
    $('#dtAmendmentEffectiveDate').datepicker('hide');
    $('#txtContractEndDateAfterAmend').datepicker('hide');
    $('#txtContractEndDateCurrent').datepicker('hide');
    $('#dtAmendmentFinalizedDate').blur();
    $('#dtAmendmentEffectiveDate').blur();
    $('#txtContractEndDateAfterAmend').blur();
    $('#txtContractEndDateCurrent').blur();

})

function checkContractStatus() {

    if (typeof contractItem.EffectiveDate != 'undefined' && contractItem.EffectiveDate != '' && contractItem.EffectiveDate != null) {
        var effectiveDate = moment(new Date(contractItem.EffectiveDate))
        var currentDate = moment(new Date());
        if (effectiveDate < currentDate) {
            $('#tblStatusMisMatch').css('display', '');
            $('#tblStatusMisMatch').html('<tr class="wmessage"> <td> <a href="javascript:void(0);" data-title = "Contract Start Date is less than Current Date, Make Contract as Active." style="display: inline-block;text-align: left" ><img src="/Content/Images/warning.png" style="cursor: default !important;margin-top:5px !important"></a></td </tr>');
        } else {
            $('#tblStatusMisMatch').empty();
            $('#tblStatusMisMatch').css('display', 'none');
        }
    } else {
        $('#tblStatusMisMatch').empty();
        $('#tblStatusMisMatch').css('display', 'none');
    }
}

function changeYesNoField(id) {
    $("#CustomCMD" + id.name).parent().parent().remove();
    var CommentYes = $("#hdnYes" + id.name).val();
    var CommentNo = $("#hdnNo" + id.name).val();
    var CommentRequired = $("#hdnRequired" + id.name).val();
    var HelpText = $("#hdnHelpText" + id.name).val();
    var vControls = "";
    if (id.value == "Yes") {
        if (CommentYes == "true") {
            //if (CommentRequired == "true") {
            //    vControls += ' <div class="form-input-group ' + id.name + '"><div class="row-group"><label class="col3 m12">Add a Comment<span class="text-red">*</span></label> ';
            //} else {
            //    vControls += '<div class="form-input-group ' + id.name + '"><div class="row-group"><label class="col3 m12">Add a Comment</label> ';
            //}
            //vControls += '<div class="col6 m12">';
            //if (CommentRequired == "true") {
            //    vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='500' title='" + id.name + "' cols='40' rows='5' class='form-contro validelement'></textarea>";
            //} else {
            //    vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='500' title='" + id.name + "' cols='40' rows='5' class='form-contro'></textarea>";
            //}
            //vControls += '</div>';
            //vControls += '</div></div>';

            if (CommentRequired == "true") {
                vControls += '<tr><td class="f_head"><label style="word-break: break-all;">Add a Comment<span class="text-red">*</span></label>';
            }
            else {
                vControls += '<tr><td class="f_head"><label style="word-break: break-all;">Add a Comment</label>';
            }
            if (HelpText != "" && HelpText != "/") {
                vControls += "<img class='helpimg' src='../Content/Images/help_training.png' title='" + HelpText + "'></label></td>"
            }
            vControls += '<td class="f_list width50">';
            if (CommentRequired == "true") {
                vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='500' title='" + id.name + "' cols='40' rows='5' class='f_inpt width80 height70 validelement'></textarea>";
            } else {
                vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='500' title='" + id.name + "' cols='40' rows='5' class='f_inpt width80 height70'></textarea>";
            }
            vControls += '</td></tr>';
            $("#" + id.id).parent().parent().after(vControls);
        } else {
            $("." + id.name).css("display", "none");
        }
    }
    if (id.value == "No") {
        if (CommentNo == "true") {
            //if (CommentRequired == "true") {
            //    vControls += ' <div class="form-input-group ' + id.name + '"><div class="row-group"><label class="col3 m12">Add a Comment<span class="text-red">*</span></label> ';
            //} else {
            //    vControls += '<div class="form-input-group ' + id.name + '"><div class="row-group"><label class="col3 m12">Add a Comment</label> ';
            //}
            //vControls += '<div class="col6 m12">';
            //if (CommentRequired == "true") {
            //    vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='500' title='" + id.name + "' cols='40' rows='5' class='form-contro validelement'></textarea>";
            //} else {
            //    vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='500' title='" + id.name + "' cols='40' rows='5' class='form-contro'></textarea>";
            //}
            //vControls += '</div>';
            //vControls += '</div></div>';

            if (CommentRequired == "true") {
                vControls += '<tr><td class="f_head"><label style="word-break: break-all;">Add a Comment <span class="text-red">*</span></label>';
            }
            else {
                vControls += '<tr><td class="f_head"><label style="word-break: break-all;">Add a Comment </label>';
            }
            if (HelpText != "" && HelpText != "/") {
                vControls += "<img class='helpimg' src='../Content/Images/help_training.png' title='" + HelpText + "'></label></td>"
            }
            vControls += '<td class="f_list width50">';
            if (CommentRequired == "true") {
                vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='500' title='" + id.name + "' cols='40' rows='5' class='f_inpt width80 height70 validelement'></textarea>";
            } else {
                vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='500' title='" + id.name + "' cols='40' rows='5' class='f_inpt width80 height70'></textarea>";
            }
            vControls += '</td></tr>';

            $("#" + id.id).parent().parent().after(vControls);
        } else {
            $("." + id.name).css("display", "none");
        }
    }
}

function CounterpartychangeYesNoField(id) {
    $("#CustomCMD" + id.name).parent().parent().remove();
    var CommentYes = $("#hdnYes" + id.name).val();
    var CommentNo = $("#hdnNo" + id.name).val();
    var CommentRequired = $("#hdnRequired" + id.name).val();
    var HelpText = $("#hdnHelpText" + id.name).val();
    var vControls = "";
    if (id.value == "Yes") {
        if (CommentYes == "true") {

            if (CommentRequired == "true") {
                vControls += '<li class="removableCounterpartyField CP_Det"><p><b>Add a Comment </b><small>*</small>';
            } else {
                vControls += '<li class="removableCounterpartyField CP_Det"><p><b>Add a Comment </b>';
            }
            if (HelpText != "" && HelpText != "/") {
                vControls += '<span class="p-text help"> <img src="../Content/Images/input-help.png" title="' + HelpText + '"></span>'
            }
            vControls += "<div>";
            if (CommentRequired == "true") {
                vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='300' title='" + id.name + "' cols='25' rows='3' class='validelement'></textarea>";
            } else {
                vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='300' title='" + id.name + "' cols='25' rows='3' ></textarea>";
            }
            vControls += '</div></li>';

            $("#" + id.id).parent().parent().after(vControls);
        } else {
            $("." + id.name).css("display", "none");
        }
    }
    if (id.value == "No") {
        if (CommentNo == "true") {

            if (CommentRequired == "true") {
                vControls += '<li class="removableCounterpartyField CP_Det"><p><b>Add a Comment </b><small>*</small>';
            } else {
                vControls += '<li class="removableCounterpartyField CP_Det"><p><b>Add a Comment </b>';
            }
            if (HelpText != "" && HelpText != "/") {
                vControls += '<span class="p-text help"> <img src="../Content/Images/input-help.png" title="' + HelpText + '"></span>'
            }
            vControls += "<div>";
            if (CommentRequired == "true") {
                vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='300' title='" + id.name + "' cols='25' rows='3' class='validelement'></textarea>";
            } else {
                vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='300' title='" + id.name + "' cols='25' rows='3' ></textarea>";
            }
            vControls += '</div></li>';

            $("#" + id.id).parent().parent().after(vControls);
        } else {
            $("." + id.name).css("display", "none");
        }
    }
}


function CounterpartychangeYesNoFieldtable(id) {
    $("#CustomCMD" + id.name).parent().parent().remove();
    var CommentYes = $("#hdnYes" + id.name).val();
    var CommentNo = $("#hdnNo" + id.name).val();
    var CommentRequired = $("#hdnRequired" + id.name).val();
    var HelpText = $("#hdnHelpText" + id.name).val();
    var vControls = "";
    if (id.value == "Yes") {
        if (CommentYes == "true") {
            //if (CommentRequired == "true") {
            //    vControls += ' <div class="form-input-group ' + id.name + '"><div class="row-group"><label class="col3 m12">Add a Comment<span class="text-red">*</span></label> ';
            //} else {
            //    vControls += '<div class="form-input-group ' + id.name + '"><div class="row-group"><label class="col3 m12">Add a Comment</label> ';
            //}
            //vControls += '<div class="col6 m12">';
            //if (CommentRequired == "true") {
            //    vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='500' title='" + id.name + "' cols='40' rows='5' class='form-contro validelement'></textarea>";
            //} else {
            //    vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='500' title='" + id.name + "' cols='40' rows='5' class='form-contro'></textarea>";
            //}
            //vControls += '</div>';
            //vControls += '</div></div>';

            if (CommentRequired == "true") {
                vControls += '<tr class="removableCounterpartyField CP_Det"><td class="f_head"><b>Add a Comment </b><span class="text-red">*</span>';
            }
            else {
                vControls += '<tr class="removableCounterpartyField CP_Det"><td class="f_head"><b>Add a Comment </b>';
            }
            if (HelpText != "" && HelpText != "/") {
                vControls += "</td>"
                //vControls += "<img class='helpimg' src='../Content/Images/help_training.png' title='" + HelpText + "'></label></td>"
            }
            else {
                vControls += "</td>"
            }
            vControls += '<td class="labelright">';
            if (CommentRequired == "true") {
                vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='500' title='" + id.name + "' cols='40' rows='5' class='f_inpt width80 height70 validelement'></textarea>";
            } else {
                vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='500' title='" + id.name + "' cols='40' rows='5' class='f_inpt width80 height70'></textarea>";
            }
            vControls += '</td></tr>';
            $("#" + id.id).parent().parent().parent().after(vControls);
        } else {
            $("." + id.name).css("display", "none");
        }
    }
    if (id.value == "No") {
        if (CommentNo == "true") {
            //if (CommentRequired == "true") {
            //    vControls += ' <div class="form-input-group ' + id.name + '"><div class="row-group"><label class="col3 m12">Add a Comment<span class="text-red">*</span></label> ';
            //} else {
            //    vControls += '<div class="form-input-group ' + id.name + '"><div class="row-group"><label class="col3 m12">Add a Comment</label> ';
            //}
            //vControls += '<div class="col6 m12">';
            //if (CommentRequired == "true") {
            //    vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='500' title='" + id.name + "' cols='40' rows='5' class='form-contro validelement'></textarea>";
            //} else {
            //    vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='500' title='" + id.name + "' cols='40' rows='5' class='form-contro'></textarea>";
            //}
            //vControls += '</div>';
            //vControls += '</div></div>';

            if (CommentRequired == "true") {
                vControls += '<tr class="removableCounterpartyField CP_Det"><td class="f_head"><b>Add a Comment </b><span class="text-red">*</span>';
            }
            else {
                vControls += '<tr class="removableCounterpartyField CP_Det"><td class="f_head"><b>Add a Comment </b>';
            }

            if (HelpText != "" && HelpText != "/") {
                vControls += "</td>"
                //vControls += "<img class='helpimg' src='../Content/Images/help_training.png' title='" + HelpText + "'></label></td>"
            }
            else {
                vControls += "</td>"
            }

            vControls += '<td class="labelright">';
            if (CommentRequired == "true") {
                vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='500' title='" + id.name + "' cols='40' rows='5' class='f_inpt width80 height70 validelement'></textarea>";
            } else {
                vControls += "<textarea id='CustomCMD" + id.name + "' name='CustomCMD" + id.name + "' maxlength='500' title='" + id.name + "' cols='40' rows='5' class='f_inpt width80 height70'></textarea>";
            }
            vControls += '</td></tr>';

            $("#" + id.id).parent().parent().parent().after(vControls);
        } else {
            $("." + id.name).css("display", "none");
        }
    }
}






//Remove Widths of child elemts in the li of Notes
function recursiveRemoveWidthEach($element) {
    $element.children().each(function () {
        var $currentElement = $(this);
        if (typeof ($currentElement.attr('style')) != "undefined" && $currentElement.attr('style') != null && $currentElement.attr('style') != "") {
            if ($currentElement.attr('style').indexOf('width') !== -1) {
                $currentElement.css("width", "");
            }
            if ($currentElement.attr('style').indexOf('min-width') !== -1) {
                $currentElement.css("min-width", "");
            }
            if ($currentElement.attr('style').indexOf('max-width') !== -1) {
                $currentElement.css("max-width", "");
            }
            if ($currentElement.attr('style').indexOf('padding-left') !== -1) {
                $currentElement.css("padding-left", "");
            }
            if ($currentElement.attr('style').indexOf('padding-right') !== -1) {
                $currentElement.css("padding-right", "");
            }
        }
        recursiveRemoveWidthEach($currentElement);
    });
}

//Performance Optimization
function BindDataContractDropdownSettings(documenttypes) {
    var vMilestoneType = '';
    $(documenttypes.MilestoneTypes).find('MilestoneType').each(function (i, item) {
        vMilestoneType += "<option value='" + item.innerHTML + "'>" + item.innerHTML + "</option>";
    });
    $("#ddlMilestoneType").append(vMilestoneType);
    $("#ddlMilestoneTypeNew").append(vMilestoneType);
    SortDropdownList('ddlMilestoneTypeNew');

    var vAmendmentType = '';
    $(documenttypes.AmendmentTypes).find('AmendmentType').each(function (i, item) {
        vAmendmentType += "<option value='" + item.innerHTML + "'>" + item.innerHTML + "</option>";
    });
    $("#ddlAmendmentType").append(vAmendmentType);
    SortDropdownList('ddlAmendmentType')

    var vObligationType = '';
    $(documenttypes.ObligationTypes).find('ObligationType').each(function (i, item) {
        vObligationType += "<option value='" + item.innerHTML + "'>" + item.innerHTML + "</option>";
    });
    $("#ddlObligationType").append(vObligationType);
    $("#ddlObligationTypeNew").append(vObligationType);
    SortDropdownList('ddlObligationTypeNew');

    var vUnitType = '';
    $(documenttypes.UnitTypes).find('UnitType').each(function (i, item) {
        vUnitType += "<option value='" + item.innerHTML + "'>" + item.innerHTML + "</option>";
    });
    $("#ddlObligationCatalogUnits").append(vUnitType);
    $("#ddlObligationCatalogUnitsInline").append(vUnitType);
    $("#ddlObligationCatalogUnitsEdit").append(vUnitType);
    $("#ddlProductUnits").append(vUnitType);
    $("#ddlObligationCatalogUnitsNew").append(vUnitType);
    $("#ddlObligationCatalogUnitsNewEdit").append(vUnitType);

    var vCounterpartyType = '';
    $(documenttypes.CounterpartyTypes).find('CounterpartyType').each(function (i, item) {
        vCounterpartyType += "<option value='" + item.innerHTML + "'>" + item.innerHTML + "</option>";
    });
    $("#ddlCounterpartyType").append(vCounterpartyType);
    $("#ddlCounterpartyTypeadd").append(vCounterpartyType);
    SortDropdownList('ddlCounterpartyTypeadd');

    if (contractItem.TransactionType == "Legal/General Agreement") {
        if ($('#ddlAmendmentType option[value="Change of Contract Value"]').length != -1)
            $('#ddlAmendmentType option[value="Change of Contract Value"]').remove();
        $("#chkContractValue").attr("disabled", "disabled");
        $("#chkContractValue").attr("style", "cursor:not-allowed;");
    } else {
        if ($('#ddlAmendmentType option[value="Change of Contract Value"]').length != 1)
            $("#ddlAmendmentType").append('<option value="Change of Contract Value">Change of Contract Value</option>');
        $("#chkContractValue").removeAttr('disabled');
        $("#chkContractValue").attr("style", "cursor:pointer;");
    }

    if (contractItem.EndDate == null) {
        if ($('#ddlAmendmentType option[value="Change to Terms"]').length != -1)
            $("#ddlAmendmentType option[value='Change to Terms']").remove();
        $("#chkContractValidity").attr("disabled", "disabled");
        $("#chkContractValidity").attr("style", "cursor:not-allowed;");
    } else {
        if ($('#ddlAmendmentType option[value="Change to Terms"]').length != 1)
            $("#ddlAmendmentType").append("<option value='Change to Terms'>Change to Terms</option>")
        $("#chkContractValidity").removeAttr('disabled');
        $("#chkContractValidity").attr("style", "cursor:pointer;");
    }

    //var IsSystem = false;
    //if (documenttypes.CounterpartyRelationshipScope.trim() == "System Level") {
    //    IsSystem = true;
    //}
    //GetCounterparty(IsSystem);
}

function SortDropdownList(id) {
    var select = $('#' + id);
    select.html(select.find('option').sort(function (x, y) {
        return $(x).text() > $(y).text() ? 1 : -1;
    }));
}

function GetCounterparty(IsSystem) {
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/counterparty',
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (Counterparties) {
            Counterparties = $.grep(Counterparties, function (n, i) {
                return (arrRelatedContractsCounterparty.indexOf(n.CounterpartyName) >= 0);
            });
            var control = "";
            $.each(Counterparties, function (i, item) {
                if (item.Status == "Active") {
                    if (IsSystem) {
                        control += "<option value=" + encodeURI(item.CounterpartyName) + ">" + item.CounterpartyName + "</option>";
                    } else {
                        if (typeof item.BusinessAreasPath != 'undefined' && item.BusinessAreasPath != null && item.BusinessAreasPath != "") {
                            if (item.IsGlobal == "No") {
                                if (businessAreaPath != "") {
                                    var isRelCounterpartyFilterAdd = false;
                                    $.each(item.BusinessAreasPath.split(";"), function () {
                                        if (businessAreaPath == $.trim(this)) {
                                            isRelCounterpartyFilterAdd = true;
                                        }
                                    });
                                    if (isRelCounterpartyFilterAdd) {
                                        control += "<option value=" + encodeURI(item.CounterpartyName) + ">" + item.CounterpartyName + "</option>";
                                    }
                                }
                            } else {
                                control += "<option value=" + encodeURI(item.CounterpartyName) + ">" + item.CounterpartyName + "</option>";
                            }
                        } else {
                            control += "<option value=" + encodeURI(item.CounterpartyName) + ">" + item.CounterpartyName + "</option>";
                        }
                    }
                }
            })

            $("#ddlRelConFilterCounterparty").html(control);
            $("#ddlRelConFilterCounterparty").chosen().trigger("chosen:updated");
        },
        error: function (Counterparties) {

        }
    });
}
//Performance Optimization

//Copy Contract link Enhancment
function CopyLink(value) {
    if (requiredValidator("copylink")) {
        var copyText = document.getElementById("txtCopyLink");
        if (value == "Yes") {
            $('#lblcopylink').css("display", "none");
        } else {
            $('#lblcopylink').css("display", "");
            copyText.select();
            document.execCommand("copy");
        }             
        
        var CopyLinkCreated = new Date().toUTCString();
        var CopyLinkValidity = ($('#txtValidLinkTill').val() != "" && $('#txtValidLinkTill').val() != null ? $('#txtValidLinkTill').val() + " " + $('#ddlValidFor').val() : " ");
        var CopyLinkValidTill;
        if (CopyLinkValidity != " " && CopyLinkValidity != null && CopyLinkValidity != undefined) {
            switch ($('#ddlValidFor').val()) {
                case "days":
                    CopyLinkValidTill = moment(CopyLinkCreated).add($('#txtValidLinkTill').val(), "days").format('MM/DD/YYYY');
                    break;
                case "months":
                    CopyLinkValidTill = moment(CopyLinkCreated).add($('#txtValidLinkTill').val(), "months").format('MM/DD/YYYY');
                    break;
            }
        }
        $.ajax({
            url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/' + $('#hdnContractID').text() + '/CopyLink?CopyLinkId=' + $('#txtCopyLinkID').val() + '&CopyLinkValidity=' + CopyLinkValidity + '&CopyLinkValidTill=' + CopyLinkValidTill + '&CopyLinkCreated=' + CopyLinkCreated,
            type: 'PUT',
            dataType: 'json',           
            headers: {
                'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
            },
           
            cache: false,
            success: function (data) {
                if (value == "Yes") {
                    $("#copylink").dialog("open");
                } else {
                    $("#copylink").dialog("close");
                }
               
            },
            error: function () {
            },
            complete: function () {
                if (value == "Yes") {
                    $("#copylink").dialog("open");
                } else {
                    $("#copylink").dialog("close");
                }
                //$("#copylink").dialog("close");
            }
        });

    }
}

function ClearCopyLinkForm() {
    $('#trLinkValid').css("display", "none");
    $('#chkCopyLinkExpire').prop("checked", true);
    $('#txtValidLinkTill').val('');
    $('#lblcopylink').css("display", "none");
}

$('#chkCopyLinkExpire').change(function () {
    if ($('#chkCopyLinkExpire').prop('checked') == true) {
        $('#trLinkValid').css("display", "none");
        $('#txtValidLinkTill').val('').removeClass("validelement");
    }
    else {
        $('#trLinkValid').css("display", "");
        $('#txtValidLinkTill').addClass("validelement");
    }
})

function GetUniqueCopyLinkID() {

    var copylink = $('#hdnContractID').text() + "~" + localStorage.AccountID;
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/Contracts/GenerateLink?copylink=' + copylink,
        type: 'Get',
        dataType: 'json',
        async:false,
        headers: {
            'eContracts-ApiKey': localStorage.APIKey, 'eContracts-RestrictionHeader': localStorage.RestrictHighSecurityTagging
        },
        cache: false,
        success: function (data) {
            var getUrl = window.location;
            var baseUrl = getUrl.protocol + "//" + getUrl.host + "/" + getUrl.pathname.split('/')[1];
            $('#txtCopyLink').val(baseUrl + "/Link/" + data.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, 'a'));
            $('#txtCopyLinkID').val(data.replace(/[&\/\\#,+()$~%.'":*?<>{}]/g, 'a'));
            $("#copylink").dialog("open");
            CopyLink("Yes");
        },
        error: function () {
        },
    });
}
//Copy Contract link Enhancment
//Performance Optimization
function BindPeopleDropdown(data) {
    var roleoption = '';
    var rolestype = SettingUserRole;
    $(SettingUserRole).find('Roles').each(function () {
        var role = $(this).find('Role').text();
        roleoption += '<option value="[' + role + ']">[' + role + ']</option>';
    });
    $("#ddlSendRenewReminderTo").append(roleoption);
    $("#ddlSendReminderToNew").append(roleoption);
    $("#ddlDocRemindTo").append(roleoption);
    $("#ddlDocRemindToEdit").append(roleoption);
    $("#ddlSendReminderToObligationNew").append(roleoption);
    var veContractFeatures = JSON.parse(localStorage.getItem("eContractFeatures"));
    var vAccFeat = $.grep(veContractFeatures, function (n, i) {
        return (n.RowKey == "11" && n.Status == "ON");
    });
    if (!(vAccFeat.length > 0)) {
        var valueRem = "{Project Managers}";
        $("#ddlSendRenewReminderTo option[value='" + valueRem + "']").remove();
        $("#ddlSendReminderToNew option[value='" + valueRem + "']").remove();
        $("#ddlDocRemindTo option[value='" + valueRem + "']").remove();
        $("#ddlDocRemindToEdit option[value='" + valueRem + "']").remove();
        $("#ddlSendReminderToObligationNew option[value='" + valueRem + "']").remove();
    }

    var v = $(data).length;
    var datalenght = data.length;
    var globalConOwners = getGlobalContractOwners();
    for (var i = 0; i < datalenght; i++) {
        var item = data[i];
        var sRowKey = item.RowKey;
        var sUserName = item.UserName;
        var sUserType = item.UserType;
        var sEmail = item.EmailID;
        if (sUserType.indexOf("Global Contract Owner") >= 0) {
            arrGlobalUser.push(sUserName);
        } else {
            arrUser.push(sUserName);
        }
        var articleemailuser = '<option value="' + sUserName + '" data-emailvalue="' + sEmail + '">' + sUserName + '</option>';
        var article = '<option value="' + sUserName + '">' + sUserName + '</option>';
        $("#ddlContractManagers").append(article);
        $("#ddlReviewers").append(article);
        $("#ddlApproversNew").append(article);
        $("#ddlSignees").append(article);
        $("#ddlMilestoneOwner").append(article);
        $("#ddlObligationOwner").append(article);
        $("#ddlSendTo").append(article);
        $("#ddlSendToCancel").append(article);
        //$("#ddlSendToAbort").append(article);In case we add status instead of Cancel to Abort in My Pipline
        $("#ddlDocumentShareInternal").append(articleemailuser);
        $("#ddlContractShareInternal").append(articleemailuser);

        //Obligation Newly Added

        $("#ddlObligationNewOwner").append(article);

        $("#ddlMilestoneOwnerNew").append(article);
        $("#ddlSendReminderToNew").append(article);
        //$("#ddlSendUserToRenewalConfirmUsers").append(article);
        //$("#ddlSendUserToRenewalConfirmUsersCC").append(article);
        $("#ddlRenewalNotfInternalNew").append(article);
        $("#ddlReadOnly").append(article);
        $("#ddlReadWrite").append(article);
        $("#ddlFullControl").append(article);
        if (sUserName != null && contractItem!=null) {
            
            var contractPeople = (contractItem.ContractManagers + ";" + contractItem.Approvers + ";" + contractItem.Reviewers + ";" + contractItem.Signees
                            + ";" + contractItem.ContractAreaAdministrators + ";" + contractItem.BusinessAreaOwners + ";" + contractItem.ReadOnlyPermissions
                            + ";" + contractItem.ReadWritePermissions + ";" + contractItem.FullControlPermissions + ";" + contractItem.ProjectManager + ";" + businessAreaDetails.CCUsers + ";" + globalConOwners).split(';');
            contractPeople = $.map(contractPeople, $.trim);
            contractPeople = contractPeople.filter(function (people) {
                return people.trim() != '';
            });
            if (contractPeople.indexOf(sUserName) > 0) {
            $("#ddlCC").append(article);
            }
        }
       // $("#ddlCC").append(article);
        $("#ddlWorkflowCC").append(article);
        $("#ddlWorkflowCCRenew").append(article);
        $("#ddlSendReminderTo").append(article);
        $("#ddlRenewalNotfInternal").append(article);


        $("#ddlRequestedBy").append(article);
        $("#ddlSendRenewReminderTo").append(article);
        $("#ddlSendReminderToObligationNew").append(article);


        $("#ddlDocRemindTo").append(article);
        $("#ddlDocRemindToEdit").append(article);
        $("#ddlAuthorCreate").append(article);
        $("#ddlAuthorEdit").append(article);

        if (contractItem.ContractManagers.indexOf(sUserName) > -1)
            $("#ddlOwnersRenew").append('<option value="' + sUserName + '" selected>' + sUserName + '</option>');
        else
            $("#ddlOwnersRenew").append('<option value="' + sUserName + '" disabled>' + sUserName + '</option>');
    }
    $("#ddlDocumentList").chosen();

    $("#ddlContractManagers").chosen();
    $("#ddlReviewers").chosen();
    $("#ddlApproversNew").chosen();
    $("#ddlSignees").chosen();
    $("#ddlMilestoneOwner").chosen();
    $("#ddlObligationOwner").chosen();
    $("#ddlDocumentShareInternal").chosen();
    $("#ddlContractShareInternal").chosen();
    //Newly added For Obligation New
    $("#ddlRenewalNotfInternalNew").chosen();
    $("#ddlObligationNewOwner").chosen();


    $("#ddlMilestoneOwnerNew").chosen();
    $("#ddlSendReminderToNew").chosen();
    $("#ddlSendTo").chosen();
    $("#ddlSendToCancel").chosen();
    //$("#ddlSendToAbort").chosen();In case we add status instead of Cancel to Abort in My Pipline

    $("#ddlCC").chosen();
    $("#ddlSendReminderTo").chosen();
    $("#ddlRenewalNotfInternal").chosen();
    $("#ddlReadOnly").chosen();
    $("#ddlReadWrite").chosen();
    $("#ddlFullControl").chosen();
    //$("#ddlSendUserToRenewalConfirmUsers").chosen();
    //$("#ddlSendUserToRenewalConfirmUsersCC").chosen();

    $("#ddlSendReminderToObligationNew").chosen();
    $("#ddlDocRemindTo").chosen();
    $("#ddlDocRemindToEdit").chosen();
    $("#ddlWorkflowCC").chosen();
    $("#ddlWorkflowCCRenew").chosen();
    $("#ddlRequestedBy").chosen();
    $("#ddlAuthorEdit").chosen();
    $("#ddlSendRenewReminderTo").chosen();

    $("#ddlOwnersRenew").chosen();

    $("#ddlAuthorCreate").chosen().trigger("chosen:updated");
    $('.chosenmulti').on('chosen:showing_dropdown', function (evt, params) {
        $('.result-selected').css('display', 'none');
    });

    if (localStorage.UserName != "") {
        GetValuesAndAutoPopulate("ddlAuthorCreate", localStorage.UserName);
    }


    //ENH-472 (In Contract, People & Permission tab displaying all the Global Contract Owners.)
    var userslist = [];
    var allGlobalContractOwners = $.grep(data, function (item, i) {
        return item.UserType.indexOf('Global Contract Owner') > -1;
    });

    if (allGlobalContractOwners.length <= 0) {
        $("#liContractGlobalOwnerNA").css('display', '');
        $("#spGlobalownwerView").text("Not Available");
    }
    else {
        var reslength = allGlobalContractOwners.length;
        var vUsers = '';
        for (var i = 0; i < reslength; i++) {
            usersarr = allGlobalContractOwners[i];
            usertitle = '';
            userDisable = '';
            if (vActiveUsers.indexOf(usersarr.UserName.trim()) < 0 && vActiveUsers.length > 0) {
                vUserClass = 'disabled_item_link';
                usertitle = "title='This user is no longer available.'";
            }
            if (vUsers == '')
                vUsers = '<a href="javascript:void(0);" onclick="ViewUserProfile(\'' + usersarr.UserName.trim() + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr.UserName.trim() + '</a>';
            else
                vUsers += '; <a href="javascript:void(0);" onclick="ViewUserProfile(\'' + usersarr.UserName.trim() + '\')" class="Link_UserProfile' + userDisable + '" ' + usertitle + '>' + usersarr.UserName.trim() + '</a>';
            if (vActiveUsers.indexOf(usersarr.UserName.trim()) < 0 && vActiveUsers.length > 0)
                vUsers += '';
        }
        $("#liContractGlobalOwner").html(vUsers);
        $("#spGlobalownwerView").html(vUsers);
    }
    //ENH-472 In Contract, People & Permission tab displaying all the Global Contract Owners.
}

function GetWorkflowByObjectAndStatus(wobject, wobjectid, status) {
    $("#loadingPage").fadeIn();
    $.ajax({
        url: vApiBaseSiteUrl +'/api/accounts/' + localStorage.AccountID + '/workflow/WorkflowByObjectAndStatus?wobject=' + wobject + '&wobjectid=' + wobjectid + '&status=' + status,
        type: 'GET',
        dataType: 'json',
        "Content-Type": "application/json",
        headers: {
            'eContracts-ApiKey': localStorage.APIKey
        },
        cache: false,
        success: function (wfdet) {
            $("#loadingPage").fadeOut();
            $("#textingdetails").html('<a target="_blank" title="View Workflow Details" href=/Activity/TaskDetails?TaskID=&WorkflowID=' + wfdet.RowKey + '><font color="#44A6D8">View Workflow Details</font></a>');
            $("#dvAlertDetails1").dialog("open");
        },
        error: function (Counterparties) {
            $("#loadingPage").fadeOut();
        }
    });
}
//Performance Optimization