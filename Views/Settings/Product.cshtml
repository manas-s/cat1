@model IEnumerable<Corevo.eContracts365.TableEntities.ProductsEntity>

@{
    ViewBag.Title = "Products";
    Layout = "~/Views/Shared/_Layout_Settings.cshtml";
}

<table class="width95_a">
    <tr>
        <td class="pageheading">
            Product Listing
            <img src="~/Content/Images/help_training.png" alt="User can add a new product or modify an existing product. These products can be selected while creating Obligations." title="Manage list of your Company's standard Products." />
        </td>
        <td class="pageheading" align="right"><input id="btnAddNew" type="submit" value="Add New" class="f_button_green_small" /></td>
    </tr>
    <tr>
        <td colspan="2" style="padding-top:5px;">
            <div id="page-wrap">
                <table class="paginated width100" id="customertable">
                    <thead>
                        <tr>
                            @*<th>
                                    Enable/ Disable
                                </th>*@
                            <th>
                                Product Name
                            </th>
                            <th>
                                Units
                            </th>
                            <th>
                                Price
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model == null || Model.Count() == 0)
                        {
                            <tr>There is no Product found.</tr>
                        }
                        else
                        {

                            foreach (var item in Model)
                            {
                                <tr id="row" style="border-bottom:1px dotted #eeeaea;">
                                    <td id="ProductId" style="display:none;">@Html.DisplayFor(modelItem => item.RowKey)</td>
                                    <td id="Product" style="display:none;">@Html.DisplayFor(modelItem => item.ProductName)</td>
                                    <td id="ProductUnits" style="display:none;">@Html.DisplayFor(modelItem => item.Units)</td>
                                    <td id="ProductPrice" style="display:none;">@Html.DisplayFor(modelItem => item.UnitPriceValue)</td>
                                    <td id="ProductCurrency" style="display:none;">@Html.DisplayFor(modelItem => item.UnitPriceCurrency)</td>


                                    @*<td align="center" style="vertical-align: middle;" class="f_list" width="5%">
                                            <input id="@item.RowKey" name="@item.RowKey" type="checkbox" class="css1-checkbox" value="@item.ProductName" />
                                            <label for="@item.RowKey" class="css1-label"></label>
                                        </td>*@
                                    <td class="" style="vertical-align:top;" width="33%">
                                        @Html.DisplayFor(modelItem => item.ProductName)
                                        <img src="../Content/Images/context_Menu.png" class="openmenu margintop-2px" alt="Open Menu" title="Open Menu" /><br />
                                        @*@Html.DisplayFor(modelItem => item.TransactionType)&nbsp;|&nbsp;@Html.DisplayFor(modelItem => item.ContractClass)*@
                                    </td>

                                    <td align="right" style="vertical-align: top;" width="33%">
                                        @Html.DisplayFor(modelItem => item.Units)
                                    </td>
                                    <td align="right" style="vertical-align: top;" width="34%">
                                        @if (item.UnitPriceValue == 0 && item.UnitPriceCurrency == "0")
                                        {
                                            <b>-</b>
                                        }
                                        else if (item.UnitPriceValue == 0 && item.UnitPriceCurrency != "0")
                                        {
                                            <b>-&nbsp;&nbsp;</b>@Html.DisplayFor(modelItem => item.UnitPriceCurrency)
                                        }
                                        else if (item.UnitPriceValue != 0 && item.UnitPriceCurrency == "0")
                                        {
                                            @Html.DisplayFor(modelItem => item.UnitPriceValue)
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(modelItem => item.UnitPriceValue)<b>&nbsp;&nbsp;</b>@Html.DisplayFor(modelItem => item.UnitPriceCurrency)
                                        }

                                    </td>
                                </tr>
                            }
                        }
                    </tbody>

                </table>
            </div>
            <div class="pagination-holder clearfix">
                <article id="compact-pagination"></article>
            </div>
        </td>
    </tr>
</table>
<!-- Right Click Menu -->
<ul id="productMenu" class="contextMenu">
    <li class="edit"><a href="#edit">Edit</a></li>
    <li class="delete"><a href="#delete">Delete</a></li>
</ul>
<div id="AddEditProduct" style="display:none;">
    <div id="dvPopupHeading" class="modalheader"><span></span></div>
    <div class="modalbody">
        <div id="addNewEntityFields">
            <table cellpadding="2" cellspacing="2" class="width100">
                <tr>
                    <td class="f_head"></td>
                    <td class="labelright"><input id="txtProductID" name="ProductID" type="hidden" /></td>
                </tr>
                <tr>
                    <td class="f_head">
                        Product Name
                        <span class="required">*</span>
                    </td>
                    <td class="labelright"><input id="txtProductName" maxlength="50" name="ProductName" type="text" onchange="ReplaceSpecialCharacters(this);" class="f_inpt width70 validelement validtitle" /></td>
                </tr>
                <tr>
                    <td class="f_head">
                        Units
                        <span class="required">*</span>
                    </td>
                    <td class="labelright">
                        <select id="ddlProductUnits" class="f_inpt width30 margin-left0 validelement" title="Unit Types">
                            <option value="0">--Select--</option>
                        </select>
                        @*<input id="txtProductUnits" name="Units" type="text" class="f_inpt width70" />*@
                    </td>
                </tr>
                <tr>
                    <td class="f_head">Unit Price</td>
                    <td class="labelright">
                        <input id="txtProductUnitPrice" maxlength="13" name="UnitPrice" type="text" style="margin-bottom: 5px !important;" class="f_inpt width30" />
                        <select id="ddlProductCurrency" class="f_inpt width30 margin-left0" title="Base Currency">
                            <option value="0">--Select--</option>
                        </select>

                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>

<input type="hidden" id="hdnBaseCurrency" value="" />

@section Scripts {

    <script src="~/Scripts/jquery.treetable.js" type="text/javascript"></script>
    <script src="~/Scripts/chosen.jquery.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery-priceformat.js" type="text/javascript"></script>
    @Scripts.Render("~/Scripts/Contract365/Settings_Product.js?" + DateTime.Now.GetHashCode())
}